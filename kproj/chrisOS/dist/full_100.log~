21: chrisOS 0.1.20181227.224129 booting @23:41:32 on 00/27/19
70: APIC: Timer running at 2369215 hz.
161: TSC: CPU frequency = 3610390174
163: CLOCK: tick frequency is 100hz
393: section header record count= 22
393: e_shentsize=40, oursize=40
393: reading SHOFF
413: seeking to 0x00000034 ...413: reading PHOFF
418: Setting main load address to 0x00120000
418: Section 0 not loadable, zeroed 0x00008A04 bytes at 0x00120000
418: seeking to 0x00002000 ...418: reading 301 bytes to 0x00130000
423: Section 1 loaded 0x0000012D bytes at 0x00130000
423: seeking to 0x00003000 ...423: reading 526516 bytes to 0x01000000
752: Section 2 loaded 0x000808B4 bytes at 0x01000000
752: Section 2 has uninitialized data, zeroed 0x0000B628 bytes at 0x010808B4
752: seeking to 0x00082A10 ...752: reading 3748 bytes to 0x0107FA10
767: Section 3 loaded 0x00000EA4 bytes at 0x0107FA10
767: Section 4, file/mem sizes=0x0/0x0, not loading
767: LoadElf: done loading file
767: Table	     MemAddr		FileAddr		Size	type
767: End of section table... press a key to continue
767: exec: back from loading ELF file, result=Success
767: exec: Executing /kernel at 0x010126C4, return address is =0x00014E0E
787: initHeapPagePtr Initializing pointer page @ 0x0125D000, 0x000001FF pointers
787: initHeapPagePtr Done
787: getAvailableTask: Found free slot for task (0x0020)
787: findFreeMallocPointer: Scanning for a free memory pointer
787: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
787: aMTP: Size adjusted from 72 to 4096
787: aMTP: Used allocPagesAndMap to allocate 0x00000048 bytes at 0x0125E000
787: getAvailableTask: Marking TSS 32 used
787: getAvailableTask: Using task 32 @ 0x0125E000, set TSS to 0x0125F000
787: Allocated pages at 0x01261000 for kernel task ESP0
787: Allocated pages at 0x01277000 for (ESP1) sysEnter
787: Mapped tss of the first task run (0x0125F000) into task and kernel
787: Setup SYSENTER MSRs as CS:EIP=0x0088:0x00130100, ESP=0x0128C000
788: findFreeMallocPointer: Scanning for a free memory pointer
788: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
788: aMTP: Size adjusted from 72000 to 73728
788: aMTP: Used allocPagesAndMap to allocate 0x00011940 bytes at 0x012A3000
788: 	Initialized kTaskList @ 0x012A3000, sizeof(task_t)=0x48
788: findFreeMallocPointer: Scanning for a free memory pointer
788: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
788: aMTP: Size adjusted from 400 to 4096
788: aMTP: Used allocPagesAndMap to allocate 0x00000190 bytes at 0x012B5000
788: findFreeMallocPointer: Scanning for a free memory pointer
788: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
789: aMTP: Size adjusted from 400 to 4096
789: aMTP: Used allocPagesAndMap to allocate 0x00000190 bytes at 0x012B6000
789: findFreeMallocPointer: Scanning for a free memory pointer
789: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
789: aMTP: Size adjusted from 400 to 4096
789: aMTP: Used allocPagesAndMap to allocate 0x00000190 bytes at 0x012B7000
789: findFreeMallocPointer: Scanning for a free memory pointer
789: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
789: aMTP: Size adjusted from 400 to 4096
789: aMTP: Used allocPagesAndMap to allocate 0x00000190 bytes at 0x012B8000
789: findFreeMallocPointer: Scanning for a free memory pointer
789: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
789: aMTP: Size adjusted from 4000 to 4096
789: aMTP: Used allocPagesAndMap to allocate 0x00000FA0 bytes at 0x012B9000
789: findFreeMallocPointer: Scanning for a free memory pointer
789: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
789: aMTP: Size adjusted from 400 to 4096
789: aMTP: Used allocPagesAndMap to allocate 0x00000190 bytes at 0x012BA000
789: 	addTaskToTaskList: Found open slot @ 0x012A3000
789: 	moved new task 0x0020 there
789: *		addToQ: Adding task 0x0020 to queue Runnable
789: *	changeTaskQueue: Changing task state for 0x0020 from Runnable to Running
789: *		removeFromQ: Removing task 0x0020 (0x012A3000) from queue Runnable
789: *		addToQ: Adding task 0x0020 to queue Running
799: Creating kernel process for /sbin/idle
799: createProcess: Mallocing process_t
799: createProcess: Malloc'd 0x012BB000 for process
799: createTask: calling getTaskSlot
799: getAvailableTask: Found free slot for task (0x0021)
799: findFreeMallocPointer: Scanning for a free memory pointer
799: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
799: aMTP: Size adjusted from 72 to 4096
799: aMTP: Used allocPagesAndMap to allocate 0x00000048 bytes at 0x012BC000
799: getAvailableTask: Marking TSS 33 used
799: getAvailableTask: Using task 33 @ 0x012BC000, set TSS to 0x012BD000
799: createTask: Set task CR3 to 1k page directory @ 0x01100000
802: Map K to U: p=0x01000000 (v=0x01000000) to p=0x0108BEDC (v=0x0108BEDC)
802: Map K to U: p=0xC1000000 (v=0x01000000) to p=0xC108BEDC (v=0x0108BEDC)
802: Map OS loader into user process: 0x00001000 to 0x01000000 r/o
803: Mapping sysEnter_Vector page (0x00130000) to process, r/o
803: Mapping our CR3 into program, v=0x001A8000, p=0x001A8000
803: createTask: Mapping kernel into task
803: createTask: ESP0 for task allocated at 0x012BE000
803: createTask: ESP0 set to 0x012D3000
803: createTask: Mapping kernel ESP0 v=0x01261000/p=0x01261000 into process, CR3=0x01100000, 0x16 pages
803: createTask: Mapping kernel ESP0 v=0xC1261000/p=0x01261000 into process, CR3=0x01100000, 0x16 pages
803: createTask: ESP for task allocated at 0x012D4000
803: createTask: ESP set to 0x012E9000
803: findFreeMallocPointer: Scanning for a free memory pointer
803: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
803: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x012EA000
803: Allocated task ESP1 for syscall at 0x012EA000 (0x1000 bytes)
803: createTask: ESP1 set to 0x012E9F00
803: findFreeMallocPointer: Scanning for a free memory pointer
803: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
803: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x012EB000
803: createProcess: Malloc'd 0x012EB000 for process->path
803: process->path (0x012EB000)=/sbin/idle
803: findFreeMallocPointer: Scanning for a free memory pointer
804: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
804: aMTP: Size adjusted from 12 to 4096
804: aMTP: Used allocPagesAndMap to allocate 0x0000000C bytes at 0x012ED000
804: Mapping the process struct into the process, v=0xF000F000, p=0x012BB000
804: Return point for process is 0x01015A3D
804: Created Process @ 0x012BB000
804: 	addTaskToTaskList: Found open slot @ 0x012A3048
804: 	moved new task 0x0021 there
804: *		addToQ: Adding task 0x0021 to queue Runnable
804: Submitted process 0x0021 to be run
804: Creating user process for /kshell
804: createProcess: Mallocing process_t
804: createProcess: Malloc'd 0x012EE000 for process
804: createTask: calling getTaskSlot
804: getAvailableTask: Found free slot for task (0x0022)
804: findFreeMallocPointer: Scanning for a free memory pointer
804: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
804: aMTP: Size adjusted from 72 to 4096
804: aMTP: Used allocPagesAndMap to allocate 0x00000048 bytes at 0x012EF000
804: getAvailableTask: Marking TSS 34 used
804: getAvailableTask: Using task 34 @ 0x012EF000, set TSS to 0x012F0000
804: createTask: Set task CR3 to 1k page directory @ 0x01148000
804: Map K to U: p=0x01000000 (v=0x01000000) to p=0x0108BEDC (v=0x0108BEDC)
804: Map K to U: p=0xC1000000 (v=0x01000000) to p=0xC108BEDC (v=0x0108BEDC)
804: Map OS loader into user process: 0x00001000 to 0x01000000 r/o
805: Mapping sysEnter_Vector page (0x00130000) to process, r/o
805: Mapping our CR3 into program, v=0x001A8000, p=0x001A8000
805: createTask: Mapping kernel into task
805: createTask: ESP0 for task allocated at 0x012BE000
805: createTask: ESP0 set to 0x012D3000
805: createTask: Mapping kernel ESP0 v=0x01261000/p=0x01261000 into process, CR3=0x01148000, 0x16 pages
805: createTask: Mapping kernel ESP0 v=0xC1261000/p=0x01261000 into process, CR3=0x01148000, 0x16 pages
805: createTask: ESP for task allocated at 0x012F1000
805: createTask: ESP set to 0x01306000
805: findFreeMallocPointer: Scanning for a free memory pointer
805: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
805: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x01307000
805: Allocated task ESP1 for syscall at 0x01307000 (0x1000 bytes)
805: createTask: ESP1 set to 0x01306F00
805: findFreeMallocPointer: Scanning for a free memory pointer
805: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
805: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x01308000
805: createProcess: Malloc'd 0x01308000 for process->path
805: process->path (0x01308000)=/kshell
805: findFreeMallocPointer: Scanning for a free memory pointer
805: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
805: aMTP: Size adjusted from 12 to 4096
805: aMTP: Used allocPagesAndMap to allocate 0x0000000C bytes at 0x0130A000
805: Mapping the process struct into the process, v=0xF000F000, p=0x012EE000
805: findFreeMallocPointer: Scanning for a free memory pointer
805: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
805: aMTP: Size adjusted from 7264 to 8192
806: aMTP: Used allocPagesAndMap to allocate 0x00001C60 bytes at 0x0130B000
806: alloc'd elfLoadPages @ 0x0130D000
806: Added elfInfo to kLoadedElfInfo list
806: findFreeMallocPointer: Scanning for a free memory pointer
806: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
806: aMTP: Size adjusted from 7 to 4096
806: aMTP: Used allocPagesAndMap to allocate 0x00000007 bytes at 0x0130E000
807: Opening image file /kshell
812: fopen returned 1180620
817: ELF file type 2, machine type 3
817: Section Name String Table number = 0x0018
817: section header record count= 25
817: e_shentsize=40, oursize=40
817: seeking to 0x00003D94 ...817: reading SHOFF: 0x000003E8 bytes (s=0x00000028*n=0x00000019), to 0x0130B084
837: seeking to 0x00000034 ...837: reading PHOFF: 0x000000C0 bytes (s=0x00000020*n=0x00000006), to 0x0130B854
842: Section 0 file offset is program header address (0x00000034),skipping load
842: Setting main load address to 0x03101164
842: Section 1, load fsize=0x0013,msize=0x0013 to 0x03101164, seeking to 0x00002164 ...
842: putDataOnPages: Bytes left to go: 0x00000013
842: putDataOnPages: Non-aligned or not full page write, writing 0x00000013 bytes to 0x03101164
842: putDataOnPages: V=0x03101164 not mapped, mapped to P=0x0130F164 (CR3=0x01148000)
842: putDataOnPages: V=0x03101164 also mapped to KP=0x0130F164 (CR3=0x001A8000)
842: addElfLoadInfo(0x0130B000, 0x0130F000, 0x03101000, 0x00000000)
847: putDataOnPages: Reading 19 bytes to 0x03101164 (0x0130F164)
847: putDataOnPages: Page written, 0x00000000 bytes left to go
847: Section 1 loaded 0x00000013 bytes at 0x03101164
847: Section 2, load fsize=0x25F4,msize=0x1223C to 0x030FF000, seeking to 0x00000000 ...
847: putDataOnPages: Bytes left to go: 0x000025F4
847: putDataOnPages: Full page write, writing 1 page to 0x030FF000
847: putDataOnPages: V=0x030FF000 not mapped, mapped to P=0x01310000 (CR3=0x01148000)
847: putDataOnPages: V=0x030FF000 also mapped to KP=0x01310000 (CR3=0x001A8000)
847: addElfLoadInfo(0x0130B000, 0x01310000, 0x030FF000, 0x00000001)
852: putDataOnPages: Reading 4096 bytes to 0x030FF000 (0x01310000)
852: putDataOnPages: Page written, 0x000015F4 bytes left to go
852: putDataOnPages: Bytes left to go: 0x000015F4
852: putDataOnPages: Full page write, writing 1 page to 0x03100000
852: putDataOnPages: V=0x03100000 not mapped, mapped to P=0x01311000 (CR3=0x01148000)
852: putDataOnPages: V=0x03100000 also mapped to KP=0x01311000 (CR3=0x001A8000)
852: addElfLoadInfo(0x0130B000, 0x01311000, 0x03100000, 0x00000001)
857: putDataOnPages: Reading 4096 bytes to 0x03100000 (0x01311000)
857: putDataOnPages: Page written, 0x000005F4 bytes left to go
857: putDataOnPages: Bytes left to go: 0x000005F4
857: putDataOnPages: Non-aligned or not full page write, writing 0x000005F4 bytes to 0x03101000
857: putDataOnPages: V=0x03101000 already mapped to P=0x0130F000
867: putDataOnPages: Reading 1524 bytes to 0x03101000 (0x0130F000)
867: putDataOnPages: Page written, 0x00000000 bytes left to go
867: Section 2 loaded 0x000025F4 bytes at 0x030FF000
867: Section 2 has uninitialized data (msize>fsize), zeroing 0x0000FC48 bytes at 0x031015F4
867: putDataOnPages: Bytes left to go: 0x0000FC48
867: putDataOnPages: Non-aligned or not full page write, writing 0x00000A0C bytes to 0x031015F4
867: putDataOnPages: V=0x031015F4 already mapped to P=0x0130F5F4
867: putDataOnPages: Zeroed 2572 bytes at 0x031015F4 (0x0130F5F4)
867: putDataOnPages: Page written, 0x0000F23C bytes left to go
867: putDataOnPages: Bytes left to go: 0x0000F23C
867: putDataOnPages: Full page write, writing 1 page to 0x03102000
867: putDataOnPages: V=0x03102000 not mapped, mapped to P=0x01312000 (CR3=0x01148000)
867: putDataOnPages: V=0x03102000 also mapped to KP=0x01312000 (CR3=0x001A8000)
867: addElfLoadInfo(0x0130B000, 0x01312000, 0x03102000, 0x00000001)
868: putDataOnPages: Zeroed 4096 bytes at 0x03102000 (0x01312000)
868: putDataOnPages: Page written, 0x0000E23C bytes left to go
868: putDataOnPages: Bytes left to go: 0x0000E23C
868: putDataOnPages: Full page write, writing 1 page to 0x03103000
868: putDataOnPages: V=0x03103000 not mapped, mapped to P=0x01313000 (CR3=0x01148000)
868: putDataOnPages: V=0x03103000 also mapped to KP=0x01313000 (CR3=0x001A8000)
868: addElfLoadInfo(0x0130B000, 0x01313000, 0x03103000, 0x00000001)
868: putDataOnPages: Zeroed 4096 bytes at 0x03103000 (0x01313000)
868: putDataOnPages: Page written, 0x0000D23C bytes left to go
868: putDataOnPages: Bytes left to go: 0x0000D23C
868: putDataOnPages: Full page write, writing 1 page to 0x03104000
868: putDataOnPages: V=0x03104000 not mapped, mapped to P=0x01314000 (CR3=0x01148000)
868: putDataOnPages: V=0x03104000 also mapped to KP=0x01314000 (CR3=0x001A8000)
868: addElfLoadInfo(0x0130B000, 0x01314000, 0x03104000, 0x00000001)
868: putDataOnPages: Zeroed 4096 bytes at 0x03104000 (0x01314000)
868: putDataOnPages: Page written, 0x0000C23C bytes left to go
868: putDataOnPages: Bytes left to go: 0x0000C23C
868: putDataOnPages: Full page write, writing 1 page to 0x03105000
868: putDataOnPages: V=0x03105000 not mapped, mapped to P=0x01315000 (CR3=0x01148000)
868: putDataOnPages: V=0x03105000 also mapped to KP=0x01315000 (CR3=0x001A8000)
868: addElfLoadInfo(0x0130B000, 0x01315000, 0x03105000, 0x00000001)
868: putDataOnPages: Zeroed 4096 bytes at 0x03105000 (0x01315000)
868: putDataOnPages: Page written, 0x0000B23C bytes left to go
868: putDataOnPages: Bytes left to go: 0x0000B23C
868: putDataOnPages: Full page write, writing 1 page to 0x03106000
868: putDataOnPages: V=0x03106000 not mapped, mapped to P=0x01316000 (CR3=0x01148000)
868: putDataOnPages: V=0x03106000 also mapped to KP=0x01316000 (CR3=0x001A8000)
868: addElfLoadInfo(0x0130B000, 0x01316000, 0x03106000, 0x00000001)
869: putDataOnPages: Zeroed 4096 bytes at 0x03106000 (0x01316000)
869: putDataOnPages: Page written, 0x0000A23C bytes left to go
869: putDataOnPages: Bytes left to go: 0x0000A23C
869: putDataOnPages: Full page write, writing 1 page to 0x03107000
869: putDataOnPages: V=0x03107000 not mapped, mapped to P=0x01317000 (CR3=0x01148000)
869: putDataOnPages: V=0x03107000 also mapped to KP=0x01317000 (CR3=0x001A8000)
869: addElfLoadInfo(0x0130B000, 0x01317000, 0x03107000, 0x00000001)
869: putDataOnPages: Zeroed 4096 bytes at 0x03107000 (0x01317000)
869: putDataOnPages: Page written, 0x0000923C bytes left to go
869: putDataOnPages: Bytes left to go: 0x0000923C
869: putDataOnPages: Full page write, writing 1 page to 0x03108000
869: putDataOnPages: V=0x03108000 not mapped, mapped to P=0x01318000 (CR3=0x01148000)
869: putDataOnPages: V=0x03108000 also mapped to KP=0x01318000 (CR3=0x001A8000)
869: addElfLoadInfo(0x0130B000, 0x01318000, 0x03108000, 0x00000001)
869: putDataOnPages: Zeroed 4096 bytes at 0x03108000 (0x01318000)
869: putDataOnPages: Page written, 0x0000823C bytes left to go
869: putDataOnPages: Bytes left to go: 0x0000823C
869: putDataOnPages: Full page write, writing 1 page to 0x03109000
869: putDataOnPages: V=0x03109000 not mapped, mapped to P=0x01319000 (CR3=0x01148000)
869: putDataOnPages: V=0x03109000 also mapped to KP=0x01319000 (CR3=0x001A8000)
869: addElfLoadInfo(0x0130B000, 0x01319000, 0x03109000, 0x00000001)
869: putDataOnPages: Zeroed 4096 bytes at 0x03109000 (0x01319000)
869: putDataOnPages: Page written, 0x0000723C bytes left to go
869: putDataOnPages: Bytes left to go: 0x0000723C
869: putDataOnPages: Full page write, writing 1 page to 0x0310A000
869: putDataOnPages: V=0x0310A000 not mapped, mapped to P=0x0131A000 (CR3=0x01148000)
869: putDataOnPages: V=0x0310A000 also mapped to KP=0x0131A000 (CR3=0x001A8000)
869: addElfLoadInfo(0x0130B000, 0x0131A000, 0x0310A000, 0x00000001)
869: putDataOnPages: Zeroed 4096 bytes at 0x0310A000 (0x0131A000)
869: putDataOnPages: Page written, 0x0000623C bytes left to go
870: putDataOnPages: Bytes left to go: 0x0000623C
870: putDataOnPages: Full page write, writing 1 page to 0x0310B000
870: putDataOnPages: V=0x0310B000 not mapped, mapped to P=0x0131B000 (CR3=0x01148000)
870: putDataOnPages: V=0x0310B000 also mapped to KP=0x0131B000 (CR3=0x001A8000)
870: addElfLoadInfo(0x0130B000, 0x0131B000, 0x0310B000, 0x00000001)
870: putDataOnPages: Zeroed 4096 bytes at 0x0310B000 (0x0131B000)
870: putDataOnPages: Page written, 0x0000523C bytes left to go
870: putDataOnPages: Bytes left to go: 0x0000523C
870: putDataOnPages: Full page write, writing 1 page to 0x0310C000
870: putDataOnPages: V=0x0310C000 not mapped, mapped to P=0x0131C000 (CR3=0x01148000)
870: putDataOnPages: V=0x0310C000 also mapped to KP=0x0131C000 (CR3=0x001A8000)
870: addElfLoadInfo(0x0130B000, 0x0131C000, 0x0310C000, 0x00000001)
870: putDataOnPages: Zeroed 4096 bytes at 0x0310C000 (0x0131C000)
870: putDataOnPages: Page written, 0x0000423C bytes left to go
870: putDataOnPages: Bytes left to go: 0x0000423C
870: putDataOnPages: Full page write, writing 1 page to 0x0310D000
870: putDataOnPages: V=0x0310D000 not mapped, mapped to P=0x0131D000 (CR3=0x01148000)
870: putDataOnPages: V=0x0310D000 also mapped to KP=0x0131D000 (CR3=0x001A8000)
870: addElfLoadInfo(0x0130B000, 0x0131D000, 0x0310D000, 0x00000001)
870: putDataOnPages: Zeroed 4096 bytes at 0x0310D000 (0x0131D000)
870: putDataOnPages: Page written, 0x0000323C bytes left to go
870: putDataOnPages: Bytes left to go: 0x0000323C
870: putDataOnPages: Full page write, writing 1 page to 0x0310E000
870: putDataOnPages: V=0x0310E000 not mapped, mapped to P=0x0131E000 (CR3=0x01148000)
870: putDataOnPages: V=0x0310E000 also mapped to KP=0x0131E000 (CR3=0x001A8000)
870: addElfLoadInfo(0x0130B000, 0x0131E000, 0x0310E000, 0x00000001)
870: putDataOnPages: Zeroed 4096 bytes at 0x0310E000 (0x0131E000)
870: putDataOnPages: Page written, 0x0000223C bytes left to go
870: putDataOnPages: Bytes left to go: 0x0000223C
870: putDataOnPages: Full page write, writing 1 page to 0x0310F000
870: putDataOnPages: V=0x0310F000 not mapped, mapped to P=0x0131F000 (CR3=0x01148000)
871: putDataOnPages: V=0x0310F000 also mapped to KP=0x0131F000 (CR3=0x001A8000)
871: addElfLoadInfo(0x0130B000, 0x0131F000, 0x0310F000, 0x00000001)
871: putDataOnPages: Zeroed 4096 bytes at 0x0310F000 (0x0131F000)
871: putDataOnPages: Page written, 0x0000123C bytes left to go
871: putDataOnPages: Bytes left to go: 0x0000123C
871: putDataOnPages: Full page write, writing 1 page to 0x03110000
871: putDataOnPages: V=0x03110000 not mapped, mapped to P=0x01320000 (CR3=0x01148000)
871: putDataOnPages: V=0x03110000 also mapped to KP=0x01320000 (CR3=0x001A8000)
871: addElfLoadInfo(0x0130B000, 0x01320000, 0x03110000, 0x00000001)
871: putDataOnPages: Zeroed 4096 bytes at 0x03110000 (0x01320000)
871: putDataOnPages: Page written, 0x0000023C bytes left to go
871: putDataOnPages: Bytes left to go: 0x0000023C
871: putDataOnPages: Non-aligned or not full page write, writing 0x0000023C bytes to 0x03111000
871: putDataOnPages: V=0x03111000 not mapped, mapped to P=0x01321000 (CR3=0x01148000)
871: putDataOnPages: V=0x03111000 also mapped to KP=0x01321000 (CR3=0x001A8000)
871: addElfLoadInfo(0x0130B000, 0x01321000, 0x03111000, 0x00000000)
871: putDataOnPages: Zeroed 572 bytes at 0x03111000 (0x01321000)
871: putDataOnPages: Page written, 0x00000000 bytes left to go
871: Section 3, load fsize=0x0090,msize=0x0090 to 0x03101518, seeking to 0x00002518 ...
871: putDataOnPages: Bytes left to go: 0x00000090
871: putDataOnPages: Non-aligned or not full page write, writing 0x00000090 bytes to 0x03101518
871: putDataOnPages: V=0x03101518 already mapped to P=0x0130F518
876: putDataOnPages: Reading 144 bytes to 0x03101518 (0x0130F518)
876: putDataOnPages: Page written, 0x00000000 bytes left to go
876: Section 3 loaded 0x00000090 bytes at 0x03101518
876: Section 4, load fsize=0x0084,msize=0x0084 to 0x031013BC, seeking to 0x000023BC ...
876: putDataOnPages: Bytes left to go: 0x00000084
876: putDataOnPages: Non-aligned or not full page write, writing 0x00000084 bytes to 0x031013BC
876: putDataOnPages: V=0x031013BC already mapped to P=0x0130F3BC
886: putDataOnPages: Reading 132 bytes to 0x031013BC (0x0130F3BC)
886: putDataOnPages: Page written, 0x00000000 bytes left to go
886: Section 4 loaded 0x00000084 bytes at 0x031013BC
886: Section 5 @ 0x0130B8F4 : file/mem sizes=0x0/0x0, not loading
886: LoadElf: done loading elf sections
886: Scanning section header entries (25)
886: findFreeMallocPointer: Scanning for a free memory pointer
886: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
886: aMTP: Size adjusted from 4249 to 8192
886: aMTP: Used allocPagesAndMap to allocate 0x00001099 bytes at 0x01322000
886: Mapping string table @ 0x01322000 (0xC1322000) for 0x00001000 bytes into kernel
892: Reading string table to 0x01322000, 0x00000099 bytes, result=0x00000099
892: findFreeMallocPointer: Scanning for a free memory pointer
892: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
892: aMTP: Size adjusted from 4605 to 8192
892: aMTP: Used allocPagesAndMap to allocate 0x000011FD bytes at 0x01324000
892: Mapping string table @ 0x01324000 (0xC1324000) for 0x00001000 bytes into kernel
902: Reading string table to 0x01324000, 0x000001FD bytes, result=0x000001FD
902: findFreeMallocPointer: Scanning for a free memory pointer
902: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
902: aMTP: Size adjusted from 4302 to 8192
902: aMTP: Used allocPagesAndMap to allocate 0x000010CE bytes at 0x01326000
902: Mapping string table @ 0x01326000 (0xC1326000) for 0x00001000 bytes into kernel
907: Reading string table to 0x01326000, 0x000000CE bytes, result=0x000000CE
907: Found 3 string tables, index of section header table=0x00000018
907: Found string (STRTAB) table 0x0007 named .dynstr, read to address 0x01322000, size=0x00000099
907: Dynamic string table entry = 0x0007
907: Found string (STRTAB) table 0x0017 named .strtab, read to address 0x01324000, size=0x000001FD
907: General string table entry = 0x0017
907: Found string (STRTAB) table 0x0018 named .shstrtab, read to address 0x01326000, size=0x000000CE
907: Scanning section header table, 25 records
907: Found () section (type=0x00000000)address 0x00000000, size 0x00000000.
907: Found (.text) (NOBITS) section (type=0x00000001)address 0x03100000, size 0x00000D17.
907: Found (.plt) (NOBITS) section (type=0x00000001)address 0x03100D20, size 0x00000110.
908: Found (.rodata) (NOBITS) section (type=0x00000001)address 0x03100E30, size 0x00000130.
908: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x03100F60, size 0x00000204.
908: Found (.interp) (NOBITS) section (type=0x00000001)address 0x03101164, size 0x00000013.
908: Found .dynsym (DYNSYM) section address 0x03101178.
908: Found (STRTAB), already processed string tables, skipping
908: Found .hash (HASH) section address 0x03101324.
908: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x0310137C, size 0x00000040.
908: Found (.eh_frame_hdr) (NOBITS) section (type=0x00000001)address 0x031013BC, size 0x00000084.
908: findFreeMallocPointer: Scanning for a free memory pointer
908: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
908: aMTP: Size adjusted from 4224 to 8192
908: aMTP: Used allocPagesAndMap to allocate 0x00001080 bytes at 0x01328000
913: Found .rel.dyn (REL) section, read 128 bytes to 0x01328000.
913: Found data segment, address 0x031014C0, size 0x00000056.
913: Found section .dynamic (DYNAMIC) table address 0x03101518.
913: Found (.got.plt) (NOBITS) section (type=0x00000001)address 0x031015A8, size 0x0000004C.
913: Found bss segment, address 0x03101600, size 0x0000FC3C.
913: Found (.debug_info) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000007F2.
913: Found (.debug_abbrev) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000001CD.
913: Found (.debug_aranges) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000020.
913: Found (.debug_line) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000002CD.
913: Found (.debug_str) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000386.
913: Found (.comment) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000011.
913: findFreeMallocPointer: Scanning for a free memory pointer
913: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
913: aMTP: Size adjusted from 5264 to 8192
914: aMTP: Used allocPagesAndMap to allocate 0x00001490 bytes at 0x0132A000
929: Found symbol table (SYMTAB) using string table 0x17, read 1168 bytes to 0x0132A000
929: Found (STRTAB), already processed string tables, skipping
929: Found (STRTAB), already processed string tables, skipping
929: Done processing the section header table
929: Iterating the symbol table, 73 records
929: Using string table 0x0017
929: Name: , Value: 00000000, Size: 0000, B/T: 00/00, SecIdx: 0000
929: Name: , Value: 03100000, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03100D20, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03100E30, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03100F60, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03101164, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03101178, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03101288, Size: 0000, B/T: 00/03, SecIdx: 0000
929: Name: , Value: 03101324, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 0310137C, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 031013BC, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 03101440, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 031014C0, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 03101518, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 031015A8, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 03101600, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
930: Name: kshell.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
930: Name: , Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
930: Name: _DYNAMIC, Value: 03101518, Size: 0000, B/T: 00/01, SecIdx: 0000
930: Name: __GNU_EH_FRAME_HDR, Value: 031013BC, Size: 0000, B/T: 00/00, SecIdx: 0000
930: Name: _GLOBAL_OFFSET_TABLE_, Value: 031015A8, Size: 0000, B/T: 00/01, SecIdx: 0000
930: Name: strcpy, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
930: Name: paramsToArgv, Value: 03100619, Size: 008B, B/T: 01/02, SecIdx: 0000
930: Name: waitpid, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
930: Name: print, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: execInternalCommand, Value: 03100000, Size: 00AB, B/T: 01/02, SecIdx: 0000
931: Name: delim, Value: 03101510, Size: 0006, B/T: 01/01, SecIdx: 0000
931: Name: commandHistory, Value: 03101620, Size: FA00, B/T: 01/01, SecIdx: 0000
931: Name: resetRow, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: gets, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: findCommand, Value: 03100254, Size: 0069, B/T: 01/02, SecIdx: 0000
931: Name: memcpy, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: commandHistoryPtr, Value: 03101608, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: malloc, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: sleep, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: strtoul, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: sExecutingProgram, Value: 03111020, Size: 0200, B/T: 01/01, SecIdx: 0000
931: Name: command_function_p, Value: 03111220, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: kShell, Value: 031009EF, Size: 0328, B/T: 01/02, SecIdx: 0000
931: Name: buildargv, Value: 031002BD, Size: 028E, B/T: 01/02, SecIdx: 0000
931: Name: parseParamsShell, Value: 031000AB, Size: 01A9, B/T: 01/02, SecIdx: 0000
931: Name: heapEnd, Value: 03111224, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: exec, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: execp, Value: 031006E1, Size: 018F, B/T: 01/02, SecIdx: 0000
931: Name: heapBase, Value: 03111228, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: heapCurr, Value: 0311122C, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: strncmp, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: freeArgV, Value: 031006A4, Size: 003D, B/T: 01/02, SecIdx: 0000
931: Name: command_function, Value: 03111230, Size: 0004, B/T: 01/01, SecIdx: 0000
931: Name: strtok, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: reprintCommand, Value: 031009C9, Size: 0026, B/T: 01/02, SecIdx: 0000
931: Name: memset, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
931: Name: pwd, Value: 0310092F, Size: 004E, B/T: 01/02, SecIdx: 0000
932: Name: helpMe, Value: 0310054B, Size: 00CE, B/T: 01/02, SecIdx: 0000
932: Name: getcwd, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
932: Name: exitCode, Value: 03101604, Size: 0004, B/T: 01/01, SecIdx: 0000
932: Name: kExit, Value: 031008D7, Size: 0058, B/T: 01/02, SecIdx: 0000
932: Name: commandHistoryMax, Value: 0310160C, Size: 0004, B/T: 01/01, SecIdx: 0000
932: Name: saveCommand, Value: 0310097D, Size: 002E, B/T: 01/02, SecIdx: 0000
932: Name: sKShellProgramName, Value: 03111234, Size: 0004, B/T: 01/01, SecIdx: 0000
932: Name: libcTZ, Value: 03111238, Size: 0004, B/T: 01/01, SecIdx: 0000
932: Name: prompt, Value: 031009AB, Size: 001E, B/T: 01/02, SecIdx: 0000
932: Name: timeToExit, Value: 03101600, Size: 0001, B/T: 01/01, SecIdx: 0000
932: Name: kSleep, Value: 03100870, Size: 0067, B/T: 01/02, SecIdx: 0000
932: Name: cmds, Value: 031014C0, Size: 0050, B/T: 01/01, SecIdx: 0000
932: Name: strlen, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
932: Name: free, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
932: Processing ELF Dynamic section at 0x03101518, 18 records
932: ELF at: 0x0130B000, copy to: 0x0130BFB8, neededCount=0x00000001
932: Reading NEEDED name from string table index 0x0001 (0x0001)
932: Needed name = libc.so
932: Found NEEDED, library name='/libc.so', checking to see if it is already loaded.
932: 	Found loaded module /kshell ...
932: 		Not a library, skipping to the next
932: loadElf: Calling loadElf again to load '/libc.so'
932: findFreeMallocPointer: Scanning for a free memory pointer
932: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
932: aMTP: Size adjusted from 7264 to 8192
932: aMTP: Used allocPagesAndMap to allocate 0x00001C60 bytes at 0x0132C000
932: alloc'd elfLoadPages @ 0x0132E000
932: Added elfInfo to kLoadedElfInfo list
932: findFreeMallocPointer: Scanning for a free memory pointer
932: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
932: aMTP: Size adjusted from 8 to 4096
932: aMTP: Used allocPagesAndMap to allocate 0x00000008 bytes at 0x0132F000
932: Opening image file /libc.so
933: fopen returned 1181528
938: ELF file type 3, machine type 3
938: Section Name String Table number = 0x001F
938: section header record count= 32
938: e_shentsize=40, oursize=40
938: seeking to 0x0000B654 ...938: reading SHOFF: 0x00000500 bytes (s=0x00000028*n=0x00000020), to 0x0132C084
953: seeking to 0x00000034 ...953: reading PHOFF: 0x00000080 bytes (s=0x00000020*n=0x00000004), to 0x0132C854
958: Section 0, load fsize=0x3844,msize=0x387C to 0x30000000, seeking to 0x00001000 ...
958: putDataOnPages: Bytes left to go: 0x00003844
958: putDataOnPages: Full page write, writing 1 page to 0x30000000
958: putDataOnPages: V=0x30000000 not mapped, mapped to P=0x01330000 (CR3=0x01148000)
958: putDataOnPages: V=0x30000000 also mapped to KP=0x01330000 (CR3=0x001A8000)
958: addElfLoadInfo(0x0132C000, 0x01330000, 0x30000000, 0x00000001)
963: putDataOnPages: Reading 4096 bytes to 0x30000000 (0x01330000)
963: putDataOnPages: Page written, 0x00002844 bytes left to go
963: putDataOnPages: Bytes left to go: 0x00002844
963: putDataOnPages: Full page write, writing 1 page to 0x30001000
963: putDataOnPages: V=0x30001000 not mapped, mapped to P=0x01331000 (CR3=0x01148000)
963: putDataOnPages: V=0x30001000 also mapped to KP=0x01331000 (CR3=0x001A8000)
963: addElfLoadInfo(0x0132C000, 0x01331000, 0x30001000, 0x00000001)
968: putDataOnPages: Reading 4096 bytes to 0x30001000 (0x01331000)
968: putDataOnPages: Page written, 0x00001844 bytes left to go
968: putDataOnPages: Bytes left to go: 0x00001844
968: putDataOnPages: Full page write, writing 1 page to 0x30002000
968: putDataOnPages: V=0x30002000 not mapped, mapped to P=0x01332000 (CR3=0x01148000)
968: putDataOnPages: V=0x30002000 also mapped to KP=0x01332000 (CR3=0x001A8000)
968: addElfLoadInfo(0x0132C000, 0x01332000, 0x30002000, 0x00000001)
973: putDataOnPages: Reading 4096 bytes to 0x30002000 (0x01332000)
973: putDataOnPages: Page written, 0x00000844 bytes left to go
973: putDataOnPages: Bytes left to go: 0x00000844
973: putDataOnPages: Non-aligned or not full page write, writing 0x00000844 bytes to 0x30003000
973: putDataOnPages: V=0x30003000 not mapped, mapped to P=0x01333000 (CR3=0x01148000)
973: putDataOnPages: V=0x30003000 also mapped to KP=0x01333000 (CR3=0x001A8000)
973: addElfLoadInfo(0x0132C000, 0x01333000, 0x30003000, 0x00000000)
983: putDataOnPages: Reading 2116 bytes to 0x30003000 (0x01333000)
983: putDataOnPages: Page written, 0x00000000 bytes left to go
983: Section 0 loaded 0x00003844 bytes at 0x30000000
983: Section 0 has uninitialized data (msize>fsize), zeroing 0x00000038 bytes at 0x30003844
983: putDataOnPages: Bytes left to go: 0x00000038
983: putDataOnPages: Non-aligned or not full page write, writing 0x00000038 bytes to 0x30003844
983: putDataOnPages: V=0x30003844 already mapped to P=0x01333844
983: putDataOnPages: Zeroed 56 bytes at 0x30003844 (0x01333844)
983: putDataOnPages: Page written, 0x00000000 bytes left to go
983: Section 1, load fsize=0x00B8,msize=0x00B8 to 0x30003748, seeking to 0x00004748 ...
983: putDataOnPages: Bytes left to go: 0x000000B8
983: putDataOnPages: Non-aligned or not full page write, writing 0x000000B8 bytes to 0x30003748
983: putDataOnPages: V=0x30003748 already mapped to P=0x01333748
988: putDataOnPages: Reading 184 bytes to 0x30003748 (0x01333748)
988: putDataOnPages: Page written, 0x00000000 bytes left to go
988: Section 1 loaded 0x000000B8 bytes at 0x30003748
988: Section 2, load fsize=0x020C,msize=0x020C to 0x300031B4, seeking to 0x000041B4 ...
988: putDataOnPages: Bytes left to go: 0x0000020C
988: putDataOnPages: Non-aligned or not full page write, writing 0x0000020C bytes to 0x300031B4
988: putDataOnPages: V=0x300031B4 already mapped to P=0x013331B4
998: putDataOnPages: Reading 524 bytes to 0x300031B4 (0x013331B4)
998: putDataOnPages: Page written, 0x00000000 bytes left to go
998: Section 2 loaded 0x0000020C bytes at 0x300031B4
998: Section 3 @ 0x0132C8B4 : file/mem sizes=0x0/0x0, not loading
998: LoadElf: done loading elf sections
998: Scanning section header entries (32)
998: findFreeMallocPointer: Scanning for a free memory pointer
998: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
998: aMTP: Size adjusted from 4391 to 8192
998: aMTP: Used allocPagesAndMap to allocate 0x00001127 bytes at 0x01334000
998: Mapping string table @ 0x01334000 (0xC1334000) for 0x00001000 bytes into kernel
1008: Reading string table to 0x01334000, 0x00000127 bytes, result=0x00000127
1008: findFreeMallocPointer: Scanning for a free memory pointer
1008: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1008: aMTP: Size adjusted from 5090 to 8192
1008: aMTP: Used allocPagesAndMap to allocate 0x000013E2 bytes at 0x01336000
1008: Mapping string table @ 0x01336000 (0xC1336000) for 0x00001000 bytes into kernel
1023: Reading string table to 0x01336000, 0x000003E2 bytes, result=0x000003E2
1023: findFreeMallocPointer: Scanning for a free memory pointer
1023: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1023: aMTP: Size adjusted from 4451 to 8192
1023: aMTP: Used allocPagesAndMap to allocate 0x00001163 bytes at 0x01338000
1023: Mapping string table @ 0x01338000 (0xC1338000) for 0x00001000 bytes into kernel
1033: Reading string table to 0x01338000, 0x00000163 bytes, result=0x00000163
1033: Found 3 string tables, index of section header table=0x0000001F
1033: Found string (STRTAB) table 0x0009 named .dynstr, read to address 0x01334000, size=0x00000127
1033: Dynamic string table entry = 0x0009
1033: Found string (STRTAB) table 0x001E named .strtab, read to address 0x01336000, size=0x000003E2
1033: General string table entry = 0x001E
1033: Found string (STRTAB) table 0x001F named .shstrtab, read to address 0x01338000, size=0x00000163
1033: Scanning section header table, 32 records
1033: Found () section (type=0x00000000)address 0x00000000, size 0x00000000.
1033: Found (.text) (NOBITS) section (type=0x00000001)address 0x30000000, size 0x0000236A.
1033: Found (.text.__x86.get_pc_thunk.ax) (NOBITS) section (type=0x00000001)address 0x3000236A, size 0x00000004.
1033: Found (.plt) (NOBITS) section (type=0x00000001)address 0x30002370, size 0x00000050.
1033: Found (.text.__x86.get_pc_thunk.bx) (NOBITS) section (type=0x00000001)address 0x300023C0, size 0x00000004.
1033: Found (.text.__x86.get_pc_thunk.si) (NOBITS) section (type=0x00000001)address 0x300023C4, size 0x00000004.
1034: Found (.text.__x86.get_pc_thunk.cx) (NOBITS) section (type=0x00000001)address 0x300023C8, size 0x00000004.
1034: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x300023CC, size 0x000008B0.
1034: Found .dynsym (DYNSYM) section address 0x30002C7C.
1034: Found (STRTAB), already processed string tables, skipping
1034: Found .hash (HASH) section address 0x30003034.
1034: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x30003174, size 0x00000040.
1034: Found (.eh_frame_hdr) (NOBITS) section (type=0x00000001)address 0x300031B4, size 0x0000020C.
1034: Found (.rodata) (NOBITS) section (type=0x00000001)address 0x300033C0, size 0x00000260.
1034: findFreeMallocPointer: Scanning for a free memory pointer
1034: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1034: aMTP: Size adjusted from 4328 to 8192
1034: aMTP: Used allocPagesAndMap to allocate 0x000010E8 bytes at 0x0133A000
1039: Found .rel.dyn (REL) section, read 232 bytes to 0x0133A000.
1039: Found data segment, address 0x30003720, size 0x00000028.
1039: 	segment belongs to a library, marking pages as CoW (moo)
1039: Found section .dynamic (DYNAMIC) table address 0x30003748.
1039: Found (.got) (NOBITS) section (type=0x00000001)address 0x30003800, size 0x00000018.
1039: Found (.got.plt) (NOBITS) section (type=0x00000001)address 0x30003818, size 0x0000001C.
1039: Found (.init_array) section (type=0x0000000E)address 0x30003834, size 0x00000004.
1039: Found (.fini_array) section (type=0x0000000F)address 0x30003838, size 0x00000004.
1039: Found (.data.rel.local) (NOBITS) section (type=0x00000001)address 0x3000383C, size 0x00000008.
1040: Found bss segment, address 0x30003844, size 0x00000038.
1040: 	segment belongs to a library, marking pages as CoW (moo)
1040: Found (.debug_info) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00002B9E.
1040: Found (.debug_abbrev) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000010E8.
1040: Found (.debug_aranges) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000002C0.
1040: Found (.debug_line) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000016FB.
1040: Found (.debug_str) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000A16.
1040: Found (.comment) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000011.
1040: findFreeMallocPointer: Scanning for a free memory pointer
1040: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1040: aMTP: Size adjusted from 6240 to 8192
1040: aMTP: Used allocPagesAndMap to allocate 0x00001860 bytes at 0x0133C000
1055: Found symbol table (SYMTAB) using string table 0x1E, read 2144 bytes to 0x0133C000
1055: Found (STRTAB), already processed string tables, skipping
1055: Found (STRTAB), already processed string tables, skipping
1055: Done processing the section header table
1055: Iterating the symbol table, 134 records
1055: Using string table 0x001E
1055: Name: , Value: 00000000, Size: 0000, B/T: 00/00, SecIdx: 0000
1055: Name: , Value: 30000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1055: Name: , Value: 3000236A, Size: 0000, B/T: 00/03, SecIdx: 0000
1055: Name: , Value: 30002370, Size: 0000, B/T: 00/03, SecIdx: 0000
1055: Name: , Value: 300023C0, Size: 0000, B/T: 00/03, SecIdx: 0000
1055: Name: , Value: 300023C4, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 300023C8, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 300023CC, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30002C7C, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30002F0C, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003034, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003174, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 300031B4, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 300033C0, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003620, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003720, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003748, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003800, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003818, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003834, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003838, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 3000383C, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 30003844, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1056: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1057: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1057: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1057: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1057: Name: strchr.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strcspn.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strtok.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: lasts.1241, Value: 30003854, Size: 0004, B/T: 00/01, SecIdx: 0000
1057: Name: ascii.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: input.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: libChrisOS.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: malloc.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: memcpy.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: memset.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: mmap.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: stdio.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strcat.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strcmp.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strcpy.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strlen.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strncmp.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strncpy.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: stroul.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strparts.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strtol.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: strtrim.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: time.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: , Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1057: Name: __x86.get_pc_thunk.cx, Value: 300023C8, Size: 0000, B/T: 00/02, SecIdx: 0000
1057: Name: fops, Value: 3000385C, Size: 0008, B/T: 00/01, SecIdx: 0000
1057: Name: do_syscall3, Value: 300004CD, Size: 0034, B/T: 00/02, SecIdx: 0000
1058: Name: __x86.get_pc_thunk.si, Value: 300023C4, Size: 0000, B/T: 00/02, SecIdx: 0000
1058: Name: _daylight, Value: 30003744, Size: 0004, B/T: 00/01, SecIdx: 0000
1058: Name: strcspnI, Value: 300000C5, Size: 0055, B/T: 00/02, SecIdx: 0000
1058: Name: _DYNAMIC, Value: 30003748, Size: 0000, B/T: 00/01, SecIdx: 0000
1058: Name: newHeapRequiredToFulfillRequest, Value: 30000860, Size: 007C, B/T: 00/02, SecIdx: 0000
1058: Name: console_file, Value: 30003864, Size: 0010, B/T: 00/01, SecIdx: 0000
1058: Name: malloc_cleanup, Value: 30000AF8, Size: 0026, B/T: 00/02, SecIdx: 0000
1058: Name: itoaI, Value: 3000022B, Size: 00BB, B/T: 00/02, SecIdx: 0000
1058: Name: __x86.get_pc_thunk.ax, Value: 3000236A, Size: 0000, B/T: 00/02, SecIdx: 0000
1058: Name: do_syscall4, Value: 30000498, Size: 0035, B/T: 00/02, SecIdx: 0000
1058: Name: writeConsole, Value: 30000E88, Size: 0026, B/T: 00/02, SecIdx: 0000
1058: Name: memsetI, Value: 30000D83, Size: 00C7, B/T: 00/02, SecIdx: 0000
1058: Name: libc_cleanup, Value: 300005FD, Size: 001F, B/T: 00/02, SecIdx: 0000
1058: Name: reverseI, Value: 300001B4, Size: 0077, B/T: 00/02, SecIdx: 0000
1058: Name: printI, Value: 30000650, Size: 0034, B/T: 00/02, SecIdx: 0000
1058: Name: _tzname, Value: 3000383C, Size: 0008, B/T: 00/01, SecIdx: 0000
1058: Name: printdI, Value: 30000684, Size: 0037, B/T: 00/02, SecIdx: 0000
1058: Name: libcInitialized, Value: 30003858, Size: 0001, B/T: 00/01, SecIdx: 0000
1058: Name: heapEnd, Value: 30003844, Size: 0004, B/T: 00/01, SecIdx: 0000
1058: Name: readConsole, Value: 30000E5C, Size: 002C, B/T: 00/02, SecIdx: 0000
1058: Name: heapBase, Value: 30003848, Size: 0004, B/T: 00/01, SecIdx: 0000
1058: Name: heapCurr, Value: 3000384C, Size: 0004, B/T: 00/01, SecIdx: 0000
1058: Name: do_syscall2, Value: 30000501, Size: 0031, B/T: 00/02, SecIdx: 0000
1058: Name: __x86.get_pc_thunk.bx, Value: 300023C0, Size: 0000, B/T: 00/02, SecIdx: 0000
1058: Name: _dstbias, Value: 30003874, Size: 0004, B/T: 00/01, SecIdx: 0000
1058: Name: strlenI, Value: 30001285, Size: 0031, B/T: 00/02, SecIdx: 0000
1058: Name: _ytab, Value: 300035C0, Size: 0060, B/T: 00/01, SecIdx: 0000
1058: Name: __GNU_EH_FRAME_HDR, Value: 300031B4, Size: 0000, B/T: 00/00, SecIdx: 0000
1058: Name: console_node, Value: 30003720, Size: 0024, B/T: 00/01, SecIdx: 0000
1059: Name: initmalloc, Value: 30000804, Size: 005C, B/T: 00/02, SecIdx: 0000
1059: Name: strchrI, Value: 30000038, Size: 0038, B/T: 00/02, SecIdx: 0000
1059: Name: do_syscall1, Value: 30000532, Size: 0027, B/T: 00/02, SecIdx: 0000
1059: Name: libcTZ, Value: 30003850, Size: 0004, B/T: 00/01, SecIdx: 0000
1059: Name: ticksToWait, Value: 30003878, Size: 0004, B/T: 00/01, SecIdx: 0000
1059: Name: _GLOBAL_OFFSET_TABLE_, Value: 30003818, Size: 0000, B/T: 00/01, SecIdx: 0000
1059: Name: concatenate, Value: 300010FA, Size: 006F, B/T: 00/02, SecIdx: 0000
1059: Name: ioInit, Value: 30001069, Size: 0053, B/T: 00/02, SecIdx: 0000
1059: Name: stop, Value: 30000709, Size: 001D, B/T: 00/02, SecIdx: 0000
1059: Name: strcpy, Value: 300011CC, Size: 0040, B/T: 01/02, SecIdx: 0000
1059: Name: waitpid, Value: 30000785, Size: 001D, B/T: 01/02, SecIdx: 0000
1059: Name: print, Value: 3000061C, Size: 0034, B/T: 01/02, SecIdx: 0000
1059: Name: resetRow, Value: 30000FE5, Size: 0084, B/T: 01/02, SecIdx: 0000
1059: Name: gets, Value: 300003DC, Size: 00BA, B/T: 01/02, SecIdx: 0000
1059: Name: getc, Value: 300003AD, Size: 002F, B/T: 01/02, SecIdx: 0000
1059: Name: memcpy, Value: 30000B20, Size: 019B, B/T: 01/02, SecIdx: 0000
1059: Name: puts, Value: 30000344, Size: 0026, B/T: 01/02, SecIdx: 0000
1059: Name: malloc, Value: 300008DC, Size: 01E3, B/T: 01/02, SecIdx: 0000
1059: Name: sleep, Value: 300006BB, Size: 004E, B/T: 01/02, SecIdx: 0000
1059: Name: strtoul, Value: 30001380, Size: 017D, B/T: 01/02, SecIdx: 0000
1059: Name: mmap, Value: 30000E4C, Size: 0010, B/T: 01/02, SecIdx: 0000
1059: Name: gmtime_r, Value: 3000177D, Size: 0319, B/T: 01/02, SecIdx: 0000
1059: Name: strtol, Value: 30001520, Size: 019C, B/T: 01/02, SecIdx: 0000
1059: Name: libc_init, Value: 30000559, Size: 00A4, B/T: 01/02, SecIdx: 0000
1059: Name: strcat, Value: 300010BC, Size: 003E, B/T: 01/02, SecIdx: 0000
1059: Name: exec, Value: 3000074F, Size: 0036, B/T: 01/02, SecIdx: 0000
1059: Name: mktime, Value: 30001B13, Size: 0857, B/T: 01/02, SecIdx: 0000
1059: Name: strncmp, Value: 300012B8, Size: 0067, B/T: 01/02, SecIdx: 0000
1059: Name: strncpy, Value: 30001320, Size: 0060, B/T: 01/02, SecIdx: 0000
1059: Name: strtok, Value: 3000011C, Size: 0097, B/T: 01/02, SecIdx: 0000
1059: Name: sysEnter_Vector, Value: 00130000, Size: 0000, B/T: 01/00, SecIdx: 0000
1060: Name: localtime, Value: 30001A96, Size: 003F, B/T: 01/02, SecIdx: 0000
1060: Name: memset, Value: 30000CBC, Size: 00C7, B/T: 01/02, SecIdx: 0000
1060: Name: strtrim, Value: 300016BC, Size: 0096, B/T: 01/02, SecIdx: 0000
1060: Name: time, Value: 30001754, Size: 0029, B/T: 01/02, SecIdx: 0000
1060: Name: putc, Value: 3000036A, Size: 0043, B/T: 01/02, SecIdx: 0000
1060: Name: strcmp, Value: 3000116C, Size: 005E, B/T: 01/02, SecIdx: 0000
1060: Name: getcwd, Value: 300007E4, Size: 0020, B/T: 01/02, SecIdx: 0000
1060: Name: strcspn, Value: 30000070, Size: 0055, B/T: 01/02, SecIdx: 0000
1060: Name: strcpyc, Value: 3000120C, Size: 0047, B/T: 01/02, SecIdx: 0000
1060: Name: modifySignal, Value: 30000726, Size: 0029, B/T: 01/02, SecIdx: 0000
1060: Name: localtime_r, Value: 30001AD5, Size: 003E, B/T: 01/02, SecIdx: 0000
1060: Name: gettime, Value: 300007A2, Size: 0042, B/T: 01/02, SecIdx: 0000
1060: Name: atoi, Value: 300002E6, Size: 005C, B/T: 01/02, SecIdx: 0000
1060: Name: moveTo, Value: 30000EAE, Size: 0137, B/T: 01/02, SecIdx: 0000
1060: Name: strlen, Value: 30001254, Size: 0031, B/T: 01/02, SecIdx: 0000
1060: Name: strchr, Value: 30000000, Size: 0038, B/T: 01/02, SecIdx: 0000
1060: Name: strleft, Value: 30001500, Size: 001D, B/T: 01/02, SecIdx: 0000
1060: Name: free, Value: 30000ABF, Size: 0039, B/T: 01/02, SecIdx: 0000
1060: Processing ELF Dynamic section at 0x30003748, 23 records
1060: Found dynamic tag 'DT_INIT_ARRAY', pointer=0x30003834
1060: Found dynamic tag 'DT_INIT_ARRYSZ', pointer=0x00000004
1060: Found dynamic tag 'DT_FIN_ARRAY', pointer=0x30003838
1060: Found dynamic tag 'DT_FINI_ARRAYSZ', pointer=0x00000004
1060: Found dynamic tag 'DT_HASH', pointer=0x30003034
1060: Found dynamic tag (0x0000000a), pointer=0x00000127
1060: Found dynamic tag 'DT_SYMENT', pointer=0x00000010
1060: Found dynamic tag 'DT_PLTGOT', pointer=0x30003818
1060: Found dynamic tag 'DT_PLT_RELSZ', pointer=0x00000020
1060: Found dynamic tag 'DT_PLTREL', pointer=0x00000011
1060: Found dynamic tag 'DT_JMPREL', pointer=0x300036E8
1060: Found dynamic tag 'DT_RELSZ', pointer=0x000000C8
1061: Found dynamic tag 'DT_RELENT', pointer=0x00000008
1061: Found dynamic tag 'DT_TEXTREL', pointer=0x00000000
1061: Found dynamic tag (0x6ffffffa), pointer=0x00000009
1061: Found dynamic tag (0x00000000), pointer=0x00000000
1061: Found dynamic tag (0x00000000), pointer=0x00000000
1061: Found dynamic tag (0x00000000), pointer=0x00000000
1061: Found dynamic tag (0x00000000), pointer=0x00000000
1061: Found dynamic tag (0x00000000), pointer=0x00000000
1061: Dumping ELF Symbol Table
1061: 	0:  @ 0x00000000 (size=0x00000000)
1061: 	1:  @ 0x30000000 (size=0x00000000)
1061: 	2:  @ 0x3000236A (size=0x00000000)
1061: 	3:  @ 0x30002370 (size=0x00000000)
1061: 	4:  @ 0x300023C0 (size=0x00000000)
1061: 	5:  @ 0x300023C4 (size=0x00000000)
1061: 	6:  @ 0x300023C8 (size=0x00000000)
1061: 	7:  @ 0x300023CC (size=0x00000000)
1061: 	8:  @ 0x30002C7C (size=0x00000000)
1061: 	9:  @ 0x30002F0C (size=0x00000000)
1061: 	10:  @ 0x30003034 (size=0x00000000)
1061: 	11:  @ 0x30003174 (size=0x00000000)
1061: 	12:  @ 0x300031B4 (size=0x00000000)
1061: 	13:  @ 0x300033C0 (size=0x00000000)
1061: 	14:  @ 0x30003620 (size=0x00000000)
1061: 	15:  @ 0x30003720 (size=0x00000000)
1061: 	16:  @ 0x30003748 (size=0x00000000)
1061: 	17:  @ 0x30003800 (size=0x00000000)
1061: 	18:  @ 0x30003818 (size=0x00000000)
1061: 	19:  @ 0x30003834 (size=0x00000000)
1061: 	20:  @ 0x30003838 (size=0x00000000)
1061: 	21:  @ 0x3000383C (size=0x00000000)
1061: 	22:  @ 0x30003844 (size=0x00000000)
1061: 	23:  @ 0x00000000 (size=0x00000000)
1061: 	24:  @ 0x00000000 (size=0x00000000)
1061: 	25:  @ 0x00000000 (size=0x00000000)
1061: 	26:  @ 0x00000000 (size=0x00000000)
1061: 	27:  @ 0x00000000 (size=0x00000000)
1061: 	28:  @ 0x00000000 (size=0x00000000)
1061: 	29: strchr.c @ 0x00000000 (size=0x00000000)
1061: 	30: strcspn.c @ 0x00000000 (size=0x00000000)
1061: 	31: strtok.c @ 0x00000000 (size=0x00000000)
1061: 	32: lasts.1241 @ 0x30003854 (size=0x00000004)
1061: 	33: ascii.c @ 0x00000000 (size=0x00000000)
1061: 	34: input.c @ 0x00000000 (size=0x00000000)
1062: 	35: libChrisOS.c @ 0x00000000 (size=0x00000000)
1062: 	36: malloc.c @ 0x00000000 (size=0x00000000)
1062: 	37: memcpy.c @ 0x00000000 (size=0x00000000)
1062: 	38: memset.c @ 0x00000000 (size=0x00000000)
1062: 	39: mmap.c @ 0x00000000 (size=0x00000000)
1062: 	40: stdio.c @ 0x00000000 (size=0x00000000)
1062: 	41: strcat.c @ 0x00000000 (size=0x00000000)
1062: 	42: strcmp.c @ 0x00000000 (size=0x00000000)
1062: 	43: strcpy.c @ 0x00000000 (size=0x00000000)
1062: 	44: strlen.c @ 0x00000000 (size=0x00000000)
1062: 	45: strncmp.c @ 0x00000000 (size=0x00000000)
1062: 	46: strncpy.c @ 0x00000000 (size=0x00000000)
1062: 	47: stroul.c @ 0x00000000 (size=0x00000000)
1062: 	48: strparts.c @ 0x00000000 (size=0x00000000)
1062: 	49: strtol.c @ 0x00000000 (size=0x00000000)
1062: 	50: strtrim.c @ 0x00000000 (size=0x00000000)
1062: 	51: time.c @ 0x00000000 (size=0x00000000)
1062: 	52:  @ 0x00000000 (size=0x00000000)
1062: 	53: __x86.get_pc_thunk.cx @ 0x300023C8 (size=0x00000000)
1062: 	54: fops @ 0x3000385C (size=0x00000008)
1062: 	55: do_syscall3 @ 0x300004CD (size=0x00000034)
1062: 	56: __x86.get_pc_thunk.si @ 0x300023C4 (size=0x00000000)
1062: 	57: _daylight @ 0x30003744 (size=0x00000004)
1062: 	58: strcspnI @ 0x300000C5 (size=0x00000055)
1062: 	59: _DYNAMIC @ 0x30003748 (size=0x00000000)
1062: 	60: newHeapRequiredToFulfillRequest @ 0x30000860 (size=0x0000007C)
1062: 	61: console_file @ 0x30003864 (size=0x00000010)
1062: 	62: malloc_cleanup @ 0x30000AF8 (size=0x00000026)
1062: 	63: itoaI @ 0x3000022B (size=0x000000BB)
1062: 	64: __x86.get_pc_thunk.ax @ 0x3000236A (size=0x00000000)
1062: 	65: do_syscall4 @ 0x30000498 (size=0x00000035)
1062: 	66: writeConsole @ 0x30000E88 (size=0x00000026)
1062: 	67: memsetI @ 0x30000D83 (size=0x000000C7)
1062: 	68: libc_cleanup @ 0x300005FD (size=0x0000001F)
1062: 	69: reverseI @ 0x300001B4 (size=0x00000077)
1062: 	70: printI @ 0x30000650 (size=0x00000034)
1062: 	71: _tzname @ 0x3000383C (size=0x00000008)
1062: 	72: printdI @ 0x30000684 (size=0x00000037)
1062: 	73: libcInitialized @ 0x30003858 (size=0x00000001)
1063: 	74: heapEnd @ 0x30003844 (size=0x00000004)
1063: 	75: readConsole @ 0x30000E5C (size=0x0000002C)
1063: 	76: heapBase @ 0x30003848 (size=0x00000004)
1063: 	77: heapCurr @ 0x3000384C (size=0x00000004)
1063: 	78: do_syscall2 @ 0x30000501 (size=0x00000031)
1063: 	79: __x86.get_pc_thunk.bx @ 0x300023C0 (size=0x00000000)
1063: 	80: _dstbias @ 0x30003874 (size=0x00000004)
1063: 	81: strlenI @ 0x30001285 (size=0x00000031)
1063: 	82: _ytab @ 0x300035C0 (size=0x00000060)
1063: 	83: __GNU_EH_FRAME_HDR @ 0x300031B4 (size=0x00000000)
1063: 	84: console_node @ 0x30003720 (size=0x00000024)
1063: 	85: initmalloc @ 0x30000804 (size=0x0000005C)
1063: 	86: strchrI @ 0x30000038 (size=0x00000038)
1063: 	87: do_syscall1 @ 0x30000532 (size=0x00000027)
1063: 	88: libcTZ @ 0x30003850 (size=0x00000004)
1063: 	89: ticksToWait @ 0x30003878 (size=0x00000004)
1063: 	90: _GLOBAL_OFFSET_TABLE_ @ 0x30003818 (size=0x00000000)
1063: 	91: concatenate @ 0x300010FA (size=0x0000006F)
1063: 	92: ioInit @ 0x30001069 (size=0x00000053)
1063: 	93: stop @ 0x30000709 (size=0x0000001D)
1063: 	94: strcpy @ 0x300011CC (size=0x00000040)
1063: 	95: waitpid @ 0x30000785 (size=0x0000001D)
1063: 	96: print @ 0x3000061C (size=0x00000034)
1063: 	97: resetRow @ 0x30000FE5 (size=0x00000084)
1063: 	98: gets @ 0x300003DC (size=0x000000BA)
1063: 	99: getc @ 0x300003AD (size=0x0000002F)
1063: 	100: memcpy @ 0x30000B20 (size=0x0000019B)
1063: 	101: puts @ 0x30000344 (size=0x00000026)
1063: 	102: malloc @ 0x300008DC (size=0x000001E3)
1063: 	103: sleep @ 0x300006BB (size=0x0000004E)
1063: 	104: strtoul @ 0x30001380 (size=0x0000017D)
1063: 	105: mmap @ 0x30000E4C (size=0x00000010)
1063: 	106: gmtime_r @ 0x3000177D (size=0x00000319)
1063: 	107: strtol @ 0x30001520 (size=0x0000019C)
1063: 	108: libc_init @ 0x30000559 (size=0x000000A4)
1063: 	109: strcat @ 0x300010BC (size=0x0000003E)
1063: 	110: exec @ 0x3000074F (size=0x00000036)
1063: 	111: mktime @ 0x30001B13 (size=0x00000857)
1063: 	112: strncmp @ 0x300012B8 (size=0x00000067)
1063: 	113: strncpy @ 0x30001320 (size=0x00000060)
1064: 	114: strtok @ 0x3000011C (size=0x00000097)
1064: 	115: sysEnter_Vector @ 0x00130000 (size=0x00000000)
1064: 	116: localtime @ 0x30001A96 (size=0x0000003F)
1064: 	117: memset @ 0x30000CBC (size=0x000000C7)
1064: 	118: strtrim @ 0x300016BC (size=0x00000096)
1064: 	119: time @ 0x30001754 (size=0x00000029)
1064: 	120: putc @ 0x3000036A (size=0x00000043)
1064: 	121: strcmp @ 0x3000116C (size=0x0000005E)
1064: 	122: getcwd @ 0x300007E4 (size=0x00000020)
1064: 	123: strcspn @ 0x30000070 (size=0x00000055)
1064: 	124: strcpyc @ 0x3000120C (size=0x00000047)
1064: 	125: modifySignal @ 0x30000726 (size=0x00000029)
1064: 	126: localtime_r @ 0x30001AD5 (size=0x0000003E)
1064: 	127: gettime @ 0x300007A2 (size=0x00000042)
1064: 	128: atoi @ 0x300002E6 (size=0x0000005C)
1064: 	129: moveTo @ 0x30000EAE (size=0x00000137)
1064: 	130: strlen @ 0x30001254 (size=0x00000031)
1064: 	131: strchr @ 0x30000000 (size=0x00000038)
1064: 	132: strleft @ 0x30001500 (size=0x0000001D)
1064: 	133: free @ 0x30000ABF (size=0x00000039)
1064: Done dumping ELF Symbol Table
1064: Processing relocation (REL) table at 0x0133A000, record count=0x00000019
1064: NOTE: Only processing REL tables, TODO: process RELA tables
1064: Found relocation entry type 0x08 with offset 0x30003800, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003804, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003808, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x3000380C, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003810, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003814, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003838, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x3000383C, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x08 with offset 0x30003840, dynamic symbol table entry 0x00
1064: Found relocation entry type 0x02 with offset 0x30000362, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x30000362.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FC9A (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x300003A2, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x300003A2.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FC5A (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x300003CB, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x300003CB.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FC31 (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x30000428, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x30000428.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FBD4 (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x3000048B, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x3000048B.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FB71 (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x300004BD, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1065:  Writing 0x00130000 to memory address 0x300004BD.
	Value before/after=0xFFFFFFFC/ 1065: 0xD012FB3F (using R_386_PC32)
1065: Found relocation entry type 0x02 with offset 0x300004F1, dynamic symbol table entry 0x16
1065:  Getting symbol entry number from 0x0133C164
1065:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x300004F1.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012FB0B (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x30000522, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x30000522.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012FADA (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x3000054D, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x3000054D.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012FAAF (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x300006AC, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x300006AC.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012F950 (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x300006D2, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x300006D2.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012F92A (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x300006FA, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x300006FA.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012F902 (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x3000094D, dynamic symbol table entry 0x16
1066:  Getting symbol entry number from 0x0133C164
1066:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1066:  Writing 0x00130000 to memory address 0x3000094D.
	Value before/after=0xFFFFFFFC/ 1066: 0xD012F6AF (using R_386_PC32)
1066: Found relocation entry type 0x02 with offset 0x30000B16, dynamic symbol table entry 0x16
1067:  Getting symbol entry number from 0x0133C164
1067:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1067:  Writing 0x00130000 to memory address 0x30000B16.
	Value before/after=0xFFFFFFFC/ 1067: 0xD012F4E6 (using R_386_PC32)
1067: Found relocation entry type 0x02 with offset 0x30001771, dynamic symbol table entry 0x16
1067:  Getting symbol entry number from 0x0133C164
1067:  Symbol Name 'sysEnter_Vector', Symbol value=0x00130000 (addr=0x30002DDC)
1067:  Writing 0x00130000 to memory address 0x30001771.
	Value before/after=0xFFFFFFFC/ 1067: 0xD012E88B (using R_386_PC32)
1067: Found relocation entry type 0x01 with offset 0x30003834, dynamic symbol table entry 0x0F
1067:  Getting symbol entry number from 0x0133C0F4
1067:  Symbol Name 'libc_init', Symbol value=0x30000559 (addr=0x30002D6C)
1067:  Writing 0x30000559 to memory address 0x30003834.
	Value before/after=0x00000000/ 1067: 0x30000559 (using R_386_32)
1067: Found relocation entry type 0x07 with offset 0x30003824, dynamic symbol table entry 0x01
1067:  Getting symbol entry number from 0x0133C014
1067:  Symbol Name 'strcpy', Symbol value=0x300011CC (addr=0x30002C8C)
1067:  Writing 0x300011CC to memory address 0x30003824.
	Value before/after=0x30002386/ 1067: 0x300011CC (using R_386_JMP_SLOT)
1067: loadElf: Incrementing libraryElfCount for /kshell
1067: Found dynamic tag (0x0000000f), pointer=0x00000076
1067: Found dynamic tag 'DT_HASH', pointer=0x03101324
1067: Found dynamic tag (0x0000000a), pointer=0x00000099
1067: Found dynamic tag 'DT_SYMENT', pointer=0x00000010
1067: Found dynamic tag (0x00000015), pointer=0x00000000
1067: Found dynamic tag 'DT_PLTGOT', pointer=0x031015A8
1067: Found dynamic tag 'DT_PLT_RELSZ', pointer=0x00000080
1067: Found dynamic tag 'DT_PLTREL', pointer=0x00000011
1067: Found dynamic tag 'DT_JMPREL', pointer=0x03101440
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1067: Found dynamic tag (0x00000000), pointer=0x00000000
1068: Dumping ELF Symbol Table
1068: 	0:  @ 0x00000000 (size=0x00000000)
1068: 	1:  @ 0x03100000 (size=0x00000000)
1068: 	2:  @ 0x03100D20 (size=0x00000000)
1068: 	3:  @ 0x03100E30 (size=0x00000000)
1068: 	4:  @ 0x03100F60 (size=0x00000000)
1068: 	5:  @ 0x03101164 (size=0x00000000)
1068: 	6:  @ 0x03101178 (size=0x00000000)
1068: 	7:  @ 0x03101288 (size=0x00000000)
1068: 	8:  @ 0x03101324 (size=0x00000000)
1068: 	9:  @ 0x0310137C (size=0x00000000)
1068: 	10:  @ 0x031013BC (size=0x00000000)
1068: 	11:  @ 0x03101440 (size=0x00000000)
1068: 	12:  @ 0x031014C0 (size=0x00000000)
1068: 	13:  @ 0x03101518 (size=0x00000000)
1068: 	14:  @ 0x031015A8 (size=0x00000000)
1068: 	15:  @ 0x03101600 (size=0x00000000)
1068: 	16:  @ 0x00000000 (size=0x00000000)
1068: 	17:  @ 0x00000000 (size=0x00000000)
1068: 	18:  @ 0x00000000 (size=0x00000000)
1068: 	19:  @ 0x00000000 (size=0x00000000)
1068: 	20:  @ 0x00000000 (size=0x00000000)
1068: 	21:  @ 0x00000000 (size=0x00000000)
1068: 	22: kshell.c @ 0x00000000 (size=0x00000000)
1068: 	23:  @ 0x00000000 (size=0x00000000)
1068: 	24: _DYNAMIC @ 0x03101518 (size=0x00000000)
1068: 	25: __GNU_EH_FRAME_HDR @ 0x031013BC (size=0x00000000)
1068: 	26: _GLOBAL_OFFSET_TABLE_ @ 0x031015A8 (size=0x00000000)
1068: 	27: strcpy @ 0x00000000 (size=0x00000000)
1068: 	28: paramsToArgv @ 0x03100619 (size=0x0000008B)
1068: 	29: waitpid @ 0x00000000 (size=0x00000000)
1068: 	30: print @ 0x00000000 (size=0x00000000)
1068: 	31: execInternalCommand @ 0x03100000 (size=0x000000AB)
1068: 	32: delim @ 0x03101510 (size=0x00000006)
1068: 	33: commandHistory @ 0x03101620 (size=0x0000FA00)
1068: 	34: resetRow @ 0x00000000 (size=0x00000000)
1068: 	35: gets @ 0x00000000 (size=0x00000000)
1068: 	36: findCommand @ 0x03100254 (size=0x00000069)
1068: 	37: memcpy @ 0x00000000 (size=0x00000000)
1068: 	38: commandHistoryPtr @ 0x03101608 (size=0x00000004)
1068: 	39: malloc @ 0x00000000 (size=0x00000000)
1068: 	40: sleep @ 0x00000000 (size=0x00000000)
1068: 	41: strtoul @ 0x00000000 (size=0x00000000)
1068: 	42: sExecutingProgram @ 0x03111020 (size=0x00000200)
1069: 	43: command_function_p @ 0x03111220 (size=0x00000004)
1069: 	44: kShell @ 0x031009EF (size=0x00000328)
1069: 	45: buildargv @ 0x031002BD (size=0x0000028E)
1069: 	46: parseParamsShell @ 0x031000AB (size=0x000001A9)
1069: 	47: heapEnd @ 0x03111224 (size=0x00000004)
1069: 	48: exec @ 0x00000000 (size=0x00000000)
1069: 	49: execp @ 0x031006E1 (size=0x0000018F)
1069: 	50: heapBase @ 0x03111228 (size=0x00000004)
1069: 	51: heapCurr @ 0x0311122C (size=0x00000004)
1069: 	52: strncmp @ 0x00000000 (size=0x00000000)
1069: 	53: freeArgV @ 0x031006A4 (size=0x0000003D)
1069: 	54: command_function @ 0x03111230 (size=0x00000004)
1069: 	55: strtok @ 0x00000000 (size=0x00000000)
1069: 	56: reprintCommand @ 0x031009C9 (size=0x00000026)
1069: 	57: memset @ 0x00000000 (size=0x00000000)
1069: 	58: pwd @ 0x0310092F (size=0x0000004E)
1069: 	59: helpMe @ 0x0310054B (size=0x000000CE)
1069: 	60: getcwd @ 0x00000000 (size=0x00000000)
1069: 	61: exitCode @ 0x03101604 (size=0x00000004)
1069: 	62: kExit @ 0x031008D7 (size=0x00000058)
1069: 	63: commandHistoryMax @ 0x0310160C (size=0x00000004)
1069: 	64: saveCommand @ 0x0310097D (size=0x0000002E)
1069: 	65: sKShellProgramName @ 0x03111234 (size=0x00000004)
1069: 	66: libcTZ @ 0x03111238 (size=0x00000004)
1069: 	67: prompt @ 0x031009AB (size=0x0000001E)
1069: 	68: timeToExit @ 0x03101600 (size=0x00000001)
1069: 	69: kSleep @ 0x03100870 (size=0x00000067)
1069: 	70: cmds @ 0x031014C0 (size=0x00000050)
1069: 	71: strlen @ 0x00000000 (size=0x00000000)
1069: 	72: free @ 0x00000000 (size=0x00000000)
1069: Done dumping ELF Symbol Table
1069: Processing relocation (REL) table at 0x01328000, record count=0x00000010
1069: NOTE: Only processing REL tables, TODO: process RELA tables
1069: Found relocation entry type 0x07 with offset 0x031015B4, dynamic symbol table entry 0x01
1069:  Getting symbol entry number from 0x0132A014
1069:  Symbol Name 'strcpy', Symbol value=0x00000000 (addr=0x03101188)
1069: elfLookupSymVal: Found symbol 'strcpy', value=0x300011CC
1069:  Writing 0x300011CC to memory address 0x031015B4.
	Value before/after=0x03100D36/ 1070: 0x300011CC (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015B8, dynamic symbol table entry 0x02
1070:  Getting symbol entry number from 0x0132A024
1070:  Symbol Name 'waitpid', Symbol value=0x00000000 (addr=0x03101198)
1070: elfLookupSymVal: Found symbol 'waitpid', value=0x30000785
1070:  Writing 0x30000785 to memory address 0x031015B8.
	Value before/after=0x03100D46/ 1070: 0x30000785 (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015BC, dynamic symbol table entry 0x03
1070:  Getting symbol entry number from 0x0132A034
1070:  Symbol Name 'print', Symbol value=0x00000000 (addr=0x031011A8)
1070: elfLookupSymVal: Found symbol 'print', value=0x3000061C
1070:  Writing 0x3000061C to memory address 0x031015BC.
	Value before/after=0x03100D56/ 1070: 0x3000061C (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015C0, dynamic symbol table entry 0x04
1070:  Getting symbol entry number from 0x0132A044
1070:  Symbol Name 'resetRow', Symbol value=0x00000000 (addr=0x031011B8)
1070: elfLookupSymVal: Found symbol 'resetRow', value=0x30000FE5
1070:  Writing 0x30000FE5 to memory address 0x031015C0.
	Value before/after=0x03100D66/ 1070: 0x30000FE5 (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015C4, dynamic symbol table entry 0x05
1070:  Getting symbol entry number from 0x0132A054
1070:  Symbol Name 'gets', Symbol value=0x00000000 (addr=0x031011C8)
1070: elfLookupSymVal: Found symbol 'gets', value=0x300003DC
1070:  Writing 0x300003DC to memory address 0x031015C4.
	Value before/after=0x03100D76/ 1070: 0x300003DC (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015C8, dynamic symbol table entry 0x06
1070:  Getting symbol entry number from 0x0132A064
1070:  Symbol Name 'memcpy', Symbol value=0x00000000 (addr=0x031011D8)
1070: elfLookupSymVal: Found symbol 'memcpy', value=0x30000B20
1070:  Writing 0x30000B20 to memory address 0x031015C8.
	Value before/after=0x03100D86/ 1070: 0x30000B20 (using R_386_JMP_SLOT)
1070: Found relocation entry type 0x07 with offset 0x031015CC, dynamic symbol table entry 0x07
1070:  Getting symbol entry number from 0x0132A074
1071:  Symbol Name 'malloc', Symbol value=0x00000000 (addr=0x031011E8)
1071: elfLookupSymVal: Found symbol 'malloc', value=0x300008DC
1071:  Writing 0x300008DC to memory address 0x031015CC.
	Value before/after=0x03100D96/ 1071: 0x300008DC (using R_386_JMP_SLOT)
1071: Found relocation entry type 0x07 with offset 0x031015D0, dynamic symbol table entry 0x08
1071:  Getting symbol entry number from 0x0132A084
1071:  Symbol Name 'sleep', Symbol value=0x00000000 (addr=0x031011F8)
1071: elfLookupSymVal: Found symbol 'sleep', value=0x300006BB
1071:  Writing 0x300006BB to memory address 0x031015D0.
	Value before/after=0x03100DA6/ 1071: 0x300006BB (using R_386_JMP_SLOT)
1071: Found relocation entry type 0x07 with offset 0x031015D4, dynamic symbol table entry 0x09
1071:  Getting symbol entry number from 0x0132A094
1071:  Symbol Name 'strtoul', Symbol value=0x00000000 (addr=0x03101208)
1071: elfLookupSymVal: Found symbol 'strtoul', value=0x30001380
1071:  Writing 0x30001380 to memory address 0x031015D4.
	Value before/after=0x03100DB6/ 1071: 0x30001380 (using R_386_JMP_SLOT)
1071: Found relocation entry type 0x07 with offset 0x031015D8, dynamic symbol table entry 0x0A
1071:  Getting symbol entry number from 0x0132A0A4
1071:  Symbol Name 'exec', Symbol value=0x00000000 (addr=0x03101218)
1071: elfLookupSymVal: Found symbol 'exec', value=0x3000074F
1071:  Writing 0x3000074F to memory address 0x031015D8.
	Value before/after=0x03100DC6/ 1071: 0x3000074F (using R_386_JMP_SLOT)
1071: Found relocation entry type 0x07 with offset 0x031015DC, dynamic symbol table entry 0x0B
1071:  Getting symbol entry number from 0x0132A0B4
1071:  Symbol Name 'strncmp', Symbol value=0x00000000 (addr=0x03101228)
1071: elfLookupSymVal: Found symbol 'strncmp', value=0x300012B8
1071:  Writing 0x300012B8 to memory address 0x031015DC.
	Value before/after=0x03100DD6/ 1071: 0x300012B8 (using R_386_JMP_SLOT)
1071: Found relocation entry type 0x07 with offset 0x031015E0, dynamic symbol table entry 0x0C
1071:  Getting symbol entry number from 0x0132A0C4
1071:  Symbol Name 'strtok', Symbol value=0x00000000 (addr=0x03101238)
1071: elfLookupSymVal: Found symbol 'strtok', value=0x3000011C
1071:  Writing 0x3000011C to memory address 0x031015E0.
	Value before/after=0x03100DE6/ 1072: 0x3000011C (using R_386_JMP_SLOT)
1072: Found relocation entry type 0x07 with offset 0x031015E4, dynamic symbol table entry 0x0D
1072:  Getting symbol entry number from 0x0132A0D4
1072:  Symbol Name 'memset', Symbol value=0x00000000 (addr=0x03101248)
1072: elfLookupSymVal: Found symbol 'memset', value=0x30000CBC
1072:  Writing 0x30000CBC to memory address 0x031015E4.
	Value before/after=0x03100DF6/ 1072: 0x30000CBC (using R_386_JMP_SLOT)
1072: Found relocation entry type 0x07 with offset 0x031015E8, dynamic symbol table entry 0x0E
1072:  Getting symbol entry number from 0x0132A0E4
1072:  Symbol Name 'getcwd', Symbol value=0x00000000 (addr=0x03101258)
1072: elfLookupSymVal: Found symbol 'getcwd', value=0x300007E4
1072:  Writing 0x300007E4 to memory address 0x031015E8.
	Value before/after=0x03100E06/ 1072: 0x300007E4 (using R_386_JMP_SLOT)
1072: Found relocation entry type 0x07 with offset 0x031015EC, dynamic symbol table entry 0x0F
1072:  Getting symbol entry number from 0x0132A0F4
1072:  Symbol Name 'strlen', Symbol value=0x00000000 (addr=0x03101268)
1072: elfLookupSymVal: Found symbol 'strlen', value=0x30001254
1072:  Writing 0x30001254 to memory address 0x031015EC.
	Value before/after=0x03100E16/ 1072: 0x30001254 (using R_386_JMP_SLOT)
1072: Found relocation entry type 0x07 with offset 0x031015F0, dynamic symbol table entry 0x10
1072:  Getting symbol entry number from 0x0132A104
1072:  Symbol Name 'free', Symbol value=0x00000000 (addr=0x03101278)
1072: elfLookupSymVal: Found symbol 'free', value=0x30000ABF
1072:  Writing 0x30000ABF to memory address 0x031015F0.
	Value before/after=0x03100E26/ 1072: 0x30000ABF (using R_386_JMP_SLOT)
1072: Found relocation entry type 0x00 with offset 0x00000000, dynamic symbol table entry 0x00
1072: Return point for process is 0x01015A3D
1072: Created Process @ 0x012EE000
1072: 	addTaskToTaskList: Found open slot @ 0x012A3090
1072: 	moved new task 0x0022 there
1072: *		addToQ: Adding task 0x0022 to queue Runnable
1072: Submitted process 0x0022 to be run
1073: 
****************************** SCHEDULER *******************************
1073: *Found task 0x0020 to take off CPU @0x0020:0xBADBADBA (exited=0).
1073: *	changeTaskQueue: Changing task state for 0x0020 from Running to Runnable
1073: *		removeFromQ: Removing task 0x0020 (0x012A3000) from queue Running
1073: *		addToQ: Adding task 0x0020 to queue Runnable
1073: *Finding task to run
1073: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1073: 01073:  (idle task)1073: 
1073: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1073: 211073: 
1073: *	findTaskToRun: task 0x0020, priority=16, old ticks=0, new ticks=1073: 51073: 
1073: *Found task 0x0022 move to CPU
1073: *	Save: 1073: CR3=0x001A8000,1073: CS=0x0020,1073: EIP=0x01011462,1073: SS=0x0018,1073: DS=0x0010,1073: EAX=0x012EE000,1073: DBX=0x00E00008,1073: ECX=0x00000010,1073: EDX=0x000003F8,1073: ESI=0xFEE00000,1073: EDI=0x00000000,1073: ESP=0x00FFD0BC,1073: EBP=0x00FFD0C8,1073: FLAGS=0x00200206
1073: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1073: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1073: *		addToQ: Adding task 0x0022 to queue Running
1073: *	Load: 1073: CR3=0x01148000,1073: CS=0x003B,1073: EIP=0x01015997,1073: SS=0x0043,1073: DS=0x0033,1073: EAX=0x00000000,1073: DBX=0x00000000,1073: ECX=0x00000000,1073: EDX=0x00000000,1073: ESI=0x00000000,1073: EDI=0x00000000,1073: ESP=0x01306000,1073: EBP=0x00000000,1073: FLAGS=0x00200246
1073: *Restarting CPU with new process (0x0022) @ 0x003B:0x01015997
1073: *Total running ticks: 0x0020: 284, 0x0022: 0
1073: *Scheduler calls=0, task switchs=1, ticks=0x00000431
1073: **************************************************************************
1073: processStart: Checking for start handlers
1074: processStart: Executing startHandler 0 @ 0x30003834
***libc_init called
***heapBase = 0x00000000 before
1074: 	findTaskByCR3: Finding task with CR3=0x01148000
1074: 	findTaskByCR3: Found task @ 0x012A3090
1074: Paging exception START: for address 0x30003848 (CR3=0x01148000) in /kshell
1074: 	Process=/kshell
	Checking for uninitialized mmap page, pt entry=0x01333025
1074: 		Not mmap page
1074: 	Checking for CoW bss/data in libraries
1074: 		Checking for CoW in library @ 0x0132C000, bss=0x30003844/0x00000038, data=0x30003720/0x00000028, tdata=0x00000000/0x00000000
1074: 		The page with address 0x30003848 is a CoW .bss page from library /libc.so
1074: 	Replaced CoW page 0x30003000 (0x01333000) with writable page 0x0133E000 (contents copied)
1074: _syscall: Called with CallNum=0x00000000, invalid call number. (cr3=0x01148000)
1074: 	findTaskByCR3: Finding task with CR3=0x01148000
1074: 	findTaskByCR3: Found task @ 0x012A3090
1074: processRegExit: Registered exitHandler 0 @ 0x300005FD
***libc_init completed
malloc(0x00000400)
libc_malloc: needed=0x00033000
1074: mallocI: Entered ...
1074: 	findTaskByCR3: Finding task with CR3=0x01148000
1074: 	findTaskByCR3: Found task @ 0x012A3090
1074: mallocI: Found process 0x0022
1074: mallocI: Allocated 0x00033000 bytes @ 0x0133F000
1074: mallocI: returning 0x70000000
1074: _syscall: malloc(0x00033000) returned 0x70000000 (cr3=0x01148000)
libc_malloc: heaEnd=0x00000000
libc_malloc: Req 0x00033000 bytes, ret was 0x70000000, heapEnd=0x70033000
libc_malloc: Initialized heapCurr and heapBase to 0x70000000
libc_malloc:creating heap rec @ 0x70000000
libc_malloc: heapCurr=0x70000000, sizeof(heaprec_t)=0x00000010
malloc: returning 0x70000010
malloc(0x00000008)
libc_malloc: needed=0x00000000
libc_malloc:creating heap rec @ 0x70000410
libc_malloc: heapCurr=0x70000410, sizeof(heaprec_t)=0x00000010
malloc: returning 0x70000420
malloc(0x00000004)
libc_malloc: needed=0x00000000
libc_malloc:creating heap rec @ 0x70000428
libc_malloc: heapCurr=0x70000428, sizeof(heaprec_t)=0x00000010
malloc: returning 0x70000438
malloc(0x00000080)
libc_malloc: needed=0x00000000
libc_malloc:creating heap rec @ 0x7000043C
libc_malloc: heapCurr=0x7000043C, sizeof(heaprec_t)=0x00000010
malloc: returning 0x7000044C
1075: 	findTaskByCR3: Finding task with CR3=0x01148000
1075: 	findTaskByCR3: Found task @ 0x012A3090
1075: _sysCall: createProcess(0x70000420,0x00000001,0x70000438,0x012EE000,false)
1075: Creating user process for /kshell
1075: createProcess: Mallocing process_t
1075: createProcess: Malloc'd 0x01372000 for process
1075: createTask: calling getTaskSlot
1075: getAvailableTask: Found free slot for task (0x0023)
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Size adjusted from 72 to 4096
1075: aMTP: Used allocPagesAndMap to allocate 0x00000048 bytes at 0x01373000
1075: getAvailableTask: Marking TSS 35 used
1075: getAvailableTask: Using task 35 @ 0x01373000, set TSS to 0x01374000
1075: createTask: Set task CR3 to 1k page directory @ 0x01157000
1075: Map K to U: p=0x01000000 (v=0x01000000) to p=0x0108BEDC (v=0x0108BEDC)
1075: Map K to U: p=0xC1000000 (v=0x01000000) to p=0xC108BEDC (v=0x0108BEDC)
1075: Map OS loader into user process: 0x00001000 to 0x01000000 r/o
1075: Mapping sysEnter_Vector page (0x00130000) to process, r/o
1075: Mapping our CR3 into program, v=0x001A8000, p=0x001A8000
1075: createTask: Mapping kernel into task
1075: createTask: ESP0 for task allocated at 0x012BE000
1075: createTask: ESP0 set to 0x012D3000
1075: createTask: Mapping kernel ESP0 v=0x01261000/p=0x01261000 into process, CR3=0x01157000, 0x16 pages
1075: createTask: Mapping kernel ESP0 v=0xC1261000/p=0x01261000 into process, CR3=0x01157000, 0x16 pages
1075: createTask: ESP for task allocated at 0x01375000
1075: createTask: ESP set to 0x0138A000
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x0138B000
1075: Allocated task ESP1 for syscall at 0x0138B000 (0x1000 bytes)
1075: createTask: ESP1 set to 0x0138AF00
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Used allocPagesAndMap to allocate 0x00001000 bytes at 0x0138C000
1075: createProcess: Malloc'd 0x0138C000 for process->path
1075: process->path (0x0138C000)=/kshell
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Size adjusted from 12 to 4096
1075: aMTP: Used allocPagesAndMap to allocate 0x0000000C bytes at 0x0138E000
1075: Mapping the process struct into the process, v=0xF000F000, p=0x01372000
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Size adjusted from 7264 to 8192
1075: aMTP: Used allocPagesAndMap to allocate 0x00001C60 bytes at 0x01390000
1075: alloc'd elfLoadPages @ 0x01392000
1075: Added elfInfo to kLoadedElfInfo list
1075: findFreeMallocPointer: Scanning for a free memory pointer
1075: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1075: aMTP: Size adjusted from 7 to 4096
1075: aMTP: Used allocPagesAndMap to allocate 0x00000007 bytes at 0x01393000
1075: Opening image file /kshell
1075: fopen returned 1182436
1080: ELF file type 2, machine type 3
1080: Section Name String Table number = 0x0018
1080: section header record count= 25
1080: e_shentsize=40, oursize=40
1080: seeking to 0x00003D94 ...1080: reading SHOFF: 0x000003E8 bytes (s=0x00000028*n=0x00000019), to 0x01390084
1084: 
****************************** SCHEDULER *******************************
1084: *Found task 0x0022 to take off CPU @0x003B:0x01015997 (exited=0).
1084: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1084: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1084: *		addToQ: Adding task 0x0022 to queue Runnable
1084: *Finding task to run
1084: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1084: 01084:  (idle task)1084: 
1084: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1084: 211084: 
1084: *	findTaskToRun: task 0x0020, priority=16, old ticks=5, new ticks=1084: 101084: 
1084: *No new task to run, continuing with the current task
1084: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1084: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1084: *		addToQ: Adding task 0x0022 to queue Running
1084: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1084: *Scheduler calls=1, task switchs=1, ticks=0x0000043C
1084: **************************************************************************
1095: 
****************************** SCHEDULER *******************************
1095: *Found task 0x0022 to take off CPU @0x003B:0x01015997 (exited=0).
1095: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1095: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1095: *		addToQ: Adding task 0x0022 to queue Runnable
1095: *Finding task to run
1095: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1095: 01095:  (idle task)1095: 
1095: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1095: 211095: 
1095: *	findTaskToRun: task 0x0020, priority=16, old ticks=10, new ticks=1095: 151095: 
1095: *No new task to run, continuing with the current task
1095: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1095: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1095: *		addToQ: Adding task 0x0022 to queue Running
1095: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1095: *Scheduler calls=2, task switchs=1, ticks=0x00000447
1095: **************************************************************************
1097: seeking to 0x00000034 ...1097: reading PHOFF: 0x000000C0 bytes (s=0x00000020*n=0x00000006), to 0x01390854
1102: Section 0 file offset is program header address (0x00000034),skipping load
1102: Setting main load address to 0x03101164
1102: Section 1, load fsize=0x0013,msize=0x0013 to 0x03101164, seeking to 0x00002164 ...
1102: putDataOnPages: Bytes left to go: 0x00000013
1102: putDataOnPages: Non-aligned or not full page write, writing 0x00000013 bytes to 0x03101164
1102: putDataOnPages: V=0x03101164 not mapped, mapped to P=0x01394164 (CR3=0x01157000)
1102: putDataOnPages: V=0x03101164 also mapped to KP=0x01394164 (CR3=0x001A8000)
1102: addElfLoadInfo(0x01390000, 0x01394000, 0x03101000, 0x00000000)
1106: 
****************************** SCHEDULER *******************************
1106: *Found task 0x0022 to take off CPU @0x003B:0x01015997 (exited=0).
1106: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1106: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1106: *		addToQ: Adding task 0x0022 to queue Runnable
1106: *Finding task to run
1106: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1106: 01106:  (idle task)1106: 
1106: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1106: 211106: 
1106: *	findTaskToRun: task 0x0020, priority=16, old ticks=15, new ticks=1106: 201106: 
1106: *No new task to run, continuing with the current task
1106: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1106: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1106: *		addToQ: Adding task 0x0022 to queue Running
1106: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1106: *Scheduler calls=3, task switchs=1, ticks=0x00000452
1106: **************************************************************************
1107: putDataOnPages: Reading 19 bytes to 0x03101164 (0x01394164)
1107: putDataOnPages: Page written, 0x00000000 bytes left to go
1107: Section 1 loaded 0x00000013 bytes at 0x03101164
1107: Section 2, load fsize=0x25F4,msize=0x1223C to 0x030FF000, seeking to 0x00000000 ...
1107: putDataOnPages: Bytes left to go: 0x000025F4
1107: putDataOnPages: Full page write, writing 1 page to 0x030FF000
1107: putDataOnPages: V=0x030FF000 not mapped, mapped to P=0x01395000 (CR3=0x01157000)
1107: putDataOnPages: V=0x030FF000 also mapped to KP=0x01395000 (CR3=0x001A8000)
1107: addElfLoadInfo(0x01390000, 0x01395000, 0x030FF000, 0x00000001)
1112: putDataOnPages: Reading 4096 bytes to 0x030FF000 (0x01395000)
1112: putDataOnPages: Page written, 0x000015F4 bytes left to go
1112: putDataOnPages: Bytes left to go: 0x000015F4
1112: putDataOnPages: Full page write, writing 1 page to 0x03100000
1112: putDataOnPages: V=0x03100000 not mapped, mapped to P=0x01396000 (CR3=0x01157000)
1112: putDataOnPages: V=0x03100000 also mapped to KP=0x01396000 (CR3=0x001A8000)
1112: addElfLoadInfo(0x01390000, 0x01396000, 0x03100000, 0x00000001)
1117: 
****************************** SCHEDULER *******************************
1117: *Found task 0x0022 to take off CPU @0x003B:0x01015997 (exited=0).
1117: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1117: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1117: *		addToQ: Adding task 0x0022 to queue Runnable
1117: *Finding task to run
1117: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1117: 01117:  (idle task)1117: 
1117: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1117: 211117: 
1117: *	findTaskToRun: task 0x0020, priority=16, old ticks=20, new ticks=1117: 251117: 
1117: *Found task 0x0020 move to CPU
1117: *	Save: 1117: CR3=0x001A8000,1117: CS=0x0008,1117: EIP=0x01011462,1117: SS=0x0018,1117: DS=0x0033,1117: EAX=0x00000005,1117: DBX=0x00000001,1117: ECX=0x0000000A,1117: EDX=0x00000000,1117: ESI=0x00000020,1117: EDI=0x00000000,1117: ESP=0x01275C80,1117: EBP=0x01275C8C,1117: FLAGS=0x00200202
1117: *	changeTaskQueue: Changing task state for 0x0020 from Runnable to Running
1117: *		removeFromQ: Removing task 0x0020 (0x012A3000) from queue Runnable
1117: *		addToQ: Adding task 0x0020 to queue Running
1117: *	Load: 1117: CR3=0x001A8000,1117: CS=0x0020,1117: EIP=0x01011462,1117: SS=0x0018,1117: DS=0x0010,1117: EAX=0x012EE000,1117: DBX=0x00E00008,1117: ECX=0x00000010,1117: EDX=0x000003F8,1117: ESI=0xFEE00000,1117: EDI=0x00000000,1117: ESP=0x00FFD0BC,1117: EBP=0x00FFD0C8,1117: FLAGS=0x00200206
1117: *Restarting CPU with new process (0x0020) @ 0x0020:0x01011462
1117: *Total running ticks: 0x0022: 44, 0x0020: 284
1117: *Scheduler calls=4, task switchs=2, ticks=0x0000045D
1117: **************************************************************************
1120: sys_sigaction(0x00000004,0x00000000,0x00000022,0x001A8000)
1120: 	findTaskByCR3: Finding task with CR3=0x001A8000
1120: 	findTaskByCR3: Found task @ 0x012A3000
1121: 
****************************** SCHEDULER *******************************
1121: *Found task 0x0020 to take off CPU @0x0020:0x01011462 (exited=0).
1121: *sys_sigaction: sigind=0x00000004
1121: *	changeTaskQueue: Changing task state for 0x0020 from Running to Uninterruptable Sleep
1121: *		removeFromQ: Removing task 0x0020 (0x012A3000) from queue Running
1121: *		addToQ: Adding task 0x0020 to queue Uninterruptable Sleep
1121: *Finding task to run
1121: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1121: 01121:  (idle task)1121: 
1121: *	findTaskToRun: task 0x0022, priority=0, old ticks=21, new ticks=1121: 421121: 
1121: *Found task 0x0022 move to CPU
1121: *	Save: 1121: CR3=0x001A8000,1121: CS=0x0020,1121: EIP=0x0101794B,1121: SS=0x0018,1121: DS=0x0010,1121: EAX=0x001A8000,1121: DBX=0x001A8000,1121: ECX=0x00000010,1121: EDX=0x00000022,1121: ESI=0x00000020,1121: EDI=0x00000000,1121: ESP=0x00FFD074,1121: EBP=0x00FFD098,1121: FLAGS=0x00200216
1121: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1121: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1121: *		addToQ: Adding task 0x0022 to queue Running
1121: *	Load: 1121: CR3=0x001A8000,1121: CS=0x0008,1121: EIP=0x01011462,1121: SS=0x0018,1121: DS=0x0033,1121: EAX=0x00000005,1121: DBX=0x00000001,1121: ECX=0x0000000A,1121: EDX=0x00000000,1121: ESI=0x00000020,1121: EDI=0x00000000,1121: ESP=0x01275C80,1121: EBP=0x01275C8C,1121: FLAGS=0x00200202
1121: *Restarting CPU with new process (0x0022) @ 0x0008:0x01011462
1121: *Total running ticks: 0x0020: 288, 0x0022: 44
1121: *Scheduler calls=5, task switchs=3, ticks=0x00000461
1121: **************************************************************************
1122: putDataOnPages: Reading 4096 bytes to 0x03100000 (0x01396000)
1122: putDataOnPages: Page written, 0x000005F4 bytes left to go
1122: putDataOnPages: Bytes left to go: 0x000005F4
1122: putDataOnPages: Non-aligned or not full page write, writing 0x000005F4 bytes to 0x03101000
1122: putDataOnPages: V=0x03101000 already mapped to P=0x01394000
1132: 
****************************** SCHEDULER *******************************
1132: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1132: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1132: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1132: *		addToQ: Adding task 0x0022 to queue Runnable
1132: *Finding task to run
1132: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1132: 01132:  (idle task)1132: 
1132: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1132: 211132: 
1132: *No new task to run, continuing with the current task
1132: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1132: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1132: *		addToQ: Adding task 0x0022 to queue Running
1132: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1132: *Scheduler calls=6, task switchs=3, ticks=0x0000046C
1132: **************************************************************************
1133: putDataOnPages: Reading 1524 bytes to 0x03101000 (0x01394000)
1133: putDataOnPages: Page written, 0x00000000 bytes left to go
1133: Section 2 loaded 0x000025F4 bytes at 0x030FF000
1133: Section 2 has uninitialized data (msize>fsize), zeroing 0x0000FC48 bytes at 0x031015F4
1133: putDataOnPages: Bytes left to go: 0x0000FC48
1133: putDataOnPages: Non-aligned or not full page write, writing 0x00000A0C bytes to 0x031015F4
1133: putDataOnPages: V=0x031015F4 already mapped to P=0x013945F4
1133: putDataOnPages: Zeroed 2572 bytes at 0x031015F4 (0x013945F4)
1133: putDataOnPages: Page written, 0x0000F23C bytes left to go
1133: putDataOnPages: Bytes left to go: 0x0000F23C
1133: putDataOnPages: Full page write, writing 1 page to 0x03102000
1133: putDataOnPages: V=0x03102000 not mapped, mapped to P=0x01397000 (CR3=0x01157000)
1133: putDataOnPages: V=0x03102000 also mapped to KP=0x01397000 (CR3=0x001A8000)
1133: addElfLoadInfo(0x01390000, 0x01397000, 0x03102000, 0x00000001)
1133: putDataOnPages: Zeroed 4096 bytes at 0x03102000 (0x01397000)
1133: putDataOnPages: Page written, 0x0000E23C bytes left to go
1133: putDataOnPages: Bytes left to go: 0x0000E23C
1133: putDataOnPages: Full page write, writing 1 page to 0x03103000
1133: putDataOnPages: V=0x03103000 not mapped, mapped to P=0x01398000 (CR3=0x01157000)
1133: putDataOnPages: V=0x03103000 also mapped to KP=0x01398000 (CR3=0x001A8000)
1133: addElfLoadInfo(0x01390000, 0x01398000, 0x03103000, 0x00000001)
1133: putDataOnPages: Zeroed 4096 bytes at 0x03103000 (0x01398000)
1133: putDataOnPages: Page written, 0x0000D23C bytes left to go
1133: putDataOnPages: Bytes left to go: 0x0000D23C
1134: putDataOnPages: Full page write, writing 1 page to 0x03104000
1134: putDataOnPages: V=0x03104000 not mapped, mapped to P=0x01399000 (CR3=0x01157000)
1134: putDataOnPages: V=0x03104000 also mapped to KP=0x01399000 (CR3=0x001A8000)
1134: addElfLoadInfo(0x01390000, 0x01399000, 0x03104000, 0x00000001)
1134: putDataOnPages: Zeroed 4096 bytes at 0x03104000 (0x01399000)
1134: putDataOnPages: Page written, 0x0000C23C bytes left to go
1134: putDataOnPages: Bytes left to go: 0x0000C23C
1134: putDataOnPages: Full page write, writing 1 page to 0x03105000
1134: putDataOnPages: V=0x03105000 not mapped, mapped to P=0x0139A000 (CR3=0x01157000)
1134: putDataOnPages: V=0x03105000 also mapped to KP=0x0139A000 (CR3=0x001A8000)
1134: addElfLoadInfo(0x01390000, 0x0139A000, 0x03105000, 0x00000001)
1134: putDataOnPages: Zeroed 4096 bytes at 0x03105000 (0x0139A000)
1134: putDataOnPages: Page written, 0x0000B23C bytes left to go
1134: putDataOnPages: Bytes left to go: 0x0000B23C
1134: putDataOnPages: Full page write, writing 1 page to 0x03106000
1134: putDataOnPages: V=0x03106000 not mapped, mapped to P=0x0139B000 (CR3=0x01157000)
1134: putDataOnPages: V=0x03106000 also mapped to KP=0x0139B000 (CR3=0x001A8000)
1134: addElfLoadInfo(0x01390000, 0x0139B000, 0x03106000, 0x00000001)
1134: putDataOnPages: Zeroed 4096 bytes at 0x03106000 (0x0139B000)
1134: putDataOnPages: Page written, 0x0000A23C bytes left to go
1134: putDataOnPages: Bytes left to go: 0x0000A23C
1134: putDataOnPages: Full page write, writing 1 page to 0x03107000
1134: putDataOnPages: V=0x03107000 not mapped, mapped to P=0x0139C000 (CR3=0x01157000)
1134: putDataOnPages: V=0x03107000 also mapped to KP=0x0139C000 (CR3=0x001A8000)
1134: addElfLoadInfo(0x01390000, 0x0139C000, 0x03107000, 0x00000001)
1134: putDataOnPages: Zeroed 4096 bytes at 0x03107000 (0x0139C000)
1134: putDataOnPages: Page written, 0x0000923C bytes left to go
1134: putDataOnPages: Bytes left to go: 0x0000923C
1134: putDataOnPages: Full page write, writing 1 page to 0x03108000
1134: putDataOnPages: V=0x03108000 not mapped, mapped to P=0x0139D000 (CR3=0x01157000)
1134: putDataOnPages: V=0x03108000 also mapped to KP=0x0139D000 (CR3=0x001A8000)
1134: addElfLoadInfo(0x01390000, 0x0139D000, 0x03108000, 0x00000001)
1134: putDataOnPages: Zeroed 4096 bytes at 0x03108000 (0x0139D000)
1135: putDataOnPages: Page written, 0x0000823C bytes left to go
1135: putDataOnPages: Bytes left to go: 0x0000823C
1135: putDataOnPages: Full page write, writing 1 page to 0x03109000
1135: putDataOnPages: V=0x03109000 not mapped, mapped to P=0x0139E000 (CR3=0x01157000)
1135: putDataOnPages: V=0x03109000 also mapped to KP=0x0139E000 (CR3=0x001A8000)
1135: addElfLoadInfo(0x01390000, 0x0139E000, 0x03109000, 0x00000001)
1135: putDataOnPages: Zeroed 4096 bytes at 0x03109000 (0x0139E000)
1135: putDataOnPages: Page written, 0x0000723C bytes left to go
1135: putDataOnPages: Bytes left to go: 0x0000723C
1135: putDataOnPages: Full page write, writing 1 page to 0x0310A000
1135: putDataOnPages: V=0x0310A000 not mapped, mapped to P=0x0139F000 (CR3=0x01157000)
1135: putDataOnPages: V=0x0310A000 also mapped to KP=0x0139F000 (CR3=0x001A8000)
1135: addElfLoadInfo(0x01390000, 0x0139F000, 0x0310A000, 0x00000001)
1135: putDataOnPages: Zeroed 4096 bytes at 0x0310A000 (0x0139F000)
1135: putDataOnPages: Page written, 0x0000623C bytes left to go
1135: putDataOnPages: Bytes left to go: 0x0000623C
1135: putDataOnPages: Full page write, writing 1 page to 0x0310B000
1135: putDataOnPages: V=0x0310B000 not mapped, mapped to P=0x013A0000 (CR3=0x01157000)
1135: putDataOnPages: V=0x0310B000 also mapped to KP=0x013A0000 (CR3=0x001A8000)
1135: addElfLoadInfo(0x01390000, 0x013A0000, 0x0310B000, 0x00000001)
1135: putDataOnPages: Zeroed 4096 bytes at 0x0310B000 (0x013A0000)
1135: putDataOnPages: Page written, 0x0000523C bytes left to go
1135: putDataOnPages: Bytes left to go: 0x0000523C
1135: putDataOnPages: Full page write, writing 1 page to 0x0310C000
1135: putDataOnPages: V=0x0310C000 not mapped, mapped to P=0x013A1000 (CR3=0x01157000)
1135: putDataOnPages: V=0x0310C000 also mapped to KP=0x013A1000 (CR3=0x001A8000)
1135: addElfLoadInfo(0x01390000, 0x013A1000, 0x0310C000, 0x00000001)
1135: putDataOnPages: Zeroed 4096 bytes at 0x0310C000 (0x013A1000)
1135: putDataOnPages: Page written, 0x0000423C bytes left to go
1135: putDataOnPages: Bytes left to go: 0x0000423C
1135: putDataOnPages: Full page write, writing 1 page to 0x0310D000
1135: putDataOnPages: V=0x0310D000 not mapped, mapped to P=0x013A2000 (CR3=0x01157000)
1135: putDataOnPages: V=0x0310D000 also mapped to KP=0x013A2000 (CR3=0x001A8000)
1136: addElfLoadInfo(0x01390000, 0x013A2000, 0x0310D000, 0x00000001)
1136: putDataOnPages: Zeroed 4096 bytes at 0x0310D000 (0x013A2000)
1136: putDataOnPages: Page written, 0x0000323C bytes left to go
1136: putDataOnPages: Bytes left to go: 0x0000323C
1136: putDataOnPages: Full page write, writing 1 page to 0x0310E000
1136: putDataOnPages: V=0x0310E000 not mapped, mapped to P=0x013A3000 (CR3=0x01157000)
1136: putDataOnPages: V=0x0310E000 also mapped to KP=0x013A3000 (CR3=0x001A8000)
1136: addElfLoadInfo(0x01390000, 0x013A3000, 0x0310E000, 0x00000001)
1136: putDataOnPages: Zeroed 4096 bytes at 0x0310E000 (0x013A3000)
1136: putDataOnPages: Page written, 0x0000223C bytes left to go
1136: putDataOnPages: Bytes left to go: 0x0000223C
1136: putDataOnPages: Full page write, writing 1 page to 0x0310F000
1136: putDataOnPages: V=0x0310F000 not mapped, mapped to P=0x013A4000 (CR3=0x01157000)
1136: putDataOnPages: V=0x0310F000 also mapped to KP=0x013A4000 (CR3=0x001A8000)
1136: addElfLoadInfo(0x01390000, 0x013A4000, 0x0310F000, 0x00000001)
1136: putDataOnPages: Zeroed 4096 bytes at 0x0310F000 (0x013A4000)
1136: putDataOnPages: Page written, 0x0000123C bytes left to go
1136: putDataOnPages: Bytes left to go: 0x0000123C
1136: putDataOnPages: Full page write, writing 1 page to 0x03110000
1136: putDataOnPages: V=0x03110000 not mapped, mapped to P=0x013A5000 (CR3=0x01157000)
1136: putDataOnPages: V=0x03110000 also mapped to KP=0x013A5000 (CR3=0x001A8000)
1136: addElfLoadInfo(0x01390000, 0x013A5000, 0x03110000, 0x00000001)
1136: putDataOnPages: Zeroed 4096 bytes at 0x03110000 (0x013A5000)
1136: putDataOnPages: Page written, 0x0000023C bytes left to go
1136: putDataOnPages: Bytes left to go: 0x0000023C
1136: putDataOnPages: Non-aligned or not full page write, writing 0x0000023C bytes to 0x03111000
1136: putDataOnPages: V=0x03111000 not mapped, mapped to P=0x013A6000 (CR3=0x01157000)
1136: putDataOnPages: V=0x03111000 also mapped to KP=0x013A6000 (CR3=0x001A8000)
1136: addElfLoadInfo(0x01390000, 0x013A6000, 0x03111000, 0x00000000)
1136: putDataOnPages: Zeroed 572 bytes at 0x03111000 (0x013A6000)
1136: putDataOnPages: Page written, 0x00000000 bytes left to go
1136: Section 3, load fsize=0x0090,msize=0x0090 to 0x03101518, seeking to 0x00002518 ...
1137: putDataOnPages: Bytes left to go: 0x00000090
1137: putDataOnPages: Non-aligned or not full page write, writing 0x00000090 bytes to 0x03101518
1137: putDataOnPages: V=0x03101518 already mapped to P=0x01394518
1142: putDataOnPages: Reading 144 bytes to 0x03101518 (0x01394518)
1142: putDataOnPages: Page written, 0x00000000 bytes left to go
1142: Section 3 loaded 0x00000090 bytes at 0x03101518
1142: Section 4, load fsize=0x0084,msize=0x0084 to 0x031013BC, seeking to 0x000023BC ...
1142: putDataOnPages: Bytes left to go: 0x00000084
1142: putDataOnPages: Non-aligned or not full page write, writing 0x00000084 bytes to 0x031013BC
1142: putDataOnPages: V=0x031013BC already mapped to P=0x013943BC
1143: 
****************************** SCHEDULER *******************************
1143: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1143: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1143: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1143: *		addToQ: Adding task 0x0022 to queue Runnable
1143: *Finding task to run
1143: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1143: 01143:  (idle task)1143: 
1143: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1143: 211143: 
1143: *No new task to run, continuing with the current task
1143: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1143: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1143: *		addToQ: Adding task 0x0022 to queue Running
1143: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1143: *Scheduler calls=7, task switchs=3, ticks=0x00000477
1143: **************************************************************************
1152: putDataOnPages: Reading 132 bytes to 0x031013BC (0x013943BC)
1152: putDataOnPages: Page written, 0x00000000 bytes left to go
1152: Section 4 loaded 0x00000084 bytes at 0x031013BC
1152: Section 5 @ 0x013908F4 : file/mem sizes=0x0/0x0, not loading
1152: LoadElf: done loading elf sections
1152: Scanning section header entries (25)
1152: findFreeMallocPointer: Scanning for a free memory pointer
1152: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1152: aMTP: Size adjusted from 4249 to 8192
1152: aMTP: Used allocPagesAndMap to allocate 0x00001099 bytes at 0x013A7000
1152: Mapping string table @ 0x013A7000 (0xC13A7000) for 0x00001000 bytes into kernel
1154: 
****************************** SCHEDULER *******************************
1154: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1154: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1154: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1154: *		addToQ: Adding task 0x0022 to queue Runnable
1154: *Finding task to run
1154: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1154: 01154:  (idle task)1154: 
1154: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1154: 211154: 
1154: *No new task to run, continuing with the current task
1154: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1154: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1154: *		addToQ: Adding task 0x0022 to queue Running
1154: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1154: *Scheduler calls=8, task switchs=3, ticks=0x00000482
1154: **************************************************************************
1157: Reading string table to 0x013A7000, 0x00000099 bytes, result=0x00000099
1157: findFreeMallocPointer: Scanning for a free memory pointer
1157: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1157: aMTP: Size adjusted from 4605 to 8192
1157: aMTP: Used allocPagesAndMap to allocate 0x000011FD bytes at 0x013A9000
1157: Mapping string table @ 0x013A9000 (0xC13A9000) for 0x00001000 bytes into kernel
1165: 
****************************** SCHEDULER *******************************
1165: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1165: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1165: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1165: *		addToQ: Adding task 0x0022 to queue Runnable
1165: *Finding task to run
1165: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1165: 01165:  (idle task)1165: 
1165: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1165: 211165: 
1165: *No new task to run, continuing with the current task
1165: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1165: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1165: *		addToQ: Adding task 0x0022 to queue Running
1165: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1165: *Scheduler calls=9, task switchs=3, ticks=0x0000048D
1165: **************************************************************************
1168: Reading string table to 0x013A9000, 0x000001FD bytes, result=0x000001FD
1168: findFreeMallocPointer: Scanning for a free memory pointer
1168: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1168: aMTP: Size adjusted from 4302 to 8192
1168: aMTP: Used allocPagesAndMap to allocate 0x000010CE bytes at 0x013AB000
1168: Mapping string table @ 0x013AB000 (0xC13AB000) for 0x00001000 bytes into kernel
1173: Reading string table to 0x013AB000, 0x000000CE bytes, result=0x000000CE
1173: Found 3 string tables, index of section header table=0x00000018
1173: Found string (STRTAB) table 0x0007 named .dynstr, read to address 0x013A7000, size=0x00000099
1173: Dynamic string table entry = 0x0007
1173: Found string (STRTAB) table 0x0017 named .strtab, read to address 0x013A9000, size=0x000001FD
1173: General string table entry = 0x0017
1173: Found string (STRTAB) table 0x0018 named .shstrtab, read to address 0x013AB000, size=0x000000CE
1173: Scanning section header table, 25 records
1173: Found () section (type=0x00000000)address 0x00000000, size 0x00000000.
1173: Found (.text) (NOBITS) section (type=0x00000001)address 0x03100000, size 0x00000D17.
1173: Found (.plt) (NOBITS) section (type=0x00000001)address 0x03100D20, size 0x00000110.
1173: Found (.rodata) (NOBITS) section (type=0x00000001)address 0x03100E30, size 0x00000130.
1173: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x03100F60, size 0x00000204.
1173: Found (.interp) (NOBITS) section (type=0x00000001)address 0x03101164, size 0x00000013.
1174: Found .dynsym (DYNSYM) section address 0x03101178.
1174: Found (STRTAB), already processed string tables, skipping
1174: Found .hash (HASH) section address 0x03101324.
1174: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x0310137C, size 0x00000040.
1174: Found (.eh_frame_hdr) (NOBITS) section (type=0x00000001)address 0x031013BC, size 0x00000084.
1174: findFreeMallocPointer: Scanning for a free memory pointer
1174: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1174: aMTP: Size adjusted from 4224 to 8192
1174: aMTP: Used allocPagesAndMap to allocate 0x00001080 bytes at 0x013AD000
1176: 
****************************** SCHEDULER *******************************
1176: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1176: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1176: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1176: *		addToQ: Adding task 0x0022 to queue Runnable
1176: *Finding task to run
1176: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1176: 01176:  (idle task)1176: 
1176: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1176: 211176: 
1176: *No new task to run, continuing with the current task
1176: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1176: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1176: *		addToQ: Adding task 0x0022 to queue Running
1176: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1176: *Scheduler calls=10, task switchs=3, ticks=0x00000498
1176: **************************************************************************
1179: Found .rel.dyn (REL) section, read 128 bytes to 0x013AD000.
1179: Found data segment, address 0x031014C0, size 0x00000056.
1179: Found section .dynamic (DYNAMIC) table address 0x03101518.
1179: Found (.got.plt) (NOBITS) section (type=0x00000001)address 0x031015A8, size 0x0000004C.
1179: Found bss segment, address 0x03101600, size 0x0000FC3C.
1179: Found (.debug_info) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000007F2.
1179: Found (.debug_abbrev) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000001CD.
1179: Found (.debug_aranges) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000020.
1179: Found (.debug_line) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000002CD.
1179: Found (.debug_str) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000386.
1179: Found (.comment) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000011.
1179: findFreeMallocPointer: Scanning for a free memory pointer
1179: findFreeMallocPointer: Found memory pointer on page 0 (0x0125D000)
1179: aMTP: Size adjusted from 5264 to 8192
1179: aMTP: Used allocPagesAndMap to allocate 0x00001490 bytes at 0x013AF000
1187: 
****************************** SCHEDULER *******************************
1187: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1187: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1187: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1187: *		addToQ: Adding task 0x0022 to queue Runnable
1187: *Finding task to run
1187: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1187: 01187:  (idle task)1187: 
1187: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1187: 211187: 
1187: *No new task to run, continuing with the current task
1187: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1187: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1187: *		addToQ: Adding task 0x0022 to queue Running
1187: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1187: *Scheduler calls=11, task switchs=3, ticks=0x000004A3
1187: **************************************************************************
1194: Found symbol table (SYMTAB) using string table 0x17, read 1168 bytes to 0x013AF000
1194: Found (STRTAB), already processed string tables, skipping
1194: Found (STRTAB), already processed string tables, skipping
1194: Done processing the section header table
1194: Iterating the symbol table, 73 records
1194: Using string table 0x0017
1194: Name: , Value: 00000000, Size: 0000, B/T: 00/00, SecIdx: 0000
1194: Name: , Value: 03100000, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03100D20, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03100E30, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03100F60, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03101164, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03101178, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03101288, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03101324, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 0310137C, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 031013BC, Size: 0000, B/T: 00/03, SecIdx: 0000
1194: Name: , Value: 03101440, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 031014C0, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 03101518, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 031015A8, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 03101600, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/03, SecIdx: 0000
1195: Name: kshell.c, Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1195: Name: , Value: 00000000, Size: 0000, B/T: 00/04, SecIdx: 0000
1195: Name: _DYNAMIC, Value: 03101518, Size: 0000, B/T: 00/01, SecIdx: 0000
1195: Name: __GNU_EH_FRAME_HDR, Value: 031013BC, Size: 0000, B/T: 00/00, SecIdx: 0000
1195: Name: _GLOBAL_OFFSET_TABLE_, Value: 031015A8, Size: 0000, B/T: 00/01, SecIdx: 0000
1195: Name: strcpy, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1195: Name: paramsToArgv, Value: 03100619, Size: 008B, B/T: 01/02, SecIdx: 0000
1195: Name: waitpid, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1195: Name: print, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1195: Name: execInternalCommand, Value: 03100000, Size: 00AB, B/T: 01/02, SecIdx: 0000
1195: Name: delim, Value: 03101510, Size: 0006, B/T: 01/01, SecIdx: 0000
1196: Name: commandHistory, Value: 03101620, Size: FA00, B/T: 01/01, SecIdx: 0000
1196: Name: resetRow, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: gets, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: findCommand, Value: 03100254, Size: 0069, B/T: 01/02, SecIdx: 0000
1196: Name: memcpy, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: commandHistoryPtr, Value: 03101608, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: malloc, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: sleep, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: strtoul, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: sExecutingProgram, Value: 03111020, Size: 0200, B/T: 01/01, SecIdx: 0000
1196: Name: command_function_p, Value: 03111220, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: kShell, Value: 031009EF, Size: 0328, B/T: 01/02, SecIdx: 0000
1196: Name: buildargv, Value: 031002BD, Size: 028E, B/T: 01/02, SecIdx: 0000
1196: Name: parseParamsShell, Value: 031000AB, Size: 01A9, B/T: 01/02, SecIdx: 0000
1196: Name: heapEnd, Value: 03111224, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: exec, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: execp, Value: 031006E1, Size: 018F, B/T: 01/02, SecIdx: 0000
1196: Name: heapBase, Value: 03111228, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: heapCurr, Value: 0311122C, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: strncmp, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: freeArgV, Value: 031006A4, Size: 003D, B/T: 01/02, SecIdx: 0000
1196: Name: command_function, Value: 03111230, Size: 0004, B/T: 01/01, SecIdx: 0000
1196: Name: strtok, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: reprintCommand, Value: 031009C9, Size: 0026, B/T: 01/02, SecIdx: 0000
1196: Name: memset, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: pwd, Value: 0310092F, Size: 004E, B/T: 01/02, SecIdx: 0000
1196: Name: helpMe, Value: 0310054B, Size: 00CE, B/T: 01/02, SecIdx: 0000
1196: Name: getcwd, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1196: Name: exitCode, Value: 03101604, Size: 0004, B/T: 01/01, SecIdx: 0000
1197: Name: kExit, Value: 031008D7, Size: 0058, B/T: 01/02, SecIdx: 0000
1197: Name: commandHistoryMax, Value: 0310160C, Size: 0004, B/T: 01/01, SecIdx: 0000
1197: Name: saveCommand, Value: 0310097D, Size: 002E, B/T: 01/02, SecIdx: 0000
1197: Name: sKShellProgramName, Value: 03111234, Size: 0004, B/T: 01/01, SecIdx: 0000
1197: Name: libcTZ, Value: 03111238, Size: 0004, B/T: 01/01, SecIdx: 0000
1197: Name: prompt, Value: 031009AB, Size: 001E, B/T: 01/02, SecIdx: 0000
1197: Name: timeToExit, Value: 03101600, Size: 0001, B/T: 01/01, SecIdx: 0000
1197: Name: kSleep, Value: 03100870, Size: 0067, B/T: 01/02, SecIdx: 0000
1197: Name: cmds, Value: 031014C0, Size: 0050, B/T: 01/01, SecIdx: 0000
1197: Name: strlen, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1197: Name: free, Value: 00000000, Size: 0000, B/T: 01/02, SecIdx: 0000
1197: Processing ELF Dynamic section at 0x03101518, 18 records
1197: ELF at: 0x01390000, copy to: 0x01390FB8, neededCount=0x00000001
1197: Reading NEEDED name from string table index 0x0001 (0x0001)
1197: Needed name = libc.so
1197: Found NEEDED, library name='/libc.so', checking to see if it is already loaded.
1197: 	Found loaded module /kshell ...
1197: 		Not a lib1198: 
****************************** SCHEDULER *******************************
1198: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1198: *	changeTaskQueue: Changing task state for 0x0022 from Running to Runnable
1198: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1198: *		addToQ: Adding task 0x0022 to queue Runnable
1198: *Finding task to run
1198: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1198: 01198:  (idle task)1198: 
1198: *	findTaskToRun: task 0x0022, priority=0, old ticks=0, new ticks=1198: 211198: 
1198: *No new task to run, continuing with the current task
1198: *	changeTaskQueue: Changing task state for 0x0022 from Runnable to Running
1198: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Runnable
1198: *		addToQ: Adding task 0x0022 to queue Running
1198: CS: 0x00000008, EIP: 0x01011462, DS: 0x00000033
1198: *Scheduler calls=12, task switchs=3, ticks=0x000004AE
1198: **************************************************************************
rary, skipping to the next
1198: 	Found loaded module /libc.so ...
1198: 		this is the module we want ... mapping into program's vm.
1198: mapLibraryIntoProcess: V=0x30000000 mapped to P=0x01330000, 0x0001 pages (CR3=0x01157000)
1198: mapLibraryIntoProcess: V=0x30001000 mapped to P=0x01331000, 0x0001 pages (CR3=0x01157000)
1198: mapLibraryIntoProcess: V=0x30002000 mapped to P=0x01332000, 0x0001 pages (CR3=0x01157000)
1198: mapLibraryIntoProcess: V=0x30003000 mapped to P=0x01333000, 0x0001 pages (CR3=0x01157000)
1199: 		Done mapping /libc.so into program's vm.
1199: 		Setting up CoW pages
1199: elfSetupCopyOnPages: Scanning section header table for .data and .bss
1199: Found (.text) (NOBITS) section (type=0x00000001)address 0x30000000, size 0x0000236A.
1199: Found (.text.__x86.get_pc_thunk.ax) (NOBITS) section (type=0x00000001)address 0x3000236A, size 0x00000004.
1199: Found (.plt) (NOBITS) section (type=0x00000001)address 0x30002370, size 0x00000050.
1199: Found (.text.__x86.get_pc_thunk.bx) (NOBITS) section (type=0x00000001)address 0x300023C0, size 0x00000004.
1199: Found (.text.__x86.get_pc_thunk.si) (NOBITS) section (type=0x00000001)address 0x300023C4, size 0x00000004.
1199: Found (.text.__x86.get_pc_thunk.cx) (NOBITS) section (type=0x00000001)address 0x300023C8, size 0x00000004.
1199: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x300023CC, size 0x000008B0.
1199: Found (.eh_frame) (NOBITS) section (type=0x00000001)address 0x30003174, size 0x00000040.
1199: Found (.eh_frame_hdr) (NOBITS) section (type=0x00000001)address 0x300031B4, size 0x0000020C.
1199: Found (.rodata) (NOBITS) section (type=0x00000001)address 0x300033C0, size 0x00000260.
1199: Found data segment, address 0x30003720, size 0x00000028.
1199: 	segment belongs to a library, marking pages as CoW (moo)
1199: Found (.got) (NOBITS) section (type=0x00000001)address 0x30003800, size 0x00000018.
1199: Found (.got.plt) (NOBITS) section (type=0x00000001)address 0x30003818, size 0x0000001C.
1199: Found (.data.rel.local) (NOBITS) section (type=0x00000001)address 0x3000383C, size 0x00000008.
1199: Found bss segment, address 0x30003844, size 0x00000038.
1199: 	segment belongs to a library, marking pages as CoW (moo)
1199: Found (.debug_info) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00002B9E.
1199: Found (.debug_abbrev) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000010E8.
1199: Found (.debug_aranges) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000002C0.
1199: Found (.debug_line) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x000016FB.
1199: Found (.debug_str) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000A16.
1200: Found (.comment) (NOBITS) section (type=0x00000001)address 0x00000000, size 0x00000011.
1200: loadElf: Calling loadElf again to load '/libc.so'
1200: loadElf: Incrementing libraryElfCount for /kshell
1200: Found dynamic tag (0x0000000f), pointer=0x00000076
1200: Found dynamic tag 'DT_HASH', pointer=0x03101324
1200: Found dynamic tag (0x0000000a), pointer=0x00000099
1200: Found dynamic tag 'DT_SYMENT', pointer=0x00000010
1200: Found dynamic tag (0x00000015), pointer=0x00000000
1200: Found dynamic tag 'DT_PLTGOT', pointer=0x031015A8
1200: Found dynamic tag 'DT_PLT_RELSZ', pointer=0x00000080
1200: Found dynamic tag 'DT_PLTREL', pointer=0x00000011
1200: Found dynamic tag 'DT_JMPREL', pointer=0x03101440
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Found dynamic tag (0x00000000), pointer=0x00000000
1200: Dumping ELF Symbol Table
1200: 	0:  @ 0x00000000 (size=0x00000000)
1200: 	1:  @ 0x03100000 (size=0x00000000)
1200: 	2:  @ 0x03100D20 (size=0x00000000)
1200: 	3:  @ 0x03100E30 (size=0x00000000)
1200: 	4:  @ 0x03100F60 (size=0x00000000)
1200: 	5:  @ 0x03101164 (size=0x00000000)
1200: 	6:  @ 0x03101178 (size=0x00000000)
1200: 	7:  @ 0x03101288 (size=0x00000000)
1200: 	8:  @ 0x03101324 (size=0x00000000)
1200: 	9:  @ 0x0310137C (size=0x00000000)
1200: 	10:  @ 0x031013BC (size=0x00000000)
1200: 	11:  @ 0x03101440 (size=0x00000000)
1200: 	12:  @ 0x031014C0 (size=0x00000000)
1200: 	13:  @ 0x03101518 (size=0x00000000)
1200: 	14:  @ 0x031015A8 (size=0x00000000)
1200: 	15:  @ 0x03101600 (size=0x00000000)
1200: 	16:  @ 0x00000000 (size=0x00000000)
1200: 	17:  @ 0x00000000 (size=0x00000000)
1200: 	18:  @ 0x00000000 (size=0x00000000)
1200: 	19:  @ 0x00000000 (size=0x00000000)
1200: 	20:  @ 0x00000000 (size=0x00000000)
1200: 	21:  @ 0x00000000 (size=0x00000000)
1200: 	22: kshell.c @ 0x00000000 (size=0x00000000)
1201: 	23:  @ 0x00000000 (size=0x00000000)
1201: 	24: _DYNAMIC @ 0x03101518 (size=0x00000000)
1201: 	25: __GNU_EH_FRAME_HDR @ 0x031013BC (size=0x00000000)
1201: 	26: _GLOBAL_OFFSET_TABLE_ @ 0x031015A8 (size=0x00000000)
1201: 	27: strcpy @ 0x00000000 (size=0x00000000)
1201: 	28: paramsToArgv @ 0x03100619 (size=0x0000008B)
1201: 	29: waitpid @ 0x00000000 (size=0x00000000)
1201: 	30: print @ 0x00000000 (size=0x00000000)
1201: 	31: execInternalCommand @ 0x03100000 (size=0x000000AB)
1201: 	32: delim @ 0x03101510 (size=0x00000006)
1201: 	33: commandHistory @ 0x03101620 (size=0x0000FA00)
1201: 	34: resetRow @ 0x00000000 (size=0x00000000)
1201: 	35: gets @ 0x00000000 (size=0x00000000)
1201: 	36: findCommand @ 0x03100254 (size=0x00000069)
1201: 	37: memcpy @ 0x00000000 (size=0x00000000)
1201: 	38: commandHistoryPtr @ 0x03101608 (size=0x00000004)
1201: 	39: malloc @ 0x00000000 (size=0x00000000)
1201: 	40: sleep @ 0x00000000 (size=0x00000000)
1201: 	41: strtoul @ 0x00000000 (size=0x00000000)
1201: 	42: sExecutingProgram @ 0x03111020 (size=0x00000200)
1201: 	43: command_function_p @ 0x03111220 (size=0x00000004)
1201: 	44: kShell @ 0x031009EF (size=0x00000328)
1201: 	45: buildargv @ 0x031002BD (size=0x0000028E)
1201: 	46: parseParamsShell @ 0x031000AB (size=0x000001A9)
1201: 	47: heapEnd @ 0x03111224 (size=0x00000004)
1201: 	48: exec @ 0x00000000 (size=0x00000000)
1201: 	49: execp @ 0x031006E1 (size=0x0000018F)
1201: 	50: heapBase @ 0x03111228 (size=0x00000004)
1201: 	51: heapCurr @ 0x0311122C (size=0x00000004)
1201: 	52: strncmp @ 0x00000000 (size=0x00000000)
1201: 	53: freeArgV @ 0x031006A4 (size=0x0000003D)
1201: 	54: command_function @ 0x03111230 (size=0x00000004)
1201: 	55: strtok @ 0x00000000 (size=0x00000000)
1201: 	56: reprintCommand @ 0x031009C9 (size=0x00000026)
1201: 	57: memset @ 0x00000000 (size=0x00000000)
1201: 	58: pwd @ 0x0310092F (size=0x0000004E)
1201: 	59: helpMe @ 0x0310054B (size=0x000000CE)
1201: 	60: getcwd @ 0x00000000 (size=0x00000000)
1201: 	61: exitCode @ 0x03101604 (size=0x00000004)
1202: 	62: kExit @ 0x031008D7 (size=0x00000058)
1202: 	63: commandHistoryMax @ 0x0310160C (size=0x00000004)
1202: 	64: saveCommand @ 0x0310097D (size=0x0000002E)
1202: 	65: sKShellProgramName @ 0x03111234 (size=0x00000004)
1202: 	66: libcTZ @ 0x03111238 (size=0x00000004)
1202: 	67: prompt @ 0x031009AB (size=0x0000001E)
1202: 	68: timeToExit @ 0x03101600 (size=0x00000001)
1202: 	69: kSleep @ 0x03100870 (size=0x00000067)
1202: 	70: cmds @ 0x031014C0 (size=0x00000050)
1202: 	71: strlen @ 0x00000000 (size=0x00000000)
1202: 	72: free @ 0x00000000 (size=0x00000000)
1202: Done dumping ELF Symbol Table
1202: Processing relocation (REL) table at 0x013AD000, record count=0x00000010
1202: NOTE: Only processing REL tables, TODO: process RELA tables
1202: Found relocation entry type 0x07 with offset 0x031015B4, dynamic symbol table entry 0x01
1202:  Getting symbol entry number from 0x013AF014
1202:  Symbol Name 'strcpy', Symbol value=0x00000000 (addr=0x03101188)
1202: elfLookupSymVal: Found symbol 'strcpy', value=0x300011CC
1202:  Writing 0x300011CC to memory address 0x031015B4.
	Value before/after=0x03100D36/ 1202: 0x300011CC (using R_386_JMP_SLOT)
1202: Found relocation entry type 0x07 with offset 0x031015B8, dynamic symbol table entry 0x02
1202:  Getting symbol entry number from 0x013AF024
1202:  Symbol Name 'waitpid', Symbol value=0x00000000 (addr=0x03101198)
1202: elfLookupSymVal: Found symbol 'waitpid', value=0x30000785
1202:  Writing 0x30000785 to memory address 0x031015B8.
	Value before/after=0x03100D46/ 1202: 0x30000785 (using R_386_JMP_SLOT)
1202: Found relocation entry type 0x07 with offset 0x031015BC, dynamic symbol table entry 0x03
1202:  Getting symbol entry number from 0x013AF034
1202:  Symbol Name 'print', Symbol value=0x00000000 (addr=0x031011A8)
1202: elfLookupSymVal: Found symbol 'print', value=0x3000061C
1202:  Writing 0x3000061C to memory address 0x031015BC.
	Value before/after=0x03100D56/ 1202: 0x3000061C (using R_386_JMP_SLOT)
1202: Found relocation entry type 0x07 with offset 0x031015C0, dynamic symbol table entry 0x04
1202:  Getting symbol entry number from 0x013AF044
1203:  Symbol Name 'resetRow', Symbol value=0x00000000 (addr=0x031011B8)
1203: elfLookupSymVal: Found symbol 'resetRow', value=0x30000FE5
1203:  Writing 0x30000FE5 to memory address 0x031015C0.
	Value before/after=0x03100D66/ 1203: 0x30000FE5 (using R_386_JMP_SLOT)
1203: Found relocation entry type 0x07 with offset 0x031015C4, dynamic symbol table entry 0x05
1203:  Getting symbol entry number from 0x013AF054
1203:  Symbol Name 'gets', Symbol value=0x00000000 (addr=0x031011C8)
1203: elfLookupSymVal: Found symbol 'gets', value=0x300003DC
1203:  Writing 0x300003DC to memory address 0x031015C4.
	Value before/after=0x03100D76/ 1203: 0x300003DC (using R_386_JMP_SLOT)
1203: Found relocation entry type 0x07 with offset 0x031015C8, dynamic symbol table entry 0x06
1203:  Getting symbol entry number from 0x013AF064
1203:  Symbol Name 'memcpy', Symbol value=0x00000000 (addr=0x031011D8)
1203: elfLookupSymVal: Found symbol 'memcpy', value=0x30000B20
1203:  Writing 0x30000B20 to memory address 0x031015C8.
	Value before/after=0x03100D86/ 1203: 0x30000B20 (using R_386_JMP_SLOT)
1203: Found relocation entry type 0x07 with offset 0x031015CC, dynamic symbol table entry 0x07
1203:  Getting symbol entry number from 0x013AF074
1203:  Symbol Name 'malloc', Symbol value=0x00000000 (addr=0x031011E8)
1203: elfLookupSymVal: Found symbol 'malloc', value=0x300008DC
1203:  Writing 0x300008DC to memory address 0x031015CC.
	Value before/after=0x03100D96/ 1203: 0x300008DC (using R_386_JMP_SLOT)
1203: Found relocation entry type 0x07 with offset 0x031015D0, dynamic symbol table entry 0x08
1203:  Getting symbol entry number from 0x013AF084
1203:  Symbol Name 'sleep', Symbol value=0x00000000 (addr=0x031011F8)
1203: elfLookupSymVal: Found symbol 'sleep', value=0x300006BB
1203:  Writing 0x300006BB to memory address 0x031015D0.
	Value before/after=0x03100DA6/ 1203: 0x300006BB (using R_386_JMP_SLOT)
1203: Found relocation entry type 0x07 with offset 0x031015D4, dynamic symbol table entry 0x09
1203:  Getting symbol entry number from 0x013AF094
1203:  Symbol Name 'strtoul', Symbol value=0x00000000 (addr=0x03101208)
1203: elfLookupSymVal: Found symbol 'strtoul', value=0x30001380
1203:  Writing 0x30001380 to memory address 0x031015D4.
	Value before/after=0x03100DB6/ 1204: 0x30001380 (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015D8, dynamic symbol table entry 0x0A
1204:  Getting symbol entry number from 0x013AF0A4
1204:  Symbol Name 'exec', Symbol value=0x00000000 (addr=0x03101218)
1204: elfLookupSymVal: Found symbol 'exec', value=0x3000074F
1204:  Writing 0x3000074F to memory address 0x031015D8.
	Value before/after=0x03100DC6/ 1204: 0x3000074F (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015DC, dynamic symbol table entry 0x0B
1204:  Getting symbol entry number from 0x013AF0B4
1204:  Symbol Name 'strncmp', Symbol value=0x00000000 (addr=0x03101228)
1204: elfLookupSymVal: Found symbol 'strncmp', value=0x300012B8
1204:  Writing 0x300012B8 to memory address 0x031015DC.
	Value before/after=0x03100DD6/ 1204: 0x300012B8 (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015E0, dynamic symbol table entry 0x0C
1204:  Getting symbol entry number from 0x013AF0C4
1204:  Symbol Name 'strtok', Symbol value=0x00000000 (addr=0x03101238)
1204: elfLookupSymVal: Found symbol 'strtok', value=0x3000011C
1204:  Writing 0x3000011C to memory address 0x031015E0.
	Value before/after=0x03100DE6/ 1204: 0x3000011C (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015E4, dynamic symbol table entry 0x0D
1204:  Getting symbol entry number from 0x013AF0D4
1204:  Symbol Name 'memset', Symbol value=0x00000000 (addr=0x03101248)
1204: elfLookupSymVal: Found symbol 'memset', value=0x30000CBC
1204:  Writing 0x30000CBC to memory address 0x031015E4.
	Value before/after=0x03100DF6/ 1204: 0x30000CBC (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015E8, dynamic symbol table entry 0x0E
1204:  Getting symbol entry number from 0x013AF0E4
1204:  Symbol Name 'getcwd', Symbol value=0x00000000 (addr=0x03101258)
1204: elfLookupSymVal: Found symbol 'getcwd', value=0x300007E4
1204:  Writing 0x300007E4 to memory address 0x031015E8.
	Value before/after=0x03100E06/ 1204: 0x300007E4 (using R_386_JMP_SLOT)
1204: Found relocation entry type 0x07 with offset 0x031015EC, dynamic symbol table entry 0x0F
1205:  Getting symbol entry number from 0x013AF0F4
1205:  Symbol Name 'strlen', Symbol value=0x00000000 (addr=0x03101268)
1205: elfLookupSymVal: Found symbol 'strlen', value=0x30001254
1205:  Writing 0x30001254 to memory address 0x031015EC.
	Value before/after=0x03100E16/ 1205: 0x30001254 (using R_386_JMP_SLOT)
1205: Found relocation entry type 0x07 with offset 0x031015F0, dynamic symbol table entry 0x10
1205:  Getting symbol entry number from 0x013AF104
1205:  Symbol Name 'free', Symbol value=0x00000000 (addr=0x03101278)
1205: elfLookupSymVal: Found symbol 'free', value=0x30000ABF
1205:  Writing 0x30000ABF to memory address 0x031015F0.
	Value before/after=0x03100E26/ 1205: 0x30000ABF (using R_386_JMP_SLOT)
1205: Found relocation entry type 0x00 with offset 0x00000000, dynamic symbol table entry 0x00
1205: Return point for process is 0x01015A3D
1205: Created Process @ 0x01372000
1205: 	addTaskToTaskList: Found open slot @ 0x012A30D8
1205: 	moved new task 0x0023 there
1205: *		addToQ: Adding task 0x0023 to queue Runnable
1205: Submitted process 0x0023 to be run
1205: _syscall: waitForPID signalling SIG_USLEEP for current task (cr3=0x01148000) on pid=0x0023.  Good night!
1205: sys_sigaction(0x00000004,0x00000000,0x00000023,0x01148000)
1205: 	findTaskByCR3: Finding task with CR3=0x01148000
1205: 	findTaskByCR3: Found task @ 0x012A3090
1206: 
****************************** SCHEDULER *******************************
1206: *Found task 0x0022 to take off CPU @0x0008:0x01011462 (exited=0).
1206: *sys_sigaction: sigind=0x00000004
1206: *	changeTaskQueue: Changing task state for 0x0022 from Running to Uninterruptable Sleep
1206: *		removeFromQ: Removing task 0x0022 (0x012A3090) from queue Running
1206: *		addToQ: Adding task 0x0022 to queue Uninterruptable Sleep
1206: *Finding task to run
1206: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1206: 01206:  (idle task)1206: 
1206: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1206: 211206: 
1206: *Found task 0x0023 move to CPU
1206: *	Save: 1206: CR3=0x01148000,1206: CS=0x0088,1206: EIP=0x0101794B,1206: SS=0x0090,1206: DS=0x0033,1206: EAX=0x01148000,1206: DBX=0x00000023,1206: ECX=0x00000010,1206: EDX=0x00000023,1206: ESI=0xFEE00000,1206: EDI=0x00000000,1206: ESP=0x01306DC8,1206: EBP=0x01306DEC,1206: FLAGS=0x00200206
1206: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1206: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1206: *		addToQ: Adding task 0x0023 to queue Running
1206: *	Load: 1206: CR3=0x01157000,1206: CS=0x003B,1206: EIP=0x01015997,1206: SS=0x0043,1206: DS=0x0033,1206: EAX=0x00000000,1206: DBX=0x00000000,1206: ECX=0x00000000,1206: EDX=0x00000000,1206: ESI=0x00000000,1206: EDI=0x00000000,1206: ESP=0x0138A000,1206: EBP=0x00000000,1206: FLAGS=0x00200246
1206: *Restarting CPU with new process (0x0023) @ 0x003B:0x01015997
1206: *Total running ticks: 0x0022: 129, 0x0023: 0
1206: *Scheduler calls=13, task switchs=4, ticks=0x000004B6
1206: **************************************************************************
1207: processStart: Checking for start handlers
1207: processStart: Executing startHandler 0 @ 0x30003834
***libc_init called
***heapBase = 0x00000000 before
1207: 	findTaskByCR3: Finding task with CR3=0x01157000
1207: 	findTaskByCR3: Found task @ 0x012A30D8
1207: Paging exception START: for address 0x30003848 (CR3=0x01157000) in /kshell
1207: 	Process=/kshell
	Checking for uninitialized mmap page, pt entry=0x01333025
1207: 		Not mmap page
1207: 	Checking for CoW bss/data in libraries
1207: 		Checking for CoW in library @ 0x0132C000, bss=0x30003844/0x00000038, data=0x30003720/0x00000028, tdata=0x00000000/0x00000000
1207: 		The page with address 0x30003848 is a CoW .bss page from library /libc.so
1207: 	Replaced CoW page 0x30003000 (0x01333000) with writable page 0x013B1000 (contents copied)
1207: _syscall: Called with CallNum=0x00000000, invalid call number. (cr3=0x01157000)
1207: 	findTaskByCR3: Finding task with CR3=0x01157000
1207: 	findTaskByCR3: Found task @ 0x012A30D8
1207: processRegExit: Registered exitHandler 0 @ 0x300005FD
***libc_init completed
malloc(0x00000400)
libc_malloc: needed=0x00033000
1207: mallocI: Entered ...
1207: 	findTaskByCR3: Finding task with CR3=0x01157000
1207: 	findTaskByCR3: Found task @ 0x012A30D8
1207: mallocI: Found process 0x0023
1207: mallocI: Allocated 0x00033000 bytes @ 0x013B2000
1207: mallocI: returning 0x70000000
1207: _syscall: malloc(0x00033000) returned 0x70000000 (cr3=0x01157000)
libc_malloc: heaEnd=0x00000000
libc_malloc: Req 0x00033000 bytes, ret was 0x70000000, heapEnd=0x70033000
libc_malloc: Initialized heapCurr and heapBase to 0x70000000
libc_malloc:creating heap rec @ 0x70000000
libc_malloc: heapCurr=0x70000000, sizeof(heaprec_t)=0x00000010
malloc: returning 0x70000010
1217: 
****************************** SCHEDULER *******************************
1217: *Found task 0x0023 to take off CPU @0x003B:0x01015997 (exited=0).
1217: *	changeTaskQueue: Changing task state for 0x0023 from Running to Runnable
1217: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Running
1217: *		addToQ: Adding task 0x0023 to queue Runnable
1217: *Finding task to run
1217: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1217: 01217:  (idle task)1217: 
1217: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1217: 211217: 
1217: *No new task to run, continuing with the current task
1217: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1217: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1217: *		addToQ: Adding task 0x0023 to queue Running
1217: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1217: *Scheduler calls=14, task switchs=4, ticks=0x000004C1
1217: **************************************************************************
1228: 
****************************** SCHEDULER *******************************
1228: *Found task 0x0023 to take off CPU @0x003B:0x01015997 (exited=0).
1228: *	changeTaskQueue: Changing task state for 0x0023 from Running to Runnable
1228: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Running
1228: *		addToQ: Adding task 0x0023 to queue Runnable
1228: *Finding task to run
1228: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1228: 01228:  (idle task)1228: 
1228: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1228: 211228: 
1228: *No new task to run, continuing with the current task
1228: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1228: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1228: *		addToQ: Adding task 0x0023 to queue Running
1228: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1228: *Scheduler calls=15, task switchs=4, ticks=0x000004CC
1228: **************************************************************************
1239: 
****************************** SCHEDULER *******************************
1239: *Found task 0x0023 to take off CPU @0x003B:0x01015997 (exited=0).
1239: *	changeTaskQueue: Changing task state for 0x0023 from Running to Runnable
1239: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Running
1239: *		addToQ: Adding task 0x0023 to queue Runnable
1239: *Finding task to run
1239: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1239: 01239:  (idle task)1239: 
1239: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1239: 211239: 
1239: *No new task to run, continuing with the current task
1239: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1239: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1239: *		addToQ: Adding task 0x0023 to queue Running
1239: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1239: *Scheduler calls=16, task switchs=4, ticks=0x000004D7
1239: **************************************************************************
1250: 
****************************** SCHEDULER *******************************
1250: *Found task 0x0023 to take off CPU @0x003B:0x01015997 (exited=0).
1250: *	changeTaskQueue: Changing task state for 0x0023 from Running to Runnable
1250: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Running
1250: *		addToQ: Adding task 0x0023 to queue Runnable
1250: *Finding task to run
1250: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1250: 01250:  (idle task)1250: 
1250: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1250: 211250: 
1250: *No new task to run, continuing with the current task
1250: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1250: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1250: *		addToQ: Adding task 0x0023 to queue Running
1250: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1250: *Scheduler calls=17, task switchs=4, ticks=0x000004E2
1250: **************************************************************************
1261: 
****************************** SCHEDULER *******************************
1261: *Found task 0x0023 to take off CPU @0x003B:0x01015997 (exited=0).
1261: *	changeTaskQueue: Changing task state for 0x0023 from Running to Runnable
1261: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Running
1261: *		addToQ: Adding task 0x0023 to queue Runnable
1261: *Finding task to run
1261: *	findTaskToRun: task 0x0021, priority=0, old ticks=0, new ticks=1261: 01261:  (idle task)1261: 
1261: *	findTaskToRun: task 0x0023, priority=0, old ticks=0, new ticks=1261: 211261: 
1261: *No new task to run, continuing with the current task
1261: *	changeTaskQueue: Changing task state for 0x0023 from Runnable to Running
1261: *		removeFromQ: Removing task 0x0023 (0x012A30D8) from queue Runnable
1261: *		addToQ: Adding task 0x0023 to queue Running
1261: CS: 0x0000003b, EIP: 0x01015997, DS: 0x00000033
1261: *Scheduler calls=18, task switchs=4, ticks=0x000004ED
1261: **************************************************************************
