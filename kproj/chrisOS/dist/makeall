#!/bin/bash
clear
shopt -s dotglob
echo "Initiating builds"
export writeToDisk=N
mountCmd="sudo mount /dev/disk/by-id/$DEV_USB /mnt/loop/"
mountCmd2="sudo /home/yogi/mount_chrisos"
umountCmd2="sudo /home/yogi/umount_chrisos"
CLEAN=0
if [ "$1" != "" ]
then
	if [ "$1" == "clean" ]
	then
		echo Cleaning the room
		command="make clean "
		CLEAN=1
	else
		buildType=$1
		command="make -j8 CONF=$buildType build "
	fi
else
	buildType="Debug"
	command="make -j8 CONF=$buildType build "
fi

pathMid=dist/${buildType^}/GNU-Linux #GNU-Linux

declare -a kernProgArray=("chrisOS" "chrisOSKernel")
declare -a kernOutputArray=("chrisOS/$pathMid/chrisos" "chrisOSKernel/$pathMid/kernel")
declare -a appProgArray=("libChrisOS" "testMainProgramEntry" "kshell" "time" "testMMap" "sleep" "cat" "echo" "clock" "ls" "grep" "free" "top" "wc" "ps")
declare -a appOutputArray=("libChrisOS/$pathMid/libc.so" "testMainProgramEntry/$pathMid/testmainprogramentry" "kshell/$pathMid/kshell" "time/$pathMid/time" "testMMap/$pathMid/testmmap" "sleep/$pathMid/sleep" "cat/$pathMid/cat" "echo/$pathMid/echo" "clock/$pathMid/clock" "ls/$pathMid/ls" "grep/$pathMid/grep" "free/$pathMid/free" "top/$pathMid/top" "wc/$pathMid/wc" "ps/$pathMid/ps")
basePath=../../../kproj/
tabs 5,36,50,70
echo "Build environment: ${buildType^}"
echo
echo "Making kernel projects"
for i in "${kernProgArray[@]}"
do
	pushd $basePath$i/ > /dev/null
	echo "  Make $i: ($buildType)"
	($command) > /dev/null
	if [ $? -eq 0 ] 
	then
		echo -en "\tMake $i ... \tsuccess!\n"
	else
		echo -en "\tMake $i ... \tfailed ($?)\n"
		echo 
		echo 
		sudo umount /mnt/loop
		tabs -8
		exit -1
	fi
	popd > /dev/null
done

echo "Making application projects"
basePath=../../../aproj/
for i in "${appProgArray[@]}"
do
	pushd $basePath/$i/ > /dev/null
	echo "  Make $i: ($buildType)"
	($command) > /dev/null
	if [ $? -eq 0 ] 
	then
		echo -en "\tMake $i ... \tsuccess!\n"
	else
		echo -en "\tMake $i ... \tfailed"
		echo 
		echo 
		sudo umount /mnt/loop
		tabs -8
		exit -2
	fi
	popd > /dev/null
done

echo "Done making projects"
if [ "$CLEAN" == "1" ] 
then
	echo "Room's all clean!"
	exit 0
fi
echo "Copying output to disk and ISO directory"
if [ "$writeToDisk" = "Y" ]; then
($mountCmd)
fi
($mountCmd2)
basePath=/home/yogi/src/os/kproj
if [ "$writeToDisk" = "Y" ]; then
sudo rm -r /mnt/loop/*
sudo mkdir /mnt/loop/bin
sudo rm -r /mnt/chrisos/*
sudo mkdir /mnt/chrisos/bin
fi
for i in "${kernOutputArray[@]}"
do
if [ "$writeToDisk" = "Y" ]; then
	sudo cp  $basePath/$i /mnt/loop/
fi
	sudo cp $basePath/$i ~/src/os/build_dir/isodir/
	sudo cp  $basePath/$i /mnt/chrisos/
	echo -en "\t$i ...done\n"
done
basePath=/home/yogi/src/os/aproj
if [ ! -d "/mnt/loop/bin" ]; then
	sudo mkdir /mnt/loop/bin
	echo bin directory created
else
	echo bin directory exists
fi
for i in "${appOutputArray[@]}"
do
if [ "$writeToDisk" = "Y" ]; then
	sudo cp $basePath/$i /mnt/loop/bin/
fi
	sudo cp $basePath/$i /mnt/chrisos/bin/
	sudo cp $basePath/$i ~/src/os/build_dir/isodir/
	echo -en "\t$i ... done\n"
sudo cp $basePath/libChrisOS/$pathMid/libc.so /mnt/loop/
sudo cp $basePath/libChrisOS/$pathMid/libc.so /mnt/chrisos/
done
echo "Copying done"
echo "Builds complete"
tabs -8
echo "Copying extra stuff to disk"
sudo cp -r ../../../build_dir/diskdir/* /mnt/loop/
sudo cp ../../../build_dir/diskdir/.krc /mnt/loop/
cp -v Debug/GNU-Linux/chrisos ../../../build_dir/isodir/boot/myos.bin
rm ./myos.iso
grub-mkrescue -o myos.iso ../../../build_dir/isodir > /dev/null
if [ "$writeToDisk" = "Y" ]; then
cp myos.iso /mnt/loop
($umountCmd2)
fi
sudo umount /mnt/loop
sync
