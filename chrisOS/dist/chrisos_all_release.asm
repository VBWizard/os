
Release_No_Optimization/cross-Linux/chrisos:     file format elf32-i386


Disassembly of section .text:

00001000 <tos>:
tos():
    1000:	ea 05 10 00 00 e9 d2 	jmp    0xd2e9:0x1005

00001005 <tos3>:
tos3():
    1005:	e9 d2 06 00 00       	jmp    16dc <initAP>
    100a:	66 90                	xchg   ax,ax
    100c:	02 b0 ad 1b 03 00    	add    dh,BYTE PTR [eax+0x31bad]
    1012:	00 00                	add    BYTE PTR [eax],al
    1014:	fb                   	sti    
    1015:	4f                   	dec    edi
    1016:	52                   	push   edx
    1017:	e4 e8                	in     al,0xe8

00001018 <_start>:
_start():
    1018:	e8 a3 f3 01 00       	call   203c0 <kernel_main>
    101d:	fa                   	cli    
    101e:	f4                   	hlt    
    101f:	eb fe                	jmp    101f <_start+0x7>
    1021:	66 90                	xchg   ax,ax
    1023:	66 90                	xchg   ax,ax
    1025:	66 90                	xchg   ax,ax
    1027:	90                   	nop

00001028 <isE820Available>:
isE820Available():
    1028:	b8 10 00 00 00       	mov    eax,0x10
    102d:	8e d8                	mov    ds,eax
    102f:	89 25 c1 12 00 00    	mov    DWORD PTR ds:0x12c1,esp
    1035:	66 bc fc ff          	mov    sp,0xfffc
    1039:	e8 67 00 00 00       	call   10a5 <leaveProtMode>
    103e:	b8 00 80 8e d0       	mov    eax,0xd08e8000
    1043:	60                   	pusha  
    1044:	66 b8 20 e8          	mov    ax,0xe820
    1048:	00 00                	add    BYTE PTR [eax],al
    104a:	66 ba 50 41          	mov    dx,0x4150
    104e:	4d                   	dec    ebp
    104f:	53                   	push   ebx
    1050:	66 bb 00 00          	mov    bx,0x0
    1054:	00 00                	add    BYTE PTR [eax],al
    1056:	66 b9 64 00          	mov    cx,0x64
    105a:	00 00                	add    BYTE PTR [eax],al
    105c:	8d 3e                	lea    edi,[esi]
    105e:	dd 12                	fst    QWORD PTR [edx]
    1060:	cd 15                	int    0x15
    1062:	66 a3 c5 12 61 e8    	mov    ds:0xe86112c5,ax
    1068:	83 00 00             	add    DWORD PTR [eax],0x0
    106b:	00 c3                	add    bl,al

0000106d <getInt12Memory>:
getInt12Memory():
    106d:	b8 10 00 00 00       	mov    eax,0x10
    1072:	8e d8                	mov    ds,eax
    1074:	89 25 c1 12 00 00    	mov    DWORD PTR ds:0x12c1,esp
    107a:	66 bc fc ff          	mov    sp,0xfffc
    107e:	e8 22 00 00 00       	call   10a5 <leaveProtMode>
    1083:	b8 00 80 8e d0       	mov    eax,0xd08e8000
    1088:	cd 12                	int    0x12
    108a:	66 0f b7 d0          	movzx  dx,ax
    108e:	66 89 16             	mov    WORD PTR [esi],dx
    1091:	c5 12                	lds    edx,FWORD PTR [edx]
    1093:	b8 12 11 30 db       	mov    eax,0xdb301112
    1098:	cd 10                	int    0x10
    109a:	e8 50 00 00 00       	call   10ef <reenterProtMode>
    109f:	c3                   	ret    
    10a0:	e9 b8 00 00 00       	jmp    115d <hang>

000010a5 <leaveProtMode>:
leaveProtMode():
    10a5:	0f 01 15 78 99 12 00 	lgdtd  ds:0x129978
    10ac:	ea b3 10 00 00 08 00 	jmp    0x8:0x10b3

000010b3 <Into16BitProt>:
Into16BitProt():
    10b3:	b8 10 00 8e d8       	mov    eax,0xd88e0010
    10b8:	8e e8                	mov    gs,eax
    10ba:	8e e0                	mov    fs,eax
    10bc:	8e c0                	mov    es,eax
    10be:	0f 20 c0             	mov    eax,cr0
    10c1:	24 fe                	and    al,0xfe
    10c3:	0f 22 c0             	mov    cr0,eax
    10c6:	ea cd 10 00 00 00 00 	jmp    0x0:0x10cd

000010cd <LeaveProtModeJmp>:
LeaveProtModeJmp():
    10cd:	b8 00 00 8e d8       	mov    eax,0xd88e0000
    10d2:	8e c0                	mov    es,eax
    10d4:	8e e0                	mov    fs,eax
    10d6:	8e e8                	mov    gs,eax
    10d8:	0f 01 0e             	sidtd  [esi]
    10db:	d7                   	xlat   BYTE PTR ds:[ebx]
    10dc:	12 0f                	adc    cl,BYTE PTR [edi]
    10de:	01 1e                	add    DWORD PTR [esi],ebx
    10e0:	cf                   	iret   
    10e1:	12 0f                	adc    cl,BYTE PTR [edi]
    10e3:	01 06                	add    DWORD PTR [esi],eax
    10e5:	bb 12 b8 00 00       	mov    ebx,0xb812
    10ea:	8e d0                	mov    ss,eax
    10ec:	8e d8                	mov    ds,eax
    10ee:	c3                   	ret    

000010ef <reenterProtMode>:
reenterProtMode():
    10ef:	0f 01 16             	lgdtd  [esi]
    10f2:	bb 12 0f 01 1e       	mov    ebx,0x1e010f12
    10f7:	d7                   	xlat   BYTE PTR ds:[ebx]
    10f8:	12 0f                	adc    cl,BYTE PTR [edi]
    10fa:	20 c0                	and    al,al
    10fc:	0c 01                	or     al,0x1
    10fe:	66 0d 00 00          	or     ax,0x0
    1102:	01 00                	add    DWORD PTR [eax],eax
    1104:	0f 22 c0             	mov    cr0,eax
    1107:	ea 0c 11 18 00 66 b8 	jmp    0xb866:0x18110c

0000110c <reenterProtModeJmp>:
reenterProtModeJmp():
    110c:	66 b8 10 00          	mov    ax,0x10
    1110:	8e d8                	mov    ds,eax
    1112:	8e c0                	mov    es,eax
    1114:	8e e8                	mov    gs,eax
    1116:	0f 01 15 88 99 12 00 	lgdtd  ds:0x129988
    111d:	ea 24 11 00 00 08 00 	jmp    0x8:0x1124

00001124 <reenterProtMode32Jmp>:
reenterProtMode32Jmp():
    1124:	b8 10 00 8e d8       	mov    eax,0xd88e0010
    1129:	8e d0                	mov    ss,eax
    112b:	8e c0                	mov    es,eax
    112d:	8e e0                	mov    fs,eax
    112f:	8e e8                	mov    gs,eax
    1131:	a1 c5 12 00 00       	mov    eax,ds:0x12c5
    1136:	8b 25 c1 12 00 00    	mov    esp,DWORD PTR ds:0x12c1
    113c:	c3                   	ret    

0000113d <set_gdt>:
set_gdt():
    113d:	50                   	push   eax
    113e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
    1142:	0f 01 10             	lgdtd  [eax]
    1145:	ea 4c 11 00 00 08 00 	jmp    0x8:0x114c

0000114c <.reload_CS>:
.reload_CS():
    114c:	b8 10 00 00 00       	mov    eax,0x10
    1151:	8e d8                	mov    ds,eax
    1153:	8e c0                	mov    es,eax
    1155:	8e e0                	mov    fs,eax
    1157:	8e e8                	mov    gs,eax
    1159:	8e d0                	mov    ss,eax
    115b:	58                   	pop    eax
    115c:	c3                   	ret    

0000115d <hang>:
hang():
    115d:	f4                   	hlt    
    115e:	eb fd                	jmp    115d <hang>

00001160 <idt_load>:
idt_load():
    1160:	55                   	push   ebp
    1161:	89 e5                	mov    ebp,esp
    1163:	50                   	push   eax
    1164:	53                   	push   ebx
    1165:	fa                   	cli    
    1166:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1169:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
    116c:	c1 c8 10             	ror    eax,0x10
    116f:	66 89 d8             	mov    ax,bx
    1172:	c1 c8 10             	ror    eax,0x10
    1175:	c1 eb 10             	shr    ebx,0x10
    1178:	a3 4e 15 00 00       	mov    ds:0x154e,eax
    117d:	89 1d 52 15 00 00    	mov    DWORD PTR ds:0x1552,ebx
    1183:	0f 01 1d 4e 15 00 00 	lidtd  ds:0x154e
    118a:	5b                   	pop    ebx
    118b:	58                   	pop    eax
    118c:	5d                   	pop    ebp
    118d:	c3                   	ret    

0000118e <init_PIT>:
init_PIT():
    118e:	55                   	push   ebp
    118f:	89 e5                	mov    ebp,esp
    1191:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
    1194:	60                   	pusha  
    1195:	b8 00 00 01 00       	mov    eax,0x10000
    119a:	83 fb 12             	cmp    ebx,0x12
    119d:	76 34                	jbe    11d3 <.gotReloadValue>
    119f:	b8 01 00 00 00       	mov    eax,0x1
    11a4:	81 fb dd 34 12 00    	cmp    ebx,0x1234dd
    11aa:	73 27                	jae    11d3 <.gotReloadValue>
    11ac:	b8 99 9e 36 00       	mov    eax,0x369e99
    11b1:	ba 00 00 00 00       	mov    edx,0x0
    11b6:	f7 f3                	div    ebx
    11b8:	81 fa 4c 4f 1b 00    	cmp    edx,0x1b4f4c
    11be:	72 01                	jb     11c1 <.l1>
    11c0:	40                   	inc    eax

000011c1 <.l1>:
.l1():
    11c1:	bb 03 00 00 00       	mov    ebx,0x3
    11c6:	ba 00 00 00 00       	mov    edx,0x0
    11cb:	f7 f3                	div    ebx
    11cd:	83 fa 01             	cmp    edx,0x1
    11d0:	72 01                	jb     11d3 <.gotReloadValue>
    11d2:	40                   	inc    eax

000011d3 <.gotReloadValue>:
.gotReloadValue():
    11d3:	50                   	push   eax
    11d4:	66 a3 1f 13 00 00    	mov    ds:0x131f,ax
    11da:	89 c3                	mov    ebx,eax
    11dc:	b8 99 9e 36 00       	mov    eax,0x369e99
    11e1:	ba 00 00 00 00       	mov    edx,0x0
    11e6:	f7 f3                	div    ebx
    11e8:	81 fa 4c 4f 1b 00    	cmp    edx,0x1b4f4c
    11ee:	72 01                	jb     11f1 <.l3>
    11f0:	40                   	inc    eax

000011f1 <.l3>:
.l3():
    11f1:	bb 03 00 00 00       	mov    ebx,0x3
    11f6:	ba 00 00 00 00       	mov    edx,0x0
    11fb:	f7 f3                	div    ebx
    11fd:	83 fa 01             	cmp    edx,0x1
    1200:	72 01                	jb     1203 <.l4>
    1202:	40                   	inc    eax

00001203 <.l4>:
.l4():
    1203:	a3 17 13 00 00       	mov    ds:0x1317,eax
    1208:	5b                   	pop    ebx
    1209:	b8 62 a0 b3 db       	mov    eax,0xdbb3a062
    120e:	f7 e3                	mul    ebx
    1210:	0f ac d0 0a          	shrd   eax,edx,0xa
    1214:	c1 ea 0a             	shr    edx,0xa
    1217:	89 15 0f 13 00 00    	mov    DWORD PTR ds:0x130f,edx
    121d:	a3 07 13 00 00       	mov    ds:0x1307,eax
    1222:	9c                   	pushf  
    1223:	fa                   	cli    
    1224:	b0 34                	mov    al,0x34
    1226:	e6 43                	out    0x43,al
    1228:	66 a1 1f 13 00 00    	mov    ax,ds:0x131f
    122e:	e6 40                	out    0x40,al
    1230:	88 e0                	mov    al,ah
    1232:	e6 40                	out    0x40,al
    1234:	9d                   	popf   
    1235:	61                   	popa   
    1236:	5d                   	pop    ebp
    1237:	c3                   	ret    

00001238 <getE820Memory_asm>:
getE820Memory_asm():
    1238:	b8 10 00 00 00       	mov    eax,0x10
    123d:	8e d8                	mov    ds,eax
    123f:	89 25 c1 12 00 00    	mov    DWORD PTR ds:0x12c1,esp
    1245:	66 bc f7 ff          	mov    sp,0xfff7
    1249:	e8 57 fe ff ff       	call   10a5 <leaveProtMode>
    124e:	60                   	pusha  
    124f:	66 8d 06             	lea    ax,[esi]
    1252:	6e                   	outs   dx,BYTE PTR ds:[esi]
    1253:	13 0f                	adc    ecx,DWORD PTR [edi]
    1255:	b7 c0                	mov    bh,0xc0
    1257:	a3 66 13 00 00       	mov    ds:0x1366,eax
    125c:	66 b8 00 00          	mov    ax,0x0
    1260:	8e c0                	mov    es,eax
    1262:	bb 00 00 00 00       	mov    ebx,0x0
    1267:	66 8d 3e             	lea    di,[esi]
    126a:	6e                   	outs   dx,BYTE PTR ds:[esi]
    126b:	13 66 b8             	adc    esp,DWORD PTR [esi-0x48]

0000126c <getE820Memory_asm_getNext>:
.code32():
    126c:	66 b8 20 e8          	mov    ax,0xe820
    1270:	00 00                	add    BYTE PTR [eax],al
    1272:	66 ba 50 41          	mov    dx,0x4150
    1276:	4d                   	dec    ebp
    1277:	53                   	push   ebx
    1278:	66 b9 24 00          	mov    cx,0x24
    127c:	00 00                	add    BYTE PTR [eax],al
    127e:	cd 15                	int    0x15
    1280:	66 83 c7 18          	add    di,0x18
    1284:	66 3d 50 41          	cmp    ax,0x4150
    1288:	4d                   	dec    ebp
    1289:	53                   	push   ebx
    128a:	75 1c                	jne    12a8 <getE820Memory_asm_exit>
    128c:	66 83 f9 14          	cmp    cx,0x14
    1290:	7c 16                	jl     12a8 <getE820Memory_asm_exit>
    1292:	66 50                	push   ax
    1294:	66 a1 cd 12 66 40    	mov    ax,ds:0x406612cd
    129a:	66 a3 cd 12 66 58    	mov    ds:0x586612cd,ax
    12a0:	66 83 fb 00          	cmp    bx,0x0
    12a4:	74 02                	je     12a8 <getE820Memory_asm_exit>
    12a6:	eb c4                	jmp    126c <getE820Memory_asm_getNext>

000012a8 <getE820Memory_asm_exit>:
getE820Memory_asm_exit():
    12a8:	66 a1 cd 12 66 a3    	mov    ax,ds:0xa36612cd
    12ae:	c5 12                	lds    edx,FWORD PTR [edx]
    12b0:	61                   	popa   
    12b1:	66 a1 c5 12 e8 35    	mov    ax,ds:0x35e812c5
    12b7:	fe                   	(bad)  
    12b8:	ff                   	(bad)  
    12b9:	ff c3                	inc    ebx

000012bb <saved_gdt16_lo>:
	...

000012bd <saved_gdt16_hi>:
	...

000012bf <saved_gdt16_hi2>:
	...

000012c1 <saveESP>:
saveESP():
    12c1:	00 00                	add    BYTE PTR [eax],al
	...

000012c5 <savedValue>:
	...

000012cd <recCnt>:
	...

000012cf <idt_real>:
idt_real():
    12cf:	ff 03                	inc    DWORD PTR [ebx]
    12d1:	00 00                	add    BYTE PTR [eax],al
	...

000012d5 <retVal>:
	...

000012d7 <saved_idt>:
saved_idt():
    12d7:	00 00                	add    BYTE PTR [eax],al
    12d9:	00 00                	add    BYTE PTR [eax],al
	...

000012dd <e820data>:
	...

000012f7 <system_timer_fractions>:
	...

000012ff <system_timer_ms>:
	...

00001307 <IRQ0_fractions>:
	...

0000130f <IRQ0_ms>:
	...

00001317 <IRQ0_frequency>:
	...

0000131f <PIT_reload_value>:
PIT_reload_value():
    131f:	12 00                	adc    al,BYTE PTR [eax]
    1321:	00 00                	add    BYTE PTR [eax],al
    1323:	00 00                	add    BYTE PTR [eax],al
	...

00001327 <doPagingJump>:
doPagingJump():
    1327:	fa                   	cli    
    1328:	ea 2f 13 00 00 20 00 	jmp    0x20:0x132f

0000132f <pagingEnableJmp>:
pagingEnableJmp():
    132f:	50                   	push   eax
    1330:	66 b8 10 00          	mov    ax,0x10
    1334:	8e d8                	mov    ds,eax
    1336:	8e c0                	mov    es,eax
    1338:	8e e8                	mov    gs,eax
    133a:	8e e0                	mov    fs,eax
    133c:	58                   	pop    eax
    133d:	c3                   	ret    

0000133e <doNonPagingJump>:
doNonPagingJump():
    133e:	ea 45 13 00 00 28 00 	jmp    0x28:0x1345

00001345 <pagingDisableJmp1>:
pagingDisableJmp1():
    1345:	50                   	push   eax
    1346:	0f 20 c0             	mov    eax,cr0
    1349:	25 ff ff ff 7f       	and    eax,0x7fffffff
    134e:	0f 22 c0             	mov    cr0,eax
    1351:	ea 58 13 00 00 28 00 	jmp    0x28:0x1358

00001358 <pagingDisableJmp2>:
pagingDisableJmp2():
    1358:	66 b8 18 00          	mov    ax,0x18
    135c:	8e d8                	mov    ds,eax
    135e:	8e c0                	mov    es,eax
    1360:	8e e8                	mov    gs,eax
    1362:	8e e0                	mov    fs,eax
    1364:	58                   	pop    eax
    1365:	c3                   	ret    

00001366 <lowSmapTablePtr>:
	...

0000136e <lowSmapTbl>:
	...

0000154e <idtPtrToLoad>:
	...

00001556 <msg>:
msg():
    1556:	48                   	dec    eax
    1557:	65                   	gs
    1558:	6c                   	ins    BYTE PTR es:[edi],dx
    1559:	6c                   	ins    BYTE PTR es:[edi],dx
    155a:	6f                   	outs   dx,DWORD PTR ds:[esi]
    155b:	20 66 72             	and    BYTE PTR [esi+0x72],ah
    155e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    155f:	6d                   	ins    DWORD PTR es:[edi],dx
    1560:	20 70 72             	and    BYTE PTR [eax+0x72],dh
    1563:	6f                   	outs   dx,DWORD PTR ds:[esi]
    1564:	63 65 73             	arpl   WORD PTR [ebp+0x73],sp
    1567:	73 6f                	jae    15d8 <AP_startup+0x1a>
    1569:	72 20                	jb     158b <msg2+0xa>

0000156a <pid>:
pid():
    156a:	20 20                	and    BYTE PTR [eax],ah
    156c:	20 43 52             	and    BYTE PTR [ebx+0x52],al
    156f:	30 3d 78 78 78 78    	xor    BYTE PTR ds:0x78787878,bh

00001571 <msw>:
msw():
    1571:	78 78                	js     15eb <broadcast_AP_startup+0xa>
    1573:	78 78                	js     15ed <broadcast_AP_startup+0xc>
    1575:	78 78                	js     15ef <broadcast_AP_startup+0xe>
    1577:	78 78                	js     15f1 <broadcast_AP_startup+0x10>
    1579:	20 0a                	and    BYTE PTR [edx],cl
    157b:	0d 26 00 00 00       	or     eax,0x26

0000157c <len>:
len():
    157c:	26 00 00             	add    BYTE PTR es:[eax],al
	...

00001580 <att>:
att():
    1580:	0b 57 61             	or     edx,DWORD PTR [edi+0x61]

00001581 <msg2>:
msg2():
    1581:	57                   	push   edi
    1582:	61                   	popa   
    1583:	6b 69 6e 67          	imul   ebp,DWORD PTR [ecx+0x6e],0x67
    1587:	20 75 70             	and    BYTE PTR [ebp+0x70],dh
    158a:	20 41 50             	and    BYTE PTR [ecx+0x50],al
    158d:	20 70 72             	and    BYTE PTR [eax+0x72],dh
    1590:	6f                   	outs   dx,DWORD PTR ds:[esi]
    1591:	63 65 73             	arpl   WORD PTR [ebp+0x73],sp
    1594:	73 6f                	jae    1605 <.B0+0xb>
    1596:	72 73                	jb     160b <.B0+0x11>
    1598:	0a 0d 19 00 00 00    	or     cl,BYTE PTR ds:0x19

0000159a <len2>:
len2():
    159a:	19 00                	sbb    DWORD PTR [eax],eax
	...

0000159e <att2>:
att2():
    159e:	0c 01                	or     al,0x1

0000159f <mutex>:
mutex():
    159f:	01 00                	add    DWORD PTR [eax],eax

000015a1 <smpBootCPUCount>:
	...

000015a3 <smpBootCPUsStarted>:
	...

000015a5 <newSS>:
newSS():
    15a5:	00 20                	add    BYTE PTR [eax],ah
	...

000015a8 <theGDT>:
	...
theGDT():
    15b0:	ff                   	(bad)  
    15b1:	ff 00                	inc    DWORD PTR [eax]
    15b3:	00 00                	add    BYTE PTR [eax],al
    15b5:	92                   	xchg   edx,eax
    15b6:	8f 00                	pop    DWORD PTR [eax]

000015b8 <regGDT>:
regGDT():
    15b8:	0f 00 a8 15 00 00 89 	verw   WORD PTR [eax-0x76ffffeb]

000015be <AP_startup>:
AP_startup():
    15be:	89 25 c1 12 00 00    	mov    DWORD PTR ds:0x12c1,esp
    15c4:	e8 7e 00 00 00       	call   1647 <setup_timer_channel2>
    15c9:	e8 13 00 00 00       	call   15e1 <broadcast_AP_startup>
    15ce:	e8 64 00 00 00       	call   1637 <delay_until_APs_halt>
    15d3:	b8 10 00 00 00       	mov    eax,0x10
    15d8:	8e d8                	mov    ds,eax
    15da:	8b 25 c1 12 00 00    	mov    esp,DWORD PTR ds:0x12c1
    15e0:	c3                   	ret    

000015e1 <broadcast_AP_startup>:
broadcast_AP_startup():
    15e1:	53                   	push   ebx
    15e2:	1e                   	push   ds
    15e3:	66 b8 10 00          	mov    ax,0x10
    15e7:	8e d8                	mov    ds,eax
    15e9:	8b 1d 70 98 12 00    	mov    ebx,DWORD PTR ds:0x129870
    15ef:	b8 00 45 0c 00       	mov    eax,0xc4500
    15f4:	89 83 00 03 00 00    	mov    DWORD PTR [ebx+0x300],eax

000015fa <.B0>:
.B0():
    15fa:	0f ba a3 00 03 00 00 	bt     DWORD PTR [ebx+0x300],0xc
    1601:	0c 
    1602:	72 f6                	jb     15fa <.B0>
    1604:	b8 10 27 00 00       	mov    eax,0x2710
    1609:	e8 f9 00 00 00       	call   1707 <delay_EAX_micro_secs>
    160e:	b9 05 00 00 00       	mov    ecx,0x5

00001613 <nxIPI>:
nxIPI():
    1613:	b8 01 46 0c 00       	mov    eax,0xc4601
    1618:	89 83 00 03 00 00    	mov    DWORD PTR [ebx+0x300],eax

0000161e <.B1>:
.B1():
    161e:	0f ba a3 00 03 00 00 	bt     DWORD PTR [ebx+0x300],0xc
    1625:	0c 
    1626:	72 f6                	jb     161e <.B1>
    1628:	b8 c8 00 00 00       	mov    eax,0xc8
    162d:	e8 d5 00 00 00       	call   1707 <delay_EAX_micro_secs>
    1632:	e2 df                	loop   1613 <nxIPI>
    1634:	1f                   	pop    ds
    1635:	5b                   	pop    ebx
    1636:	c3                   	ret    

00001637 <delay_until_APs_halt>:
delay_until_APs_halt():
    1637:	66 a1 a1 15 00 00    	mov    ax,ds:0x15a1
    163d:	66 2b 05 a3 15 00 00 	sub    ax,WORD PTR ds:0x15a3
    1644:	75 f1                	jne    1637 <delay_until_APs_halt>
    1646:	c3                   	ret    

00001647 <setup_timer_channel2>:
setup_timer_channel2():
    1647:	e4 61                	in     al,0x61
    1649:	24 fd                	and    al,0xfd
    164b:	0c 01                	or     al,0x1
    164d:	e6 61                	out    0x61,al
    164f:	b0 b0                	mov    al,0xb0
    1651:	e6 43                	out    0x43,al
    1653:	c3                   	ret    

00001654 <display_APIC_LocalID>:
display_APIC_LocalID():
    1654:	1e                   	push   ds
    1655:	31 c0                	xor    eax,eax
    1657:	8e d8                	mov    ds,eax
    1659:	66 bb 20 00          	mov    bx,0x20
    165d:	e0 fe                	loopne 165d <display_APIC_LocalID+0x9>
    165f:	67 66 8b 03          	mov    ax,WORD PTR [bp+di]
    1663:	1f                   	pop    ds

00001664 <spin>:
spin():
    1664:	0f ba 26 9f          	bt     DWORD PTR [esi],0x9f
    1668:	15 00 73 f8 f0       	adc    eax,0xf0f87300
    166d:	0f ba 36 9f          	btr    DWORD PTR [esi],0x9f
    1671:	15 00 73 ef 66       	adc    eax,0x66ef7300
    1676:	c1 c0 08             	rol    eax,0x8
    1679:	24 0f                	and    al,0xf
    167b:	60                   	pusha  
    167c:	3c 01                	cmp    al,0x1
    167e:	77 28                	ja     16a8 <overClearScreen>
    1680:	e8 01 01 b4 0f       	call   fb41786 <_months_abbrev+0xfa17d66>
    1685:	cd 10                	int    0x10
    1687:	b4 02                	mov    ah,0x2
    1689:	b7 00                	mov    bh,0x0
    168b:	ba 00 20 cd 10       	mov    edx,0x10cd2000
    1690:	b4 03                	mov    ah,0x3
    1692:	cd 10                	int    0x10
    1694:	b8 01 13 8d 2e       	mov    eax,0x2e8d1301
    1699:	81 15 8b 0e 9a 15 8a 	adc    DWORD PTR ds:0x159a0e8b,0x159e1e8a
    16a0:	1e 9e 15 
    16a3:	b8 01 13 cd 10       	mov    eax,0x10cd1301

000016a8 <overClearScreen>:
overClearScreen():
    16a8:	61                   	popa   
    16a9:	0c 30                	or     al,0x30
    16ab:	a2 6a 15 8d 3e       	mov    ds:0x3e8d156a,al
    16b0:	71 15                	jno    16c7 <overClearScreen+0x1f>
    16b2:	0f 20 c0             	mov    eax,cr0
    16b5:	e8 a4 00 b4 0f       	call   fb4175e <_months_abbrev+0xfa17d3e>
    16ba:	cd 10                	int    0x10
    16bc:	b4 03                	mov    ah,0x3
    16be:	cd 10                	int    0x10
    16c0:	b8 01 13 8d 2e       	mov    eax,0x2e8d1301
    16c5:	56                   	push   esi
    16c6:	15 8b 0e 7c 15       	adc    eax,0x157c0e8b
    16cb:	8a 1e                	mov    bl,BYTE PTR [esi]
    16cd:	80 15 b8 01 13 cd 10 	adc    BYTE PTR ds:0xcd1301b8,0x10

000016d4 <overPrinting>:
overPrinting():
    16d4:	f0 0f ba 2e 9f       	lock bts DWORD PTR [esi],0x9f
    16d9:	15 00 c3 fa 8c       	adc    eax,0x8cfac300

000016dc <initAP>:
initAP():
    16dc:	fa                   	cli    
    16dd:	8c c8                	mov    eax,cs
    16df:	8e d8                	mov    ds,eax
    16e1:	8e c0                	mov    es,eax
    16e3:	f0 ff 06             	lock inc DWORD PTR [esi]
    16e6:	a1 15 b8 00 10       	mov    eax,ds:0x1000b815
    16eb:	0f c1 06             	xadd   DWORD PTR [esi],eax
    16ee:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
    16ef:	15 8e d0 66 31       	adc    eax,0x3166d08e
    16f4:	e4 66                	in     al,0x66
    16f6:	bc 00 00 00 00       	mov    esp,0x0
    16fb:	e8 38 00 f0 ff       	call   fff01738 <CHECKSUM+0x1b9dc73d>
    1700:	06                   	push   es
    1701:	a3 15 fa f4 eb       	mov    ds:0xebf4fa15,eax

00001703 <freeze>:
freeze():
    1703:	fa                   	cli    
    1704:	f4                   	hlt    
    1705:	eb fc                	jmp    1703 <freeze>

00001707 <delay_EAX_micro_secs>:
delay_EAX_micro_secs():
    1707:	66 60                	pushaw 
    1709:	66 89 c1             	mov    cx,ax
    170c:	66 b8 a0 86          	mov    ax,0x86a0
    1710:	01 00                	add    DWORD PTR [eax],eax
    1712:	66 31 d2             	xor    dx,dx
    1715:	66 f7 f1             	div    cx
    1718:	66 89 c1             	mov    cx,ax
    171b:	66 b8 de 34          	mov    ax,0x34de
    171f:	12 00                	adc    al,BYTE PTR [eax]
    1721:	66 31 d2             	xor    dx,dx
    1724:	66 f7 f1             	div    cx
    1727:	e6 42                	out    0x42,al
    1729:	86 c4                	xchg   ah,al
    172b:	e6 42                	out    0x42,al

0000172d <.T0>:
.T0():
    172d:	e4 61                	in     al,0x61
    172f:	a8 20                	test   al,0x20
    1731:	74 fa                	je     172d <.T0>
    1733:	66 61                	popaw  
    1735:	c3                   	ret    

00001736 <allow_4GB_addressing>:
allow_4GB_addressing():
    1736:	9c                   	pushf  
    1737:	1e                   	push   ds
    1738:	fa                   	cli    
    1739:	0f 20 c0             	mov    eax,cr0
    173c:	66 0f ba e8 00       	bts    ax,0x0
    1741:	0f 22 c0             	mov    cr0,eax
    1744:	0f 01 16             	lgdtd  [esi]
    1747:	b8 15 b8 08 00       	mov    eax,0x8b815
    174c:	8e d8                	mov    ds,eax
    174e:	0f 20 c0             	mov    eax,cr0
    1751:	66 0f ba f0 00       	btr    ax,0x0
    1756:	0f 22 c0             	mov    cr0,eax
    1759:	1f                   	pop    ds
    175a:	9d                   	popf   
    175b:	c3                   	ret    

0000175c <eax2hex>:
eax2hex():
    175c:	60                   	pusha  
    175d:	b9 08 00 66 c1       	mov    ecx,0xc1660008

00001760 <nxnyb>:
nxnyb():
    1760:	66 c1 c0 04          	rol    ax,0x4
    1764:	88 c3                	mov    bl,al
    1766:	83 e3 0f             	and    ebx,0xf
    1769:	8a 97 74 17 88 15    	mov    dl,BYTE PTR [edi+0x15881774]
    176f:	47                   	inc    edi
    1770:	e2 ee                	loop   1760 <nxnyb>
    1772:	61                   	popa   
    1773:	c3                   	ret    

00001774 <hex>:
hex():
    1774:	30 31                	xor    BYTE PTR [ecx],dh
    1776:	32 33                	xor    dh,BYTE PTR [ebx]
    1778:	34 35                	xor    al,0x35
    177a:	36                   	ss
    177b:	37                   	aaa    
    177c:	38 39                	cmp    BYTE PTR [ecx],bh
    177e:	41                   	inc    ecx
    177f:	42                   	inc    edx
    1780:	43                   	inc    ebx
    1781:	44                   	inc    esp
    1782:	45                   	inc    ebp
    1783:	46                   	inc    esi

00001784 <clearScreen>:
clearScreen():
    1784:	60                   	pusha  
    1785:	b8 00 07 b7 07       	mov    eax,0x7b70700
    178a:	b9 00 00 ba 4f       	mov    ecx,0x4fba0000
    178f:	18 cd                	sbb    ch,cl
    1791:	10 b4 02 b7 00 ba 00 	adc    BYTE PTR [edx+eax*1+0xba00b7],dh
    1798:	00 cd                	add    ch,cl
    179a:	10 61 c3             	adc    BYTE PTR [ecx-0x3d],ah
	...

0000fec5 <stk>:
stk():
    fec5:	fa                   	cli    
    fec6:	fa                   	cli    
    fec7:	fa                   	cli    
    fec8:	fa                   	cli    
    fec9:	fa                   	cli    
    feca:	fa                   	cli    
    fecb:	fa                   	cli    
    fecc:	fa                   	cli    
    fecd:	fa                   	cli    
    fece:	fa                   	cli    
    fecf:	fa                   	cli    
    fed0:	fa                   	cli    
    fed1:	fa                   	cli    
    fed2:	fa                   	cli    
    fed3:	fa                   	cli    
    fed4:	fa                   	cli    
    fed5:	fa                   	cli    
    fed6:	fa                   	cli    
    fed7:	fa                   	cli    
    fed8:	fa                   	cli    
    fed9:	fa                   	cli    
    feda:	fa                   	cli    
    fedb:	fa                   	cli    
    fedc:	fa                   	cli    
    fedd:	fa                   	cli    
    fede:	fa                   	cli    
    fedf:	fa                   	cli    
    fee0:	fa                   	cli    
    fee1:	fa                   	cli    
    fee2:	fa                   	cli    
    fee3:	fa                   	cli    
    fee4:	fa                   	cli    
    fee5:	fa                   	cli    
    fee6:	fa                   	cli    
    fee7:	fa                   	cli    
    fee8:	fa                   	cli    
    fee9:	fa                   	cli    
    feea:	fa                   	cli    
    feeb:	fa                   	cli    
    feec:	fa                   	cli    
    feed:	fa                   	cli    
    feee:	fa                   	cli    
    feef:	fa                   	cli    
    fef0:	fa                   	cli    
    fef1:	fa                   	cli    
    fef2:	fa                   	cli    
    fef3:	fa                   	cli    
    fef4:	fa                   	cli    
    fef5:	fa                   	cli    
    fef6:	fa                   	cli    
    fef7:	fa                   	cli    
    fef8:	fa                   	cli    
    fef9:	fa                   	cli    
    fefa:	fa                   	cli    
    fefb:	fa                   	cli    
    fefc:	fa                   	cli    
    fefd:	fa                   	cli    
    fefe:	fa                   	cli    
    feff:	fa                   	cli    
    ff00:	fa                   	cli    
    ff01:	fa                   	cli    
    ff02:	fa                   	cli    
    ff03:	fa                   	cli    
    ff04:	fa                   	cli    
    ff05:	fa                   	cli    
    ff06:	fa                   	cli    
    ff07:	fa                   	cli    
    ff08:	fa                   	cli    
    ff09:	fa                   	cli    
    ff0a:	fa                   	cli    
    ff0b:	fa                   	cli    
    ff0c:	fa                   	cli    
    ff0d:	fa                   	cli    
    ff0e:	fa                   	cli    
    ff0f:	fa                   	cli    
    ff10:	fa                   	cli    
    ff11:	fa                   	cli    
    ff12:	fa                   	cli    
    ff13:	fa                   	cli    
    ff14:	fa                   	cli    
    ff15:	fa                   	cli    
    ff16:	fa                   	cli    
    ff17:	fa                   	cli    
    ff18:	fa                   	cli    
    ff19:	fa                   	cli    
    ff1a:	fa                   	cli    
    ff1b:	fa                   	cli    
    ff1c:	fa                   	cli    
    ff1d:	fa                   	cli    
    ff1e:	fa                   	cli    
    ff1f:	fa                   	cli    
    ff20:	fa                   	cli    
    ff21:	fa                   	cli    
    ff22:	fa                   	cli    
    ff23:	fa                   	cli    
    ff24:	fa                   	cli    
    ff25:	fa                   	cli    
    ff26:	fa                   	cli    
    ff27:	fa                   	cli    
    ff28:	fa                   	cli    
    ff29:	fa                   	cli    
    ff2a:	fa                   	cli    
    ff2b:	fa                   	cli    
    ff2c:	fa                   	cli    
    ff2d:	fa                   	cli    
    ff2e:	fa                   	cli    
    ff2f:	fa                   	cli    
    ff30:	fa                   	cli    
    ff31:	fa                   	cli    
    ff32:	fa                   	cli    
    ff33:	fa                   	cli    
    ff34:	fa                   	cli    
    ff35:	fa                   	cli    
    ff36:	fa                   	cli    
    ff37:	fa                   	cli    
    ff38:	fa                   	cli    
    ff39:	fa                   	cli    
    ff3a:	fa                   	cli    
    ff3b:	fa                   	cli    
    ff3c:	fa                   	cli    
    ff3d:	fa                   	cli    
    ff3e:	fa                   	cli    
    ff3f:	fa                   	cli    
    ff40:	fa                   	cli    
    ff41:	fa                   	cli    
    ff42:	fa                   	cli    
    ff43:	fa                   	cli    
    ff44:	fa                   	cli    
    ff45:	fa                   	cli    
    ff46:	fa                   	cli    
    ff47:	fa                   	cli    
    ff48:	fa                   	cli    
    ff49:	fa                   	cli    
    ff4a:	fa                   	cli    
    ff4b:	fa                   	cli    
    ff4c:	fa                   	cli    
    ff4d:	fa                   	cli    
    ff4e:	fa                   	cli    
    ff4f:	fa                   	cli    
    ff50:	fa                   	cli    
    ff51:	fa                   	cli    
    ff52:	fa                   	cli    
    ff53:	fa                   	cli    
    ff54:	fa                   	cli    
    ff55:	fa                   	cli    
    ff56:	fa                   	cli    
    ff57:	fa                   	cli    
    ff58:	fa                   	cli    
    ff59:	fa                   	cli    
    ff5a:	fa                   	cli    
    ff5b:	fa                   	cli    
    ff5c:	fa                   	cli    
    ff5d:	fa                   	cli    
    ff5e:	fa                   	cli    
    ff5f:	fa                   	cli    
    ff60:	fa                   	cli    
    ff61:	fa                   	cli    
    ff62:	fa                   	cli    
    ff63:	fa                   	cli    
    ff64:	fa                   	cli    
    ff65:	fa                   	cli    
    ff66:	fa                   	cli    
    ff67:	fa                   	cli    
    ff68:	fa                   	cli    
    ff69:	fa                   	cli    
    ff6a:	fa                   	cli    
    ff6b:	fa                   	cli    
    ff6c:	fa                   	cli    
    ff6d:	fa                   	cli    
    ff6e:	fa                   	cli    
    ff6f:	fa                   	cli    
    ff70:	fa                   	cli    
    ff71:	fa                   	cli    
    ff72:	fa                   	cli    
    ff73:	fa                   	cli    
    ff74:	fa                   	cli    
    ff75:	fa                   	cli    
    ff76:	fa                   	cli    
    ff77:	fa                   	cli    
    ff78:	fa                   	cli    
    ff79:	fa                   	cli    
    ff7a:	fa                   	cli    
    ff7b:	fa                   	cli    
    ff7c:	fa                   	cli    
    ff7d:	fa                   	cli    
    ff7e:	fa                   	cli    
    ff7f:	fa                   	cli    
    ff80:	fa                   	cli    
    ff81:	fa                   	cli    
    ff82:	fa                   	cli    
    ff83:	fa                   	cli    
    ff84:	fa                   	cli    
    ff85:	fa                   	cli    
    ff86:	fa                   	cli    
    ff87:	fa                   	cli    
    ff88:	fa                   	cli    
    ff89:	fa                   	cli    
    ff8a:	fa                   	cli    
    ff8b:	fa                   	cli    
    ff8c:	fa                   	cli    
    ff8d:	fa                   	cli    
    ff8e:	fa                   	cli    
    ff8f:	fa                   	cli    
    ff90:	fa                   	cli    
    ff91:	fa                   	cli    
    ff92:	fa                   	cli    
    ff93:	fa                   	cli    
    ff94:	fa                   	cli    
    ff95:	fa                   	cli    
    ff96:	fa                   	cli    
    ff97:	fa                   	cli    
    ff98:	fa                   	cli    
    ff99:	fa                   	cli    
    ff9a:	fa                   	cli    
    ff9b:	fa                   	cli    
    ff9c:	fa                   	cli    
    ff9d:	fa                   	cli    
    ff9e:	fa                   	cli    
    ff9f:	fa                   	cli    
    ffa0:	fa                   	cli    
    ffa1:	fa                   	cli    
    ffa2:	fa                   	cli    
    ffa3:	fa                   	cli    
    ffa4:	fa                   	cli    
    ffa5:	fa                   	cli    
    ffa6:	fa                   	cli    
    ffa7:	fa                   	cli    
    ffa8:	fa                   	cli    
    ffa9:	fa                   	cli    
    ffaa:	fa                   	cli    
    ffab:	fa                   	cli    
    ffac:	fa                   	cli    
    ffad:	fa                   	cli    
    ffae:	fa                   	cli    
    ffaf:	fa                   	cli    
    ffb0:	fa                   	cli    
    ffb1:	fa                   	cli    
    ffb2:	fa                   	cli    
    ffb3:	fa                   	cli    
    ffb4:	fa                   	cli    
    ffb5:	fa                   	cli    
    ffb6:	fa                   	cli    
    ffb7:	fa                   	cli    
    ffb8:	fa                   	cli    
    ffb9:	fa                   	cli    
    ffba:	fa                   	cli    
    ffbb:	fa                   	cli    
    ffbc:	fa                   	cli    
    ffbd:	fa                   	cli    
    ffbe:	fa                   	cli    
    ffbf:	fa                   	cli    
    ffc0:	fa                   	cli    
    ffc1:	fa                   	cli    
    ffc2:	fa                   	cli    
    ffc3:	fa                   	cli    

0000ffc4 <irq13ESP>:
irq13ESP():
    ffc4:	00 00                	add    BYTE PTR [eax],al
    ffc6:	10 00                	adc    BYTE PTR [eax],al
    ffc8:	10 00                	adc    BYTE PTR [eax],al
	...

0000ffcc <irq13SavedESP>:
	...

0000ffd4 <irq14ESP>:
irq14ESP():
    ffd4:	00 00                	add    BYTE PTR [eax],al
    ffd6:	10 00                	adc    BYTE PTR [eax],al
    ffd8:	10 00                	adc    BYTE PTR [eax],al
	...

0000ffdc <irq14SavedESP>:
	...

0000ffe4 <espForFatalExceptions>:
espForFatalExceptions():
    ffe4:	00 00                	add    BYTE PTR [eax],al
    ffe6:	10 00                	adc    BYTE PTR [eax],al
    ffe8:	10 00                	adc    BYTE PTR [eax],al
	...

0000ffec <savedESP>:
	...

0000fff4 <bufr>:
	...

00010004 <savedESP_irq0>:
	...

00010014 <debugReturnFlags>:
	...

0001001c <debugESP>:
debugESP():
   1001c:	00 00                	add    BYTE PTR [eax],al
	...

00010020 <_isr_00_wrapper>:
_isr_00_wrapper():
   10020:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10026:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1002b:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10031:	89 e5                	mov    ebp,esp
   10033:	66 b8 00 00          	mov    ax,0x0
   10037:	e9 5e 01 00 00       	jmp    1019a <isr_My_Common>

0001003c <_isr_02_wrapper>:
_isr_02_wrapper():
   1003c:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10042:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10047:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1004d:	89 e5                	mov    ebp,esp
   1004f:	66 b8 02 00          	mov    ax,0x2
   10053:	e9 42 01 00 00       	jmp    1019a <isr_My_Common>

00010058 <_isr_03_wrapper>:
_isr_03_wrapper():
   10058:	66 81 4c 24 08 00 01 	or     WORD PTR [esp+0x8],0x100
   1005f:	60                   	pusha  
   10060:	e8 4b 91 00 00       	call   191b0 <activateDebugger>
   10065:	61                   	popa   
   10066:	fb                   	sti    
   10067:	cf                   	iret   

00010068 <_isr_04_wrapper>:
_isr_04_wrapper():
   10068:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1006e:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10073:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10079:	89 e5                	mov    ebp,esp
   1007b:	66 b8 04 00          	mov    ax,0x4
   1007f:	e9 16 01 00 00       	jmp    1019a <isr_My_Common>

00010084 <_isr_05_wrapper>:
_isr_05_wrapper():
   10084:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1008a:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1008f:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10095:	89 e5                	mov    ebp,esp
   10097:	66 b8 05 00          	mov    ax,0x5
   1009b:	e9 fa 00 00 00       	jmp    1019a <isr_My_Common>

000100a0 <_isr_06_wrapper>:
_isr_06_wrapper():
   100a0:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   100a6:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   100ab:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   100b1:	89 e5                	mov    ebp,esp
   100b3:	66 b8 06 00          	mov    ax,0x6
   100b7:	e9 de 00 00 00       	jmp    1019a <isr_My_Common>

000100bc <_isr_07_wrapper>:
_isr_07_wrapper():
   100bc:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   100c2:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   100c7:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   100cd:	89 e5                	mov    ebp,esp
   100cf:	66 b8 07 00          	mov    ax,0x7
   100d3:	e9 c2 00 00 00       	jmp    1019a <isr_My_Common>

000100d8 <_isr_08_wrapper>:
_isr_08_wrapper():
   100d8:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   100de:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   100e3:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   100e9:	89 e5                	mov    ebp,esp
   100eb:	66 b8 08 00          	mov    ax,0x8
   100ef:	e9 a6 00 00 00       	jmp    1019a <isr_My_Common>
   100f4:	66 bb 0a 00          	mov    bx,0xa
   100f8:	8e db                	mov    ds,ebx
   100fa:	8e c3                	mov    es,ebx
   100fc:	8e e3                	mov    fs,ebx
   100fe:	8e eb                	mov    gs,ebx
   10100:	e8 8b 83 00 00       	call   18490 <doubleFaultHandler>

00010105 <_isr_09_wrapper>:
_isr_09_wrapper():
   10105:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1010b:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10110:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10116:	89 e5                	mov    ebp,esp
   10118:	66 b8 09 00          	mov    ax,0x9
   1011c:	eb 7c                	jmp    1019a <isr_My_Common>

0001011e <_isr_10_wrapper>:
_isr_10_wrapper():
   1011e:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10124:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10129:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1012f:	89 e5                	mov    ebp,esp
   10131:	66 b8 0a 00          	mov    ax,0xa
   10135:	eb 63                	jmp    1019a <isr_My_Common>

00010137 <_isr_11_wrapper>:
_isr_11_wrapper():
   10137:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1013d:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10142:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10148:	89 e5                	mov    ebp,esp
   1014a:	66 b8 0b 00          	mov    ax,0xb
   1014e:	eb 4a                	jmp    1019a <isr_My_Common>

00010150 <_isr_12_wrapper>:
_isr_12_wrapper():
   10150:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10156:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1015b:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10161:	89 e5                	mov    ebp,esp
   10163:	66 b8 0c 00          	mov    ax,0xc
   10167:	eb 31                	jmp    1019a <isr_My_Common>

00010169 <_isr_13_wrapper>:
_isr_13_wrapper():
   10169:	fa                   	cli    
   1016a:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10170:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10175:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1017b:	89 e5                	mov    ebp,esp
   1017d:	66 b8 0d 00          	mov    ax,0xd
   10181:	eb 17                	jmp    1019a <isr_My_Common>

00010183 <_isr_14_wrapper>:
_isr_14_wrapper():
   10183:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10189:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1018e:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10194:	89 e5                	mov    ebp,esp
   10196:	66 b8 0e 00          	mov    ax,0xe

0001019a <isr_My_Common>:
isr_My_Common():
   1019a:	66 a3 e4 96 12 00    	mov    ds:0x1296e4,ax
   101a0:	60                   	pusha  
   101a1:	8c d8                	mov    eax,ds
   101a3:	a3 18 97 12 00       	mov    ds:0x129718,eax
   101a8:	89 1d f4 96 12 00    	mov    DWORD PTR ds:0x1296f4,ebx
   101ae:	89 0d f8 96 12 00    	mov    DWORD PTR ds:0x1296f8,ecx
   101b4:	89 15 fc 96 12 00    	mov    DWORD PTR ds:0x1296fc,edx
   101ba:	89 35 00 97 12 00    	mov    DWORD PTR ds:0x129700,esi
   101c0:	89 3d 04 97 12 00    	mov    DWORD PTR ds:0x129704,edi
   101c6:	0f 00 0d 44 97 12 00 	str    WORD PTR ds:0x129744
   101cd:	0f 20 c0             	mov    eax,cr0
   101d0:	a3 0c 97 12 00       	mov    ds:0x12970c,eax
   101d5:	0f 20 d8             	mov    eax,cr3
   101d8:	a3 10 97 12 00       	mov    ds:0x129710,eax
   101dd:	0f 20 e0             	mov    eax,cr4
   101e0:	a3 14 97 12 00       	mov    ds:0x129714,eax
   101e5:	8c c0                	mov    eax,es
   101e7:	a3 1c 97 12 00       	mov    ds:0x12971c,eax
   101ec:	8c e0                	mov    eax,fs
   101ee:	a3 20 97 12 00       	mov    ds:0x129720,eax
   101f3:	8c e8                	mov    eax,gs
   101f5:	a3 24 97 12 00       	mov    ds:0x129724,eax
   101fa:	8c d0                	mov    eax,ss
   101fc:	a3 28 97 12 00       	mov    ds:0x129728,eax
   10201:	a1 f0 96 12 00       	mov    eax,ds:0x1296f0
   10206:	66 bb 10 00          	mov    bx,0x10
   1020a:	8e db                	mov    ds,ebx
   1020c:	8e c3                	mov    es,ebx
   1020e:	8e eb                	mov    gs,ebx
   10210:	8b 1d e4 96 12 00    	mov    ebx,DWORD PTR ds:0x1296e4
   10216:	8a 9b 8c 06 01 00    	mov    bl,BYTE PTR [ebx+0x1068c]
   1021c:	80 fb 01             	cmp    bl,0x1
   1021f:	74 1f                	je     10240 <getExceptionDetailsWithError>
   10221:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
   10224:	89 1d 30 97 12 00    	mov    DWORD PTR ds:0x129730,ebx
   1022a:	66 8b 5d 04          	mov    bx,WORD PTR [ebp+0x4]
   1022e:	66 89 1d 3c 97 12 00 	mov    WORD PTR ds:0x12973c,bx
   10235:	8b 5d 00             	mov    ebx,DWORD PTR [ebp+0x0]
   10238:	89 1d 38 97 12 00    	mov    DWORD PTR ds:0x129738,ebx
   1023e:	eb 33                	jmp    10273 <saveTheStack>

00010240 <getExceptionDetailsWithError>:
getExceptionDetailsWithError():
   10240:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
   10243:	89 1d 30 97 12 00    	mov    DWORD PTR ds:0x129730,ebx
   10249:	66 8b 5d 08          	mov    bx,WORD PTR [ebp+0x8]
   1024d:	66 89 1d 3c 97 12 00 	mov    WORD PTR ds:0x12973c,bx
   10254:	8b 5d 04             	mov    ebx,DWORD PTR [ebp+0x4]
   10257:	89 1d 38 97 12 00    	mov    DWORD PTR ds:0x129738,ebx
   1025d:	0f 20 d3             	mov    ebx,cr2
   10260:	89 1d 40 97 12 00    	mov    DWORD PTR ds:0x129740,ebx
   10266:	8b 5d 00             	mov    ebx,DWORD PTR [ebp+0x0]
   10269:	0f b7 db             	movzx  ebx,bx
   1026c:	66 89 1d 34 97 12 00 	mov    WORD PTR ds:0x129734,bx

00010273 <saveTheStack>:
saveTheStack():
   10273:	eb 13                	jmp    10288 <overSaveTheStack>
   10275:	8b 35 2c 97 12 00    	mov    esi,DWORD PTR ds:0x12972c
   1027b:	8b 3d e8 96 12 00    	mov    edi,DWORD PTR ds:0x1296e8
   10281:	66 b9 1e 00          	mov    cx,0x1e
   10285:	fc                   	cld    
   10286:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]

00010288 <overSaveTheStack>:
overSaveTheStack():
   10288:	66 a1 e4 96 12 00    	mov    ax,ds:0x1296e4
   1028e:	66 83 f8 0e          	cmp    ax,0xe
   10292:	75 07                	jne    1029b <notPagingHandler>
   10294:	e8 d7 7f 00 00       	call   18270 <pagingExceptionHandler>
   10299:	eb 05                	jmp    102a0 <onTheWayOut>

0001029b <notPagingHandler>:
notPagingHandler():
   1029b:	e8 a0 81 00 00       	call   18440 <defaultISRHandler>

000102a0 <onTheWayOut>:
onTheWayOut():
   102a0:	61                   	popa   
   102a1:	8b 25 2c 97 12 00    	mov    esp,DWORD PTR ds:0x12972c
   102a7:	8b 1d e4 96 12 00    	mov    ebx,DWORD PTR ds:0x1296e4
   102ad:	8a 9b 8c 06 01 00    	mov    bl,BYTE PTR [ebx+0x1068c]
   102b3:	80 fb 01             	cmp    bl,0x1
   102b6:	75 03                	jne    102bb <overCorrection>
   102b8:	83 c4 04             	add    esp,0x4

000102bb <overCorrection>:
overCorrection():
   102bb:	66 8b 1d 18 97 12 00 	mov    bx,WORD PTR ds:0x129718
   102c2:	8e db                	mov    ds,ebx
   102c4:	66 8b 1d 1c 97 12 00 	mov    bx,WORD PTR ds:0x12971c
   102cb:	8e c3                	mov    es,ebx
   102cd:	66 8b 1d 20 97 12 00 	mov    bx,WORD PTR ds:0x129720
   102d4:	8e e3                	mov    fs,ebx
   102d6:	66 8b 1d 24 97 12 00 	mov    bx,WORD PTR ds:0x129724
   102dd:	8e eb                	mov    gs,ebx
   102df:	8b 2d 08 97 12 00    	mov    ebp,DWORD PTR ds:0x129708
   102e5:	8b 1d f4 96 12 00    	mov    ebx,DWORD PTR ds:0x1296f4
   102eb:	a1 f0 96 12 00       	mov    eax,ds:0x1296f0
   102f0:	fb                   	sti    
   102f1:	cf                   	iret   

000102f2 <_isr_15_wrapper>:
_isr_15_wrapper():
   102f2:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   102f8:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   102fd:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10303:	89 e5                	mov    ebp,esp
   10305:	66 b8 0f 00          	mov    ax,0xf
   10309:	e9 8c fe ff ff       	jmp    1019a <isr_My_Common>

0001030e <_isr_16_wrapper>:
_isr_16_wrapper():
   1030e:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10314:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10319:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1031f:	89 e5                	mov    ebp,esp
   10321:	66 b8 10 00          	mov    ax,0x10
   10325:	e9 70 fe ff ff       	jmp    1019a <isr_My_Common>

0001032a <_isr_17_wrapper>:
_isr_17_wrapper():
   1032a:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10330:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10335:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1033b:	89 e5                	mov    ebp,esp
   1033d:	66 b8 11 00          	mov    ax,0x11
   10341:	e9 54 fe ff ff       	jmp    1019a <isr_My_Common>

00010346 <_isr_18_wrapper>:
_isr_18_wrapper():
   10346:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1034c:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10351:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10357:	89 e5                	mov    ebp,esp
   10359:	66 b8 12 00          	mov    ax,0x12
   1035d:	e9 38 fe ff ff       	jmp    1019a <isr_My_Common>

00010362 <_isr_19_wrapper>:
_isr_19_wrapper():
   10362:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10368:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1036d:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10373:	89 e5                	mov    ebp,esp
   10375:	66 b8 13 00          	mov    ax,0x13
   10379:	e9 1c fe ff ff       	jmp    1019a <isr_My_Common>

0001037e <_isr_20_wrapper>:
_isr_20_wrapper():
   1037e:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10384:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10389:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1038f:	89 e5                	mov    ebp,esp
   10391:	66 b8 14 00          	mov    ax,0x14
   10395:	e9 00 fe ff ff       	jmp    1019a <isr_My_Common>

0001039a <_isr_21_wrapper>:
_isr_21_wrapper():
   1039a:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   103a0:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   103a5:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   103ab:	89 e5                	mov    ebp,esp
   103ad:	66 b8 15 00          	mov    ax,0x15
   103b1:	e9 e4 fd ff ff       	jmp    1019a <isr_My_Common>

000103b6 <_isr_22_wrapper>:
_isr_22_wrapper():
   103b6:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   103bc:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   103c1:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   103c7:	89 e5                	mov    ebp,esp
   103c9:	66 b8 16 00          	mov    ax,0x16
   103cd:	e9 c8 fd ff ff       	jmp    1019a <isr_My_Common>

000103d2 <_isr_23_wrapper>:
_isr_23_wrapper():
   103d2:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   103d8:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   103dd:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   103e3:	89 e5                	mov    ebp,esp
   103e5:	66 b8 17 00          	mov    ax,0x17
   103e9:	e9 ac fd ff ff       	jmp    1019a <isr_My_Common>

000103ee <_isr_24_wrapper>:
_isr_24_wrapper():
   103ee:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   103f4:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   103f9:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   103ff:	89 e5                	mov    ebp,esp
   10401:	66 b8 18 00          	mov    ax,0x18
   10405:	e9 90 fd ff ff       	jmp    1019a <isr_My_Common>

0001040a <_isr_25_wrapper>:
_isr_25_wrapper():
   1040a:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10410:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10415:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1041b:	89 e5                	mov    ebp,esp
   1041d:	66 b8 19 00          	mov    ax,0x19
   10421:	e9 74 fd ff ff       	jmp    1019a <isr_My_Common>

00010426 <_isr_26_wrapper>:
_isr_26_wrapper():
   10426:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1042c:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10431:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10437:	89 e5                	mov    ebp,esp
   10439:	66 b8 1a 00          	mov    ax,0x1a
   1043d:	e9 58 fd ff ff       	jmp    1019a <isr_My_Common>

00010442 <_isr_27_wrapper>:
_isr_27_wrapper():
   10442:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10448:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1044d:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10453:	89 e5                	mov    ebp,esp
   10455:	66 b8 1b 00          	mov    ax,0x1b
   10459:	e9 3c fd ff ff       	jmp    1019a <isr_My_Common>

0001045e <_isr_28_wrapper>:
_isr_28_wrapper():
   1045e:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10464:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10469:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1046f:	89 e5                	mov    ebp,esp
   10471:	66 b8 1c 00          	mov    ax,0x1c
   10475:	e9 20 fd ff ff       	jmp    1019a <isr_My_Common>

0001047a <_isr_29_wrapper>:
_isr_29_wrapper():
   1047a:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   10480:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10485:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1048b:	89 e5                	mov    ebp,esp
   1048d:	66 b8 1d 00          	mov    ax,0x1d
   10491:	e9 04 fd ff ff       	jmp    1019a <isr_My_Common>

00010496 <_isr_30_wrapper>:
_isr_30_wrapper():
   10496:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1049c:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   104a1:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   104a7:	89 e5                	mov    ebp,esp
   104a9:	66 b8 1e 00          	mov    ax,0x1e
   104ad:	e9 e8 fc ff ff       	jmp    1019a <isr_My_Common>

000104b2 <_isr_31_wrapper>:
_isr_31_wrapper():
   104b2:	fa                   	cli    
   104b3:	89 2d 60 97 12 00    	mov    DWORD PTR ds:0x129760,ebp
   104b9:	89 25 84 97 12 00    	mov    DWORD PTR ds:0x129784,esp
   104bf:	89 25 1c 00 01 00    	mov    DWORD PTR ds:0x1001c,esp
   104c5:	60                   	pusha  
   104c6:	8b 2d 1c 00 01 00    	mov    ebp,DWORD PTR ds:0x1001c
   104cc:	89 1d 4c 97 12 00    	mov    DWORD PTR ds:0x12974c,ebx
   104d2:	8b 1d 84 97 12 00    	mov    ebx,DWORD PTR ds:0x129784
   104d8:	83 c3 0c             	add    ebx,0xc
   104db:	89 1d 84 97 12 00    	mov    DWORD PTR ds:0x129784,ebx
   104e1:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
   104e4:	89 1d 88 97 12 00    	mov    DWORD PTR ds:0x129788,ebx
   104ea:	89 1d 14 00 01 00    	mov    DWORD PTR ds:0x10014,ebx
   104f0:	66 8b 5d 04          	mov    bx,WORD PTR [ebp+0x4]
   104f4:	66 89 1d 90 97 12 00 	mov    WORD PTR ds:0x129790,bx
   104fb:	8b 5d 00             	mov    ebx,DWORD PTR [ebp+0x0]
   104fe:	89 1d 94 97 12 00    	mov    DWORD PTR ds:0x129794,ebx
   10504:	89 0d 50 97 12 00    	mov    DWORD PTR ds:0x129750,ecx
   1050a:	89 15 54 97 12 00    	mov    DWORD PTR ds:0x129754,edx
   10510:	89 35 58 97 12 00    	mov    DWORD PTR ds:0x129758,esi
   10516:	89 3d 5c 97 12 00    	mov    DWORD PTR ds:0x12975c,edi
   1051c:	a3 48 97 12 00       	mov    ds:0x129748,eax
   10521:	66 8c d8             	mov    ax,ds
   10524:	a3 70 97 12 00       	mov    ds:0x129770,eax
   10529:	0f 20 c0             	mov    eax,cr0
   1052c:	a3 64 97 12 00       	mov    ds:0x129764,eax
   10531:	0f 20 d8             	mov    eax,cr3
   10534:	a3 68 97 12 00       	mov    ds:0x129768,eax
   10539:	0f 20 e0             	mov    eax,cr4
   1053c:	a3 6c 97 12 00       	mov    ds:0x12976c,eax
   10541:	8c c0                	mov    eax,es
   10543:	a3 74 97 12 00       	mov    ds:0x129774,eax
   10548:	8c e0                	mov    eax,fs
   1054a:	a3 78 97 12 00       	mov    ds:0x129778,eax
   1054f:	8c e8                	mov    eax,gs
   10551:	a3 7c 97 12 00       	mov    ds:0x12977c,eax
   10556:	8c d0                	mov    eax,ss
   10558:	a3 80 97 12 00       	mov    ds:0x129780,eax
   1055d:	8b 35 84 97 12 00    	mov    esi,DWORD PTR ds:0x129784
   10563:	8b 3d ec 96 12 00    	mov    edi,DWORD PTR ds:0x1296ec
   10569:	66 b9 1e 00          	mov    cx,0x1e
   1056d:	fc                   	cld    
   1056e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10570:	e8 0b 8d 00 00       	call   19280 <debugStep>
   10575:	61                   	popa   
   10576:	fb                   	sti    
   10577:	cf                   	iret   

00010578 <_isr_32_wrapper>:
_isr_32_wrapper():
   10578:	89 25 2c 97 12 00    	mov    DWORD PTR ds:0x12972c,esp
   1057e:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   10583:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   10589:	89 e5                	mov    ebp,esp
   1058b:	66 b8 20 00          	mov    ax,0x20
   1058f:	e9 06 fc ff ff       	jmp    1019a <isr_My_Common>

00010594 <_irq0_handler>:
_irq0_handler():
   10594:	fa                   	cli    
   10595:	55                   	push   ebp
   10596:	9c                   	pushf  
   10597:	89 e5                	mov    ebp,esp
   10599:	83 c5 04             	add    ebp,0x4
   1059c:	50                   	push   eax
   1059d:	66 b8 ff ff          	mov    ax,0xffff
   105a1:	fc                   	cld    
   105a2:	53                   	push   ebx
   105a3:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
   105a6:	89 1d 30 97 12 00    	mov    DWORD PTR ds:0x129730,ebx
   105ac:	66 8b 5d 08          	mov    bx,WORD PTR [ebp+0x8]
   105b0:	66 89 1d 3c 97 12 00 	mov    WORD PTR ds:0x12973c,bx
   105b7:	8b 5d 04             	mov    ebx,DWORD PTR [ebp+0x4]
   105ba:	89 1d 38 97 12 00    	mov    DWORD PTR ds:0x129738,ebx
   105c0:	5b                   	pop    ebx
   105c1:	60                   	pusha  
   105c2:	66 bb 10 00          	mov    bx,0x10
   105c6:	8e db                	mov    ds,ebx
   105c8:	8e c3                	mov    es,ebx
   105ca:	8e eb                	mov    gs,ebx
   105cc:	e8 af 77 00 00       	call   17d80 <irq0_handler>
   105d1:	61                   	popa   
   105d2:	b0 20                	mov    al,0x20
   105d4:	e6 20                	out    0x20,al
   105d6:	58                   	pop    eax
   105d7:	9d                   	popf   
   105d8:	5d                   	pop    ebp
   105d9:	fb                   	sti    
   105da:	cf                   	iret   

000105db <_isr_01_wrapper>:
_isr_01_wrapper():
   105db:	fa                   	cli    
   105dc:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   105e1:	89 1d f4 96 12 00    	mov    DWORD PTR ds:0x1296f4,ebx
   105e7:	89 0d f8 96 12 00    	mov    DWORD PTR ds:0x1296f8,ecx
   105ed:	89 15 fc 96 12 00    	mov    DWORD PTR ds:0x1296fc,edx
   105f3:	89 35 00 97 12 00    	mov    DWORD PTR ds:0x129700,esi
   105f9:	89 3d 04 97 12 00    	mov    DWORD PTR ds:0x129704,edi
   105ff:	0f 00 0d 44 97 12 00 	str    WORD PTR ds:0x129744
   10606:	89 2d 08 97 12 00    	mov    DWORD PTR ds:0x129708,ebp
   1060c:	0f 20 c0             	mov    eax,cr0
   1060f:	a3 0c 97 12 00       	mov    ds:0x12970c,eax
   10614:	0f 20 d8             	mov    eax,cr3
   10617:	a3 10 97 12 00       	mov    ds:0x129710,eax
   1061c:	0f 20 e0             	mov    eax,cr4
   1061f:	a3 14 97 12 00       	mov    ds:0x129714,eax
   10624:	a1 f0 96 12 00       	mov    eax,ds:0x1296f0
   10629:	60                   	pusha  
   1062a:	9c                   	pushf  
   1062b:	89 e5                	mov    ebp,esp
   1062d:	83 c5 24             	add    ebp,0x24
   10630:	66 b8 01 00          	mov    ax,0x1
   10634:	fc                   	cld    
   10635:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
   10638:	89 1d 30 97 12 00    	mov    DWORD PTR ds:0x129730,ebx
   1063e:	66 8b 5d 04          	mov    bx,WORD PTR [ebp+0x4]
   10642:	66 89 1d 3c 97 12 00 	mov    WORD PTR ds:0x12973c,bx
   10649:	8b 5d 00             	mov    ebx,DWORD PTR [ebp+0x0]
   1064c:	89 1d 38 97 12 00    	mov    DWORD PTR ds:0x129738,ebx
   10652:	66 bb 10 00          	mov    bx,0x10
   10656:	8e db                	mov    ds,ebx
   10658:	8e c3                	mov    es,ebx
   1065a:	8e eb                	mov    gs,ebx
   1065c:	e8 3f 78 00 00       	call   17ea0 <kbd_handler>
   10661:	9d                   	popf   
   10662:	61                   	popa   
   10663:	b0 20                	mov    al,0x20
   10665:	e6 20                	out    0x20,al
   10667:	a0 74 35 09 00       	mov    al,ds:0x93574
   1066c:	3c 01                	cmp    al,0x1
   1066e:	75 13                	jne    10683 <done>
   10670:	66 81 4c 24 08 00 01 	or     WORD PTR [esp+0x8],0x100
   10677:	b0 00                	mov    al,0x0
   10679:	a2 74 35 09 00       	mov    ds:0x93574,al
   1067e:	a1 f0 96 12 00       	mov    eax,ds:0x1296f0

00010683 <done>:
done():
   10683:	fb                   	sti    
   10684:	cf                   	iret   

00010685 <_call_gate_wrapper>:
_call_gate_wrapper():
   10685:	1e                   	push   ds
   10686:	06                   	push   es
   10687:	60                   	pusha  
   10688:	61                   	popa   
   10689:	07                   	pop    es
   1068a:	1f                   	pop    ds
   1068b:	cb                   	retf   

0001068c <_isr_has_errorCode>:
	...
_isr_has_errorCode():
   10694:	01 00                	add    DWORD PTR [eax],eax
   10696:	01 01                	add    DWORD PTR [ecx],eax
   10698:	01 01                	add    DWORD PTR [ecx],eax
   1069a:	01 00                	add    DWORD PTR [eax],eax
   1069c:	00 01                	add    BYTE PTR [ecx],al
	...

000106ac <_ltr>:
_ltr():
   106ac:	66 50                	push   ax
   106ae:	66 b8 58 00          	mov    ax,0x58
   106b2:	0f 00 d8             	ltr    ax
   106b5:	66 58                	pop    ax
   106b7:	c3                   	ret    
   106b8:	66 90                	xchg   ax,ax
   106ba:	66 90                	xchg   ax,ax
   106bc:	66 90                	xchg   ax,ax
   106be:	66 90                	xchg   ax,ax

000106c0 <_fmt>:
_fmt():
   106c0:	55                   	push   ebp
   106c1:	57                   	push   edi
   106c2:	89 cd                	mov    ebp,ecx
   106c4:	56                   	push   esi
   106c5:	53                   	push   ebx
   106c6:	83 ec 7c             	sub    esp,0x7c
   106c9:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
   106cd:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   106d0:	8b bc 24 90 00 00 00 	mov    edi,DWORD PTR [esp+0x90]
   106d7:	84 d2                	test   dl,dl
   106d9:	75 1f                	jne    106fa <_fmt+0x3a>
   106db:	eb 43                	jmp    10720 <_fmt+0x60>
   106dd:	8d 76 00             	lea    esi,[esi+0x0]
   106e0:	39 ef                	cmp    edi,ebp
   106e2:	74 3c                	je     10720 <_fmt+0x60>
   106e4:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   106e7:	83 c5 01             	add    ebp,0x1
   106ea:	89 c3                	mov    ebx,eax
   106ec:	88 55 ff             	mov    BYTE PTR [ebp-0x1],dl
   106ef:	0f b6 53 01          	movzx  edx,BYTE PTR [ebx+0x1]
   106f3:	8d 43 01             	lea    eax,[ebx+0x1]
   106f6:	84 d2                	test   dl,dl
   106f8:	74 26                	je     10720 <_fmt+0x60>
   106fa:	80 fa 25             	cmp    dl,0x25
   106fd:	75 e1                	jne    106e0 <_fmt+0x20>
   106ff:	0f b6 48 01          	movzx  ecx,BYTE PTR [eax+0x1]
   10703:	8d 58 01             	lea    ebx,[eax+0x1]
   10706:	80 f9 7a             	cmp    cl,0x7a
   10709:	88 4c 24 10          	mov    BYTE PTR [esp+0x10],cl
   1070d:	0f 87 5c 0d 00 00    	ja     1146f <_fmt+0xdaf>
   10713:	0f b6 d1             	movzx  edx,cl
   10716:	ff 24 95 00 b0 03 00 	jmp    DWORD PTR [edx*4+0x3b000]
   1071d:	8d 76 00             	lea    esi,[esi+0x0]
   10720:	83 c4 7c             	add    esp,0x7c
   10723:	89 e8                	mov    eax,ebp
   10725:	5b                   	pop    ebx
   10726:	5e                   	pop    esi
   10727:	5f                   	pop    edi
   10728:	5d                   	pop    ebp
   10729:	c3                   	ret    
   1072a:	8b 0d d0 97 12 00    	mov    ecx,DWORD PTR ds:0x1297d0
   10730:	85 c9                	test   ecx,ecx
   10732:	0f 88 3a 0f 00 00    	js     11672 <_fmt+0xfb2>
   10738:	39 ef                	cmp    edi,ebp
   1073a:	0f 86 ff 0d 00 00    	jbe    1153f <_fmt+0xe7f>
   10740:	8d 75 01             	lea    esi,[ebp+0x1]
   10743:	c6 45 00 2b          	mov    BYTE PTR [ebp+0x0],0x2b
   10747:	39 f7                	cmp    edi,esi
   10749:	0f 86 f2 0d 00 00    	jbe    11541 <_fmt+0xe81>
   1074f:	89 c8                	mov    eax,ecx
   10751:	ba c5 b3 a2 91       	mov    edx,0x91a2b3c5
   10756:	83 ec 04             	sub    esp,0x4
   10759:	f7 ea                	imul   edx
   1075b:	89 4c 24 14          	mov    DWORD PTR [esp+0x14],ecx
   1075f:	c6 45 01 00          	mov    BYTE PTR [ebp+0x1],0x0
   10763:	8d 04 0a             	lea    eax,[edx+ecx*1]
   10766:	89 ca                	mov    edx,ecx
   10768:	c1 fa 1f             	sar    edx,0x1f
   1076b:	c1 f8 0b             	sar    eax,0xb
   1076e:	29 d0                	sub    eax,edx
   10770:	50                   	push   eax
   10771:	68 63 00 04 00       	push   0x40063
   10776:	8d 44 24 50          	lea    eax,[esp+0x50]
   1077a:	50                   	push   eax
   1077b:	e8 40 1f 01 00       	call   226c0 <sprintf>
   10780:	0f b6 54 24 54       	movzx  edx,BYTE PTR [esp+0x54]
   10785:	83 c4 10             	add    esp,0x10
   10788:	8d 44 24 45          	lea    eax,[esp+0x45]
   1078c:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   10790:	84 d2                	test   dl,dl
   10792:	88 16                	mov    BYTE PTR [esi],dl
   10794:	75 1b                	jne    107b1 <_fmt+0xf1>
   10796:	e9 10 0e 00 00       	jmp    115ab <_fmt+0xeeb>
   1079b:	90                   	nop
   1079c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   107a0:	83 c0 01             	add    eax,0x1
   107a3:	0f b6 50 ff          	movzx  edx,BYTE PTR [eax-0x1]
   107a7:	84 d2                	test   dl,dl
   107a9:	88 16                	mov    BYTE PTR [esi],dl
   107ab:	0f 84 fa 0d 00 00    	je     115ab <_fmt+0xeeb>
   107b1:	83 c6 01             	add    esi,0x1
   107b4:	39 f7                	cmp    edi,esi
   107b6:	77 e8                	ja     107a0 <_fmt+0xe0>
   107b8:	89 c8                	mov    eax,ecx
   107ba:	ba c5 b3 a2 91       	mov    edx,0x91a2b3c5
   107bf:	83 ec 04             	sub    esp,0x4
   107c2:	f7 ea                	imul   edx
   107c4:	89 f5                	mov    ebp,esi
   107c6:	8d 04 0a             	lea    eax,[edx+ecx*1]
   107c9:	89 ca                	mov    edx,ecx
   107cb:	c1 fa 1f             	sar    edx,0x1f
   107ce:	c1 f8 0b             	sar    eax,0xb
   107d1:	29 d0                	sub    eax,edx
   107d3:	ba 89 88 88 88       	mov    edx,0x88888889
   107d8:	69 c0 10 0e 00 00    	imul   eax,eax,0xe10
   107de:	29 c1                	sub    ecx,eax
   107e0:	89 c8                	mov    eax,ecx
   107e2:	f7 ea                	imul   edx
   107e4:	8d 04 0a             	lea    eax,[edx+ecx*1]
   107e7:	c1 f9 1f             	sar    ecx,0x1f
   107ea:	c1 f8 05             	sar    eax,0x5
   107ed:	29 c8                	sub    eax,ecx
   107ef:	50                   	push   eax
   107f0:	68 63 00 04 00       	push   0x40063
   107f5:	8d 44 24 50          	lea    eax,[esp+0x50]
   107f9:	50                   	push   eax
   107fa:	e8 c1 1e 01 00       	call   226c0 <sprintf>
   107ff:	83 c4 10             	add    esp,0x10
   10802:	e9 e8 fe ff ff       	jmp    106ef <_fmt+0x2f>
   10807:	83 ec 0c             	sub    esp,0xc
   1080a:	89 e9                	mov    ecx,ebp
   1080c:	b8 b3 00 04 00       	mov    eax,0x400b3
   10811:	57                   	push   edi
   10812:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10816:	e8 a5 fe ff ff       	call   106c0 <_fmt>
   1081b:	83 c4 10             	add    esp,0x10
   1081e:	89 c5                	mov    ebp,eax
   10820:	e9 ca fe ff ff       	jmp    106ef <_fmt+0x2f>
   10825:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10829:	ba 5f 3b 04 00       	mov    edx,0x43b5f
   1082e:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
   10831:	83 f8 06             	cmp    eax,0x6
   10834:	0f 86 79 0c 00 00    	jbe    114b3 <_fmt+0xdf3>
   1083a:	39 ef                	cmp    edi,ebp
   1083c:	0f 86 ad fe ff ff    	jbe    106ef <_fmt+0x2f>
   10842:	8d 42 01             	lea    eax,[edx+0x1]
   10845:	0f b6 12             	movzx  edx,BYTE PTR [edx]
   10848:	84 d2                	test   dl,dl
   1084a:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1084d:	75 1a                	jne    10869 <_fmt+0x1a9>
   1084f:	e9 9b fe ff ff       	jmp    106ef <_fmt+0x2f>
   10854:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   10858:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1085b:	83 c0 01             	add    eax,0x1
   1085e:	84 d2                	test   dl,dl
   10860:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10863:	0f 84 86 fe ff ff    	je     106ef <_fmt+0x2f>
   10869:	83 c5 01             	add    ebp,0x1
   1086c:	39 ef                	cmp    edi,ebp
   1086e:	75 e8                	jne    10858 <_fmt+0x198>
   10870:	89 fd                	mov    ebp,edi
   10872:	e9 78 fe ff ff       	jmp    106ef <_fmt+0x2f>
   10877:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1087b:	ba 5f 3b 04 00       	mov    edx,0x43b5f
   10880:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
   10883:	83 f8 0b             	cmp    eax,0xb
   10886:	0f 86 1b 0c 00 00    	jbe    114a7 <_fmt+0xde7>
   1088c:	39 ef                	cmp    edi,ebp
   1088e:	0f 86 5b fe ff ff    	jbe    106ef <_fmt+0x2f>
   10894:	8d 42 01             	lea    eax,[edx+0x1]
   10897:	0f b6 12             	movzx  edx,BYTE PTR [edx]
   1089a:	84 d2                	test   dl,dl
   1089c:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1089f:	75 20                	jne    108c1 <_fmt+0x201>
   108a1:	e9 49 fe ff ff       	jmp    106ef <_fmt+0x2f>
   108a6:	8d 76 00             	lea    esi,[esi+0x0]
   108a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   108b0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   108b3:	83 c0 01             	add    eax,0x1
   108b6:	84 d2                	test   dl,dl
   108b8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   108bb:	0f 84 2e fe ff ff    	je     106ef <_fmt+0x2f>
   108c1:	83 c5 01             	add    ebp,0x1
   108c4:	39 ef                	cmp    edi,ebp
   108c6:	75 e8                	jne    108b0 <_fmt+0x1f0>
   108c8:	89 fd                	mov    ebp,edi
   108ca:	e9 20 fe ff ff       	jmp    106ef <_fmt+0x2f>
   108cf:	83 ec 04             	sub    esp,0x4
   108d2:	ba 1f 85 eb 51       	mov    edx,0x51eb851f
   108d7:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   108db:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
   108de:	8d 88 6c 07 00 00    	lea    ecx,[eax+0x76c]
   108e4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   108e8:	89 c8                	mov    eax,ecx
   108ea:	c1 f9 1f             	sar    ecx,0x1f
   108ed:	f7 ea                	imul   edx
   108ef:	c1 fa 05             	sar    edx,0x5
   108f2:	29 ca                	sub    edx,ecx
   108f4:	52                   	push   edx
   108f5:	68 63 00 04 00       	push   0x40063
   108fa:	8d 44 24 50          	lea    eax,[esp+0x50]
   108fe:	50                   	push   eax
   108ff:	e8 bc 1d 01 00       	call   226c0 <sprintf>
   10904:	83 c4 10             	add    esp,0x10
   10907:	39 ef                	cmp    edi,ebp
   10909:	0f 86 e0 fd ff ff    	jbe    106ef <_fmt+0x2f>
   1090f:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10914:	84 c0                	test   al,al
   10916:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10919:	0f 84 d0 fd ff ff    	je     106ef <_fmt+0x2f>
   1091f:	8d 44 24 45          	lea    eax,[esp+0x45]
   10923:	eb 14                	jmp    10939 <_fmt+0x279>
   10925:	8d 76 00             	lea    esi,[esi+0x0]
   10928:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1092b:	83 c0 01             	add    eax,0x1
   1092e:	84 d2                	test   dl,dl
   10930:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10933:	0f 84 b6 fd ff ff    	je     106ef <_fmt+0x2f>
   10939:	83 c5 01             	add    ebp,0x1
   1093c:	39 ef                	cmp    edi,ebp
   1093e:	75 e8                	jne    10928 <_fmt+0x268>
   10940:	89 fd                	mov    ebp,edi
   10942:	e9 a8 fd ff ff       	jmp    106ef <_fmt+0x2f>
   10947:	83 ec 0c             	sub    esp,0xc
   1094a:	89 e9                	mov    ecx,ebp
   1094c:	b8 0c 3e 06 00       	mov    eax,0x63e0c
   10951:	57                   	push   edi
   10952:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10956:	e8 65 fd ff ff       	call   106c0 <_fmt>
   1095b:	83 c4 10             	add    esp,0x10
   1095e:	89 c5                	mov    ebp,eax
   10960:	e9 8a fd ff ff       	jmp    106ef <_fmt+0x2f>
   10965:	83 ec 0c             	sub    esp,0xc
   10968:	89 e9                	mov    ecx,ebp
   1096a:	b8 81 00 04 00       	mov    eax,0x40081
   1096f:	57                   	push   edi
   10970:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10974:	e8 47 fd ff ff       	call   106c0 <_fmt>
   10979:	83 c4 10             	add    esp,0x10
   1097c:	89 c5                	mov    ebp,eax
   1097e:	e9 6c fd ff ff       	jmp    106ef <_fmt+0x2f>
   10983:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10987:	89 bc 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],edi
   1098e:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
   10992:	89 6c 24 1c          	mov    DWORD PTR [esp+0x1c],ebp
   10996:	8b 70 14             	mov    esi,DWORD PTR [eax+0x14]
   10999:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
   1099c:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
   1099f:	81 c6 6c 07 00 00    	add    esi,0x76c
   109a5:	89 cf                	mov    edi,ecx
   109a7:	f7 c6 03 00 00 00    	test   esi,0x3
   109ad:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   109b1:	0f 85 ec 00 00 00    	jne    10aa3 <_fmt+0x3e3>
   109b7:	89 f6                	mov    esi,esi
   109b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   109c0:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   109c5:	89 f1                	mov    ecx,esi
   109c7:	f7 ee                	imul   esi
   109c9:	c1 f9 1f             	sar    ecx,0x1f
   109cc:	89 d0                	mov    eax,edx
   109ce:	c1 f8 05             	sar    eax,0x5
   109d1:	29 c8                	sub    eax,ecx
   109d3:	6b c0 64             	imul   eax,eax,0x64
   109d6:	39 c6                	cmp    esi,eax
   109d8:	0f 85 a2 0a 00 00    	jne    11480 <_fmt+0xdc0>
   109de:	c1 fa 07             	sar    edx,0x7
   109e1:	89 f3                	mov    ebx,esi
   109e3:	29 ca                	sub    edx,ecx
   109e5:	69 c2 90 01 00 00    	imul   eax,edx,0x190
   109eb:	29 c3                	sub    ebx,eax
   109ed:	83 fb 01             	cmp    ebx,0x1
   109f0:	19 ed                	sbb    ebp,ebp
   109f2:	f7 d5                	not    ebp
   109f4:	83 c5 02             	add    ebp,0x2
   109f7:	83 fb 01             	cmp    ebx,0x1
   109fa:	19 db                	sbb    ebx,ebx
   109fc:	f7 d3                	not    ebx
   109fe:	81 c3 6e 01 00 00    	add    ebx,0x16e
   10a04:	8d 4f 0b             	lea    ecx,[edi+0xb]
   10a07:	2b 4c 24 14          	sub    ecx,DWORD PTR [esp+0x14]
   10a0b:	b8 93 24 49 92       	mov    eax,0x92492493
   10a10:	f7 e9                	imul   ecx
   10a12:	89 c8                	mov    eax,ecx
   10a14:	c1 f8 1f             	sar    eax,0x1f
   10a17:	01 ca                	add    edx,ecx
   10a19:	c1 fa 02             	sar    edx,0x2
   10a1c:	29 c2                	sub    edx,eax
   10a1e:	8d 04 d5 00 00 00 00 	lea    eax,[edx*8+0x0]
   10a25:	29 d0                	sub    eax,edx
   10a27:	29 c1                	sub    ecx,eax
   10a29:	83 e9 03             	sub    ecx,0x3
   10a2c:	89 c8                	mov    eax,ecx
   10a2e:	29 e8                	sub    eax,ebp
   10a30:	8d 50 07             	lea    edx,[eax+0x7]
   10a33:	83 f8 fc             	cmp    eax,0xfffffffc
   10a36:	0f 4e c2             	cmovle eax,edx
   10a39:	01 c3                	add    ebx,eax
   10a3b:	39 df                	cmp    edi,ebx
   10a3d:	0f 8d 7c 0a 00 00    	jge    114bf <_fmt+0xdff>
   10a43:	39 cf                	cmp    edi,ecx
   10a45:	0f 8d e3 0b 00 00    	jge    1162e <_fmt+0xf6e>
   10a4b:	83 ee 01             	sub    esi,0x1
   10a4e:	b8 6d 01 00 00       	mov    eax,0x16d
   10a53:	f7 c6 03 00 00 00    	test   esi,0x3
   10a59:	75 3a                	jne    10a95 <_fmt+0x3d5>
   10a5b:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   10a60:	89 f3                	mov    ebx,esi
   10a62:	f7 ee                	imul   esi
   10a64:	c1 fb 1f             	sar    ebx,0x1f
   10a67:	b8 6e 01 00 00       	mov    eax,0x16e
   10a6c:	89 d1                	mov    ecx,edx
   10a6e:	c1 f9 05             	sar    ecx,0x5
   10a71:	29 d9                	sub    ecx,ebx
   10a73:	6b c9 64             	imul   ecx,ecx,0x64
   10a76:	39 ce                	cmp    esi,ecx
   10a78:	75 1b                	jne    10a95 <_fmt+0x3d5>
   10a7a:	c1 fa 07             	sar    edx,0x7
   10a7d:	29 da                	sub    edx,ebx
   10a7f:	89 f3                	mov    ebx,esi
   10a81:	69 c2 90 01 00 00    	imul   eax,edx,0x190
   10a87:	29 c3                	sub    ebx,eax
   10a89:	83 fb 01             	cmp    ebx,0x1
   10a8c:	19 c0                	sbb    eax,eax
   10a8e:	f7 d0                	not    eax
   10a90:	05 6e 01 00 00       	add    eax,0x16e
   10a95:	01 c7                	add    edi,eax
   10a97:	f7 c6 03 00 00 00    	test   esi,0x3
   10a9d:	0f 84 1d ff ff ff    	je     109c0 <_fmt+0x300>
   10aa3:	bd 01 00 00 00       	mov    ebp,0x1
   10aa8:	bb 6d 01 00 00       	mov    ebx,0x16d
   10aad:	e9 52 ff ff ff       	jmp    10a04 <_fmt+0x344>
   10ab2:	83 ec 04             	sub    esp,0x4
   10ab5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10ab9:	ff 70 08             	push   DWORD PTR [eax+0x8]
   10abc:	68 63 00 04 00       	push   0x40063
   10ac1:	8d 44 24 50          	lea    eax,[esp+0x50]
   10ac5:	50                   	push   eax
   10ac6:	e8 f5 1b 01 00       	call   226c0 <sprintf>
   10acb:	83 c4 10             	add    esp,0x10
   10ace:	39 ef                	cmp    edi,ebp
   10ad0:	0f 86 19 fc ff ff    	jbe    106ef <_fmt+0x2f>
   10ad6:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10adb:	84 c0                	test   al,al
   10add:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10ae0:	0f 84 09 fc ff ff    	je     106ef <_fmt+0x2f>
   10ae6:	8d 44 24 45          	lea    eax,[esp+0x45]
   10aea:	eb 15                	jmp    10b01 <_fmt+0x441>
   10aec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   10af0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10af3:	83 c0 01             	add    eax,0x1
   10af6:	84 d2                	test   dl,dl
   10af8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10afb:	0f 84 ee fb ff ff    	je     106ef <_fmt+0x2f>
   10b01:	83 c5 01             	add    ebp,0x1
   10b04:	39 ef                	cmp    edi,ebp
   10b06:	75 e8                	jne    10af0 <_fmt+0x430>
   10b08:	89 fd                	mov    ebp,edi
   10b0a:	e9 e0 fb ff ff       	jmp    106ef <_fmt+0x2f>
   10b0f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10b13:	ba ab aa aa 2a       	mov    edx,0x2aaaaaab
   10b18:	8b 48 08             	mov    ecx,DWORD PTR [eax+0x8]
   10b1b:	89 c8                	mov    eax,ecx
   10b1d:	f7 ea                	imul   edx
   10b1f:	89 d0                	mov    eax,edx
   10b21:	89 ca                	mov    edx,ecx
   10b23:	c1 fa 1f             	sar    edx,0x1f
   10b26:	d1 f8                	sar    eax,1
   10b28:	29 d0                	sub    eax,edx
   10b2a:	ba 0c 00 00 00       	mov    edx,0xc
   10b2f:	8d 04 40             	lea    eax,[eax+eax*2]
   10b32:	c1 e0 02             	shl    eax,0x2
   10b35:	29 c1                	sub    ecx,eax
   10b37:	89 c8                	mov    eax,ecx
   10b39:	0f 44 c2             	cmove  eax,edx
   10b3c:	83 ec 04             	sub    esp,0x4
   10b3f:	50                   	push   eax
   10b40:	68 63 00 04 00       	push   0x40063
   10b45:	8d 44 24 50          	lea    eax,[esp+0x50]
   10b49:	50                   	push   eax
   10b4a:	e8 71 1b 01 00       	call   226c0 <sprintf>
   10b4f:	83 c4 10             	add    esp,0x10
   10b52:	39 ef                	cmp    edi,ebp
   10b54:	0f 86 95 fb ff ff    	jbe    106ef <_fmt+0x2f>
   10b5a:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10b5f:	84 c0                	test   al,al
   10b61:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10b64:	0f 84 85 fb ff ff    	je     106ef <_fmt+0x2f>
   10b6a:	8d 44 24 45          	lea    eax,[esp+0x45]
   10b6e:	eb 11                	jmp    10b81 <_fmt+0x4c1>
   10b70:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10b73:	83 c0 01             	add    eax,0x1
   10b76:	84 d2                	test   dl,dl
   10b78:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10b7b:	0f 84 6e fb ff ff    	je     106ef <_fmt+0x2f>
   10b81:	83 c5 01             	add    ebp,0x1
   10b84:	39 ef                	cmp    edi,ebp
   10b86:	75 e8                	jne    10b70 <_fmt+0x4b0>
   10b88:	89 fd                	mov    ebp,edi
   10b8a:	e9 60 fb ff ff       	jmp    106ef <_fmt+0x2f>
   10b8f:	83 ec 04             	sub    esp,0x4
   10b92:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10b96:	ff 70 04             	push   DWORD PTR [eax+0x4]
   10b99:	68 63 00 04 00       	push   0x40063
   10b9e:	8d 44 24 50          	lea    eax,[esp+0x50]
   10ba2:	50                   	push   eax
   10ba3:	e8 18 1b 01 00       	call   226c0 <sprintf>
   10ba8:	83 c4 10             	add    esp,0x10
   10bab:	39 ef                	cmp    edi,ebp
   10bad:	0f 86 3c fb ff ff    	jbe    106ef <_fmt+0x2f>
   10bb3:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10bb8:	84 c0                	test   al,al
   10bba:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10bbd:	0f 84 2c fb ff ff    	je     106ef <_fmt+0x2f>
   10bc3:	8d 44 24 45          	lea    eax,[esp+0x45]
   10bc7:	eb 18                	jmp    10be1 <_fmt+0x521>
   10bc9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   10bd0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10bd3:	83 c0 01             	add    eax,0x1
   10bd6:	84 d2                	test   dl,dl
   10bd8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10bdb:	0f 84 0e fb ff ff    	je     106ef <_fmt+0x2f>
   10be1:	83 c5 01             	add    ebp,0x1
   10be4:	39 ef                	cmp    edi,ebp
   10be6:	75 e8                	jne    10bd0 <_fmt+0x510>
   10be8:	89 fd                	mov    ebp,edi
   10bea:	e9 00 fb ff ff       	jmp    106ef <_fmt+0x2f>
   10bef:	83 ec 0c             	sub    esp,0xc
   10bf2:	89 e9                	mov    ecx,ebp
   10bf4:	b8 8f 00 04 00       	mov    eax,0x4008f
   10bf9:	57                   	push   edi
   10bfa:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10bfe:	e8 bd fa ff ff       	call   106c0 <_fmt>
   10c03:	83 c4 10             	add    esp,0x10
   10c06:	89 c5                	mov    ebp,eax
   10c08:	e9 e2 fa ff ff       	jmp    106ef <_fmt+0x2f>
   10c0d:	83 ec 04             	sub    esp,0x4
   10c10:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10c14:	ff 30                	push   DWORD PTR [eax]
   10c16:	68 63 00 04 00       	push   0x40063
   10c1b:	8d 44 24 50          	lea    eax,[esp+0x50]
   10c1f:	50                   	push   eax
   10c20:	e8 9b 1a 01 00       	call   226c0 <sprintf>
   10c25:	83 c4 10             	add    esp,0x10
   10c28:	39 ef                	cmp    edi,ebp
   10c2a:	0f 86 bf fa ff ff    	jbe    106ef <_fmt+0x2f>
   10c30:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10c35:	84 c0                	test   al,al
   10c37:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10c3a:	0f 84 af fa ff ff    	je     106ef <_fmt+0x2f>
   10c40:	8d 44 24 45          	lea    eax,[esp+0x45]
   10c44:	eb 1b                	jmp    10c61 <_fmt+0x5a1>
   10c46:	8d 76 00             	lea    esi,[esi+0x0]
   10c49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   10c50:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10c53:	83 c0 01             	add    eax,0x1
   10c56:	84 d2                	test   dl,dl
   10c58:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10c5b:	0f 84 8e fa ff ff    	je     106ef <_fmt+0x2f>
   10c61:	83 c5 01             	add    ebp,0x1
   10c64:	39 ef                	cmp    edi,ebp
   10c66:	75 e8                	jne    10c50 <_fmt+0x590>
   10c68:	89 fd                	mov    ebp,edi
   10c6a:	e9 80 fa ff ff       	jmp    106ef <_fmt+0x2f>
   10c6f:	83 ec 0c             	sub    esp,0xc
   10c72:	89 e9                	mov    ecx,ebp
   10c74:	b8 ae 38 06 00       	mov    eax,0x638ae
   10c79:	57                   	push   edi
   10c7a:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10c7e:	e8 3d fa ff ff       	call   106c0 <_fmt>
   10c83:	83 c4 10             	add    esp,0x10
   10c86:	89 c5                	mov    ebp,eax
   10c88:	e9 62 fa ff ff       	jmp    106ef <_fmt+0x2f>
   10c8d:	83 ec 04             	sub    esp,0x4
   10c90:	ba 93 24 49 92       	mov    edx,0x92492493
   10c95:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10c99:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
   10c9c:	8d 4e 07             	lea    ecx,[esi+0x7]
   10c9f:	2b 48 18             	sub    ecx,DWORD PTR [eax+0x18]
   10ca2:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
   10ca6:	89 c8                	mov    eax,ecx
   10ca8:	f7 ea                	imul   edx
   10caa:	8d 04 0a             	lea    eax,[edx+ecx*1]
   10cad:	c1 f9 1f             	sar    ecx,0x1f
   10cb0:	c1 f8 02             	sar    eax,0x2
   10cb3:	29 c8                	sub    eax,ecx
   10cb5:	50                   	push   eax
   10cb6:	68 63 00 04 00       	push   0x40063
   10cbb:	8d 44 24 50          	lea    eax,[esp+0x50]
   10cbf:	50                   	push   eax
   10cc0:	e8 fb 19 01 00       	call   226c0 <sprintf>
   10cc5:	83 c4 10             	add    esp,0x10
   10cc8:	39 ef                	cmp    edi,ebp
   10cca:	0f 86 1f fa ff ff    	jbe    106ef <_fmt+0x2f>
   10cd0:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10cd5:	84 c0                	test   al,al
   10cd7:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10cda:	0f 84 0f fa ff ff    	je     106ef <_fmt+0x2f>
   10ce0:	8d 44 24 45          	lea    eax,[esp+0x45]
   10ce4:	eb 1b                	jmp    10d01 <_fmt+0x641>
   10ce6:	8d 76 00             	lea    esi,[esi+0x0]
   10ce9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   10cf0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10cf3:	83 c0 01             	add    eax,0x1
   10cf6:	84 d2                	test   dl,dl
   10cf8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10cfb:	0f 84 ee f9 ff ff    	je     106ef <_fmt+0x2f>
   10d01:	83 c5 01             	add    ebp,0x1
   10d04:	39 ef                	cmp    edi,ebp
   10d06:	75 e8                	jne    10cf0 <_fmt+0x630>
   10d08:	89 fd                	mov    ebp,edi
   10d0a:	e9 e0 f9 ff ff       	jmp    106ef <_fmt+0x2f>
   10d0f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10d13:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
   10d16:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
   10d19:	8d 42 ff             	lea    eax,[edx-0x1]
   10d1c:	85 d2                	test   edx,edx
   10d1e:	8d 4e 07             	lea    ecx,[esi+0x7]
   10d21:	ba 06 00 00 00       	mov    edx,0x6
   10d26:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
   10d2a:	0f 44 c2             	cmove  eax,edx
   10d2d:	ba 93 24 49 92       	mov    edx,0x92492493
   10d32:	83 ec 04             	sub    esp,0x4
   10d35:	29 c1                	sub    ecx,eax
   10d37:	89 c8                	mov    eax,ecx
   10d39:	f7 ea                	imul   edx
   10d3b:	8d 04 0a             	lea    eax,[edx+ecx*1]
   10d3e:	c1 f9 1f             	sar    ecx,0x1f
   10d41:	c1 f8 02             	sar    eax,0x2
   10d44:	29 c8                	sub    eax,ecx
   10d46:	50                   	push   eax
   10d47:	68 63 00 04 00       	push   0x40063
   10d4c:	8d 44 24 50          	lea    eax,[esp+0x50]
   10d50:	50                   	push   eax
   10d51:	e8 6a 19 01 00       	call   226c0 <sprintf>
   10d56:	83 c4 10             	add    esp,0x10
   10d59:	39 ef                	cmp    edi,ebp
   10d5b:	0f 86 8e f9 ff ff    	jbe    106ef <_fmt+0x2f>
   10d61:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10d66:	84 c0                	test   al,al
   10d68:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10d6b:	0f 84 7e f9 ff ff    	je     106ef <_fmt+0x2f>
   10d71:	8d 44 24 45          	lea    eax,[esp+0x45]
   10d75:	eb 1a                	jmp    10d91 <_fmt+0x6d1>
   10d77:	89 f6                	mov    esi,esi
   10d79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   10d80:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10d83:	83 c0 01             	add    eax,0x1
   10d86:	84 d2                	test   dl,dl
   10d88:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10d8b:	0f 84 5e f9 ff ff    	je     106ef <_fmt+0x2f>
   10d91:	83 c5 01             	add    ebp,0x1
   10d94:	39 ef                	cmp    edi,ebp
   10d96:	75 e8                	jne    10d80 <_fmt+0x6c0>
   10d98:	89 fd                	mov    ebp,edi
   10d9a:	e9 50 f9 ff ff       	jmp    106ef <_fmt+0x2f>
   10d9f:	83 ec 0c             	sub    esp,0xc
   10da2:	89 e9                	mov    ecx,ebp
   10da4:	b8 ae 38 06 00       	mov    eax,0x638ae
   10da9:	57                   	push   edi
   10daa:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10dae:	e8 0d f9 ff ff       	call   106c0 <_fmt>
   10db3:	83 c4 10             	add    esp,0x10
   10db6:	89 c5                	mov    ebp,eax
   10db8:	e9 32 f9 ff ff       	jmp    106ef <_fmt+0x2f>
   10dbd:	83 ec 04             	sub    esp,0x4
   10dc0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10dc4:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
   10dc7:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   10dcb:	05 6c 07 00 00       	add    eax,0x76c
   10dd0:	50                   	push   eax
   10dd1:	68 a5 00 04 00       	push   0x400a5
   10dd6:	8d 44 24 50          	lea    eax,[esp+0x50]
   10dda:	50                   	push   eax
   10ddb:	e8 e0 18 01 00       	call   226c0 <sprintf>
   10de0:	83 c4 10             	add    esp,0x10
   10de3:	39 ef                	cmp    edi,ebp
   10de5:	0f 86 04 f9 ff ff    	jbe    106ef <_fmt+0x2f>
   10deb:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10df0:	84 c0                	test   al,al
   10df2:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10df5:	0f 84 f4 f8 ff ff    	je     106ef <_fmt+0x2f>
   10dfb:	8d 44 24 45          	lea    eax,[esp+0x45]
   10dff:	eb 18                	jmp    10e19 <_fmt+0x759>
   10e01:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   10e08:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10e0b:	83 c0 01             	add    eax,0x1
   10e0e:	84 d2                	test   dl,dl
   10e10:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10e13:	0f 84 d6 f8 ff ff    	je     106ef <_fmt+0x2f>
   10e19:	83 c5 01             	add    ebp,0x1
   10e1c:	39 ef                	cmp    edi,ebp
   10e1e:	75 e8                	jne    10e08 <_fmt+0x748>
   10e20:	89 fd                	mov    ebp,edi
   10e22:	e9 c8 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10e27:	39 ef                	cmp    edi,ebp
   10e29:	0f 86 c0 f8 ff ff    	jbe    106ef <_fmt+0x2f>
   10e2f:	8d 45 01             	lea    eax,[ebp+0x1]
   10e32:	c6 45 00 3f          	mov    BYTE PTR [ebp+0x0],0x3f
   10e36:	39 c7                	cmp    edi,eax
   10e38:	0f 86 2d 08 00 00    	jbe    1166b <_fmt+0xfab>
   10e3e:	c6 45 01 00          	mov    BYTE PTR [ebp+0x1],0x0
   10e42:	89 c5                	mov    ebp,eax
   10e44:	e9 a6 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10e49:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10e4d:	ba 5f 3b 04 00       	mov    edx,0x43b5f
   10e52:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
   10e55:	83 f8 06             	cmp    eax,0x6
   10e58:	0f 86 3d 06 00 00    	jbe    1149b <_fmt+0xddb>
   10e5e:	39 ef                	cmp    edi,ebp
   10e60:	0f 86 89 f8 ff ff    	jbe    106ef <_fmt+0x2f>
   10e66:	8d 42 01             	lea    eax,[edx+0x1]
   10e69:	0f b6 12             	movzx  edx,BYTE PTR [edx]
   10e6c:	84 d2                	test   dl,dl
   10e6e:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10e71:	75 1e                	jne    10e91 <_fmt+0x7d1>
   10e73:	e9 77 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10e78:	90                   	nop
   10e79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   10e80:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10e83:	83 c0 01             	add    eax,0x1
   10e86:	84 d2                	test   dl,dl
   10e88:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10e8b:	0f 84 5e f8 ff ff    	je     106ef <_fmt+0x2f>
   10e91:	83 c5 01             	add    ebp,0x1
   10e94:	39 ef                	cmp    edi,ebp
   10e96:	75 e8                	jne    10e80 <_fmt+0x7c0>
   10e98:	89 fd                	mov    ebp,edi
   10e9a:	e9 50 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10e9f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   10ea3:	ba 5f 3b 04 00       	mov    edx,0x43b5f
   10ea8:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
   10eab:	83 f8 0b             	cmp    eax,0xb
   10eae:	0f 86 db 05 00 00    	jbe    1148f <_fmt+0xdcf>
   10eb4:	39 ef                	cmp    edi,ebp
   10eb6:	0f 86 33 f8 ff ff    	jbe    106ef <_fmt+0x2f>
   10ebc:	8d 42 01             	lea    eax,[edx+0x1]
   10ebf:	0f b6 12             	movzx  edx,BYTE PTR [edx]
   10ec2:	84 d2                	test   dl,dl
   10ec4:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10ec7:	75 18                	jne    10ee1 <_fmt+0x821>
   10ec9:	e9 21 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10ece:	66 90                	xchg   ax,ax
   10ed0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10ed3:	83 c0 01             	add    eax,0x1
   10ed6:	84 d2                	test   dl,dl
   10ed8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10edb:	0f 84 0e f8 ff ff    	je     106ef <_fmt+0x2f>
   10ee1:	83 c5 01             	add    ebp,0x1
   10ee4:	39 ef                	cmp    edi,ebp
   10ee6:	75 e8                	jne    10ed0 <_fmt+0x810>
   10ee8:	89 fd                	mov    ebp,edi
   10eea:	e9 00 f8 ff ff       	jmp    106ef <_fmt+0x2f>
   10eef:	83 ec 0c             	sub    esp,0xc
   10ef2:	89 e9                	mov    ecx,ebp
   10ef4:	b8 68 00 04 00       	mov    eax,0x40068
   10ef9:	57                   	push   edi
   10efa:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   10efe:	e8 bd f7 ff ff       	call   106c0 <_fmt>
   10f03:	83 c4 10             	add    esp,0x10
   10f06:	89 c5                	mov    ebp,eax
   10f08:	e9 e2 f7 ff ff       	jmp    106ef <_fmt+0x2f>
   10f0d:	83 ec 04             	sub    esp,0x4
   10f10:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10f14:	ff 70 0c             	push   DWORD PTR [eax+0xc]
   10f17:	68 63 00 04 00       	push   0x40063
   10f1c:	8d 44 24 50          	lea    eax,[esp+0x50]
   10f20:	50                   	push   eax
   10f21:	e8 9a 17 01 00       	call   226c0 <sprintf>
   10f26:	83 c4 10             	add    esp,0x10
   10f29:	39 ef                	cmp    edi,ebp
   10f2b:	0f 86 be f7 ff ff    	jbe    106ef <_fmt+0x2f>
   10f31:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10f36:	84 c0                	test   al,al
   10f38:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10f3b:	0f 84 ae f7 ff ff    	je     106ef <_fmt+0x2f>
   10f41:	8d 44 24 45          	lea    eax,[esp+0x45]
   10f45:	eb 1a                	jmp    10f61 <_fmt+0x8a1>
   10f47:	89 f6                	mov    esi,esi
   10f49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   10f50:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10f53:	83 c0 01             	add    eax,0x1
   10f56:	84 d2                	test   dl,dl
   10f58:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10f5b:	0f 84 8e f7 ff ff    	je     106ef <_fmt+0x2f>
   10f61:	83 c5 01             	add    ebp,0x1
   10f64:	39 ef                	cmp    edi,ebp
   10f66:	75 e8                	jne    10f50 <_fmt+0x890>
   10f68:	89 fd                	mov    ebp,edi
   10f6a:	e9 80 f7 ff ff       	jmp    106ef <_fmt+0x2f>
   10f6f:	83 ec 04             	sub    esp,0x4
   10f72:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10f76:	ff 70 0c             	push   DWORD PTR [eax+0xc]
   10f79:	68 7d 00 04 00       	push   0x4007d
   10f7e:	8d 44 24 50          	lea    eax,[esp+0x50]
   10f82:	50                   	push   eax
   10f83:	e8 38 17 01 00       	call   226c0 <sprintf>
   10f88:	83 c4 10             	add    esp,0x10
   10f8b:	39 ef                	cmp    edi,ebp
   10f8d:	0f 86 5c f7 ff ff    	jbe    106ef <_fmt+0x2f>
   10f93:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   10f98:	84 c0                	test   al,al
   10f9a:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   10f9d:	0f 84 4c f7 ff ff    	je     106ef <_fmt+0x2f>
   10fa3:	8d 44 24 45          	lea    eax,[esp+0x45]
   10fa7:	eb 18                	jmp    10fc1 <_fmt+0x901>
   10fa9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   10fb0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   10fb3:	83 c0 01             	add    eax,0x1
   10fb6:	84 d2                	test   dl,dl
   10fb8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   10fbb:	0f 84 2e f7 ff ff    	je     106ef <_fmt+0x2f>
   10fc1:	83 c5 01             	add    ebp,0x1
   10fc4:	39 ef                	cmp    edi,ebp
   10fc6:	75 e8                	jne    10fb0 <_fmt+0x8f0>
   10fc8:	89 fd                	mov    ebp,edi
   10fca:	e9 20 f7 ff ff       	jmp    106ef <_fmt+0x2f>
   10fcf:	83 ec 04             	sub    esp,0x4
   10fd2:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   10fd6:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
   10fd9:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   10fdd:	83 c0 01             	add    eax,0x1
   10fe0:	50                   	push   eax
   10fe1:	68 8a 00 04 00       	push   0x4008a
   10fe6:	8d 44 24 50          	lea    eax,[esp+0x50]
   10fea:	50                   	push   eax
   10feb:	e8 d0 16 01 00       	call   226c0 <sprintf>
   10ff0:	83 c4 10             	add    esp,0x10
   10ff3:	39 ef                	cmp    edi,ebp
   10ff5:	0f 86 f4 f6 ff ff    	jbe    106ef <_fmt+0x2f>
   10ffb:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11000:	84 c0                	test   al,al
   11002:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   11005:	0f 84 e4 f6 ff ff    	je     106ef <_fmt+0x2f>
   1100b:	8d 44 24 45          	lea    eax,[esp+0x45]
   1100f:	eb 18                	jmp    11029 <_fmt+0x969>
   11011:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11018:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1101b:	83 c0 01             	add    eax,0x1
   1101e:	84 d2                	test   dl,dl
   11020:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   11023:	0f 84 c6 f6 ff ff    	je     106ef <_fmt+0x2f>
   11029:	83 c5 01             	add    ebp,0x1
   1102c:	39 ef                	cmp    edi,ebp
   1102e:	75 e8                	jne    11018 <_fmt+0x958>
   11030:	89 fd                	mov    ebp,edi
   11032:	e9 b8 f6 ff ff       	jmp    106ef <_fmt+0x2f>
   11037:	83 ec 04             	sub    esp,0x4
   1103a:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1103e:	ff 70 08             	push   DWORD PTR [eax+0x8]
   11041:	68 7d 00 04 00       	push   0x4007d
   11046:	8d 44 24 50          	lea    eax,[esp+0x50]
   1104a:	50                   	push   eax
   1104b:	e8 70 16 01 00       	call   226c0 <sprintf>
   11050:	83 c4 10             	add    esp,0x10
   11053:	39 ef                	cmp    edi,ebp
   11055:	0f 86 94 f6 ff ff    	jbe    106ef <_fmt+0x2f>
   1105b:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11060:	84 c0                	test   al,al
   11062:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   11065:	0f 84 84 f6 ff ff    	je     106ef <_fmt+0x2f>
   1106b:	8d 44 24 45          	lea    eax,[esp+0x45]
   1106f:	eb 18                	jmp    11089 <_fmt+0x9c9>
   11071:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11078:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1107b:	83 c0 01             	add    eax,0x1
   1107e:	84 d2                	test   dl,dl
   11080:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   11083:	0f 84 66 f6 ff ff    	je     106ef <_fmt+0x2f>
   11089:	83 c5 01             	add    ebp,0x1
   1108c:	39 ef                	cmp    edi,ebp
   1108e:	75 e8                	jne    11078 <_fmt+0x9b8>
   11090:	89 fd                	mov    ebp,edi
   11092:	e9 58 f6 ff ff       	jmp    106ef <_fmt+0x2f>
   11097:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1109b:	ba ab aa aa 2a       	mov    edx,0x2aaaaaab
   110a0:	8b 48 08             	mov    ecx,DWORD PTR [eax+0x8]
   110a3:	89 c8                	mov    eax,ecx
   110a5:	f7 ea                	imul   edx
   110a7:	89 d0                	mov    eax,edx
   110a9:	89 ca                	mov    edx,ecx
   110ab:	c1 fa 1f             	sar    edx,0x1f
   110ae:	d1 f8                	sar    eax,1
   110b0:	29 d0                	sub    eax,edx
   110b2:	ba 0c 00 00 00       	mov    edx,0xc
   110b7:	8d 04 40             	lea    eax,[eax+eax*2]
   110ba:	c1 e0 02             	shl    eax,0x2
   110bd:	29 c1                	sub    ecx,eax
   110bf:	89 c8                	mov    eax,ecx
   110c1:	0f 44 c2             	cmove  eax,edx
   110c4:	83 ec 04             	sub    esp,0x4
   110c7:	50                   	push   eax
   110c8:	68 7d 00 04 00       	push   0x4007d
   110cd:	8d 44 24 50          	lea    eax,[esp+0x50]
   110d1:	50                   	push   eax
   110d2:	e8 e9 15 01 00       	call   226c0 <sprintf>
   110d7:	83 c4 10             	add    esp,0x10
   110da:	39 ef                	cmp    edi,ebp
   110dc:	0f 86 0d f6 ff ff    	jbe    106ef <_fmt+0x2f>
   110e2:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   110e7:	84 c0                	test   al,al
   110e9:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   110ec:	0f 84 fd f5 ff ff    	je     106ef <_fmt+0x2f>
   110f2:	8d 44 24 45          	lea    eax,[esp+0x45]
   110f6:	eb 19                	jmp    11111 <_fmt+0xa51>
   110f8:	90                   	nop
   110f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11100:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11103:	83 c0 01             	add    eax,0x1
   11106:	84 d2                	test   dl,dl
   11108:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1110b:	0f 84 de f5 ff ff    	je     106ef <_fmt+0x2f>
   11111:	83 c5 01             	add    ebp,0x1
   11114:	39 ef                	cmp    edi,ebp
   11116:	75 e8                	jne    11100 <_fmt+0xa40>
   11118:	89 fd                	mov    ebp,edi
   1111a:	e9 d0 f5 ff ff       	jmp    106ef <_fmt+0x2f>
   1111f:	83 ec 04             	sub    esp,0x4
   11122:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   11126:	ff 70 10             	push   DWORD PTR [eax+0x10]
   11129:	68 63 00 04 00       	push   0x40063
   1112e:	8d 44 24 50          	lea    eax,[esp+0x50]
   11132:	50                   	push   eax
   11133:	e8 88 15 01 00       	call   226c0 <sprintf>
   11138:	83 c4 10             	add    esp,0x10
   1113b:	39 ef                	cmp    edi,ebp
   1113d:	0f 86 ac f5 ff ff    	jbe    106ef <_fmt+0x2f>
   11143:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11148:	84 c0                	test   al,al
   1114a:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   1114d:	0f 84 9c f5 ff ff    	je     106ef <_fmt+0x2f>
   11153:	8d 44 24 45          	lea    eax,[esp+0x45]
   11157:	eb 18                	jmp    11171 <_fmt+0xab1>
   11159:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11160:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11163:	83 c0 01             	add    eax,0x1
   11166:	84 d2                	test   dl,dl
   11168:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1116b:	0f 84 7e f5 ff ff    	je     106ef <_fmt+0x2f>
   11171:	83 c5 01             	add    ebp,0x1
   11174:	39 ef                	cmp    edi,ebp
   11176:	75 e8                	jne    11160 <_fmt+0xaa0>
   11178:	89 fd                	mov    ebp,edi
   1117a:	e9 70 f5 ff ff       	jmp    106ef <_fmt+0x2f>
   1117f:	39 ef                	cmp    edi,ebp
   11181:	0f 86 68 f5 ff ff    	jbe    106ef <_fmt+0x2f>
   11187:	8d 45 01             	lea    eax,[ebp+0x1]
   1118a:	c6 45 00 0a          	mov    BYTE PTR [ebp+0x0],0xa
   1118e:	39 c7                	cmp    edi,eax
   11190:	0f 86 c7 04 00 00    	jbe    1165d <_fmt+0xf9d>
   11196:	c6 45 01 00          	mov    BYTE PTR [ebp+0x1],0x0
   1119a:	89 c5                	mov    ebp,eax
   1119c:	e9 4e f5 ff ff       	jmp    106ef <_fmt+0x2f>
   111a1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   111a5:	ba 60 00 04 00       	mov    edx,0x40060
   111aa:	83 78 08 0c          	cmp    DWORD PTR [eax+0x8],0xc
   111ae:	b8 77 7e 04 00       	mov    eax,0x47e77
   111b3:	0f 4c d0             	cmovl  edx,eax
   111b6:	39 ef                	cmp    edi,ebp
   111b8:	0f 86 31 f5 ff ff    	jbe    106ef <_fmt+0x2f>
   111be:	8d 42 01             	lea    eax,[edx+0x1]
   111c1:	0f b6 12             	movzx  edx,BYTE PTR [edx]
   111c4:	84 d2                	test   dl,dl
   111c6:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   111c9:	75 16                	jne    111e1 <_fmt+0xb21>
   111cb:	e9 1f f5 ff ff       	jmp    106ef <_fmt+0x2f>
   111d0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   111d3:	83 c0 01             	add    eax,0x1
   111d6:	84 d2                	test   dl,dl
   111d8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   111db:	0f 84 0e f5 ff ff    	je     106ef <_fmt+0x2f>
   111e1:	83 c5 01             	add    ebp,0x1
   111e4:	39 ef                	cmp    edi,ebp
   111e6:	75 e8                	jne    111d0 <_fmt+0xb10>
   111e8:	89 fd                	mov    ebp,edi
   111ea:	e9 00 f5 ff ff       	jmp    106ef <_fmt+0x2f>
   111ef:	83 ec 0c             	sub    esp,0xc
   111f2:	89 e9                	mov    ecx,ebp
   111f4:	b8 95 00 04 00       	mov    eax,0x40095
   111f9:	57                   	push   edi
   111fa:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   111fe:	e8 bd f4 ff ff       	call   106c0 <_fmt>
   11203:	83 c4 10             	add    esp,0x10
   11206:	89 c5                	mov    ebp,eax
   11208:	e9 e2 f4 ff ff       	jmp    106ef <_fmt+0x2f>
   1120d:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
   11211:	83 ec 0c             	sub    esp,0xc
   11214:	8b 06                	mov    eax,DWORD PTR [esi]
   11216:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
   1121a:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
   1121d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
   11221:	8b 46 08             	mov    eax,DWORD PTR [esi+0x8]
   11224:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
   11228:	8b 46 0c             	mov    eax,DWORD PTR [esi+0xc]
   1122b:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
   1122f:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
   11232:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
   11236:	8b 46 14             	mov    eax,DWORD PTR [esi+0x14]
   11239:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
   1123d:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   11240:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
   11244:	8b 46 1c             	mov    eax,DWORD PTR [esi+0x1c]
   11247:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
   1124b:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   1124e:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
   11252:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
   11255:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
   11259:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   1125c:	89 44 24 78          	mov    DWORD PTR [esp+0x78],eax
   11260:	8d 44 24 50          	lea    eax,[esp+0x50]
   11264:	50                   	push   eax
   11265:	e8 b6 1c 01 00       	call   22f20 <mktime>
   1126a:	83 c4 0c             	add    esp,0xc
   1126d:	50                   	push   eax
   1126e:	68 a1 00 04 00       	push   0x400a1
   11273:	8d 44 24 30          	lea    eax,[esp+0x30]
   11277:	50                   	push   eax
   11278:	e8 43 14 01 00       	call   226c0 <sprintf>
   1127d:	83 c4 10             	add    esp,0x10
   11280:	39 ef                	cmp    edi,ebp
   11282:	0f 86 67 f4 ff ff    	jbe    106ef <_fmt+0x2f>
   11288:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
   1128d:	84 c0                	test   al,al
   1128f:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   11292:	0f 84 57 f4 ff ff    	je     106ef <_fmt+0x2f>
   11298:	8d 44 24 25          	lea    eax,[esp+0x25]
   1129c:	eb 13                	jmp    112b1 <_fmt+0xbf1>
   1129e:	66 90                	xchg   ax,ax
   112a0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   112a3:	83 c0 01             	add    eax,0x1
   112a6:	84 d2                	test   dl,dl
   112a8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   112ab:	0f 84 3e f4 ff ff    	je     106ef <_fmt+0x2f>
   112b1:	83 c5 01             	add    ebp,0x1
   112b4:	39 ef                	cmp    edi,ebp
   112b6:	75 e8                	jne    112a0 <_fmt+0xbe0>
   112b8:	89 fd                	mov    ebp,edi
   112ba:	e9 30 f4 ff ff       	jmp    106ef <_fmt+0x2f>
   112bf:	39 ef                	cmp    edi,ebp
   112c1:	0f 86 28 f4 ff ff    	jbe    106ef <_fmt+0x2f>
   112c7:	8d 45 01             	lea    eax,[ebp+0x1]
   112ca:	c6 45 00 09          	mov    BYTE PTR [ebp+0x0],0x9
   112ce:	39 c7                	cmp    edi,eax
   112d0:	0f 86 8e 03 00 00    	jbe    11664 <_fmt+0xfa4>
   112d6:	c6 45 01 00          	mov    BYTE PTR [ebp+0x1],0x0
   112da:	89 c5                	mov    ebp,eax
   112dc:	e9 0e f4 ff ff       	jmp    106ef <_fmt+0x2f>
   112e1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   112e5:	ba 07 00 00 00       	mov    edx,0x7
   112ea:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
   112ed:	85 c0                	test   eax,eax
   112ef:	0f 44 c2             	cmove  eax,edx
   112f2:	83 ec 04             	sub    esp,0x4
   112f5:	50                   	push   eax
   112f6:	68 ff 3b 06 00       	push   0x63bff
   112fb:	8d 44 24 50          	lea    eax,[esp+0x50]
   112ff:	50                   	push   eax
   11300:	e8 bb 13 01 00       	call   226c0 <sprintf>
   11305:	83 c4 10             	add    esp,0x10
   11308:	39 ef                	cmp    edi,ebp
   1130a:	0f 86 df f3 ff ff    	jbe    106ef <_fmt+0x2f>
   11310:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11315:	84 c0                	test   al,al
   11317:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   1131a:	0f 84 cf f3 ff ff    	je     106ef <_fmt+0x2f>
   11320:	8d 44 24 45          	lea    eax,[esp+0x45]
   11324:	eb 1b                	jmp    11341 <_fmt+0xc81>
   11326:	8d 76 00             	lea    esi,[esi+0x0]
   11329:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11330:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11333:	83 c0 01             	add    eax,0x1
   11336:	84 d2                	test   dl,dl
   11338:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1133b:	0f 84 ae f3 ff ff    	je     106ef <_fmt+0x2f>
   11341:	83 c5 01             	add    ebp,0x1
   11344:	39 ef                	cmp    edi,ebp
   11346:	75 e8                	jne    11330 <_fmt+0xc70>
   11348:	89 fd                	mov    ebp,edi
   1134a:	e9 a0 f3 ff ff       	jmp    106ef <_fmt+0x2f>
   1134f:	83 ec 0c             	sub    esp,0xc
   11352:	89 e9                	mov    ecx,ebp
   11354:	b8 aa 00 04 00       	mov    eax,0x400aa
   11359:	57                   	push   edi
   1135a:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   1135e:	e8 5d f3 ff ff       	call   106c0 <_fmt>
   11363:	83 c4 10             	add    esp,0x10
   11366:	89 c5                	mov    ebp,eax
   11368:	e9 82 f3 ff ff       	jmp    106ef <_fmt+0x2f>
   1136d:	83 ec 04             	sub    esp,0x4
   11370:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   11374:	ff 70 18             	push   DWORD PTR [eax+0x18]
   11377:	68 ff 3b 06 00       	push   0x63bff
   1137c:	8d 44 24 50          	lea    eax,[esp+0x50]
   11380:	50                   	push   eax
   11381:	e8 3a 13 01 00       	call   226c0 <sprintf>
   11386:	83 c4 10             	add    esp,0x10
   11389:	39 ef                	cmp    edi,ebp
   1138b:	0f 86 5e f3 ff ff    	jbe    106ef <_fmt+0x2f>
   11391:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11396:	84 c0                	test   al,al
   11398:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   1139b:	0f 84 4e f3 ff ff    	je     106ef <_fmt+0x2f>
   113a1:	8d 44 24 45          	lea    eax,[esp+0x45]
   113a5:	eb 1a                	jmp    113c1 <_fmt+0xd01>
   113a7:	89 f6                	mov    esi,esi
   113a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   113b0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   113b3:	83 c0 01             	add    eax,0x1
   113b6:	84 d2                	test   dl,dl
   113b8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   113bb:	0f 84 2e f3 ff ff    	je     106ef <_fmt+0x2f>
   113c1:	83 c5 01             	add    ebp,0x1
   113c4:	39 ef                	cmp    edi,ebp
   113c6:	75 e8                	jne    113b0 <_fmt+0xcf0>
   113c8:	89 fd                	mov    ebp,edi
   113ca:	e9 20 f3 ff ff       	jmp    106ef <_fmt+0x2f>
   113cf:	83 ec 0c             	sub    esp,0xc
   113d2:	89 e9                	mov    ecx,ebp
   113d4:	b8 0c 3e 06 00       	mov    eax,0x63e0c
   113d9:	57                   	push   edi
   113da:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   113de:	e8 dd f2 ff ff       	call   106c0 <_fmt>
   113e3:	83 c4 10             	add    esp,0x10
   113e6:	89 c5                	mov    ebp,eax
   113e8:	e9 02 f3 ff ff       	jmp    106ef <_fmt+0x2f>
   113ed:	83 ec 04             	sub    esp,0x4
   113f0:	ba 1f 85 eb 51       	mov    edx,0x51eb851f
   113f5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   113f9:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
   113fc:	8d 88 6c 07 00 00    	lea    ecx,[eax+0x76c]
   11402:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   11406:	89 c8                	mov    eax,ecx
   11408:	f7 ea                	imul   edx
   1140a:	89 c8                	mov    eax,ecx
   1140c:	c1 f8 1f             	sar    eax,0x1f
   1140f:	c1 fa 05             	sar    edx,0x5
   11412:	29 c2                	sub    edx,eax
   11414:	6b c2 64             	imul   eax,edx,0x64
   11417:	29 c1                	sub    ecx,eax
   11419:	51                   	push   ecx
   1141a:	68 63 00 04 00       	push   0x40063
   1141f:	8d 44 24 50          	lea    eax,[esp+0x50]
   11423:	50                   	push   eax
   11424:	e8 97 12 01 00       	call   226c0 <sprintf>
   11429:	83 c4 10             	add    esp,0x10
   1142c:	39 ef                	cmp    edi,ebp
   1142e:	0f 86 bb f2 ff ff    	jbe    106ef <_fmt+0x2f>
   11434:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11439:	84 c0                	test   al,al
   1143b:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   1143e:	0f 84 ab f2 ff ff    	je     106ef <_fmt+0x2f>
   11444:	8d 44 24 45          	lea    eax,[esp+0x45]
   11448:	eb 17                	jmp    11461 <_fmt+0xda1>
   1144a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   11450:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11453:	83 c0 01             	add    eax,0x1
   11456:	84 d2                	test   dl,dl
   11458:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1145b:	0f 84 8e f2 ff ff    	je     106ef <_fmt+0x2f>
   11461:	83 c5 01             	add    ebp,0x1
   11464:	39 ef                	cmp    edi,ebp
   11466:	75 e8                	jne    11450 <_fmt+0xd90>
   11468:	89 fd                	mov    ebp,edi
   1146a:	e9 80 f2 ff ff       	jmp    106ef <_fmt+0x2f>
   1146f:	89 d8                	mov    eax,ebx
   11471:	e9 6a f2 ff ff       	jmp    106e0 <_fmt+0x20>
   11476:	8d 76 00             	lea    esi,[esi+0x0]
   11479:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11480:	bd 02 00 00 00       	mov    ebp,0x2
   11485:	bb 6e 01 00 00       	mov    ebx,0x16e
   1148a:	e9 75 f5 ff ff       	jmp    10a04 <_fmt+0x344>
   1148f:	8b 14 85 20 9a 12 00 	mov    edx,DWORD PTR [eax*4+0x129a20]
   11496:	e9 19 fa ff ff       	jmp    10eb4 <_fmt+0x7f4>
   1149b:	8b 14 85 b8 99 12 00 	mov    edx,DWORD PTR [eax*4+0x1299b8]
   114a2:	e9 b7 f9 ff ff       	jmp    10e5e <_fmt+0x79e>
   114a7:	8b 14 85 e0 99 12 00 	mov    edx,DWORD PTR [eax*4+0x1299e0]
   114ae:	e9 d9 f3 ff ff       	jmp    1088c <_fmt+0x1cc>
   114b3:	8b 14 85 9c 99 12 00 	mov    edx,DWORD PTR [eax*4+0x12999c]
   114ba:	e9 7b f3 ff ff       	jmp    1083a <_fmt+0x17a>
   114bf:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   114c3:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
   114c7:	83 c6 01             	add    esi,0x1
   114ca:	8b bc 24 90 00 00 00 	mov    edi,DWORD PTR [esp+0x90]
   114d1:	b8 01 00 00 00       	mov    eax,0x1
   114d6:	80 7c 24 10 56       	cmp    BYTE PTR [esp+0x10],0x56
   114db:	0f 84 1e 02 00 00    	je     116ff <_fmt+0x103f>
   114e1:	80 7c 24 10 67       	cmp    BYTE PTR [esp+0x10],0x67
   114e6:	0f 84 a2 01 00 00    	je     1168e <_fmt+0xfce>
   114ec:	83 ec 04             	sub    esp,0x4
   114ef:	56                   	push   esi
   114f0:	68 a5 00 04 00       	push   0x400a5
   114f5:	8d 44 24 50          	lea    eax,[esp+0x50]
   114f9:	50                   	push   eax
   114fa:	e8 c1 11 01 00       	call   226c0 <sprintf>
   114ff:	83 c4 10             	add    esp,0x10
   11502:	39 ef                	cmp    edi,ebp
   11504:	0f 86 e5 f1 ff ff    	jbe    106ef <_fmt+0x2f>
   1150a:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   1150f:	84 c0                	test   al,al
   11511:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   11514:	0f 84 d5 f1 ff ff    	je     106ef <_fmt+0x2f>
   1151a:	8d 44 24 45          	lea    eax,[esp+0x45]
   1151e:	eb 11                	jmp    11531 <_fmt+0xe71>
   11520:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11523:	83 c0 01             	add    eax,0x1
   11526:	84 d2                	test   dl,dl
   11528:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1152b:	0f 84 be f1 ff ff    	je     106ef <_fmt+0x2f>
   11531:	83 c5 01             	add    ebp,0x1
   11534:	39 ef                	cmp    edi,ebp
   11536:	75 e8                	jne    11520 <_fmt+0xe60>
   11538:	89 fd                	mov    ebp,edi
   1153a:	e9 b0 f1 ff ff       	jmp    106ef <_fmt+0x2f>
   1153f:	89 ee                	mov    esi,ebp
   11541:	89 c8                	mov    eax,ecx
   11543:	ba c5 b3 a2 91       	mov    edx,0x91a2b3c5
   11548:	83 ec 04             	sub    esp,0x4
   1154b:	f7 ea                	imul   edx
   1154d:	89 c8                	mov    eax,ecx
   1154f:	89 4c 24 14          	mov    DWORD PTR [esp+0x14],ecx
   11553:	c1 f8 1f             	sar    eax,0x1f
   11556:	8d 2c 0a             	lea    ebp,[edx+ecx*1]
   11559:	c1 fd 0b             	sar    ebp,0xb
   1155c:	29 c5                	sub    ebp,eax
   1155e:	55                   	push   ebp
   1155f:	68 63 00 04 00       	push   0x40063
   11564:	69 ed 10 0e 00 00    	imul   ebp,ebp,0xe10
   1156a:	8d 44 24 50          	lea    eax,[esp+0x50]
   1156e:	50                   	push   eax
   1156f:	e8 4c 11 01 00       	call   226c0 <sprintf>
   11574:	83 c4 0c             	add    esp,0xc
   11577:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
   1157b:	ba 89 88 88 88       	mov    edx,0x88888889
   11580:	29 e9                	sub    ecx,ebp
   11582:	89 f5                	mov    ebp,esi
   11584:	89 c8                	mov    eax,ecx
   11586:	f7 ea                	imul   edx
   11588:	8d 04 0a             	lea    eax,[edx+ecx*1]
   1158b:	c1 f9 1f             	sar    ecx,0x1f
   1158e:	c1 f8 05             	sar    eax,0x5
   11591:	29 c8                	sub    eax,ecx
   11593:	50                   	push   eax
   11594:	68 63 00 04 00       	push   0x40063
   11599:	8d 44 24 50          	lea    eax,[esp+0x50]
   1159d:	50                   	push   eax
   1159e:	e8 1d 11 01 00       	call   226c0 <sprintf>
   115a3:	83 c4 10             	add    esp,0x10
   115a6:	e9 44 f1 ff ff       	jmp    106ef <_fmt+0x2f>
   115ab:	89 c8                	mov    eax,ecx
   115ad:	ba c5 b3 a2 91       	mov    edx,0x91a2b3c5
   115b2:	83 ec 04             	sub    esp,0x4
   115b5:	f7 ea                	imul   edx
   115b7:	89 f5                	mov    ebp,esi
   115b9:	8d 04 0a             	lea    eax,[edx+ecx*1]
   115bc:	89 ca                	mov    edx,ecx
   115be:	c1 fa 1f             	sar    edx,0x1f
   115c1:	c1 f8 0b             	sar    eax,0xb
   115c4:	29 d0                	sub    eax,edx
   115c6:	ba 89 88 88 88       	mov    edx,0x88888889
   115cb:	69 c0 10 0e 00 00    	imul   eax,eax,0xe10
   115d1:	29 c1                	sub    ecx,eax
   115d3:	89 c8                	mov    eax,ecx
   115d5:	f7 ea                	imul   edx
   115d7:	8d 04 0a             	lea    eax,[edx+ecx*1]
   115da:	c1 f9 1f             	sar    ecx,0x1f
   115dd:	c1 f8 05             	sar    eax,0x5
   115e0:	29 c8                	sub    eax,ecx
   115e2:	50                   	push   eax
   115e3:	68 63 00 04 00       	push   0x40063
   115e8:	8d 44 24 50          	lea    eax,[esp+0x50]
   115ec:	50                   	push   eax
   115ed:	e8 ce 10 01 00       	call   226c0 <sprintf>
   115f2:	0f b6 54 24 54       	movzx  edx,BYTE PTR [esp+0x54]
   115f7:	83 c4 10             	add    esp,0x10
   115fa:	8d 44 24 45          	lea    eax,[esp+0x45]
   115fe:	84 d2                	test   dl,dl
   11600:	88 16                	mov    BYTE PTR [esi],dl
   11602:	75 1e                	jne    11622 <_fmt+0xf62>
   11604:	e9 e6 f0 ff ff       	jmp    106ef <_fmt+0x2f>
   11609:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11610:	83 c0 01             	add    eax,0x1
   11613:	0f b6 50 ff          	movzx  edx,BYTE PTR [eax-0x1]
   11617:	84 d2                	test   dl,dl
   11619:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1161c:	0f 84 cd f0 ff ff    	je     106ef <_fmt+0x2f>
   11622:	83 c5 01             	add    ebp,0x1
   11625:	39 ef                	cmp    edi,ebp
   11627:	77 e7                	ja     11610 <_fmt+0xf50>
   11629:	e9 c1 f0 ff ff       	jmp    106ef <_fmt+0x2f>
   1162e:	89 f8                	mov    eax,edi
   11630:	ba 93 24 49 92       	mov    edx,0x92492493
   11635:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   11639:	29 c8                	sub    eax,ecx
   1163b:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
   1163f:	8b bc 24 90 00 00 00 	mov    edi,DWORD PTR [esp+0x90]
   11646:	89 c1                	mov    ecx,eax
   11648:	f7 ea                	imul   edx
   1164a:	8d 04 0a             	lea    eax,[edx+ecx*1]
   1164d:	c1 f9 1f             	sar    ecx,0x1f
   11650:	c1 f8 02             	sar    eax,0x2
   11653:	29 c8                	sub    eax,ecx
   11655:	83 c0 01             	add    eax,0x1
   11658:	e9 79 fe ff ff       	jmp    114d6 <_fmt+0xe16>
   1165d:	89 c5                	mov    ebp,eax
   1165f:	e9 8b f0 ff ff       	jmp    106ef <_fmt+0x2f>
   11664:	89 c5                	mov    ebp,eax
   11666:	e9 84 f0 ff ff       	jmp    106ef <_fmt+0x2f>
   1166b:	89 c5                	mov    ebp,eax
   1166d:	e9 7d f0 ff ff       	jmp    106ef <_fmt+0x2f>
   11672:	39 ef                	cmp    edi,ebp
   11674:	0f 86 c5 fe ff ff    	jbe    1153f <_fmt+0xe7f>
   1167a:	8d 75 01             	lea    esi,[ebp+0x1]
   1167d:	c6 45 00 2d          	mov    BYTE PTR [ebp+0x0],0x2d
   11681:	39 f7                	cmp    edi,esi
   11683:	0f 87 c6 f0 ff ff    	ja     1074f <_fmt+0x8f>
   11689:	e9 b3 fe ff ff       	jmp    11541 <_fmt+0xe81>
   1168e:	89 f0                	mov    eax,esi
   11690:	ba 1f 85 eb 51       	mov    edx,0x51eb851f
   11695:	83 ec 04             	sub    esp,0x4
   11698:	f7 ea                	imul   edx
   1169a:	89 d0                	mov    eax,edx
   1169c:	89 f2                	mov    edx,esi
   1169e:	c1 fa 1f             	sar    edx,0x1f
   116a1:	c1 f8 05             	sar    eax,0x5
   116a4:	29 d0                	sub    eax,edx
   116a6:	6b c0 64             	imul   eax,eax,0x64
   116a9:	29 c6                	sub    esi,eax
   116ab:	56                   	push   esi
   116ac:	68 63 00 04 00       	push   0x40063
   116b1:	8d 44 24 50          	lea    eax,[esp+0x50]
   116b5:	50                   	push   eax
   116b6:	e8 05 10 01 00       	call   226c0 <sprintf>
   116bb:	83 c4 10             	add    esp,0x10
   116be:	39 ef                	cmp    edi,ebp
   116c0:	0f 86 29 f0 ff ff    	jbe    106ef <_fmt+0x2f>
   116c6:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   116cb:	84 c0                	test   al,al
   116cd:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   116d0:	0f 84 19 f0 ff ff    	je     106ef <_fmt+0x2f>
   116d6:	8d 44 24 45          	lea    eax,[esp+0x45]
   116da:	eb 15                	jmp    116f1 <_fmt+0x1031>
   116dc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   116e0:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   116e3:	83 c0 01             	add    eax,0x1
   116e6:	84 d2                	test   dl,dl
   116e8:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   116eb:	0f 84 fe ef ff ff    	je     106ef <_fmt+0x2f>
   116f1:	83 c5 01             	add    ebp,0x1
   116f4:	39 ef                	cmp    edi,ebp
   116f6:	75 e8                	jne    116e0 <_fmt+0x1020>
   116f8:	89 fd                	mov    ebp,edi
   116fa:	e9 f0 ef ff ff       	jmp    106ef <_fmt+0x2f>
   116ff:	83 ec 04             	sub    esp,0x4
   11702:	50                   	push   eax
   11703:	68 63 00 04 00       	push   0x40063
   11708:	8d 44 24 50          	lea    eax,[esp+0x50]
   1170c:	50                   	push   eax
   1170d:	e8 ae 0f 01 00       	call   226c0 <sprintf>
   11712:	83 c4 10             	add    esp,0x10
   11715:	39 ef                	cmp    edi,ebp
   11717:	0f 86 d2 ef ff ff    	jbe    106ef <_fmt+0x2f>
   1171d:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
   11722:	84 c0                	test   al,al
   11724:	88 45 00             	mov    BYTE PTR [ebp+0x0],al
   11727:	0f 84 c2 ef ff ff    	je     106ef <_fmt+0x2f>
   1172d:	8d 44 24 45          	lea    eax,[esp+0x45]
   11731:	eb 11                	jmp    11744 <_fmt+0x1084>
   11733:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   11736:	83 c0 01             	add    eax,0x1
   11739:	84 d2                	test   dl,dl
   1173b:	88 55 00             	mov    BYTE PTR [ebp+0x0],dl
   1173e:	0f 84 ab ef ff ff    	je     106ef <_fmt+0x2f>
   11744:	83 c5 01             	add    ebp,0x1
   11747:	39 ef                	cmp    edi,ebp
   11749:	75 e8                	jne    11733 <_fmt+0x1073>
   1174b:	89 fd                	mov    ebp,edi
   1174d:	e9 9d ef ff ff       	jmp    106ef <_fmt+0x2f>
   11752:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11759:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011760 <strftime>:
strftime():
   11760:	56                   	push   esi
   11761:	53                   	push   ebx
   11762:	ba cc 00 04 00       	mov    edx,0x400cc
   11767:	83 ec 10             	sub    esp,0x10
   1176a:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   1176e:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
   11772:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   11776:	89 d9                	mov    ecx,ebx
   11778:	01 de                	add    esi,ebx
   1177a:	85 c0                	test   eax,eax
   1177c:	0f 44 c2             	cmove  eax,edx
   1177f:	56                   	push   esi
   11780:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
   11784:	e8 37 ef ff ff       	call   106c0 <_fmt>
   11789:	83 c4 10             	add    esp,0x10
   1178c:	39 c6                	cmp    esi,eax
   1178e:	74 10                	je     117a0 <strftime+0x40>
   11790:	c6 00 00             	mov    BYTE PTR [eax],0x0
   11793:	83 c4 04             	add    esp,0x4
   11796:	29 d8                	sub    eax,ebx
   11798:	5b                   	pop    ebx
   11799:	5e                   	pop    esi
   1179a:	c3                   	ret    
   1179b:	90                   	nop
   1179c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   117a0:	83 c4 04             	add    esp,0x4
   117a3:	31 c0                	xor    eax,eax
   117a5:	5b                   	pop    ebx
   117a6:	5e                   	pop    esi
   117a7:	c3                   	ret    
   117a8:	66 90                	xchg   ax,ax
   117aa:	66 90                	xchg   ax,ax
   117ac:	66 90                	xchg   ax,ax
   117ae:	66 90                	xchg   ax,ax

000117b0 <keyboardGetKeyFromBuffer>:
keyboardGetKeyFromBuffer():
   117b0:	8b 15 60 99 12 00    	mov    edx,DWORD PTR ds:0x129960
   117b6:	31 c0                	xor    eax,eax
   117b8:	81 fa b0 24 16 00    	cmp    edx,0x1624b0
   117be:	76 2a                	jbe    117ea <keyboardGetKeyFromBuffer+0x3a>
   117c0:	a1 90 99 12 00       	mov    eax,ds:0x129990
   117c5:	8d 48 01             	lea    ecx,[eax+0x1]
   117c8:	39 ca                	cmp    edx,ecx
   117ca:	89 0d 90 99 12 00    	mov    DWORD PTR ds:0x129990,ecx
   117d0:	0f b6 40 01          	movzx  eax,BYTE PTR [eax+0x1]
   117d4:	77 14                	ja     117ea <keyboardGetKeyFromBuffer+0x3a>
   117d6:	c7 05 90 99 12 00 b0 	mov    DWORD PTR ds:0x129990,0x1624b0
   117dd:	24 16 00 
   117e0:	c7 05 60 99 12 00 b0 	mov    DWORD PTR ds:0x129960,0x1624b0
   117e7:	24 16 00 
   117ea:	f3 c3                	repz ret 
   117ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000117f0 <waitForKeyboardKey>:
waitForKeyboardKey():
   117f0:	53                   	push   ebx
   117f1:	83 ec 14             	sub    esp,0x14
   117f4:	ff 35 60 99 12 00    	push   DWORD PTR ds:0x129960
   117fa:	ff 35 90 99 12 00    	push   DWORD PTR ds:0x129990
   11800:	68 b0 24 16 00       	push   0x1624b0
   11805:	68 88 c0 06 00       	push   0x6c088
   1180a:	68 00 00 10 00       	push   0x100000
   1180f:	e8 6c 0e 01 00       	call   22680 <printd>
   11814:	a1 60 99 12 00       	mov    eax,ds:0x129960
   11819:	83 c4 20             	add    esp,0x20
   1181c:	3d b0 24 16 00       	cmp    eax,0x1624b0
   11821:	75 20                	jne    11843 <waitForKeyboardKey+0x53>
   11823:	90                   	nop
   11824:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11828:	fb                   	sti    
   11829:	f4                   	hlt    
   1182a:	83 ec 0c             	sub    esp,0xc
   1182d:	6a 01                	push   0x1
   1182f:	e8 3c 1c 01 00       	call   23470 <waitTicks>
   11834:	a1 60 99 12 00       	mov    eax,ds:0x129960
   11839:	83 c4 10             	add    esp,0x10
   1183c:	3d b0 24 16 00       	cmp    eax,0x1624b0
   11841:	74 e5                	je     11828 <waitForKeyboardKey+0x38>
   11843:	3d b0 24 16 00       	cmp    eax,0x1624b0
   11848:	76 4e                	jbe    11898 <waitForKeyboardKey+0xa8>
   1184a:	8b 0d 90 99 12 00    	mov    ecx,DWORD PTR ds:0x129990
   11850:	8d 51 01             	lea    edx,[ecx+0x1]
   11853:	39 c2                	cmp    edx,eax
   11855:	89 15 90 99 12 00    	mov    DWORD PTR ds:0x129990,edx
   1185b:	0f b6 59 01          	movzx  ebx,BYTE PTR [ecx+0x1]
   1185f:	72 14                	jb     11875 <waitForKeyboardKey+0x85>
   11861:	c7 05 90 99 12 00 b0 	mov    DWORD PTR ds:0x129990,0x1624b0
   11868:	24 16 00 
   1186b:	c7 05 60 99 12 00 b0 	mov    DWORD PTR ds:0x129960,0x1624b0
   11872:	24 16 00 
   11875:	0f be c3             	movsx  eax,bl
   11878:	83 ec 04             	sub    esp,0x4
   1187b:	50                   	push   eax
   1187c:	68 cf 00 04 00       	push   0x400cf
   11881:	68 00 00 10 00       	push   0x100000
   11886:	e8 f5 0d 01 00       	call   22680 <printd>
   1188b:	83 c4 18             	add    esp,0x18
   1188e:	89 d8                	mov    eax,ebx
   11890:	5b                   	pop    ebx
   11891:	c3                   	ret    
   11892:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   11898:	31 c0                	xor    eax,eax
   1189a:	31 db                	xor    ebx,ebx
   1189c:	eb da                	jmp    11878 <waitForKeyboardKey+0x88>
   1189e:	66 90                	xchg   ax,ax

000118a0 <gets>:
gets():
   118a0:	57                   	push   edi
   118a1:	56                   	push   esi
   118a2:	53                   	push   ebx
   118a3:	31 db                	xor    ebx,ebx
   118a5:	83 ec 14             	sub    esp,0x14
   118a8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
   118ac:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
   118b0:	c6 44 24 13 00       	mov    BYTE PTR [esp+0x13],0x0
   118b5:	56                   	push   esi
   118b6:	6a 00                	push   0x0
   118b8:	83 ee 02             	sub    esi,0x2
   118bb:	57                   	push   edi
   118bc:	e8 bf f4 00 00       	call   20d80 <memset>
   118c1:	83 c4 10             	add    esp,0x10
   118c4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   118c8:	e8 23 ff ff ff       	call   117f0 <waitForKeyboardKey>
   118cd:	85 db                	test   ebx,ebx
   118cf:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
   118d3:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [esp+0xf]
   118d8:	7e 26                	jle    11900 <gets+0x60>
   118da:	3c 08                	cmp    al,0x8
   118dc:	75 22                	jne    11900 <gets+0x60>
   118de:	83 ec 0c             	sub    esp,0xc
   118e1:	c6 04 1f 00          	mov    BYTE PTR [edi+ebx*1],0x0
   118e5:	83 eb 01             	sub    ebx,0x1
   118e8:	68 de 00 04 00       	push   0x400de
   118ed:	e8 4e 55 00 00       	call   16e40 <puts>
   118f2:	83 c4 10             	add    esp,0x10
   118f5:	eb d1                	jmp    118c8 <gets+0x28>
   118f7:	89 f6                	mov    esi,esi
   118f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11900:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [esp+0xf]
   11905:	84 c0                	test   al,al
   11907:	7e bf                	jle    118c8 <gets+0x28>
   11909:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [esp+0xf]
   1190e:	3c 0a                	cmp    al,0xa
   11910:	74 2e                	je     11940 <gets+0xa0>
   11912:	39 f3                	cmp    ebx,esi
   11914:	7d b2                	jge    118c8 <gets+0x28>
   11916:	0f be 44 24 0f       	movsx  eax,BYTE PTR [esp+0xf]
   1191b:	83 ec 08             	sub    esp,0x8
   1191e:	50                   	push   eax
   1191f:	68 cc 00 04 00       	push   0x400cc
   11924:	e8 37 0d 01 00       	call   22660 <printk>
   11929:	0f b6 44 24 1f       	movzx  eax,BYTE PTR [esp+0x1f]
   1192e:	83 c4 10             	add    esp,0x10
   11931:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
   11934:	83 c3 01             	add    ebx,0x1
   11937:	eb 8f                	jmp    118c8 <gets+0x28>
   11939:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11940:	0f be 44 24 0f       	movsx  eax,BYTE PTR [esp+0xf]
   11945:	83 ec 08             	sub    esp,0x8
   11948:	50                   	push   eax
   11949:	68 cc 00 04 00       	push   0x400cc
   1194e:	e8 0d 0d 01 00       	call   22660 <printk>
   11953:	83 c4 10             	add    esp,0x10
   11956:	83 c4 10             	add    esp,0x10
   11959:	5b                   	pop    ebx
   1195a:	5e                   	pop    esi
   1195b:	5f                   	pop    edi
   1195c:	c3                   	ret    
   1195d:	8d 76 00             	lea    esi,[esi+0x0]

00011960 <getc>:
getc():
   11960:	83 ec 0c             	sub    esp,0xc
   11963:	90                   	nop
   11964:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11968:	e8 83 fe ff ff       	call   117f0 <waitForKeyboardKey>
   1196d:	0f be c0             	movsx  eax,al
   11970:	85 c0                	test   eax,eax
   11972:	74 f4                	je     11968 <getc+0x8>
   11974:	83 c4 0c             	add    esp,0xc
   11977:	c3                   	ret    
   11978:	66 90                	xchg   ax,ax
   1197a:	66 90                	xchg   ax,ax
   1197c:	66 90                	xchg   ax,ax
   1197e:	66 90                	xchg   ax,ax

00011980 <kPagingGet4kPDEntryValueCR3>:
kPagingGet4kPDEntryValueCR3():
   11980:	53                   	push   ebx
   11981:	83 ec 08             	sub    esp,0x8
   11984:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   11988:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   1198c:	c1 e8 16             	shr    eax,0x16
   1198f:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11996:	8d 1c 82             	lea    ebx,[edx+eax*4]
   11999:	74 13                	je     119ae <kPagingGet4kPDEntryValueCR3+0x2e>
   1199b:	83 ec 04             	sub    esp,0x4
   1199e:	52                   	push   edx
   1199f:	ff 33                	push   DWORD PTR [ebx]
   119a1:	68 ac c0 06 00       	push   0x6c0ac
   119a6:	e8 b5 0c 01 00       	call   22660 <printk>
   119ab:	83 c4 10             	add    esp,0x10
   119ae:	8b 03                	mov    eax,DWORD PTR [ebx]
   119b0:	83 c4 08             	add    esp,0x8
   119b3:	5b                   	pop    ebx
   119b4:	c3                   	ret    
   119b5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   119b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000119c0 <kPagingGet4kPDEntryValue>:
kPagingGet4kPDEntryValue():
   119c0:	83 ec 14             	sub    esp,0x14
   119c3:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   119c7:	68 00 a0 4b 00       	push   0x4ba000
   119cc:	e8 af ff ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   119d1:	83 c4 1c             	add    esp,0x1c
   119d4:	c3                   	ret    
   119d5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   119d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000119e0 <kPagingGet4kPDEntryAddressCR3>:
kPagingGet4kPDEntryAddressCR3():
   119e0:	53                   	push   ebx
   119e1:	83 ec 08             	sub    esp,0x8
   119e4:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   119e8:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   119ec:	c1 eb 16             	shr    ebx,0x16
   119ef:	c1 e3 02             	shl    ebx,0x2
   119f2:	09 c3                	or     ebx,eax
   119f4:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   119fb:	74 12                	je     11a0f <kPagingGet4kPDEntryAddressCR3+0x2f>
   119fd:	83 ec 04             	sub    esp,0x4
   11a00:	50                   	push   eax
   11a01:	53                   	push   ebx
   11a02:	68 f0 c0 06 00       	push   0x6c0f0
   11a07:	e8 54 0c 01 00       	call   22660 <printk>
   11a0c:	83 c4 10             	add    esp,0x10
   11a0f:	83 c4 08             	add    esp,0x8
   11a12:	89 d8                	mov    eax,ebx
   11a14:	5b                   	pop    ebx
   11a15:	c3                   	ret    
   11a16:	8d 76 00             	lea    esi,[esi+0x0]
   11a19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011a20 <kPagingGet4kPDEntryAddress>:
kPagingGet4kPDEntryAddress():
   11a20:	83 ec 14             	sub    esp,0x14
   11a23:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   11a27:	68 00 a0 4b 00       	push   0x4ba000
   11a2c:	e8 af ff ff ff       	call   119e0 <kPagingGet4kPDEntryAddressCR3>
   11a31:	83 c4 1c             	add    esp,0x1c
   11a34:	c3                   	ret    
   11a35:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11a39:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011a40 <kPagingGet4kPTEntryAddressCR3>:
kPagingGet4kPTEntryAddressCR3():
   11a40:	53                   	push   ebx
   11a41:	83 ec 10             	sub    esp,0x10
   11a44:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   11a48:	89 d8                	mov    eax,ebx
   11a4a:	81 e3 00 f0 3f 00    	and    ebx,0x3ff000
   11a50:	25 00 f0 ff ff       	and    eax,0xfffff000
   11a55:	c1 eb 0a             	shr    ebx,0xa
   11a58:	50                   	push   eax
   11a59:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   11a5d:	e8 1e ff ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   11a62:	83 c4 18             	add    esp,0x18
   11a65:	25 00 f0 ff ff       	and    eax,0xfffff000
   11a6a:	09 d8                	or     eax,ebx
   11a6c:	5b                   	pop    ebx
   11a6d:	c3                   	ret    
   11a6e:	66 90                	xchg   ax,ax

00011a70 <kPagingGet4kPTEntryAddress>:
kPagingGet4kPTEntryAddress():
   11a70:	53                   	push   ebx
   11a71:	83 ec 10             	sub    esp,0x10
   11a74:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   11a78:	89 d8                	mov    eax,ebx
   11a7a:	81 e3 00 f0 3f 00    	and    ebx,0x3ff000
   11a80:	25 00 f0 ff ff       	and    eax,0xfffff000
   11a85:	c1 eb 0a             	shr    ebx,0xa
   11a88:	50                   	push   eax
   11a89:	68 00 a0 4b 00       	push   0x4ba000
   11a8e:	e8 ed fe ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   11a93:	83 c4 18             	add    esp,0x18
   11a96:	25 00 f0 ff ff       	and    eax,0xfffff000
   11a9b:	09 d8                	or     eax,ebx
   11a9d:	5b                   	pop    ebx
   11a9e:	c3                   	ret    
   11a9f:	90                   	nop

00011aa0 <kPagingGet4kPTEntryValueCR3>:
kPagingGet4kPTEntryValueCR3():
   11aa0:	56                   	push   esi
   11aa1:	53                   	push   ebx
   11aa2:	83 ec 0c             	sub    esp,0xc
   11aa5:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   11aa9:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
   11aad:	89 d8                	mov    eax,ebx
   11aaf:	81 e3 00 f0 3f 00    	and    ebx,0x3ff000
   11ab5:	25 00 f0 ff ff       	and    eax,0xfffff000
   11aba:	c1 eb 0a             	shr    ebx,0xa
   11abd:	50                   	push   eax
   11abe:	56                   	push   esi
   11abf:	e8 bc fe ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   11ac4:	25 00 f0 ff ff       	and    eax,0xfffff000
   11ac9:	83 c4 10             	add    esp,0x10
   11acc:	09 c3                	or     ebx,eax
   11ace:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11ad5:	74 11                	je     11ae8 <kPagingGet4kPTEntryValueCR3+0x48>
   11ad7:	56                   	push   esi
   11ad8:	ff 33                	push   DWORD PTR [ebx]
   11ada:	53                   	push   ebx
   11adb:	68 38 c1 06 00       	push   0x6c138
   11ae0:	e8 7b 0b 01 00       	call   22660 <printk>
   11ae5:	83 c4 10             	add    esp,0x10
   11ae8:	8b 03                	mov    eax,DWORD PTR [ebx]
   11aea:	83 c4 04             	add    esp,0x4
   11aed:	5b                   	pop    ebx
   11aee:	5e                   	pop    esi
   11aef:	c3                   	ret    

00011af0 <kPagingGet4kPTEntryValue>:
kPagingGet4kPTEntryValue():
   11af0:	83 ec 14             	sub    esp,0x14
   11af3:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   11af7:	68 00 a0 4b 00       	push   0x4ba000
   11afc:	e8 9f ff ff ff       	call   11aa0 <kPagingGet4kPTEntryValueCR3>
   11b01:	83 c4 1c             	add    esp,0x1c
   11b04:	c3                   	ret    
   11b05:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11b09:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011b10 <kPagingSetPageReadOnlyFlag>:
kPagingSetPageReadOnlyFlag():
   11b10:	56                   	push   esi
   11b11:	53                   	push   ebx
   11b12:	83 ec 04             	sub    esp,0x4
   11b15:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11b1c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   11b20:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   11b24:	75 4a                	jne    11b70 <kPagingSetPageReadOnlyFlag+0x60>
   11b26:	89 f0                	mov    eax,esi
   11b28:	84 c0                	test   al,al
   11b2a:	74 1c                	je     11b48 <kPagingSetPageReadOnlyFlag+0x38>
   11b2c:	83 23 fd             	and    DWORD PTR [ebx],0xfffffffd
   11b2f:	0f 20 d8             	mov    eax,cr3
   11b32:	0f 22 d8             	mov    cr3,eax
   11b35:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11b3c:	75 12                	jne    11b50 <kPagingSetPageReadOnlyFlag+0x40>
   11b3e:	83 c4 04             	add    esp,0x4
   11b41:	5b                   	pop    ebx
   11b42:	5e                   	pop    esi
   11b43:	c3                   	ret    
   11b44:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11b48:	83 0b 02             	or     DWORD PTR [ebx],0x2
   11b4b:	eb e2                	jmp    11b2f <kPagingSetPageReadOnlyFlag+0x1f>
   11b4d:	8d 76 00             	lea    esi,[esi+0x0]
   11b50:	8b 03                	mov    eax,DWORD PTR [ebx]
   11b52:	c7 44 24 10 28 39 06 	mov    DWORD PTR [esp+0x10],0x63928
   11b59:	00 
   11b5a:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   11b5e:	83 c4 04             	add    esp,0x4
   11b61:	5b                   	pop    ebx
   11b62:	5e                   	pop    esi
   11b63:	e9 f8 0a 01 00       	jmp    22660 <printk>
   11b68:	90                   	nop
   11b69:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11b70:	83 ec 04             	sub    esp,0x4
   11b73:	ff 33                	push   DWORD PTR [ebx]
   11b75:	53                   	push   ebx
   11b76:	68 88 c1 06 00       	push   0x6c188
   11b7b:	e8 e0 0a 01 00       	call   22660 <printk>
   11b80:	83 c4 10             	add    esp,0x10
   11b83:	eb a1                	jmp    11b26 <kPagingSetPageReadOnlyFlag+0x16>
   11b85:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11b89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011b90 <kPagingUpdatePTEPresentFlag>:
kPagingUpdatePTEPresentFlag():
   11b90:	56                   	push   esi
   11b91:	53                   	push   ebx
   11b92:	83 ec 04             	sub    esp,0x4
   11b95:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   11b99:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   11b9d:	ff 33                	push   DWORD PTR [ebx]
   11b9f:	53                   	push   ebx
   11ba0:	68 c0 c1 06 00       	push   0x6c1c0
   11ba5:	6a 40                	push   0x40
   11ba7:	e8 d4 0a 01 00       	call   22680 <printd>
   11bac:	89 f0                	mov    eax,esi
   11bae:	83 c4 10             	add    esp,0x10
   11bb1:	8b 13                	mov    edx,DWORD PTR [ebx]
   11bb3:	84 c0                	test   al,al
   11bb5:	75 29                	jne    11be0 <kPagingUpdatePTEPresentFlag+0x50>
   11bb7:	83 e2 fe             	and    edx,0xfffffffe
   11bba:	89 13                	mov    DWORD PTR [ebx],edx
   11bbc:	0f 20 d8             	mov    eax,cr3
   11bbf:	0f 22 d8             	mov    cr3,eax
   11bc2:	83 ec 04             	sub    esp,0x4
   11bc5:	52                   	push   edx
   11bc6:	68 28 39 06 00       	push   0x63928
   11bcb:	6a 40                	push   0x40
   11bcd:	e8 ae 0a 01 00       	call   22680 <printd>
   11bd2:	83 c4 14             	add    esp,0x14
   11bd5:	5b                   	pop    ebx
   11bd6:	5e                   	pop    esi
   11bd7:	c3                   	ret    
   11bd8:	90                   	nop
   11bd9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11be0:	83 ca 01             	or     edx,0x1
   11be3:	89 13                	mov    DWORD PTR [ebx],edx
   11be5:	eb d5                	jmp    11bbc <kPagingUpdatePTEPresentFlag+0x2c>
   11be7:	89 f6                	mov    esi,esi
   11be9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011bf0 <kSetVirtualRangeRO>:
kSetVirtualRangeRO():
   11bf0:	55                   	push   ebp
   11bf1:	57                   	push   edi
   11bf2:	56                   	push   esi
   11bf3:	53                   	push   ebx
   11bf4:	83 ec 1c             	sub    esp,0x1c
   11bf7:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11bfe:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
   11c02:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   11c06:	8b 54 24 38          	mov    edx,DWORD PTR [esp+0x38]
   11c0a:	0f 85 90 00 00 00    	jne    11ca0 <kSetVirtualRangeRO+0xb0>
   11c10:	83 c6 01             	add    esi,0x1
   11c13:	39 f3                	cmp    ebx,esi
   11c15:	77 78                	ja     11c8f <kSetVirtualRangeRO+0x9f>
   11c17:	84 d2                	test   dl,dl
   11c19:	b8 e0 00 04 00       	mov    eax,0x400e0
   11c1e:	bd 05 a3 04 00       	mov    ebp,0x4a305
   11c23:	0f 45 c5             	cmovne eax,ebp
   11c26:	0f b6 fa             	movzx  edi,dl
   11c29:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   11c2d:	8d 76 00             	lea    esi,[esi+0x0]
   11c30:	89 d8                	mov    eax,ebx
   11c32:	83 ec 08             	sub    esp,0x8
   11c35:	25 00 f0 ff ff       	and    eax,0xfffff000
   11c3a:	50                   	push   eax
   11c3b:	68 00 a0 4b 00       	push   0x4ba000
   11c40:	e8 3b fd ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   11c45:	89 da                	mov    edx,ebx
   11c47:	25 00 f0 ff ff       	and    eax,0xfffff000
   11c4c:	83 c4 10             	add    esp,0x10
   11c4f:	81 e2 00 f0 3f 00    	and    edx,0x3ff000
   11c55:	c1 ea 0a             	shr    edx,0xa
   11c58:	09 c2                	or     edx,eax
   11c5a:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11c61:	89 d5                	mov    ebp,edx
   11c63:	74 13                	je     11c78 <kSetVirtualRangeRO+0x88>
   11c65:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   11c69:	52                   	push   edx
   11c6a:	53                   	push   ebx
   11c6b:	68 e3 00 04 00       	push   0x400e3
   11c70:	e8 eb 09 01 00       	call   22660 <printk>
   11c75:	83 c4 10             	add    esp,0x10
   11c78:	83 ec 08             	sub    esp,0x8
   11c7b:	81 c3 00 10 00 00    	add    ebx,0x1000
   11c81:	57                   	push   edi
   11c82:	55                   	push   ebp
   11c83:	e8 88 fe ff ff       	call   11b10 <kPagingSetPageReadOnlyFlag>
   11c88:	83 c4 10             	add    esp,0x10
   11c8b:	39 f3                	cmp    ebx,esi
   11c8d:	76 a1                	jbe    11c30 <kSetVirtualRangeRO+0x40>
   11c8f:	83 c4 1c             	add    esp,0x1c
   11c92:	5b                   	pop    ebx
   11c93:	5e                   	pop    esi
   11c94:	5f                   	pop    edi
   11c95:	5d                   	pop    ebp
   11c96:	c3                   	ret    
   11c97:	89 f6                	mov    esi,esi
   11c99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11ca0:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
   11ca4:	83 ec 04             	sub    esp,0x4
   11ca7:	56                   	push   esi
   11ca8:	53                   	push   ebx
   11ca9:	68 fc c1 06 00       	push   0x6c1fc
   11cae:	e8 ad 09 01 00       	call   22660 <printk>
   11cb3:	83 c4 10             	add    esp,0x10
   11cb6:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   11cba:	e9 51 ff ff ff       	jmp    11c10 <kSetVirtualRangeRO+0x20>
   11cbf:	90                   	nop

00011cc0 <kpagingUpdatePresentFlagA>:
kpagingUpdatePresentFlagA():
   11cc0:	56                   	push   esi
   11cc1:	53                   	push   ebx
   11cc2:	83 ec 04             	sub    esp,0x4
   11cc5:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11ccc:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   11cd0:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   11cd4:	74 23                	je     11cf9 <kpagingUpdatePresentFlagA+0x39>
   11cd6:	89 f0                	mov    eax,esi
   11cd8:	ba fb 00 04 00       	mov    edx,0x400fb
   11cdd:	84 c0                	test   al,al
   11cdf:	b8 ff 00 04 00       	mov    eax,0x400ff
   11ce4:	0f 44 c2             	cmove  eax,edx
   11ce7:	83 ec 04             	sub    esp,0x4
   11cea:	50                   	push   eax
   11ceb:	53                   	push   ebx
   11cec:	68 2c c2 06 00       	push   0x6c22c
   11cf1:	e8 6a 09 01 00       	call   22660 <printk>
   11cf6:	83 c4 10             	add    esp,0x10
   11cf9:	89 d8                	mov    eax,ebx
   11cfb:	83 ec 08             	sub    esp,0x8
   11cfe:	81 e3 00 f0 3f 00    	and    ebx,0x3ff000
   11d04:	25 00 f0 ff ff       	and    eax,0xfffff000
   11d09:	c1 eb 0a             	shr    ebx,0xa
   11d0c:	50                   	push   eax
   11d0d:	68 00 a0 4b 00       	push   0x4ba000
   11d12:	e8 69 fc ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   11d17:	25 00 f0 ff ff       	and    eax,0xfffff000
   11d1c:	83 c4 10             	add    esp,0x10
   11d1f:	09 c3                	or     ebx,eax
   11d21:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11d28:	74 11                	je     11d3b <kpagingUpdatePresentFlagA+0x7b>
   11d2a:	83 ec 08             	sub    esp,0x8
   11d2d:	53                   	push   ebx
   11d2e:	68 58 c2 06 00       	push   0x6c258
   11d33:	e8 28 09 01 00       	call   22660 <printk>
   11d38:	83 c4 10             	add    esp,0x10
   11d3b:	89 f0                	mov    eax,esi
   11d3d:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
   11d41:	0f b6 f0             	movzx  esi,al
   11d44:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
   11d48:	83 c4 04             	add    esp,0x4
   11d4b:	5b                   	pop    ebx
   11d4c:	5e                   	pop    esi
   11d4d:	e9 3e fe ff ff       	jmp    11b90 <kPagingUpdatePTEPresentFlag>
   11d52:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   11d59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00011d60 <kpagingUpdatePresentFlagV>:
kpagingUpdatePresentFlagV():
   11d60:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   11d65:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   11d69:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   11d6d:	2d 00 00 00 40       	sub    eax,0x40000000
   11d72:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   11d76:	e9 45 ff ff ff       	jmp    11cc0 <kpagingUpdatePresentFlagA>
   11d7b:	90                   	nop
   11d7c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00011d80 <kMapPage>:
kMapPage():
   11d80:	57                   	push   edi
   11d81:	56                   	push   esi
   11d82:	53                   	push   ebx
   11d83:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   11d87:	a1 e4 97 12 00       	mov    eax,ds:0x1297e4
   11d8c:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   11d90:	89 cb                	mov    ebx,ecx
   11d92:	89 ce                	mov    esi,ecx
   11d94:	c1 eb 16             	shr    ebx,0x16
   11d97:	8d 1c 98             	lea    ebx,[eax+ebx*4]
   11d9a:	8b 03                	mov    eax,DWORD PTR [ebx]
   11d9c:	85 c0                	test   eax,eax
   11d9e:	74 30                	je     11dd0 <kMapPage+0x50>
   11da0:	81 e6 ff ff 3f 00    	and    esi,0x3fffff
   11da6:	c1 ee 0c             	shr    esi,0xc
   11da9:	0f b6 d2             	movzx  edx,dl
   11dac:	0b 54 24 14          	or     edx,DWORD PTR [esp+0x14]
   11db0:	25 00 f0 ff ff       	and    eax,0xfffff000
   11db5:	8d 04 b0             	lea    eax,[eax+esi*4]
   11db8:	89 10                	mov    DWORD PTR [eax],edx
   11dba:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11dc1:	75 35                	jne    11df8 <kMapPage+0x78>
   11dc3:	5b                   	pop    ebx
   11dc4:	5e                   	pop    esi
   11dc5:	5f                   	pop    edi
   11dc6:	c3                   	ret    
   11dc7:	89 f6                	mov    esi,esi
   11dc9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11dd0:	31 ff                	xor    edi,edi
   11dd2:	3b 3d 8c 95 12 00    	cmp    edi,DWORD PTR ds:0x12958c
   11dd8:	76 36                	jbe    11e10 <kMapPage+0x90>
   11dda:	89 ce                	mov    esi,ecx
   11ddc:	81 e6 ff ff 3f 00    	and    esi,0x3fffff
   11de2:	c1 ee 0c             	shr    esi,0xc
   11de5:	8d 86 00 c0 4c 00    	lea    eax,[esi+0x4cc000]
   11deb:	83 c8 63             	or     eax,0x63
   11dee:	89 03                	mov    DWORD PTR [ebx],eax
   11df0:	eb b7                	jmp    11da9 <kMapPage+0x29>
   11df2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   11df8:	83 ec 0c             	sub    esp,0xc
   11dfb:	52                   	push   edx
   11dfc:	50                   	push   eax
   11dfd:	53                   	push   ebx
   11dfe:	51                   	push   ecx
   11dff:	68 cc c2 06 00       	push   0x6c2cc
   11e04:	e8 57 08 01 00       	call   22660 <printk>
   11e09:	83 c4 20             	add    esp,0x20
   11e0c:	5b                   	pop    ebx
   11e0d:	5e                   	pop    esi
   11e0e:	5f                   	pop    edi
   11e0f:	c3                   	ret    
   11e10:	73 4e                	jae    11e60 <kMapPage+0xe0>
   11e12:	0f b6 d2             	movzx  edx,dl
   11e15:	0b 54 24 14          	or     edx,DWORD PTR [esp+0x14]
   11e19:	89 c8                	mov    eax,ecx
   11e1b:	25 ff 03 00 00       	and    eax,0x3ff
   11e20:	c7 03 63 00 00 20    	mov    DWORD PTR [ebx],0x20000063
   11e26:	8d 34 85 00 00 00 20 	lea    esi,[eax*4+0x20000000]
   11e2d:	89 14 85 00 00 00 20 	mov    DWORD PTR [eax*4+0x20000000],edx
   11e34:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11e3b:	74 86                	je     11dc3 <kMapPage+0x43>
   11e3d:	83 ec 0c             	sub    esp,0xc
   11e40:	52                   	push   edx
   11e41:	56                   	push   esi
   11e42:	53                   	push   ebx
   11e43:	51                   	push   ecx
   11e44:	68 8c c2 06 00       	push   0x6c28c
   11e49:	e8 12 08 01 00       	call   22660 <printk>
   11e4e:	83 c4 20             	add    esp,0x20
   11e51:	e9 6d ff ff ff       	jmp    11dc3 <kMapPage+0x43>
   11e56:	8d 76 00             	lea    esi,[esi+0x0]
   11e59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11e60:	3b 0d 88 95 12 00    	cmp    ecx,DWORD PTR ds:0x129588
   11e66:	0f 83 6e ff ff ff    	jae    11dda <kMapPage+0x5a>
   11e6c:	eb a4                	jmp    11e12 <kMapPage+0x92>
   11e6e:	66 90                	xchg   ax,ax

00011e70 <kIsPageMapped>:
kIsPageMapped():
   11e70:	83 ec 14             	sub    esp,0x14
   11e73:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   11e77:	68 00 a0 4b 00       	push   0x4ba000
   11e7c:	e8 1f fc ff ff       	call   11aa0 <kPagingGet4kPTEntryValueCR3>
   11e81:	85 c0                	test   eax,eax
   11e83:	0f 95 c0             	setne  al
   11e86:	83 c4 1c             	add    esp,0x1c
   11e89:	c3                   	ret    
   11e8a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00011e90 <kUnMapPage>:
kUnMapPage():
   11e90:	57                   	push   edi
   11e91:	56                   	push   esi
   11e92:	83 ec 04             	sub    esp,0x4
   11e95:	a1 e4 97 12 00       	mov    eax,ds:0x1297e4
   11e9a:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   11e9e:	89 d1                	mov    ecx,edx
   11ea0:	c1 e9 16             	shr    ecx,0x16
   11ea3:	8d 0c 88             	lea    ecx,[eax+ecx*4]
   11ea6:	8b 01                	mov    eax,DWORD PTR [ecx]
   11ea8:	85 c0                	test   eax,eax
   11eaa:	75 0a                	jne    11eb6 <kUnMapPage+0x26>
   11eac:	31 ff                	xor    edi,edi
   11eae:	3b 3d 8c 95 12 00    	cmp    edi,DWORD PTR ds:0x12958c
   11eb4:	76 4a                	jbe    11f00 <kUnMapPage+0x70>
   11eb6:	25 00 f0 ff ff       	and    eax,0xfffff000
   11ebb:	89 c6                	mov    esi,eax
   11ebd:	89 d0                	mov    eax,edx
   11ebf:	c1 e8 0a             	shr    eax,0xa
   11ec2:	25 fc 0f 00 00       	and    eax,0xffc
   11ec7:	01 f0                	add    eax,esi
   11ec9:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
   11ecf:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11ed6:	75 08                	jne    11ee0 <kUnMapPage+0x50>
   11ed8:	83 c4 04             	add    esp,0x4
   11edb:	5e                   	pop    esi
   11edc:	5f                   	pop    edi
   11edd:	c3                   	ret    
   11ede:	66 90                	xchg   ax,ax
   11ee0:	50                   	push   eax
   11ee1:	51                   	push   ecx
   11ee2:	52                   	push   edx
   11ee3:	68 40 c3 06 00       	push   0x6c340
   11ee8:	e8 73 07 01 00       	call   22660 <printk>
   11eed:	83 c4 10             	add    esp,0x10
   11ef0:	83 c4 04             	add    esp,0x4
   11ef3:	5e                   	pop    esi
   11ef4:	5f                   	pop    edi
   11ef5:	c3                   	ret    
   11ef6:	8d 76 00             	lea    esi,[esi+0x0]
   11ef9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   11f00:	73 3e                	jae    11f40 <kUnMapPage+0xb0>
   11f02:	89 d0                	mov    eax,edx
   11f04:	c7 01 63 00 00 20    	mov    DWORD PTR [ecx],0x20000063
   11f0a:	25 ff 03 00 00       	and    eax,0x3ff
   11f0f:	c7 04 85 00 00 00 20 	mov    DWORD PTR [eax*4+0x20000000],0x0
   11f16:	00 00 00 00 
   11f1a:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11f21:	8d 34 85 00 00 00 20 	lea    esi,[eax*4+0x20000000]
   11f28:	74 ae                	je     11ed8 <kUnMapPage+0x48>
   11f2a:	56                   	push   esi
   11f2b:	51                   	push   ecx
   11f2c:	52                   	push   edx
   11f2d:	68 08 c3 06 00       	push   0x6c308
   11f32:	e8 29 07 01 00       	call   22660 <printk>
   11f37:	83 c4 10             	add    esp,0x10
   11f3a:	eb 9c                	jmp    11ed8 <kUnMapPage+0x48>
   11f3c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   11f40:	3b 15 88 95 12 00    	cmp    edx,DWORD PTR ds:0x129588
   11f46:	0f 83 6a ff ff ff    	jae    11eb6 <kUnMapPage+0x26>
   11f4c:	eb b4                	jmp    11f02 <kUnMapPage+0x72>
   11f4e:	66 90                	xchg   ax,ax

00011f50 <kSetPhysicalRangeRO>:
kSetPhysicalRangeRO():
   11f50:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11f57:	57                   	push   edi
   11f58:	56                   	push   esi
   11f59:	53                   	push   ebx
   11f5a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   11f5e:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   11f62:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
   11f66:	74 22                	je     11f8a <kSetPhysicalRangeRO+0x3a>
   11f68:	89 f0                	mov    eax,esi
   11f6a:	83 ec 0c             	sub    esp,0xc
   11f6d:	25 00 f0 ff ff       	and    eax,0xfffff000
   11f72:	50                   	push   eax
   11f73:	89 d8                	mov    eax,ebx
   11f75:	56                   	push   esi
   11f76:	25 00 f0 ff ff       	and    eax,0xfffff000
   11f7b:	50                   	push   eax
   11f7c:	53                   	push   ebx
   11f7d:	68 70 c3 06 00       	push   0x6c370
   11f82:	e8 d9 06 01 00       	call   22660 <printk>
   11f87:	83 c4 20             	add    esp,0x20
   11f8a:	89 f8                	mov    eax,edi
   11f8c:	81 ee 00 00 00 40    	sub    esi,0x40000000
   11f92:	81 eb 00 00 00 40    	sub    ebx,0x40000000
   11f98:	0f b6 f8             	movzx  edi,al
   11f9b:	81 e6 00 f0 ff ff    	and    esi,0xfffff000
   11fa1:	81 e3 00 f0 ff ff    	and    ebx,0xfffff000
   11fa7:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
   11fab:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
   11faf:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
   11fb3:	5b                   	pop    ebx
   11fb4:	5e                   	pop    esi
   11fb5:	5f                   	pop    edi
   11fb6:	e9 35 fc ff ff       	jmp    11bf0 <kSetVirtualRangeRO>
   11fbb:	90                   	nop
   11fbc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00011fc0 <mmKernelSetPageInUseFlag>:
mmKernelSetPageInUseFlag():
   11fc0:	56                   	push   esi
   11fc1:	53                   	push   ebx
   11fc2:	83 ec 04             	sub    esp,0x4
   11fc5:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   11fcc:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   11fd0:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   11fd4:	74 22                	je     11ff8 <mmKernelSetPageInUseFlag+0x38>
   11fd6:	89 f0                	mov    eax,esi
   11fd8:	ba 07 01 04 00       	mov    edx,0x40107
   11fdd:	84 c0                	test   al,al
   11fdf:	b8 0b 01 04 00       	mov    eax,0x4010b
   11fe4:	0f 44 c2             	cmove  eax,edx
   11fe7:	50                   	push   eax
   11fe8:	53                   	push   ebx
   11fe9:	68 b0 c3 06 00       	push   0x6c3b0
   11fee:	6a 40                	push   0x40
   11ff0:	e8 8b 06 01 00       	call   22680 <printd>
   11ff5:	83 c4 10             	add    esp,0x10
   11ff8:	89 d8                	mov    eax,ebx
   11ffa:	83 ec 08             	sub    esp,0x8
   11ffd:	81 e3 00 f0 3f 00    	and    ebx,0x3ff000
   12003:	25 00 f0 ff ff       	and    eax,0xfffff000
   12008:	c1 eb 0a             	shr    ebx,0xa
   1200b:	50                   	push   eax
   1200c:	68 00 a0 4b 00       	push   0x4ba000
   12011:	e8 6a f9 ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   12016:	25 00 f0 ff ff       	and    eax,0xfffff000
   1201b:	09 c3                	or     ebx,eax
   1201d:	ff 33                	push   DWORD PTR [ebx]
   1201f:	53                   	push   ebx
   12020:	68 f4 c3 06 00       	push   0x6c3f4
   12025:	6a 40                	push   0x40
   12027:	e8 54 06 01 00       	call   22680 <printd>
   1202c:	89 f0                	mov    eax,esi
   1202e:	83 c4 20             	add    esp,0x20
   12031:	84 c0                	test   al,al
   12033:	75 13                	jne    12048 <mmKernelSetPageInUseFlag+0x88>
   12035:	81 23 ff f7 ff ff    	and    DWORD PTR [ebx],0xfffff7ff
   1203b:	83 c4 04             	add    esp,0x4
   1203e:	5b                   	pop    ebx
   1203f:	5e                   	pop    esi
   12040:	c3                   	ret    
   12041:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   12048:	81 0b 00 08 00 00    	or     DWORD PTR [ebx],0x800
   1204e:	83 c4 04             	add    esp,0x4
   12051:	5b                   	pop    ebx
   12052:	5e                   	pop    esi
   12053:	c3                   	ret    
   12054:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1205a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00012060 <mmKernelSetPageRangeInUseFlag>:
mmKernelSetPageRangeInUseFlag():
   12060:	55                   	push   ebp
   12061:	57                   	push   edi
   12062:	56                   	push   esi
   12063:	53                   	push   ebx
   12064:	83 ec 0c             	sub    esp,0xc
   12067:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   1206b:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   1206f:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
   12073:	0f b6 7c 24 2c       	movzx  edi,BYTE PTR [esp+0x2c]
   12078:	39 f3                	cmp    ebx,esi
   1207a:	73 17                	jae    12093 <mmKernelSetPageRangeInUseFlag+0x33>
   1207c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12080:	83 ec 08             	sub    esp,0x8
   12083:	57                   	push   edi
   12084:	53                   	push   ebx
   12085:	01 eb                	add    ebx,ebp
   12087:	e8 34 ff ff ff       	call   11fc0 <mmKernelSetPageInUseFlag>
   1208c:	83 c4 10             	add    esp,0x10
   1208f:	39 de                	cmp    esi,ebx
   12091:	77 ed                	ja     12080 <mmKernelSetPageRangeInUseFlag+0x20>
   12093:	83 c4 0c             	add    esp,0xc
   12096:	5b                   	pop    ebx
   12097:	5e                   	pop    esi
   12098:	5f                   	pop    edi
   12099:	5d                   	pop    ebp
   1209a:	c3                   	ret    
   1209b:	90                   	nop
   1209c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000120a0 <mmUnusePageRange>:
mmUnusePageRange():
   120a0:	f3 c3                	repz ret 
   120a2:	66 90                	xchg   ax,ax
   120a4:	66 90                	xchg   ax,ax
   120a6:	66 90                	xchg   ax,ax
   120a8:	66 90                	xchg   ax,ax
   120aa:	66 90                	xchg   ax,ax
   120ac:	66 90                	xchg   ax,ax
   120ae:	66 90                	xchg   ax,ax

000120b0 <strncmp>:
strncmp():
   120b0:	57                   	push   edi
   120b1:	56                   	push   esi
   120b2:	53                   	push   ebx
   120b3:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   120b7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   120bb:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   120bf:	85 db                	test   ebx,ebx
   120c1:	74 36                	je     120f9 <strncmp+0x49>
   120c3:	0f b6 16             	movzx  edx,BYTE PTR [esi]
   120c6:	0f b6 0f             	movzx  ecx,BYTE PTR [edi]
   120c9:	38 d1                	cmp    cl,dl
   120cb:	75 33                	jne    12100 <strncmp+0x50>
   120cd:	84 c9                	test   cl,cl
   120cf:	74 28                	je     120f9 <strncmp+0x49>
   120d1:	83 eb 01             	sub    ebx,0x1
   120d4:	31 c0                	xor    eax,eax
   120d6:	eb 1d                	jmp    120f5 <strncmp+0x45>
   120d8:	90                   	nop
   120d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   120e0:	0f b6 54 06 01       	movzx  edx,BYTE PTR [esi+eax*1+0x1]
   120e5:	0f b6 4c 07 01       	movzx  ecx,BYTE PTR [edi+eax*1+0x1]
   120ea:	38 ca                	cmp    dl,cl
   120ec:	75 12                	jne    12100 <strncmp+0x50>
   120ee:	83 c0 01             	add    eax,0x1
   120f1:	84 d2                	test   dl,dl
   120f3:	74 04                	je     120f9 <strncmp+0x49>
   120f5:	39 d8                	cmp    eax,ebx
   120f7:	75 e7                	jne    120e0 <strncmp+0x30>
   120f9:	5b                   	pop    ebx
   120fa:	31 c0                	xor    eax,eax
   120fc:	5e                   	pop    esi
   120fd:	5f                   	pop    edi
   120fe:	c3                   	ret    
   120ff:	90                   	nop
   12100:	38 ca                	cmp    dl,cl
   12102:	19 c0                	sbb    eax,eax
   12104:	5b                   	pop    ebx
   12105:	83 c8 01             	or     eax,0x1
   12108:	5e                   	pop    esi
   12109:	5f                   	pop    edi
   1210a:	c3                   	ret    
   1210b:	66 90                	xchg   ax,ax
   1210d:	66 90                	xchg   ax,ax
   1210f:	90                   	nop

00012110 <strncpy>:
strncpy():
   12110:	56                   	push   esi
   12111:	53                   	push   ebx
   12112:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
   12116:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
   1211a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1211e:	85 c9                	test   ecx,ecx
   12120:	74 23                	je     12145 <strncpy+0x35>
   12122:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   12125:	89 f2                	mov    edx,esi
   12127:	84 c0                	test   al,al
   12129:	75 0c                	jne    12137 <strncpy+0x27>
   1212b:	eb 23                	jmp    12150 <strncpy+0x40>
   1212d:	8d 76 00             	lea    esi,[esi+0x0]
   12130:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   12133:	84 c0                	test   al,al
   12135:	74 19                	je     12150 <strncpy+0x40>
   12137:	83 c2 01             	add    edx,0x1
   1213a:	83 c3 01             	add    ebx,0x1
   1213d:	83 e9 01             	sub    ecx,0x1
   12140:	88 42 ff             	mov    BYTE PTR [edx-0x1],al
   12143:	75 eb                	jne    12130 <strncpy+0x20>
   12145:	89 f0                	mov    eax,esi
   12147:	5b                   	pop    ebx
   12148:	5e                   	pop    esi
   12149:	c3                   	ret    
   1214a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   12150:	01 d1                	add    ecx,edx
   12152:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   12158:	83 c2 01             	add    edx,0x1
   1215b:	c6 42 ff 00          	mov    BYTE PTR [edx-0x1],0x0
   1215f:	39 d1                	cmp    ecx,edx
   12161:	75 f5                	jne    12158 <strncpy+0x48>
   12163:	89 f0                	mov    eax,esi
   12165:	5b                   	pop    ebx
   12166:	5e                   	pop    esi
   12167:	c3                   	ret    

00012168 <dumpregs>:
dumpregs():
   12168:	a3 f0 96 12 00       	mov    ds:0x1296f0,eax
   1216d:	89 1d f4 96 12 00    	mov    DWORD PTR ds:0x1296f4,ebx
   12173:	89 0d f8 96 12 00    	mov    DWORD PTR ds:0x1296f8,ecx
   12179:	89 15 fc 96 12 00    	mov    DWORD PTR ds:0x1296fc,edx
   1217f:	89 35 00 97 12 00    	mov    DWORD PTR ds:0x129700,esi
   12185:	89 3d 04 97 12 00    	mov    DWORD PTR ds:0x129704,edi
   1218b:	a3 08 97 12 00       	mov    ds:0x129708,eax
   12190:	0f 20 c0             	mov    eax,cr0
   12193:	a3 0c 97 12 00       	mov    ds:0x12970c,eax
   12198:	0f 20 d8             	mov    eax,cr3
   1219b:	a3 10 97 12 00       	mov    ds:0x129710,eax
   121a0:	0f 20 e0             	mov    eax,cr4
   121a3:	a3 14 97 12 00       	mov    ds:0x129714,eax
   121a8:	a1 f0 96 12 00       	mov    eax,ds:0x1296f0
   121ad:	c3                   	ret    

000121ae <storeGDT>:
storeGDT():
   121ae:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   121b2:	0f 01 00             	sgdtd  [eax]
   121b5:	c3                   	ret    

000121b6 <getCS>:
getCS():
   121b6:	0e                   	push   cs
   121b7:	58                   	pop    eax
   121b8:	c3                   	ret    

000121b9 <getDS>:
getDS():
   121b9:	1e                   	push   ds
   121ba:	58                   	pop    eax
   121bb:	c3                   	ret    

000121bc <getES>:
getES():
   121bc:	06                   	push   es
   121bd:	58                   	pop    eax
   121be:	c3                   	ret    

000121bf <getFS>:
getFS():
   121bf:	0f a0                	push   fs
   121c1:	58                   	pop    eax
   121c2:	c3                   	ret    

000121c3 <getGS>:
getGS():
   121c3:	0f a8                	push   gs
   121c5:	58                   	pop    eax
   121c6:	c3                   	ret    

000121c7 <getSS>:
getSS():
   121c7:	16                   	push   ss
   121c8:	58                   	pop    eax
   121c9:	c3                   	ret    

000121ca <getESP>:
getESP():
   121ca:	54                   	push   esp
   121cb:	58                   	pop    eax
   121cc:	83 e8 04             	sub    eax,0x4
   121cf:	c3                   	ret    

000121d0 <getEFlags>:
getEFlags():
   121d0:	9c                   	pushf  
   121d1:	58                   	pop    eax
   121d2:	c3                   	ret    

000121d3 <enableCR0_WP>:
enableCR0_WP():
   121d3:	50                   	push   eax
   121d4:	0f 20 c0             	mov    eax,cr0
   121d7:	0d 00 00 01 00       	or     eax,0x10000
   121dc:	0f 22 c0             	mov    cr0,eax
   121df:	58                   	pop    eax
   121e0:	c3                   	ret    
   121e1:	66 90                	xchg   ax,ax
   121e3:	90                   	nop
   121e4:	66 90                	xchg   ax,ax
   121e6:	66 90                	xchg   ax,ax
   121e8:	66 90                	xchg   ax,ax
   121ea:	66 90                	xchg   ax,ax
   121ec:	66 90                	xchg   ax,ax
   121ee:	66 90                	xchg   ax,ax

000121f0 <helpMe>:
helpMe():
   121f0:	53                   	push   ebx
   121f1:	bb 84 38 02 00       	mov    ebx,0x23884
   121f6:	83 ec 14             	sub    esp,0x14
   121f9:	68 12 01 04 00       	push   0x40112
   121fe:	e8 5d 04 01 00       	call   22660 <printk>
   12203:	83 c4 10             	add    esp,0x10
   12206:	8d 76 00             	lea    esi,[esi+0x0]
   12209:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   12210:	83 ec 04             	sub    esp,0x4
   12213:	ff 33                	push   DWORD PTR [ebx]
   12215:	ff 73 fc             	push   DWORD PTR [ebx-0x4]
   12218:	68 19 01 04 00       	push   0x40119
   1221d:	83 c3 10             	add    ebx,0x10
   12220:	e8 3b 04 01 00       	call   22660 <printk>
   12225:	83 c4 10             	add    esp,0x10
   12228:	81 fb 54 3a 02 00    	cmp    ebx,0x23a54
   1222e:	75 e0                	jne    12210 <helpMe+0x20>
   12230:	83 c4 08             	add    esp,0x8
   12233:	5b                   	pop    ebx
   12234:	c3                   	ret    
   12235:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12239:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00012240 <displayGDTTable>:
displayGDTTable():
   12240:	e9 bb f2 00 00       	jmp    21500 <dumpGDTTable>
   12245:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12249:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00012250 <findCommand>:
findCommand():
   12250:	57                   	push   edi
   12251:	56                   	push   esi
   12252:	31 f6                	xor    esi,esi
   12254:	53                   	push   ebx
   12255:	bb 80 38 02 00       	mov    ebx,0x23880
   1225a:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
   1225e:	eb 0b                	jmp    1226b <findCommand+0x1b>
   12260:	83 c6 01             	add    esi,0x1
   12263:	83 c3 10             	add    ebx,0x10
   12266:	83 fe 1d             	cmp    esi,0x1d
   12269:	74 25                	je     12290 <findCommand+0x40>
   1226b:	83 ec 0c             	sub    esp,0xc
   1226e:	ff 33                	push   DWORD PTR [ebx]
   12270:	e8 8b 05 01 00       	call   22800 <strlen>
   12275:	83 c4 0c             	add    esp,0xc
   12278:	50                   	push   eax
   12279:	ff 33                	push   DWORD PTR [ebx]
   1227b:	57                   	push   edi
   1227c:	e8 2f fe ff ff       	call   120b0 <strncmp>
   12281:	83 c4 10             	add    esp,0x10
   12284:	85 c0                	test   eax,eax
   12286:	75 d8                	jne    12260 <findCommand+0x10>
   12288:	8d 46 01             	lea    eax,[esi+0x1]
   1228b:	5b                   	pop    ebx
   1228c:	5e                   	pop    esi
   1228d:	5f                   	pop    edi
   1228e:	c3                   	ret    
   1228f:	90                   	nop
   12290:	5b                   	pop    ebx
   12291:	b8 ff ff ff ff       	mov    eax,0xffffffff
   12296:	5e                   	pop    esi
   12297:	5f                   	pop    edi
   12298:	c3                   	ret    
   12299:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000122a0 <parseParamsShell>:
parseParamsShell():
   122a0:	55                   	push   ebp
   122a1:	57                   	push   edi
   122a2:	31 ed                	xor    ebp,ebp
   122a4:	56                   	push   esi
   122a5:	53                   	push   ebx
   122a6:	31 ff                	xor    edi,edi
   122a8:	31 db                	xor    ebx,ebx
   122aa:	83 ec 20             	sub    esp,0x20
   122ad:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   122b1:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
   122b5:	6a 00                	push   0x0
   122b7:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
   122bb:	e8 c0 ea 00 00       	call   20d80 <memset>
   122c0:	83 c4 10             	add    esp,0x10
   122c3:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   122ca:	00 
   122cb:	eb 19                	jmp    122e6 <parseParamsShell+0x46>
   122cd:	8d 76 00             	lea    esi,[esi+0x0]
   122d0:	3c 20                	cmp    al,0x20
   122d2:	74 2e                	je     12302 <parseParamsShell+0x62>
   122d4:	89 f9                	mov    ecx,edi
   122d6:	c1 e1 09             	shl    ecx,0x9
   122d9:	03 4c 24 34          	add    ecx,DWORD PTR [esp+0x34]
   122dd:	88 04 29             	mov    BYTE PTR [ecx+ebp*1],al
   122e0:	83 c5 01             	add    ebp,0x1
   122e3:	83 c3 01             	add    ebx,0x1
   122e6:	83 ec 0c             	sub    esp,0xc
   122e9:	56                   	push   esi
   122ea:	e8 11 05 01 00       	call   22800 <strlen>
   122ef:	83 c4 10             	add    esp,0x10
   122f2:	39 c3                	cmp    ebx,eax
   122f4:	73 4a                	jae    12340 <parseParamsShell+0xa0>
   122f6:	0f b6 04 1e          	movzx  eax,BYTE PTR [esi+ebx*1]
   122fa:	8d 48 d4             	lea    ecx,[eax-0x2c]
   122fd:	80 f9 01             	cmp    cl,0x1
   12300:	77 ce                	ja     122d0 <parseParamsShell+0x30>
   12302:	89 c1                	mov    ecx,eax
   12304:	83 e1 fd             	and    ecx,0xfffffffd
   12307:	80 f9 2d             	cmp    cl,0x2d
   1230a:	89 f9                	mov    ecx,edi
   1230c:	74 22                	je     12330 <parseParamsShell+0x90>
   1230e:	c1 e1 09             	shl    ecx,0x9
   12311:	03 4c 24 34          	add    ecx,DWORD PTR [esp+0x34]
   12315:	85 db                	test   ebx,ebx
   12317:	c6 04 29 00          	mov    BYTE PTR [ecx+ebp*1],0x0
   1231b:	74 c6                	je     122e3 <parseParamsShell+0x43>
   1231d:	83 c7 01             	add    edi,0x1
   12320:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   12325:	31 ed                	xor    ebp,ebp
   12327:	eb ba                	jmp    122e3 <parseParamsShell+0x43>
   12329:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   12330:	c1 e1 09             	shl    ecx,0x9
   12333:	03 4c 24 34          	add    ecx,DWORD PTR [esp+0x34]
   12337:	88 04 29             	mov    BYTE PTR [ecx+ebp*1],al
   1233a:	83 c5 01             	add    ebp,0x1
   1233d:	eb d6                	jmp    12315 <parseParamsShell+0x75>
   1233f:	90                   	nop
   12340:	85 db                	test   ebx,ebx
   12342:	74 12                	je     12356 <parseParamsShell+0xb6>
   12344:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   12348:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   1234d:	c1 e7 09             	shl    edi,0x9
   12350:	01 f8                	add    eax,edi
   12352:	c6 04 28 00          	mov    BYTE PTR [eax+ebp*1],0x0
   12356:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1235a:	83 c4 1c             	add    esp,0x1c
   1235d:	5b                   	pop    ebx
   1235e:	5e                   	pop    esi
   1235f:	5f                   	pop    edi
   12360:	5d                   	pop    ebp
   12361:	c3                   	ret    
   12362:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   12369:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00012370 <selectHDNum>:
selectHDNum():
   12370:	53                   	push   ebx
   12371:	81 ec 0c 14 00 00    	sub    esp,0x140c
   12377:	68 00 14 00 00       	push   0x1400
   1237c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   12380:	53                   	push   ebx
   12381:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12388:	e8 13 ff ff ff       	call   122a0 <parseParamsShell>
   1238d:	83 c4 0c             	add    esp,0xc
   12390:	6a 0a                	push   0xa
   12392:	6a 00                	push   0x0
   12394:	53                   	push   ebx
   12395:	e8 66 06 01 00       	call   22a00 <strtol>
   1239a:	83 c4 10             	add    esp,0x10
   1239d:	85 c0                	test   eax,eax
   1239f:	8b 15 04 98 12 00    	mov    edx,DWORD PTR ds:0x129804
   123a5:	78 41                	js     123e8 <selectHDNum+0x78>
   123a7:	39 d0                	cmp    eax,edx
   123a9:	7f 3d                	jg     123e8 <selectHDNum+0x78>
   123ab:	a3 44 99 12 00       	mov    ds:0x129944,eax
   123b0:	69 c0 73 02 00 00    	imul   eax,eax,0x273
   123b6:	03 05 00 98 12 00    	add    eax,DWORD PTR ds:0x129800
   123bc:	83 ec 08             	sub    esp,0x8
   123bf:	68 40 2f 09 00       	push   0x92f40
   123c4:	50                   	push   eax
   123c5:	e8 56 bd 00 00       	call   1e120 <parseMBR>
   123ca:	58                   	pop    eax
   123cb:	5a                   	pop    edx
   123cc:	ff 35 44 99 12 00    	push   DWORD PTR ds:0x129944
   123d2:	68 22 01 04 00       	push   0x40122
   123d7:	e8 84 02 01 00       	call   22660 <printk>
   123dc:	81 c4 18 14 00 00    	add    esp,0x1418
   123e2:	5b                   	pop    ebx
   123e3:	c3                   	ret    
   123e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   123e8:	83 ec 04             	sub    esp,0x4
   123eb:	52                   	push   edx
   123ec:	50                   	push   eax
   123ed:	68 34 c4 06 00       	push   0x6c434
   123f2:	e8 69 02 01 00       	call   22660 <printk>
   123f7:	a1 44 99 12 00       	mov    eax,ds:0x129944
   123fc:	83 c4 10             	add    esp,0x10
   123ff:	eb af                	jmp    123b0 <selectHDNum+0x40>
   12401:	eb 0d                	jmp    12410 <listParts>
   12403:	90                   	nop
   12404:	90                   	nop
   12405:	90                   	nop
   12406:	90                   	nop
   12407:	90                   	nop
   12408:	90                   	nop
   12409:	90                   	nop
   1240a:	90                   	nop
   1240b:	90                   	nop
   1240c:	90                   	nop
   1240d:	90                   	nop
   1240e:	90                   	nop
   1240f:	90                   	nop

00012410 <listParts>:
listParts():
   12410:	56                   	push   esi
   12411:	53                   	push   ebx
   12412:	81 ec 08 14 00 00    	sub    esp,0x1408
   12418:	68 00 14 00 00       	push   0x1400
   1241d:	8d 74 24 08          	lea    esi,[esp+0x8]
   12421:	56                   	push   esi
   12422:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12429:	e8 72 fe ff ff       	call   122a0 <parseParamsShell>
   1242e:	83 c4 10             	add    esp,0x10
   12431:	85 c0                	test   eax,eax
   12433:	8b 1d 44 99 12 00    	mov    ebx,DWORD PTR ds:0x129944
   12439:	7e 12                	jle    1244d <listParts+0x3d>
   1243b:	83 ec 04             	sub    esp,0x4
   1243e:	6a 0a                	push   0xa
   12440:	6a 00                	push   0x0
   12442:	56                   	push   esi
   12443:	e8 b8 05 01 00       	call   22a00 <strtol>
   12448:	83 c4 10             	add    esp,0x10
   1244b:	89 c3                	mov    ebx,eax
   1244d:	85 db                	test   ebx,ebx
   1244f:	a1 04 98 12 00       	mov    eax,ds:0x129804
   12454:	78 04                	js     1245a <listParts+0x4a>
   12456:	39 c3                	cmp    ebx,eax
   12458:	7e 1e                	jle    12478 <listParts+0x68>
   1245a:	83 ec 04             	sub    esp,0x4
   1245d:	50                   	push   eax
   1245e:	53                   	push   ebx
   1245f:	68 34 c4 06 00       	push   0x6c434
   12464:	e8 f7 01 01 00       	call   22660 <printk>
   12469:	83 c4 10             	add    esp,0x10
   1246c:	81 c4 04 14 00 00    	add    esp,0x1404
   12472:	5b                   	pop    ebx
   12473:	5e                   	pop    esi
   12474:	c3                   	ret    
   12475:	8d 76 00             	lea    esi,[esi+0x0]
   12478:	83 ec 08             	sub    esp,0x8
   1247b:	53                   	push   ebx
   1247c:	68 34 01 04 00       	push   0x40134
   12481:	69 db 73 02 00 00    	imul   ebx,ebx,0x273
   12487:	e8 d4 01 01 00       	call   22660 <printk>
   1248c:	03 1d 00 98 12 00    	add    ebx,DWORD PTR ds:0x129800
   12492:	83 c4 10             	add    esp,0x10
   12495:	83 bb 52 02 00 00 02 	cmp    DWORD PTR [ebx+0x252],0x2
   1249c:	8b 83 69 02 00 00    	mov    eax,DWORD PTR [ebx+0x269]
   124a2:	a3 5c 33 09 00       	mov    ds:0x9335c,eax
   124a7:	74 1f                	je     124c8 <listParts+0xb8>
   124a9:	83 ec 0c             	sub    esp,0xc
   124ac:	68 80 c4 06 00       	push   0x6c480
   124b1:	e8 aa 01 01 00       	call   22660 <printk>
   124b6:	83 c4 10             	add    esp,0x10
   124b9:	81 c4 04 14 00 00    	add    esp,0x1404
   124bf:	5b                   	pop    ebx
   124c0:	5e                   	pop    esi
   124c1:	c3                   	ret    
   124c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   124c8:	83 ec 08             	sub    esp,0x8
   124cb:	68 40 2f 09 00       	push   0x92f40
   124d0:	53                   	push   ebx
   124d1:	e8 4a bc 00 00       	call   1e120 <parseMBR>
   124d6:	c7 04 24 40 2f 09 00 	mov    DWORD PTR [esp],0x92f40
   124dd:	e8 9e ba 00 00       	call   1df80 <printMBR>
   124e2:	83 c4 10             	add    esp,0x10
   124e5:	eb 85                	jmp    1246c <listParts+0x5c>
   124e7:	89 f6                	mov    esi,esi
   124e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000124f0 <attach>:
attach():
   124f0:	81 ec 10 14 00 00    	sub    esp,0x1410
   124f6:	68 00 14 00 00       	push   0x1400
   124fb:	8d 44 24 08          	lea    eax,[esp+0x8]
   124ff:	50                   	push   eax
   12500:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12507:	e8 94 fd ff ff       	call   122a0 <parseParamsShell>
   1250c:	a1 44 99 12 00       	mov    eax,ds:0x129944
   12511:	83 c4 10             	add    esp,0x10
   12514:	8b 15 48 99 12 00    	mov    edx,DWORD PTR ds:0x129948
   1251a:	85 c0                	test   eax,eax
   1251c:	0f 88 9e 00 00 00    	js     125c0 <attach+0xd0>
   12522:	85 d2                	test   edx,edx
   12524:	0f 88 96 00 00 00    	js     125c0 <attach+0xd0>
   1252a:	83 ec 08             	sub    esp,0x8
   1252d:	68 4e 01 04 00       	push   0x4014e
   12532:	68 c0 84 08 00       	push   0x884c0
   12537:	e8 64 02 01 00       	call   227a0 <strcpy>
   1253c:	58                   	pop    eax
   1253d:	69 05 44 99 12 00 73 	imul   eax,DWORD PTR ds:0x129944,0x273
   12544:	02 00 00 
   12547:	03 05 00 98 12 00    	add    eax,DWORD PTR ds:0x129800
   1254d:	ff b0 69 02 00 00    	push   DWORD PTR [eax+0x269]
   12553:	e8 c8 22 00 00       	call   14820 <ahciSetCurrentDisk>
   12558:	5a                   	pop    edx
   12559:	59                   	pop    ecx
   1255a:	68 d0 4a 01 00       	push   0x14ad0
   1255f:	68 60 48 01 00       	push   0x14860
   12564:	e8 37 85 00 00       	call   1aaa0 <fl_attach_media>
   12569:	83 c4 10             	add    esp,0x10
   1256c:	85 c0                	test   eax,eax
   1256e:	75 28                	jne    12598 <attach+0xa8>
   12570:	83 ec 04             	sub    esp,0x4
   12573:	ff 35 48 99 12 00    	push   DWORD PTR ds:0x129948
   12579:	ff 35 44 99 12 00    	push   DWORD PTR ds:0x129944
   1257f:	68 48 c5 06 00       	push   0x6c548
   12584:	e8 d7 00 01 00       	call   22660 <printk>
   12589:	83 c4 10             	add    esp,0x10
   1258c:	81 c4 0c 14 00 00    	add    esp,0x140c
   12592:	c3                   	ret    
   12593:	90                   	nop
   12594:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12598:	50                   	push   eax
   12599:	ff 35 48 99 12 00    	push   DWORD PTR ds:0x129948
   1259f:	ff 35 44 99 12 00    	push   DWORD PTR ds:0x129944
   125a5:	68 0c c5 06 00       	push   0x6c50c
   125aa:	e8 b1 00 01 00       	call   22660 <printk>
   125af:	83 c4 10             	add    esp,0x10
   125b2:	81 c4 0c 14 00 00    	add    esp,0x140c
   125b8:	c3                   	ret    
   125b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   125c0:	83 ec 04             	sub    esp,0x4
   125c3:	52                   	push   edx
   125c4:	50                   	push   eax
   125c5:	68 c4 c4 06 00       	push   0x6c4c4
   125ca:	e8 91 00 01 00       	call   22660 <printk>
   125cf:	83 c4 10             	add    esp,0x10
   125d2:	e9 53 ff ff ff       	jmp    1252a <attach+0x3a>
   125d7:	89 f6                	mov    esi,esi
   125d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000125e0 <selectPart>:
selectPart():
   125e0:	53                   	push   ebx
   125e1:	81 ec 08 14 00 00    	sub    esp,0x1408
   125e7:	83 3d 44 99 12 00 ff 	cmp    DWORD PTR ds:0x129944,0xffffffff
   125ee:	0f 84 d4 00 00 00    	je     126c8 <selectPart+0xe8>
   125f4:	83 ec 04             	sub    esp,0x4
   125f7:	68 00 14 00 00       	push   0x1400
   125fc:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   12600:	53                   	push   ebx
   12601:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12608:	e8 93 fc ff ff       	call   122a0 <parseParamsShell>
   1260d:	83 c4 0c             	add    esp,0xc
   12610:	6a 0a                	push   0xa
   12612:	6a 00                	push   0x0
   12614:	53                   	push   ebx
   12615:	e8 e6 03 01 00       	call   22a00 <strtol>
   1261a:	83 c4 10             	add    esp,0x10
   1261d:	85 c0                	test   eax,eax
   1261f:	8b 15 40 33 09 00    	mov    edx,DWORD PTR ds:0x93340
   12625:	78 04                	js     1262b <selectPart+0x4b>
   12627:	39 d0                	cmp    eax,edx
   12629:	7e 1d                	jle    12648 <selectPart+0x68>
   1262b:	83 ec 04             	sub    esp,0x4
   1262e:	52                   	push   edx
   1262f:	50                   	push   eax
   12630:	68 ac c5 06 00       	push   0x6c5ac
   12635:	e8 26 00 01 00       	call   22660 <printk>
   1263a:	83 c4 10             	add    esp,0x10
   1263d:	81 c4 08 14 00 00    	add    esp,0x1408
   12643:	5b                   	pop    ebx
   12644:	c3                   	ret    
   12645:	8d 76 00             	lea    esi,[esi+0x0]
   12648:	89 c1                	mov    ecx,eax
   1264a:	c1 e1 04             	shl    ecx,0x4
   1264d:	8d 91 40 2f 09 00    	lea    edx,[ecx+0x92f40]
   12653:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
   12656:	85 db                	test   ebx,ebx
   12658:	75 26                	jne    12680 <selectPart+0xa0>
   1265a:	83 ec 08             	sub    esp,0x8
   1265d:	50                   	push   eax
   1265e:	68 fc c5 06 00       	push   0x6c5fc
   12663:	e8 f8 ff 00 00       	call   22660 <printk>
   12668:	c7 04 24 40 2f 09 00 	mov    DWORD PTR [esp],0x92f40
   1266f:	e8 0c b9 00 00       	call   1df80 <printMBR>
   12674:	83 c4 10             	add    esp,0x10
   12677:	81 c4 08 14 00 00    	add    esp,0x1408
   1267d:	5b                   	pop    ebx
   1267e:	c3                   	ret    
   1267f:	90                   	nop
   12680:	a3 48 99 12 00       	mov    ds:0x129948,eax
   12685:	8b 81 40 2f 09 00    	mov    eax,DWORD PTR [ecx+0x92f40]
   1268b:	83 ec 10             	sub    esp,0x10
   1268e:	89 04 24             	mov    DWORD PTR [esp],eax
   12691:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
   12694:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   12698:	8b 42 08             	mov    eax,DWORD PTR [edx+0x8]
   1269b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1269f:	8b 42 0c             	mov    eax,DWORD PTR [edx+0xc]
   126a2:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   126a6:	e8 85 21 00 00       	call   14830 <ahciSetCurrentPart>
   126ab:	c7 04 24 df 00 04 00 	mov    DWORD PTR [esp],0x400df
   126b2:	e8 39 fe ff ff       	call   124f0 <attach>
   126b7:	83 c4 10             	add    esp,0x10
   126ba:	81 c4 08 14 00 00    	add    esp,0x1408
   126c0:	5b                   	pop    ebx
   126c1:	c3                   	ret    
   126c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   126c8:	83 ec 0c             	sub    esp,0xc
   126cb:	68 6c c5 06 00       	push   0x6c56c
   126d0:	e8 8b ff 00 00       	call   22660 <printk>
   126d5:	83 c4 10             	add    esp,0x10
   126d8:	e9 17 ff ff ff       	jmp    125f4 <selectPart+0x14>
   126dd:	8d 76 00             	lea    esi,[esi+0x0]

000126e0 <listDir>:
listDir():
   126e0:	53                   	push   ebx
   126e1:	81 ec 0c 14 00 00    	sub    esp,0x140c
   126e7:	68 00 14 00 00       	push   0x1400
   126ec:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   126f0:	53                   	push   ebx
   126f1:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   126f8:	e8 a3 fb ff ff       	call   122a0 <parseParamsShell>
   126fd:	89 1c 24             	mov    DWORD PTR [esp],ebx
   12700:	e8 0b 95 00 00       	call   1bc10 <fl_listdirectory>
   12705:	81 c4 18 14 00 00    	add    esp,0x1418
   1270b:	5b                   	pop    ebx
   1270c:	c3                   	ret    
   1270d:	8d 76 00             	lea    esi,[esi+0x0]

00012710 <displayTSSEntry>:
displayTSSEntry():
   12710:	53                   	push   ebx
   12711:	81 ec 0c 14 00 00    	sub    esp,0x140c
   12717:	68 00 14 00 00       	push   0x1400
   1271c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   12720:	53                   	push   ebx
   12721:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12728:	e8 73 fb ff ff       	call   122a0 <parseParamsShell>
   1272d:	83 c4 10             	add    esp,0x10
   12730:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
   12734:	74 2a                	je     12760 <displayTSSEntry+0x50>
   12736:	83 ec 04             	sub    esp,0x4
   12739:	6a 10                	push   0x10
   1273b:	6a 00                	push   0x0
   1273d:	53                   	push   ebx
   1273e:	e8 dd 00 01 00       	call   22820 <strtoul>
   12743:	89 04 24             	mov    DWORD PTR [esp],eax
   12746:	e8 75 ee 00 00       	call   215c0 <displayTSS>
   1274b:	83 c4 10             	add    esp,0x10
   1274e:	81 c4 08 14 00 00    	add    esp,0x1408
   12754:	5b                   	pop    ebx
   12755:	c3                   	ret    
   12756:	8d 76 00             	lea    esi,[esi+0x0]
   12759:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   12760:	83 ec 0c             	sub    esp,0xc
   12763:	68 5c c6 06 00       	push   0x6c65c
   12768:	e8 f3 fe 00 00       	call   22660 <printk>
   1276d:	83 c4 10             	add    esp,0x10
   12770:	81 c4 08 14 00 00    	add    esp,0x1408
   12776:	5b                   	pop    ebx
   12777:	c3                   	ret    
   12778:	90                   	nop
   12779:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00012780 <QueryBDF>:
QueryBDF():
   12780:	57                   	push   edi
   12781:	56                   	push   esi
   12782:	53                   	push   ebx
   12783:	81 ec 04 14 00 00    	sub    esp,0x1404
   12789:	68 00 14 00 00       	push   0x1400
   1278e:	8d 7c 24 08          	lea    edi,[esp+0x8]
   12792:	57                   	push   edi
   12793:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   1279a:	e8 01 fb ff ff       	call   122a0 <parseParamsShell>
   1279f:	83 c4 0c             	add    esp,0xc
   127a2:	6a 10                	push   0x10
   127a4:	6a 00                	push   0x0
   127a6:	8d 84 24 0c 04 00 00 	lea    eax,[esp+0x40c]
   127ad:	50                   	push   eax
   127ae:	e8 6d 00 01 00       	call   22820 <strtoul>
   127b3:	83 c4 0c             	add    esp,0xc
   127b6:	89 c6                	mov    esi,eax
   127b8:	6a 10                	push   0x10
   127ba:	6a 00                	push   0x0
   127bc:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   127c3:	50                   	push   eax
   127c4:	e8 57 00 01 00       	call   22820 <strtoul>
   127c9:	83 c4 0c             	add    esp,0xc
   127cc:	89 c3                	mov    ebx,eax
   127ce:	6a 10                	push   0x10
   127d0:	6a 00                	push   0x0
   127d2:	0f b6 db             	movzx  ebx,bl
   127d5:	57                   	push   edi
   127d6:	e8 45 00 01 00       	call   22820 <strtoul>
   127db:	89 f2                	mov    edx,esi
   127dd:	83 c4 0c             	add    esp,0xc
   127e0:	0f b6 c0             	movzx  eax,al
   127e3:	0f b6 f2             	movzx  esi,dl
   127e6:	56                   	push   esi
   127e7:	53                   	push   ebx
   127e8:	50                   	push   eax
   127e9:	e8 82 3a 00 00       	call   16270 <pciQueryBDF>
   127ee:	81 c4 10 14 00 00    	add    esp,0x1410
   127f4:	5b                   	pop    ebx
   127f5:	5e                   	pop    esi
   127f6:	5f                   	pop    edi
   127f7:	c3                   	ret    
   127f8:	90                   	nop
   127f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00012800 <dumpP>:
dumpP():
   12800:	55                   	push   ebp
   12801:	57                   	push   edi
   12802:	56                   	push   esi
   12803:	53                   	push   ebx
   12804:	81 ec 30 16 00 00    	sub    esp,0x1630
   1280a:	68 00 14 00 00       	push   0x1400
   1280f:	8d bc 24 28 02 00 00 	lea    edi,[esp+0x228]
   12816:	57                   	push   edi
   12817:	ff b4 24 4c 16 00 00 	push   DWORD PTR [esp+0x164c]
   1281e:	e8 7d fa ff ff       	call   122a0 <parseParamsShell>
   12823:	83 c4 0c             	add    esp,0xc
   12826:	89 c6                	mov    esi,eax
   12828:	68 00 02 00 00       	push   0x200
   1282d:	6a 00                	push   0x0
   1282f:	8d 44 24 2c          	lea    eax,[esp+0x2c]
   12833:	50                   	push   eax
   12834:	e8 47 e5 00 00       	call   20d80 <memset>
   12839:	83 c4 10             	add    esp,0x10
   1283c:	85 f6                	test   esi,esi
   1283e:	0f 88 a9 01 00 00    	js     129ed <dumpP+0x1ed>
   12844:	31 ed                	xor    ebp,ebp
   12846:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   1284d:	00 
   1284e:	c6 44 24 1b 00       	mov    BYTE PTR [esp+0x1b],0x0
   12853:	89 e8                	mov    eax,ebp
   12855:	c6 44 24 1a 20       	mov    BYTE PTR [esp+0x1a],0x20
   1285a:	89 fd                	mov    ebp,edi
   1285c:	bb 20 00 00 00       	mov    ebx,0x20
   12861:	c7 44 24 10 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
   12868:	00 
   12869:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   12870:	00 
   12871:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
   12875:	89 c7                	mov    edi,eax
   12877:	eb 32                	jmp    128ab <dumpP+0xab>
   12879:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   12880:	3c 2f                	cmp    al,0x2f
   12882:	0f 84 b0 00 00 00    	je     12938 <dumpP+0x138>
   12888:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1288c:	85 f6                	test   esi,esi
   1288e:	0f 84 1a 01 00 00    	je     129ae <dumpP+0x1ae>
   12894:	84 c0                	test   al,al
   12896:	0f 85 2b 01 00 00    	jne    129c7 <dumpP+0x1c7>
   1289c:	83 c7 01             	add    edi,0x1
   1289f:	81 c5 00 02 00 00    	add    ebp,0x200
   128a5:	39 7c 24 0c          	cmp    DWORD PTR [esp+0xc],edi
   128a9:	7c 2e                	jl     128d9 <dumpP+0xd9>
   128ab:	83 ec 04             	sub    esp,0x4
   128ae:	55                   	push   ebp
   128af:	57                   	push   edi
   128b0:	68 9c c6 06 00       	push   0x6c69c
   128b5:	e8 a6 fd 00 00       	call   22660 <printk>
   128ba:	0f b6 45 00          	movzx  eax,BYTE PTR [ebp+0x0]
   128be:	83 c4 10             	add    esp,0x10
   128c1:	3c 76                	cmp    al,0x76
   128c3:	75 bb                	jne    12880 <dumpP+0x80>
   128c5:	83 c7 01             	add    edi,0x1
   128c8:	81 c5 00 02 00 00    	add    ebp,0x200
   128ce:	39 7c 24 0c          	cmp    DWORD PTR [esp+0xc],edi
   128d2:	c6 44 24 1b 01       	mov    BYTE PTR [esp+0x1b],0x1
   128d7:	7d d2                	jge    128ab <dumpP+0xab>
   128d9:	81 7c 24 08 ff ff 00 	cmp    DWORD PTR [esp+0x8],0xffff
   128e0:	00 
   128e1:	0f 8f ff 02 00 00    	jg     12be6 <pEnableJmp+0x23>
   128e7:	0f b6 44 24 1a       	movzx  eax,BYTE PTR [esp+0x1a]
   128ec:	83 e8 62             	sub    eax,0x62
   128ef:	3c 15                	cmp    al,0x15
   128f1:	0f 87 fb 00 00 00    	ja     129f2 <dumpP+0x1f2>
   128f7:	ba 45 00 20 00       	mov    edx,0x200045
   128fc:	0f a3 c2             	bt     edx,eax
   128ff:	0f 83 ed 00 00 00    	jae    129f2 <dumpP+0x1f2>
   12905:	8d 43 9d             	lea    eax,[ebx-0x63]
   12908:	a8 fd                	test   al,0xfd
   1290a:	0f 84 03 01 00 00    	je     12a13 <dumpP+0x213>
   12910:	80 fb 78             	cmp    bl,0x78
   12913:	0f 84 fa 00 00 00    	je     12a13 <dumpP+0x213>
   12919:	83 ec 08             	sub    esp,0x8
   1291c:	53                   	push   ebx
   1291d:	68 28 c7 06 00       	push   0x6c728
   12922:	e8 39 fd 00 00       	call   22660 <printk>
   12927:	83 c4 10             	add    esp,0x10
   1292a:	81 c4 2c 16 00 00    	add    esp,0x162c
   12930:	5b                   	pop    ebx
   12931:	5e                   	pop    esi
   12932:	5f                   	pop    edi
   12933:	5d                   	pop    ebp
   12934:	c3                   	ret    
   12935:	8d 76 00             	lea    esi,[esi+0x0]
   12938:	0f be 45 01          	movsx  eax,BYTE PTR [ebp+0x1]
   1293c:	89 c3                	mov    ebx,eax
   1293e:	83 e8 30             	sub    eax,0x30
   12941:	83 f8 09             	cmp    eax,0x9
   12944:	0f 87 c6 05 00 00    	ja     12f10 <pEnableJmp+0x34d>
   1294a:	b8 01 00 00 00       	mov    eax,0x1
   1294f:	eb 09                	jmp    1295a <dumpP+0x15a>
   12951:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   12958:	89 f0                	mov    eax,esi
   1295a:	0f be 54 05 01       	movsx  edx,BYTE PTR [ebp+eax*1+0x1]
   1295f:	88 5c 04 1f          	mov    BYTE PTR [esp+eax*1+0x1f],bl
   12963:	8d 70 01             	lea    esi,[eax+0x1]
   12966:	89 d3                	mov    ebx,edx
   12968:	83 ea 30             	sub    edx,0x30
   1296b:	83 fa 09             	cmp    edx,0x9
   1296e:	76 e8                	jbe    12958 <dumpP+0x158>
   12970:	8d 58 02             	lea    ebx,[eax+0x2]
   12973:	83 ec 0c             	sub    esp,0xc
   12976:	8d 44 24 2c          	lea    eax,[esp+0x2c]
   1297a:	50                   	push   eax
   1297b:	e8 d0 e2 00 00       	call   20c50 <atoi>
   12980:	8d 8c 24 30 16 00 00 	lea    ecx,[esp+0x1630]
   12987:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1298b:	89 f8                	mov    eax,edi
   1298d:	c1 e0 09             	shl    eax,0x9
   12990:	01 c8                	add    eax,ecx
   12992:	0f b6 8c 06 00 ec ff 	movzx  ecx,BYTE PTR [esi+eax*1-0x1400]
   12999:	ff 
   1299a:	0f be 9c 03 00 ec ff 	movsx  ebx,BYTE PTR [ebx+eax*1-0x1400]
   129a1:	ff 
   129a2:	88 4c 24 2a          	mov    BYTE PTR [esp+0x2a],cl
   129a6:	83 c4 10             	add    esp,0x10
   129a9:	e9 ee fe ff ff       	jmp    1289c <dumpP+0x9c>
   129ae:	83 ec 04             	sub    esp,0x4
   129b1:	6a 10                	push   0x10
   129b3:	6a 00                	push   0x0
   129b5:	55                   	push   ebp
   129b6:	e8 65 fe 00 00       	call   22820 <strtoul>
   129bb:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   129bf:	83 c4 10             	add    esp,0x10
   129c2:	e9 d5 fe ff ff       	jmp    1289c <dumpP+0x9c>
   129c7:	83 ec 04             	sub    esp,0x4
   129ca:	6a 10                	push   0x10
   129cc:	6a 00                	push   0x0
   129ce:	55                   	push   ebp
   129cf:	e8 4c fe 00 00       	call   22820 <strtoul>
   129d4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
   129d8:	5a                   	pop    edx
   129d9:	59                   	pop    ecx
   129da:	50                   	push   eax
   129db:	68 50 01 04 00       	push   0x40150
   129e0:	e8 7b fc 00 00       	call   22660 <printk>
   129e5:	83 c4 10             	add    esp,0x10
   129e8:	e9 af fe ff ff       	jmp    1289c <dumpP+0x9c>
   129ed:	c6 44 24 1a 20       	mov    BYTE PTR [esp+0x1a],0x20
   129f2:	83 ec 08             	sub    esp,0x8
   129f5:	0f be 44 24 22       	movsx  eax,BYTE PTR [esp+0x22]
   129fa:	50                   	push   eax
   129fb:	68 fc c6 06 00       	push   0x6c6fc
   12a00:	e8 5b fc 00 00       	call   22660 <printk>
   12a05:	83 c4 10             	add    esp,0x10
   12a08:	81 c4 2c 16 00 00    	add    esp,0x162c
   12a0e:	5b                   	pop    ebx
   12a0f:	5e                   	pop    esi
   12a10:	5f                   	pop    edi
   12a11:	5d                   	pop    ebp
   12a12:	c3                   	ret    
   12a13:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   12a17:	85 c0                	test   eax,eax
   12a19:	0f 84 48 02 00 00    	je     12c67 <pEnableJmp+0xa4>
   12a1f:	83 ec 08             	sub    esp,0x8
   12a22:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
   12a26:	57                   	push   edi
   12a27:	50                   	push   eax
   12a28:	81 e7 ff 0f 00 00    	and    edi,0xfff
   12a2e:	e8 6d f0 ff ff       	call   11aa0 <kPagingGet4kPTEntryValueCR3>
   12a33:	25 00 f0 ff ff       	and    eax,0xfffff000
   12a38:	c7 04 24 61 01 04 00 	mov    DWORD PTR [esp],0x40161
   12a3f:	09 f8                	or     eax,edi
   12a41:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   12a45:	e8 16 fc 00 00       	call   22660 <printk>
   12a4a:	83 c4 10             	add    esp,0x10
   12a4d:	83 ec 0c             	sub    esp,0xc
   12a50:	68 7f 01 04 00       	push   0x4017f
   12a55:	e8 06 fc 00 00       	call   22660 <printk>
   12a5a:	83 c4 10             	add    esp,0x10
   12a5d:	80 7c 24 1b 00       	cmp    BYTE PTR [esp+0x1b],0x0
   12a62:	0f 84 9d 01 00 00    	je     12c05 <pEnableJmp+0x42>
   12a68:	83 ec 0c             	sub    esp,0xc
   12a6b:	68 cd 7e 04 00       	push   0x47ecd
   12a70:	e8 eb fb 00 00       	call   22660 <printk>
   12a75:	5d                   	pop    ebp
   12a76:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   12a7a:	53                   	push   ebx
   12a7b:	0f b6 5c 24 2e       	movzx  ebx,BYTE PTR [esp+0x2e]
   12a80:	0f be c3             	movsx  eax,bl
   12a83:	50                   	push   eax
   12a84:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   12a88:	68 54 c7 06 00       	push   0x6c754
   12a8d:	e8 ce fb 00 00       	call   22660 <printk>
   12a92:	83 c4 20             	add    esp,0x20
   12a95:	80 fb 68             	cmp    bl,0x68
   12a98:	0f 84 36 03 00 00    	je     12dd4 <pEnableJmp+0x211>
   12a9e:	80 7c 24 1a 77       	cmp    BYTE PTR [esp+0x1a],0x77
   12aa3:	0f 84 49 04 00 00    	je     12ef2 <pEnableJmp+0x32f>
   12aa9:	80 7c 24 1b 00       	cmp    BYTE PTR [esp+0x1b],0x0
   12aae:	c7 44 24 0c 03 00 00 	mov    DWORD PTR [esp+0xc],0x3
   12ab5:	00 
   12ab6:	0f 84 87 01 00 00    	je     12c43 <pEnableJmp+0x80>
   12abc:	80 7c 24 1a 62       	cmp    BYTE PTR [esp+0x1a],0x62
   12ac1:	0f 84 b5 01 00 00    	je     12c7c <pEnableJmp+0xb9>
   12ac7:	83 ec 08             	sub    esp,0x8
   12aca:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   12ace:	68 91 01 04 00       	push   0x40191
   12ad3:	e8 88 fb 00 00       	call   22660 <printk>
   12ad8:	83 c4 10             	add    esp,0x10
   12adb:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   12adf:	85 d2                	test   edx,edx
   12ae1:	0f 8e ae 00 00 00    	jle    12b95 <dumpP+0x395>
   12ae7:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   12aee:	00 
   12aef:	31 db                	xor    ebx,ebx
   12af1:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
   12af5:	31 f6                	xor    esi,esi
   12af7:	0f b6 54 24 1a       	movzx  edx,BYTE PTR [esp+0x1a]
   12afc:	89 fd                	mov    ebp,edi
   12afe:	eb 24                	jmp    12b24 <dumpP+0x324>
   12b00:	83 c3 01             	add    ebx,0x1
   12b03:	80 fa 68             	cmp    dl,0x68
   12b06:	0f 84 2a 03 00 00    	je     12e36 <pEnableJmp+0x273>
   12b0c:	80 fa 77             	cmp    dl,0x77
   12b0f:	0f 84 5f 03 00 00    	je     12e74 <pEnableJmp+0x2b1>
   12b15:	83 c6 01             	add    esi,0x1
   12b18:	83 c5 02             	add    ebp,0x2
   12b1b:	83 c7 04             	add    edi,0x4
   12b1e:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
   12b22:	7e 71                	jle    12b95 <dumpP+0x395>
   12b24:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [esp+0xc]
   12b28:	75 d6                	jne    12b00 <dumpP+0x300>
   12b2a:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
   12b2e:	83 ec 0c             	sub    esp,0xc
   12b31:	68 d8 39 06 00       	push   0x639d8
   12b36:	e8 05 43 00 00       	call   16e40 <puts>
   12b3b:	83 44 24 24 01       	add    DWORD PTR [esp+0x24],0x1
   12b40:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
   12b44:	83 c4 10             	add    esp,0x10
   12b47:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12b4c:	83 f8 31             	cmp    eax,0x31
   12b4f:	0f 84 61 03 00 00    	je     12eb6 <pEnableJmp+0x2f3>
   12b55:	80 fa 68             	cmp    dl,0x68
   12b58:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
   12b5c:	0f 84 b9 02 00 00    	je     12e1b <pEnableJmp+0x258>
   12b62:	80 fa 77             	cmp    dl,0x77
   12b65:	0f 84 ee 02 00 00    	je     12e59 <pEnableJmp+0x296>
   12b6b:	83 ec 08             	sub    esp,0x8
   12b6e:	83 c6 01             	add    esi,0x1
   12b71:	83 c5 02             	add    ebp,0x2
   12b74:	57                   	push   edi
   12b75:	68 91 01 04 00       	push   0x40191
   12b7a:	83 c7 04             	add    edi,0x4
   12b7d:	bb 01 00 00 00       	mov    ebx,0x1
   12b82:	e8 d9 fa 00 00       	call   22660 <printk>
   12b87:	83 c4 10             	add    esp,0x10
   12b8a:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12b8f:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
   12b93:	7f 8f                	jg     12b24 <dumpP+0x324>
   12b95:	83 ec 0c             	sub    esp,0xc
   12b98:	68 d8 39 06 00       	push   0x639d8
   12b9d:	e8 9e 42 00 00       	call   16e40 <puts>
   12ba2:	83 c4 10             	add    esp,0x10
   12ba5:	80 7c 24 1b 00       	cmp    BYTE PTR [esp+0x1b],0x0
   12baa:	0f 85 58 fe ff ff    	jne    12a08 <dumpP+0x208>
   12bb0:	50                   	push   eax
   12bb1:	0f 20 c0             	mov    eax,cr0
   12bb4:	0d 00 00 00 80       	or     eax,0x80000000
   12bb9:	0f 22 c0             	mov    cr0,eax
   12bbc:	ea c3 2b 01 00 20 00 	jmp    0x20:0x12bc3

00012bc3 <pEnableJmp>:
   12bc3:	58                   	pop    eax
   12bc4:	e8 5e e7 fe ff       	call   1327 <doPagingJump>
   12bc9:	50                   	push   eax
   12bca:	b8 10 00 00 00       	mov    eax,0x10
   12bcf:	8e d8                	mov    ds,eax
   12bd1:	8e c0                	mov    es,eax
   12bd3:	8e e0                	mov    fs,eax
   12bd5:	8e e8                	mov    gs,eax
   12bd7:	8e d0                	mov    ss,eax
   12bd9:	58                   	pop    eax
   12bda:	fb                   	sti    
   12bdb:	81 c4 2c 16 00 00    	add    esp,0x162c
   12be1:	5b                   	pop    ebx
   12be2:	5e                   	pop    esi
   12be3:	5f                   	pop    edi
   12be4:	5d                   	pop    ebp
   12be5:	c3                   	ret    
   12be6:	83 ec 08             	sub    esp,0x8
   12be9:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   12bed:	68 c4 c6 06 00       	push   0x6c6c4
   12bf2:	e8 69 fa 00 00       	call   22660 <printk>
   12bf7:	83 c4 10             	add    esp,0x10
   12bfa:	81 c4 2c 16 00 00    	add    esp,0x162c
   12c00:	5b                   	pop    ebx
   12c01:	5e                   	pop    esi
   12c02:	5f                   	pop    edi
   12c03:	5d                   	pop    ebp
   12c04:	c3                   	ret    
   12c05:	83 ec 0c             	sub    esp,0xc
   12c08:	68 25 4d 04 00       	push   0x44d25
   12c0d:	e8 4e fa 00 00       	call   22660 <printk>
   12c12:	5f                   	pop    edi
   12c13:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   12c17:	53                   	push   ebx
   12c18:	0f b6 5c 24 2e       	movzx  ebx,BYTE PTR [esp+0x2e]
   12c1d:	0f be c3             	movsx  eax,bl
   12c20:	50                   	push   eax
   12c21:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   12c25:	68 54 c7 06 00       	push   0x6c754
   12c2a:	e8 31 fa 00 00       	call   22660 <printk>
   12c2f:	83 c4 20             	add    esp,0x20
   12c32:	80 fb 68             	cmp    bl,0x68
   12c35:	0f 85 63 fe ff ff    	jne    12a9e <dumpP+0x29e>
   12c3b:	c7 44 24 0c 08 00 00 	mov    DWORD PTR [esp+0xc],0x8
   12c42:	00 
   12c43:	50                   	push   eax
   12c44:	b8 18 00 00 00       	mov    eax,0x18
   12c49:	8e d8                	mov    ds,eax
   12c4b:	8e c0                	mov    es,eax
   12c4d:	8e e0                	mov    fs,eax
   12c4f:	8e e8                	mov    gs,eax
   12c51:	8e d0                	mov    ss,eax
   12c53:	58                   	pop    eax
   12c54:	fa                   	cli    
   12c55:	e8 e4 e6 fe ff       	call   133e <doNonPagingJump>
   12c5a:	80 7c 24 1a 62       	cmp    BYTE PTR [esp+0x1a],0x62
   12c5f:	0f 85 62 fe ff ff    	jne    12ac7 <dumpP+0x2c7>
   12c65:	eb 15                	jmp    12c7c <pEnableJmp+0xb9>
   12c67:	83 ec 0c             	sub    esp,0xc
   12c6a:	68 d8 39 06 00       	push   0x639d8
   12c6f:	e8 ec f9 00 00       	call   22660 <printk>
   12c74:	83 c4 10             	add    esp,0x10
   12c77:	e9 d1 fd ff ff       	jmp    12a4d <dumpP+0x24d>
   12c7c:	83 ec 08             	sub    esp,0x8
   12c7f:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   12c83:	68 84 01 04 00       	push   0x40184
   12c88:	e8 d3 f9 00 00       	call   22660 <printk>
   12c8d:	83 c4 10             	add    esp,0x10
   12c90:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
   12c94:	85 f6                	test   esi,esi
   12c96:	0f 8e f9 fe ff ff    	jle    12b95 <dumpP+0x395>
   12c9c:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   12ca0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   12ca4:	31 db                	xor    ebx,ebx
   12ca6:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   12cad:	00 
   12cae:	8d 6c 24 30          	lea    ebp,[esp+0x30]
   12cb2:	01 c8                	add    eax,ecx
   12cb4:	89 cf                	mov    edi,ecx
   12cb6:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
   12cba:	eb 45                	jmp    12d01 <pEnableJmp+0x13e>
   12cbc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12cc0:	0f b6 07             	movzx  eax,BYTE PTR [edi]
   12cc3:	83 ec 08             	sub    esp,0x8
   12cc6:	50                   	push   eax
   12cc7:	68 8b 01 04 00       	push   0x4018b
   12ccc:	e8 8f f9 00 00       	call   22660 <printk>
   12cd1:	0f b6 17             	movzx  edx,BYTE PTR [edi]
   12cd4:	8d 43 01             	lea    eax,[ebx+0x1]
   12cd7:	88 54 1c 30          	mov    BYTE PTR [esp+ebx*1+0x30],dl
   12cdb:	83 c4 10             	add    esp,0x10
   12cde:	a8 03                	test   al,0x3
   12ce0:	89 c3                	mov    ebx,eax
   12ce2:	75 10                	jne    12cf4 <pEnableJmp+0x131>
   12ce4:	83 ec 0c             	sub    esp,0xc
   12ce7:	68 53 b9 05 00       	push   0x5b953
   12cec:	e8 6f f9 00 00       	call   22660 <printk>
   12cf1:	83 c4 10             	add    esp,0x10
   12cf4:	83 c7 01             	add    edi,0x1
   12cf7:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
   12cfb:	0f 84 f0 fd ff ff    	je     12af1 <dumpP+0x2f1>
   12d01:	83 fb 10             	cmp    ebx,0x10
   12d04:	75 ba                	jne    12cc0 <pEnableJmp+0xfd>
   12d06:	83 ec 0c             	sub    esp,0xc
   12d09:	68 53 b9 05 00       	push   0x5b953
   12d0e:	e8 2d 41 00 00       	call   16e40 <puts>
   12d13:	8d 74 24 30          	lea    esi,[esp+0x30]
   12d17:	83 c4 10             	add    esp,0x10
   12d1a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   12d20:	0f b6 16             	movzx  edx,BYTE PTR [esi]
   12d23:	89 d0                	mov    eax,edx
   12d25:	83 c8 20             	or     eax,0x20
   12d28:	0f be c0             	movsx  eax,al
   12d2b:	83 e8 61             	sub    eax,0x61
   12d2e:	83 f8 19             	cmp    eax,0x19
   12d31:	0f be c2             	movsx  eax,dl
   12d34:	76 32                	jbe    12d68 <pEnableJmp+0x1a5>
   12d36:	8d 48 d0             	lea    ecx,[eax-0x30]
   12d39:	83 f9 09             	cmp    ecx,0x9
   12d3c:	76 2a                	jbe    12d68 <pEnableJmp+0x1a5>
   12d3e:	8d 4a e0             	lea    ecx,[edx-0x20]
   12d41:	80 f9 0f             	cmp    cl,0xf
   12d44:	76 22                	jbe    12d68 <pEnableJmp+0x1a5>
   12d46:	8d 4a 85             	lea    ecx,[edx-0x7b]
   12d49:	80 f9 03             	cmp    cl,0x3
   12d4c:	76 1a                	jbe    12d68 <pEnableJmp+0x1a5>
   12d4e:	8d 4a a5             	lea    ecx,[edx-0x5b]
   12d51:	80 f9 05             	cmp    cl,0x5
   12d54:	76 12                	jbe    12d68 <pEnableJmp+0x1a5>
   12d56:	83 ea 3a             	sub    edx,0x3a
   12d59:	80 fa 06             	cmp    dl,0x6
   12d5c:	0f 87 7b 01 00 00    	ja     12edd <pEnableJmp+0x31a>
   12d62:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   12d68:	83 ec 08             	sub    esp,0x8
   12d6b:	50                   	push   eax
   12d6c:	68 cc 00 04 00       	push   0x400cc
   12d71:	e8 ea f8 00 00       	call   22660 <printk>
   12d76:	83 c4 10             	add    esp,0x10
   12d79:	83 c6 01             	add    esi,0x1
   12d7c:	39 ee                	cmp    esi,ebp
   12d7e:	75 a0                	jne    12d20 <pEnableJmp+0x15d>
   12d80:	83 ec 0c             	sub    esp,0xc
   12d83:	68 d8 39 06 00       	push   0x639d8
   12d88:	e8 b3 40 00 00       	call   16e40 <puts>
   12d8d:	83 44 24 24 01       	add    DWORD PTR [esp+0x24],0x1
   12d92:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
   12d96:	83 c4 10             	add    esp,0x10
   12d99:	83 f8 31             	cmp    eax,0x31
   12d9c:	0f 84 f2 00 00 00    	je     12e94 <pEnableJmp+0x2d1>
   12da2:	83 ec 08             	sub    esp,0x8
   12da5:	57                   	push   edi
   12da6:	68 84 01 04 00       	push   0x40184
   12dab:	e8 b0 f8 00 00       	call   22660 <printk>
   12db0:	0f b6 07             	movzx  eax,BYTE PTR [edi]
   12db3:	59                   	pop    ecx
   12db4:	5b                   	pop    ebx
   12db5:	bb 01 00 00 00       	mov    ebx,0x1
   12dba:	50                   	push   eax
   12dbb:	68 8b 01 04 00       	push   0x4018b
   12dc0:	e8 9b f8 00 00       	call   22660 <printk>
   12dc5:	0f b6 07             	movzx  eax,BYTE PTR [edi]
   12dc8:	88 44 24 30          	mov    BYTE PTR [esp+0x30],al
   12dcc:	83 c4 10             	add    esp,0x10
   12dcf:	e9 20 ff ff ff       	jmp    12cf4 <pEnableJmp+0x131>
   12dd4:	c7 44 24 0c 08 00 00 	mov    DWORD PTR [esp+0xc],0x8
   12ddb:	00 
   12ddc:	83 ec 08             	sub    esp,0x8
   12ddf:	31 db                	xor    ebx,ebx
   12de1:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   12de5:	68 91 01 04 00       	push   0x40191
   12dea:	e8 71 f8 00 00       	call   22660 <printk>
   12def:	83 c4 10             	add    esp,0x10
   12df2:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   12df6:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   12dfd:	00 
   12dfe:	85 c0                	test   eax,eax
   12e00:	0f 8f eb fc ff ff    	jg     12af1 <dumpP+0x2f1>
   12e06:	83 ec 0c             	sub    esp,0xc
   12e09:	68 d8 39 06 00       	push   0x639d8
   12e0e:	e8 2d 40 00 00       	call   16e40 <puts>
   12e13:	83 c4 10             	add    esp,0x10
   12e16:	e9 ed fb ff ff       	jmp    12a08 <dumpP+0x208>
   12e1b:	83 ec 08             	sub    esp,0x8
   12e1e:	bb 01 00 00 00       	mov    ebx,0x1
   12e23:	55                   	push   ebp
   12e24:	68 91 01 04 00       	push   0x40191
   12e29:	e8 32 f8 00 00       	call   22660 <printk>
   12e2e:	83 c4 10             	add    esp,0x10
   12e31:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12e36:	0f b7 45 00          	movzx  eax,WORD PTR [ebp+0x0]
   12e3a:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
   12e3e:	83 ec 08             	sub    esp,0x8
   12e41:	50                   	push   eax
   12e42:	68 97 01 04 00       	push   0x40197
   12e47:	e8 14 f8 00 00       	call   22660 <printk>
   12e4c:	83 c4 10             	add    esp,0x10
   12e4f:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12e54:	e9 bc fc ff ff       	jmp    12b15 <dumpP+0x315>
   12e59:	83 ec 08             	sub    esp,0x8
   12e5c:	bb 01 00 00 00       	mov    ebx,0x1
   12e61:	57                   	push   edi
   12e62:	68 91 01 04 00       	push   0x40191
   12e67:	e8 f4 f7 00 00       	call   22660 <printk>
   12e6c:	83 c4 10             	add    esp,0x10
   12e6f:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12e74:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
   12e78:	83 ec 08             	sub    esp,0x8
   12e7b:	ff 37                	push   DWORD PTR [edi]
   12e7d:	68 9d 01 04 00       	push   0x4019d
   12e82:	e8 d9 f7 00 00       	call   22660 <printk>
   12e87:	83 c4 10             	add    esp,0x10
   12e8a:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12e8f:	e9 81 fc ff ff       	jmp    12b15 <dumpP+0x315>
   12e94:	83 ec 0c             	sub    esp,0xc
   12e97:	6a 01                	push   0x1
   12e99:	e8 d2 e5 00 00       	call   21470 <pauseDisplay>
   12e9e:	83 c4 10             	add    esp,0x10
   12ea1:	84 c0                	test   al,al
   12ea3:	0f 85 48 fc ff ff    	jne    12af1 <dumpP+0x2f1>
   12ea9:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   12eb0:	00 
   12eb1:	e9 ec fe ff ff       	jmp    12da2 <pEnableJmp+0x1df>
   12eb6:	83 ec 0c             	sub    esp,0xc
   12eb9:	6a 01                	push   0x1
   12ebb:	e8 b0 e5 00 00       	call   21470 <pauseDisplay>
   12ec0:	83 c4 10             	add    esp,0x10
   12ec3:	84 c0                	test   al,al
   12ec5:	0f 85 ca fc ff ff    	jne    12b95 <dumpP+0x395>
   12ecb:	c7 44 24 14 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
   12ed2:	00 
   12ed3:	0f b6 54 24 10       	movzx  edx,BYTE PTR [esp+0x10]
   12ed8:	e9 78 fc ff ff       	jmp    12b55 <dumpP+0x355>
   12edd:	83 ec 0c             	sub    esp,0xc
   12ee0:	68 d2 41 06 00       	push   0x641d2
   12ee5:	e8 56 3f 00 00       	call   16e40 <puts>
   12eea:	83 c4 10             	add    esp,0x10
   12eed:	e9 87 fe ff ff       	jmp    12d79 <pEnableJmp+0x1b6>
   12ef2:	80 7c 24 1b 00       	cmp    BYTE PTR [esp+0x1b],0x0
   12ef7:	c7 44 24 0c 04 00 00 	mov    DWORD PTR [esp+0xc],0x4
   12efe:	00 
   12eff:	0f 85 d7 fe ff ff    	jne    12ddc <pEnableJmp+0x219>
   12f05:	e9 39 fd ff ff       	jmp    12c43 <pEnableJmp+0x80>
   12f0a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   12f10:	bb 02 00 00 00       	mov    ebx,0x2
   12f15:	be 01 00 00 00       	mov    esi,0x1
   12f1a:	e9 54 fa ff ff       	jmp    12973 <dumpP+0x173>
pEnableJmp():
   12f1f:	90                   	nop

00012f20 <dumpV>:
dumpV():
   12f20:	53                   	push   ebx
   12f21:	81 ec 10 02 00 00    	sub    esp,0x210
   12f27:	ff b4 24 18 02 00 00 	push   DWORD PTR [esp+0x218]
   12f2e:	8d 5c 24 0c          	lea    ebx,[esp+0xc]
   12f32:	53                   	push   ebx
   12f33:	e8 68 f8 00 00       	call   227a0 <strcpy>
   12f38:	58                   	pop    eax
   12f39:	5a                   	pop    edx
   12f3a:	68 a3 01 04 00       	push   0x401a3
   12f3f:	53                   	push   ebx
   12f40:	e8 9b f7 00 00       	call   226e0 <strcat>
   12f45:	89 1c 24             	mov    DWORD PTR [esp],ebx
   12f48:	e8 b3 f8 ff ff       	call   12800 <dumpP>
   12f4d:	81 c4 18 02 00 00    	add    esp,0x218
   12f53:	5b                   	pop    ebx
   12f54:	c3                   	ret    
   12f55:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12f59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00012f60 <inPortB>:
inPortB():
   12f60:	53                   	push   ebx
   12f61:	81 ec 0c 14 00 00    	sub    esp,0x140c
   12f67:	68 00 14 00 00       	push   0x1400
   12f6c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   12f70:	53                   	push   ebx
   12f71:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12f78:	e8 23 f3 ff ff       	call   122a0 <parseParamsShell>
   12f7d:	83 c4 0c             	add    esp,0xc
   12f80:	6a 10                	push   0x10
   12f82:	6a 00                	push   0x0
   12f84:	53                   	push   ebx
   12f85:	e8 96 f8 00 00       	call   22820 <strtoul>
   12f8a:	89 c2                	mov    edx,eax
   12f8c:	ec                   	in     al,dx
   12f8d:	5a                   	pop    edx
   12f8e:	59                   	pop    ecx
   12f8f:	0f b6 c0             	movzx  eax,al
   12f92:	50                   	push   eax
   12f93:	68 a6 01 04 00       	push   0x401a6
   12f98:	e8 c3 f6 00 00       	call   22660 <printk>
   12f9d:	81 c4 18 14 00 00    	add    esp,0x1418
   12fa3:	5b                   	pop    ebx
   12fa4:	c3                   	ret    
   12fa5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   12fa9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00012fb0 <inPortW>:
inPortW():
   12fb0:	53                   	push   ebx
   12fb1:	81 ec 0c 14 00 00    	sub    esp,0x140c
   12fb7:	68 00 14 00 00       	push   0x1400
   12fbc:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   12fc0:	53                   	push   ebx
   12fc1:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   12fc8:	e8 d3 f2 ff ff       	call   122a0 <parseParamsShell>
   12fcd:	83 c4 0c             	add    esp,0xc
   12fd0:	6a 10                	push   0x10
   12fd2:	6a 00                	push   0x0
   12fd4:	53                   	push   ebx
   12fd5:	e8 46 f8 00 00       	call   22820 <strtoul>
   12fda:	89 c2                	mov    edx,eax
   12fdc:	66 ed                	in     ax,dx
   12fde:	5a                   	pop    edx
   12fdf:	59                   	pop    ecx
   12fe0:	0f b6 c0             	movzx  eax,al
   12fe3:	50                   	push   eax
   12fe4:	68 ae 01 04 00       	push   0x401ae
   12fe9:	e8 72 f6 00 00       	call   22660 <printk>
   12fee:	81 c4 18 14 00 00    	add    esp,0x1418
   12ff4:	5b                   	pop    ebx
   12ff5:	c3                   	ret    
   12ff6:	8d 76 00             	lea    esi,[esi+0x0]
   12ff9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00013000 <inPortD>:
inPortD():
   13000:	53                   	push   ebx
   13001:	81 ec 0c 14 00 00    	sub    esp,0x140c
   13007:	68 00 14 00 00       	push   0x1400
   1300c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   13010:	53                   	push   ebx
   13011:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   13018:	e8 83 f2 ff ff       	call   122a0 <parseParamsShell>
   1301d:	83 c4 0c             	add    esp,0xc
   13020:	6a 10                	push   0x10
   13022:	6a 00                	push   0x0
   13024:	53                   	push   ebx
   13025:	e8 f6 f7 00 00       	call   22820 <strtoul>
   1302a:	89 c2                	mov    edx,eax
   1302c:	ed                   	in     eax,dx
   1302d:	5a                   	pop    edx
   1302e:	59                   	pop    ecx
   1302f:	0f b6 c0             	movzx  eax,al
   13032:	50                   	push   eax
   13033:	68 28 39 06 00       	push   0x63928
   13038:	e8 23 f6 00 00       	call   22660 <printk>
   1303d:	81 c4 18 14 00 00    	add    esp,0x1418
   13043:	5b                   	pop    ebx
   13044:	c3                   	ret    
   13045:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   13049:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00013050 <outPortB>:
outPortB():
   13050:	56                   	push   esi
   13051:	53                   	push   ebx
   13052:	81 ec 08 14 00 00    	sub    esp,0x1408
   13058:	68 00 14 00 00       	push   0x1400
   1305d:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   13061:	53                   	push   ebx
   13062:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   13069:	e8 32 f2 ff ff       	call   122a0 <parseParamsShell>
   1306e:	83 c4 0c             	add    esp,0xc
   13071:	6a 10                	push   0x10
   13073:	6a 00                	push   0x0
   13075:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   1307c:	50                   	push   eax
   1307d:	e8 9e f7 00 00       	call   22820 <strtoul>
   13082:	83 c4 0c             	add    esp,0xc
   13085:	89 c6                	mov    esi,eax
   13087:	6a 10                	push   0x10
   13089:	6a 00                	push   0x0
   1308b:	53                   	push   ebx
   1308c:	e8 8f f7 00 00       	call   22820 <strtoul>
   13091:	89 c2                	mov    edx,eax
   13093:	89 f0                	mov    eax,esi
   13095:	ee                   	out    dx,al
   13096:	81 c4 14 14 00 00    	add    esp,0x1414
   1309c:	5b                   	pop    ebx
   1309d:	5e                   	pop    esi
   1309e:	c3                   	ret    
   1309f:	90                   	nop

000130a0 <outPortW>:
outPortW():
   130a0:	56                   	push   esi
   130a1:	53                   	push   ebx
   130a2:	81 ec 08 14 00 00    	sub    esp,0x1408
   130a8:	68 00 14 00 00       	push   0x1400
   130ad:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   130b1:	53                   	push   ebx
   130b2:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   130b9:	e8 e2 f1 ff ff       	call   122a0 <parseParamsShell>
   130be:	83 c4 0c             	add    esp,0xc
   130c1:	6a 10                	push   0x10
   130c3:	6a 00                	push   0x0
   130c5:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   130cc:	50                   	push   eax
   130cd:	e8 4e f7 00 00       	call   22820 <strtoul>
   130d2:	83 c4 0c             	add    esp,0xc
   130d5:	89 c6                	mov    esi,eax
   130d7:	6a 10                	push   0x10
   130d9:	6a 00                	push   0x0
   130db:	53                   	push   ebx
   130dc:	e8 3f f7 00 00       	call   22820 <strtoul>
   130e1:	89 c2                	mov    edx,eax
   130e3:	89 f0                	mov    eax,esi
   130e5:	66 ef                	out    dx,ax
   130e7:	81 c4 14 14 00 00    	add    esp,0x1414
   130ed:	5b                   	pop    ebx
   130ee:	5e                   	pop    esi
   130ef:	c3                   	ret    

000130f0 <outPortD>:
outPortD():
   130f0:	56                   	push   esi
   130f1:	53                   	push   ebx
   130f2:	81 ec 08 14 00 00    	sub    esp,0x1408
   130f8:	68 00 14 00 00       	push   0x1400
   130fd:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   13101:	53                   	push   ebx
   13102:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   13109:	e8 92 f1 ff ff       	call   122a0 <parseParamsShell>
   1310e:	83 c4 0c             	add    esp,0xc
   13111:	6a 10                	push   0x10
   13113:	6a 00                	push   0x0
   13115:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   1311c:	50                   	push   eax
   1311d:	e8 fe f6 00 00       	call   22820 <strtoul>
   13122:	83 c4 0c             	add    esp,0xc
   13125:	89 c6                	mov    esi,eax
   13127:	6a 10                	push   0x10
   13129:	6a 00                	push   0x0
   1312b:	53                   	push   ebx
   1312c:	e8 ef f6 00 00       	call   22820 <strtoul>
   13131:	89 c2                	mov    edx,eax
   13133:	89 f0                	mov    eax,esi
   13135:	ef                   	out    dx,eax
   13136:	81 c4 14 14 00 00    	add    esp,0x1414
   1313c:	5b                   	pop    ebx
   1313d:	5e                   	pop    esi
   1313e:	c3                   	ret    
   1313f:	90                   	nop

00013140 <writeBytes>:
writeBytes():
   13140:	53                   	push   ebx
   13141:	81 ec 0c 14 00 00    	sub    esp,0x140c
   13147:	68 00 14 00 00       	push   0x1400
   1314c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   13150:	53                   	push   ebx
   13151:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   13158:	e8 43 f1 ff ff       	call   122a0 <parseParamsShell>
   1315d:	83 c4 0c             	add    esp,0xc
   13160:	6a 10                	push   0x10
   13162:	6a 00                	push   0x0
   13164:	53                   	push   ebx
   13165:	e8 b6 f6 00 00       	call   22820 <strtoul>
   1316a:	83 c4 0c             	add    esp,0xc
   1316d:	89 c3                	mov    ebx,eax
   1316f:	6a 10                	push   0x10
   13171:	6a 00                	push   0x0
   13173:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   1317a:	50                   	push   eax
   1317b:	e8 a0 f6 00 00       	call   22820 <strtoul>
   13180:	88 03                	mov    BYTE PTR [ebx],al
   13182:	81 c4 18 14 00 00    	add    esp,0x1418
   13188:	5b                   	pop    ebx
   13189:	c3                   	ret    
   1318a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00013190 <writeWords>:
writeWords():
   13190:	53                   	push   ebx
   13191:	81 ec 0c 14 00 00    	sub    esp,0x140c
   13197:	68 00 14 00 00       	push   0x1400
   1319c:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   131a0:	53                   	push   ebx
   131a1:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   131a8:	e8 f3 f0 ff ff       	call   122a0 <parseParamsShell>
   131ad:	83 c4 0c             	add    esp,0xc
   131b0:	6a 10                	push   0x10
   131b2:	6a 00                	push   0x0
   131b4:	53                   	push   ebx
   131b5:	e8 66 f6 00 00       	call   22820 <strtoul>
   131ba:	83 c4 0c             	add    esp,0xc
   131bd:	89 c3                	mov    ebx,eax
   131bf:	6a 10                	push   0x10
   131c1:	6a 00                	push   0x0
   131c3:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   131ca:	50                   	push   eax
   131cb:	e8 50 f6 00 00       	call   22820 <strtoul>
   131d0:	66 89 03             	mov    WORD PTR [ebx],ax
   131d3:	81 c4 18 14 00 00    	add    esp,0x1418
   131d9:	5b                   	pop    ebx
   131da:	c3                   	ret    
   131db:	90                   	nop
   131dc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000131e0 <writeDWords>:
writeDWords():
   131e0:	53                   	push   ebx
   131e1:	81 ec 0c 14 00 00    	sub    esp,0x140c
   131e7:	68 00 14 00 00       	push   0x1400
   131ec:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   131f0:	53                   	push   ebx
   131f1:	ff b4 24 1c 14 00 00 	push   DWORD PTR [esp+0x141c]
   131f8:	e8 a3 f0 ff ff       	call   122a0 <parseParamsShell>
   131fd:	83 c4 0c             	add    esp,0xc
   13200:	6a 10                	push   0x10
   13202:	6a 00                	push   0x0
   13204:	53                   	push   ebx
   13205:	e8 16 f6 00 00       	call   22820 <strtoul>
   1320a:	83 c4 0c             	add    esp,0xc
   1320d:	89 c3                	mov    ebx,eax
   1320f:	6a 10                	push   0x10
   13211:	6a 00                	push   0x0
   13213:	8d 84 24 0c 02 00 00 	lea    eax,[esp+0x20c]
   1321a:	50                   	push   eax
   1321b:	e8 00 f6 00 00       	call   22820 <strtoul>
   13220:	89 03                	mov    DWORD PTR [ebx],eax
   13222:	81 c4 18 14 00 00    	add    esp,0x1418
   13228:	5b                   	pop    ebx
   13229:	c3                   	ret    
   1322a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00013230 <showMapping>:
showMapping():
   13230:	55                   	push   ebp
   13231:	57                   	push   edi
   13232:	56                   	push   esi
   13233:	53                   	push   ebx
   13234:	81 ec 20 14 00 00    	sub    esp,0x1420
   1323a:	68 00 14 00 00       	push   0x1400
   1323f:	8d 74 24 18          	lea    esi,[esp+0x18]
   13243:	56                   	push   esi
   13244:	ff b4 24 3c 14 00 00 	push   DWORD PTR [esp+0x143c]
   1324b:	e8 50 f0 ff ff       	call   122a0 <parseParamsShell>
   13250:	59                   	pop    ecx
   13251:	5f                   	pop    edi
   13252:	50                   	push   eax
   13253:	68 b6 01 04 00       	push   0x401b6
   13258:	89 c3                	mov    ebx,eax
   1325a:	e8 01 f4 00 00       	call   22660 <printk>
   1325f:	83 c4 10             	add    esp,0x10
   13262:	83 fb 02             	cmp    ebx,0x2
   13265:	74 79                	je     132e0 <showMapping+0xb0>
   13267:	83 ec 04             	sub    esp,0x4
   1326a:	6a 10                	push   0x10
   1326c:	6a 00                	push   0x0
   1326e:	56                   	push   esi
   1326f:	e8 ac f5 00 00       	call   22820 <strtoul>
   13274:	89 c3                	mov    ebx,eax
   13276:	89 04 24             	mov    DWORD PTR [esp],eax
   13279:	89 de                	mov    esi,ebx
   1327b:	e8 70 e8 ff ff       	call   11af0 <kPagingGet4kPTEntryValue>
   13280:	81 e6 ff 0f 00 00    	and    esi,0xfff
   13286:	25 00 f0 ff ff       	and    eax,0xfffff000
   1328b:	89 1c 24             	mov    DWORD PTR [esp],ebx
   1328e:	09 f0                	or     eax,esi
   13290:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   13294:	e8 57 e8 ff ff       	call   11af0 <kPagingGet4kPTEntryValue>
   13299:	89 1c 24             	mov    DWORD PTR [esp],ebx
   1329c:	89 c6                	mov    esi,eax
   1329e:	e8 cd e7 ff ff       	call   11a70 <kPagingGet4kPTEntryAddress>
   132a3:	89 1c 24             	mov    DWORD PTR [esp],ebx
   132a6:	89 c5                	mov    ebp,eax
   132a8:	e8 13 e7 ff ff       	call   119c0 <kPagingGet4kPDEntryValue>
   132ad:	89 1c 24             	mov    DWORD PTR [esp],ebx
   132b0:	89 c7                	mov    edi,eax
   132b2:	e8 69 e7 ff ff       	call   11a20 <kPagingGet4kPDEntryAddress>
   132b7:	5a                   	pop    edx
   132b8:	59                   	pop    ecx
   132b9:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   132bd:	56                   	push   esi
   132be:	55                   	push   ebp
   132bf:	57                   	push   edi
   132c0:	50                   	push   eax
   132c1:	68 00 c8 06 00       	push   0x6c800
   132c6:	e8 95 f3 00 00       	call   22660 <printk>
   132cb:	83 c4 20             	add    esp,0x20
   132ce:	81 c4 1c 14 00 00    	add    esp,0x141c
   132d4:	5b                   	pop    ebx
   132d5:	5e                   	pop    esi
   132d6:	5f                   	pop    edi
   132d7:	5d                   	pop    ebp
   132d8:	c3                   	ret    
   132d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   132e0:	83 ec 04             	sub    esp,0x4
   132e3:	6a 10                	push   0x10
   132e5:	6a 00                	push   0x0
   132e7:	56                   	push   esi
   132e8:	e8 33 f5 00 00       	call   22820 <strtoul>
   132ed:	83 c4 0c             	add    esp,0xc
   132f0:	89 c3                	mov    ebx,eax
   132f2:	6a 10                	push   0x10
   132f4:	6a 00                	push   0x0
   132f6:	8d 84 24 1c 02 00 00 	lea    eax,[esp+0x21c]
   132fd:	50                   	push   eax
   132fe:	e8 1d f5 00 00       	call   22820 <strtoul>
   13303:	5f                   	pop    edi
   13304:	5d                   	pop    ebp
   13305:	89 c6                	mov    esi,eax
   13307:	50                   	push   eax
   13308:	53                   	push   ebx
   13309:	89 f7                	mov    edi,esi
   1330b:	81 e7 ff 0f 00 00    	and    edi,0xfff
   13311:	e8 8a e7 ff ff       	call   11aa0 <kPagingGet4kPTEntryValueCR3>
   13316:	25 00 f0 ff ff       	and    eax,0xfffff000
   1331b:	09 f8                	or     eax,edi
   1331d:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   13321:	58                   	pop    eax
   13322:	5a                   	pop    edx
   13323:	56                   	push   esi
   13324:	53                   	push   ebx
   13325:	e8 76 e7 ff ff       	call   11aa0 <kPagingGet4kPTEntryValueCR3>
   1332a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
   1332e:	59                   	pop    ecx
   1332f:	5f                   	pop    edi
   13330:	56                   	push   esi
   13331:	53                   	push   ebx
   13332:	e8 09 e7 ff ff       	call   11a40 <kPagingGet4kPTEntryAddressCR3>
   13337:	5d                   	pop    ebp
   13338:	89 c7                	mov    edi,eax
   1333a:	58                   	pop    eax
   1333b:	56                   	push   esi
   1333c:	53                   	push   ebx
   1333d:	e8 3e e6 ff ff       	call   11980 <kPagingGet4kPDEntryValueCR3>
   13342:	89 c5                	mov    ebp,eax
   13344:	58                   	pop    eax
   13345:	5a                   	pop    edx
   13346:	56                   	push   esi
   13347:	53                   	push   ebx
   13348:	e8 93 e6 ff ff       	call   119e0 <kPagingGet4kPDEntryAddressCR3>
   1334d:	83 c4 0c             	add    esp,0xc
   13350:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   13354:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
   13358:	51                   	push   ecx
   13359:	57                   	push   edi
   1335a:	55                   	push   ebp
   1335b:	50                   	push   eax
   1335c:	53                   	push   ebx
   1335d:	68 78 c7 06 00       	push   0x6c778
   13362:	e8 f9 f2 00 00       	call   22660 <printk>
   13367:	83 c4 20             	add    esp,0x20
   1336a:	81 c4 1c 14 00 00    	add    esp,0x141c
   13370:	5b                   	pop    ebx
   13371:	5e                   	pop    esi
   13372:	5f                   	pop    edi
   13373:	5d                   	pop    ebp
   13374:	c3                   	ret    
   13375:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   13379:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00013380 <buildargv>:
buildargv():
   13380:	55                   	push   ebp
   13381:	57                   	push   edi
   13382:	56                   	push   esi
   13383:	53                   	push   ebx
   13384:	83 ec 2c             	sub    esp,0x2c
   13387:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
   1338b:	85 db                	test   ebx,ebx
   1338d:	0f 84 04 02 00 00    	je     13597 <buildargv+0x217>
   13393:	83 ec 0c             	sub    esp,0xc
   13396:	31 f6                	xor    esi,esi
   13398:	31 ed                	xor    ebp,ebp
   1339a:	53                   	push   ebx
   1339b:	31 ff                	xor    edi,edi
   1339d:	e8 5e f4 00 00       	call   22800 <strlen>
   133a2:	83 c0 01             	add    eax,0x1
   133a5:	89 04 24             	mov    DWORD PTR [esp],eax
   133a8:	e8 33 e1 00 00       	call   214e0 <mallocTemp>
   133ad:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   133b1:	83 c4 10             	add    esp,0x10
   133b4:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   133bb:	00 
   133bc:	c7 44 24 10 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
   133c3:	00 
   133c4:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   133cb:	00 
   133cc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   133d0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   133d4:	85 c0                	test   eax,eax
   133d6:	74 09                	je     133e1 <buildargv+0x61>
   133d8:	83 e8 01             	sub    eax,0x1
   133db:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
   133df:	7c 1f                	jl     13400 <buildargv+0x80>
   133e1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   133e5:	85 c0                	test   eax,eax
   133e7:	0f 84 8c 01 00 00    	je     13579 <buildargv+0x1f9>
   133ed:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   133f1:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   133f5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   133f9:	c7 04 90 00 00 00 00 	mov    DWORD PTR [eax+edx*4],0x0
   13400:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   13403:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   13407:	84 c0                	test   al,al
   13409:	75 36                	jne    13441 <buildargv+0xc1>
   1340b:	eb 6b                	jmp    13478 <buildargv+0xf8>
   1340d:	8d 76 00             	lea    esi,[esi+0x0]
   13410:	85 f6                	test   esi,esi
   13412:	75 1c                	jne    13430 <buildargv+0xb0>
   13414:	3c 5c                	cmp    al,0x5c
   13416:	0f 84 84 00 00 00    	je     134a0 <buildargv+0x120>
   1341c:	85 ff                	test   edi,edi
   1341e:	74 39                	je     13459 <buildargv+0xd9>
   13420:	3c 27                	cmp    al,0x27
   13422:	0f 84 97 00 00 00    	je     134bf <buildargv+0x13f>
   13428:	90                   	nop
   13429:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13430:	88 02                	mov    BYTE PTR [edx],al
   13432:	31 f6                	xor    esi,esi
   13434:	83 c2 01             	add    edx,0x1
   13437:	83 c3 01             	add    ebx,0x1
   1343a:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1343d:	84 c0                	test   al,al
   1343f:	74 37                	je     13478 <buildargv+0xf8>
   13441:	3c 20                	cmp    al,0x20
   13443:	75 cb                	jne    13410 <buildargv+0x90>
   13445:	89 f1                	mov    ecx,esi
   13447:	09 f9                	or     ecx,edi
   13449:	09 e9                	or     ecx,ebp
   1344b:	0f 84 1f 01 00 00    	je     13570 <buildargv+0x1f0>
   13451:	85 f6                	test   esi,esi
   13453:	75 db                	jne    13430 <buildargv+0xb0>
   13455:	85 ff                	test   edi,edi
   13457:	75 d7                	jne    13430 <buildargv+0xb0>
   13459:	85 ed                	test   ebp,ebp
   1345b:	74 53                	je     134b0 <buildargv+0x130>
   1345d:	3c 22                	cmp    al,0x22
   1345f:	74 7f                	je     134e0 <buildargv+0x160>
   13461:	83 c3 01             	add    ebx,0x1
   13464:	88 02                	mov    BYTE PTR [edx],al
   13466:	31 f6                	xor    esi,esi
   13468:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1346b:	83 c2 01             	add    edx,0x1
   1346e:	31 ff                	xor    edi,edi
   13470:	84 c0                	test   al,al
   13472:	75 cd                	jne    13441 <buildargv+0xc1>
   13474:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   13478:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1347c:	c6 02 00             	mov    BYTE PTR [edx],0x0
   1347f:	80 38 00             	cmp    BYTE PTR [eax],0x0
   13482:	75 6c                	jne    134f0 <buildargv+0x170>
   13484:	80 3b 00             	cmp    BYTE PTR [ebx],0x0
   13487:	0f 85 43 ff ff ff    	jne    133d0 <buildargv+0x50>
   1348d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   13491:	83 c4 2c             	add    esp,0x2c
   13494:	5b                   	pop    ebx
   13495:	5e                   	pop    esi
   13496:	5f                   	pop    edi
   13497:	5d                   	pop    ebp
   13498:	c3                   	ret    
   13499:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   134a0:	be 01 00 00 00       	mov    esi,0x1
   134a5:	eb 90                	jmp    13437 <buildargv+0xb7>
   134a7:	89 f6                	mov    esi,esi
   134a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   134b0:	3c 27                	cmp    al,0x27
   134b2:	74 1c                	je     134d0 <buildargv+0x150>
   134b4:	3c 22                	cmp    al,0x22
   134b6:	75 a9                	jne    13461 <buildargv+0xe1>
   134b8:	31 f6                	xor    esi,esi
   134ba:	bd 01 00 00 00       	mov    ebp,0x1
   134bf:	31 ff                	xor    edi,edi
   134c1:	e9 71 ff ff ff       	jmp    13437 <buildargv+0xb7>
   134c6:	8d 76 00             	lea    esi,[esi+0x0]
   134c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   134d0:	31 f6                	xor    esi,esi
   134d2:	bf 01 00 00 00       	mov    edi,0x1
   134d7:	e9 5b ff ff ff       	jmp    13437 <buildargv+0xb7>
   134dc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   134e0:	31 f6                	xor    esi,esi
   134e2:	31 ed                	xor    ebp,ebp
   134e4:	31 ff                	xor    edi,edi
   134e6:	e9 4c ff ff ff       	jmp    13437 <buildargv+0xb7>
   134eb:	90                   	nop
   134ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   134f0:	83 ec 0c             	sub    esp,0xc
   134f3:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   134f7:	e8 04 f3 00 00       	call   22800 <strlen>
   134fc:	83 c0 01             	add    eax,0x1
   134ff:	89 04 24             	mov    DWORD PTR [esp],eax
   13502:	e8 d9 df 00 00       	call   214e0 <mallocTemp>
   13507:	89 c2                	mov    edx,eax
   13509:	58                   	pop    eax
   1350a:	59                   	pop    ecx
   1350b:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   1350f:	52                   	push   edx
   13510:	89 54 24 2c          	mov    DWORD PTR [esp+0x2c],edx
   13514:	e8 87 f2 00 00       	call   227a0 <strcpy>
   13519:	89 1c 24             	mov    DWORD PTR [esp],ebx
   1351c:	83 c3 01             	add    ebx,0x1
   1351f:	e8 dc f2 00 00       	call   22800 <strlen>
   13524:	83 c0 01             	add    eax,0x1
   13527:	89 04 24             	mov    DWORD PTR [esp],eax
   1352a:	e8 b1 df 00 00       	call   214e0 <mallocTemp>
   1352f:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
   13533:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   13537:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   1353b:	8d 14 8d 00 00 00 00 	lea    edx,[ecx*4+0x0]
   13542:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
   13546:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
   1354a:	89 14 88             	mov    DWORD PTR [eax+ecx*4],edx
   1354d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
   13551:	83 c1 01             	add    ecx,0x1
   13554:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
   13558:	83 c4 10             	add    esp,0x10
   1355b:	c7 44 10 04 00 00 00 	mov    DWORD PTR [eax+edx*1+0x4],0x0
   13562:	00 
   13563:	e9 1c ff ff ff       	jmp    13484 <buildargv+0x104>
   13568:	90                   	nop
   13569:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13570:	31 ed                	xor    ebp,ebp
   13572:	31 f6                	xor    esi,esi
   13574:	e9 ff fe ff ff       	jmp    13478 <buildargv+0xf8>
   13579:	83 ec 0c             	sub    esp,0xc
   1357c:	6a 50                	push   0x50
   1357e:	e8 5d df 00 00       	call   214e0 <mallocTemp>
   13583:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
   13587:	83 c4 10             	add    esp,0x10
   1358a:	c7 44 24 10 14 00 00 	mov    DWORD PTR [esp+0x10],0x14
   13591:	00 
   13592:	e9 56 fe ff ff       	jmp    133ed <buildargv+0x6d>
   13597:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   1359e:	00 
   1359f:	e9 e9 fe ff ff       	jmp    1348d <buildargv+0x10d>
   135a4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   135aa:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

000135b0 <execCommand>:
execCommand():
   135b0:	57                   	push   edi
   135b1:	56                   	push   esi
   135b2:	53                   	push   ebx
   135b3:	81 ec 04 14 00 00    	sub    esp,0x1404
   135b9:	8b b4 24 14 14 00 00 	mov    esi,DWORD PTR [esp+0x1414]
   135c0:	68 00 14 00 00       	push   0x1400
   135c5:	8d 5c 24 08          	lea    ebx,[esp+0x8]
   135c9:	53                   	push   ebx
   135ca:	56                   	push   esi
   135cb:	e8 d0 ec ff ff       	call   122a0 <parseParamsShell>
   135d0:	89 c7                	mov    edi,eax
   135d2:	58                   	pop    eax
   135d3:	5a                   	pop    edx
   135d4:	8d 44 24 09          	lea    eax,[esp+0x9]
   135d8:	50                   	push   eax
   135d9:	68 40 84 08 00       	push   0x88440
   135de:	e8 bd f1 00 00       	call   227a0 <strcpy>
   135e3:	89 34 24             	mov    DWORD PTR [esp],esi
   135e6:	e8 95 fd ff ff       	call   13380 <buildargv>
   135eb:	83 c4 0c             	add    esp,0xc
   135ee:	a3 20 84 08 00       	mov    ds:0x88420,eax
   135f3:	50                   	push   eax
   135f4:	57                   	push   edi
   135f5:	53                   	push   ebx
   135f6:	e8 25 ea 00 00       	call   22020 <exec>
   135fb:	59                   	pop    ecx
   135fc:	5b                   	pop    ebx
   135fd:	68 00 38 02 00       	push   0x23800
   13602:	68 40 84 08 00       	push   0x88440
   13607:	e8 94 f1 00 00       	call   227a0 <strcpy>
   1360c:	81 c4 10 14 00 00    	add    esp,0x1410
   13612:	5b                   	pop    ebx
   13613:	5e                   	pop    esi
   13614:	5f                   	pop    edi
   13615:	c3                   	ret    
   13616:	8d 76 00             	lea    esi,[esi+0x0]
   13619:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00013620 <execInternalCommand>:
execInternalCommand():
   13620:	56                   	push   esi
   13621:	53                   	push   ebx
   13622:	83 ec 10             	sub    esp,0x10
   13625:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   13629:	53                   	push   ebx
   1362a:	e8 21 ec ff ff       	call   12250 <findCommand>
   1362f:	83 c4 10             	add    esp,0x10
   13632:	85 c0                	test   eax,eax
   13634:	7e 5a                	jle    13690 <execInternalCommand+0x70>
   13636:	83 e8 01             	sub    eax,0x1
   13639:	c1 e0 04             	shl    eax,0x4
   1363c:	8b 90 8c 38 02 00    	mov    edx,DWORD PTR [eax+0x2388c]
   13642:	8b b0 88 38 02 00    	mov    esi,DWORD PTR [eax+0x23888]
   13648:	85 d2                	test   edx,edx
   1364a:	89 35 58 33 09 00    	mov    DWORD PTR ds:0x93358,esi
   13650:	89 35 a4 84 08 00    	mov    DWORD PTR ds:0x884a4,esi
   13656:	75 10                	jne    13668 <execInternalCommand+0x48>
   13658:	83 c4 04             	add    esp,0x4
   1365b:	89 f0                	mov    eax,esi
   1365d:	5b                   	pop    ebx
   1365e:	5e                   	pop    esi
   1365f:	ff e0                	jmp    eax
   13661:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13668:	83 ec 0c             	sub    esp,0xc
   1366b:	ff b0 80 38 02 00    	push   DWORD PTR [eax+0x23880]
   13671:	e8 8a f1 00 00       	call   22800 <strlen>
   13676:	8d 44 03 01          	lea    eax,[ebx+eax*1+0x1]
   1367a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   1367e:	83 c4 14             	add    esp,0x14
   13681:	89 f0                	mov    eax,esi
   13683:	5b                   	pop    ebx
   13684:	5e                   	pop    esi
   13685:	ff e0                	jmp    eax
   13687:	89 f6                	mov    esi,esi
   13689:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   13690:	83 ec 08             	sub    esp,0x8
   13693:	53                   	push   ebx
   13694:	68 88 c8 06 00       	push   0x6c888
   13699:	e8 c2 ef 00 00       	call   22660 <printk>
   1369e:	83 c4 14             	add    esp,0x14
   136a1:	5b                   	pop    ebx
   136a2:	5e                   	pop    esi
   136a3:	c3                   	ret    
   136a4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   136aa:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

000136b0 <biShell>:
biShell():
   136b0:	55                   	push   ebp
   136b1:	89 e5                	mov    ebp,esp
   136b3:	57                   	push   edi
   136b4:	56                   	push   esi
   136b5:	53                   	push   ebx
   136b6:	81 ec 54 0b 00 00    	sub    esp,0xb54
   136bc:	68 00 38 02 00       	push   0x23800
   136c1:	68 40 84 08 00       	push   0x88440
   136c6:	e8 d5 f0 00 00       	call   227a0 <strcpy>
   136cb:	c7 04 24 a8 c8 06 00 	mov    DWORD PTR [esp],0x6c8a8
   136d2:	e8 69 37 00 00       	call   16e40 <puts>
   136d7:	c7 85 ac f4 ff ff 64 	mov    DWORD PTR [ebp-0xb54],0x6b736964
   136de:	69 73 6b 
   136e1:	c7 85 b0 f4 ff ff 20 	mov    DWORD PTR [ebp-0xb50],0x3420
   136e8:	34 00 00 
   136eb:	31 c0                	xor    eax,eax
   136ed:	c7 84 05 b4 f4 ff ff 	mov    DWORD PTR [ebp+eax*1-0xb4c],0x0
   136f4:	00 00 00 00 
   136f8:	83 c0 04             	add    eax,0x4
   136fb:	83 f8 20             	cmp    eax,0x20
   136fe:	72 ed                	jb     136ed <biShell+0x3d>
   13700:	8d 85 ac f4 ff ff    	lea    eax,[ebp-0xb54]
   13706:	89 04 24             	mov    DWORD PTR [esp],eax
   13709:	e8 12 ff ff ff       	call   13620 <execInternalCommand>
   1370e:	c7 85 d4 f4 ff ff 70 	mov    DWORD PTR [ebp-0xb2c],0x74726170
   13715:	61 72 74 
   13718:	c7 85 d8 f4 ff ff 20 	mov    DWORD PTR [ebp-0xb28],0x3520
   1371f:	35 00 00 
   13722:	31 c0                	xor    eax,eax
   13724:	c7 84 05 dc f4 ff ff 	mov    DWORD PTR [ebp+eax*1-0xb24],0x0
   1372b:	00 00 00 00 
   1372f:	83 c0 04             	add    eax,0x4
   13732:	83 f8 20             	cmp    eax,0x20
   13735:	72 ed                	jb     13724 <biShell+0x74>
   13737:	8d 85 d4 f4 ff ff    	lea    eax,[ebp-0xb2c]
   1373d:	89 04 24             	mov    DWORD PTR [esp],eax
   13740:	e8 db fe ff ff       	call   13620 <execInternalCommand>
   13745:	c7 85 fc f4 ff ff 65 	mov    DWORD PTR [ebp-0xb04],0x63657865
   1374c:	78 65 63 
   1374f:	c7 85 00 f5 ff ff 20 	mov    DWORD PTR [ebp-0xb00],0x656b2f20
   13756:	2f 6b 65 
   13759:	31 c0                	xor    eax,eax
   1375b:	c7 85 04 f5 ff ff 72 	mov    DWORD PTR [ebp-0xafc],0x6c656e72
   13762:	6e 65 6c 
   13765:	c7 85 08 f5 ff ff 00 	mov    DWORD PTR [ebp-0xaf8],0x0
   1376c:	00 00 00 
   1376f:	c7 84 05 0c f5 ff ff 	mov    DWORD PTR [ebp+eax*1-0xaf4],0x0
   13776:	00 00 00 00 
   1377a:	83 c0 04             	add    eax,0x4
   1377d:	83 f8 18             	cmp    eax,0x18
   13780:	72 ed                	jb     1376f <biShell+0xbf>
   13782:	8d 85 fc f4 ff ff    	lea    eax,[ebp-0xb04]
   13788:	31 ff                	xor    edi,edi
   1378a:	89 04 24             	mov    DWORD PTR [esp],eax
   1378d:	e8 8e fe ff ff       	call   13620 <execInternalCommand>
   13792:	83 c4 10             	add    esp,0x10
   13795:	8d 85 24 f5 ff ff    	lea    eax,[ebp-0xadc]
   1379b:	83 ec 04             	sub    esp,0x4
   1379e:	68 00 01 00 00       	push   0x100
   137a3:	6a 00                	push   0x0
   137a5:	50                   	push   eax
   137a6:	e8 d5 d5 00 00       	call   20d80 <memset>
   137ab:	5b                   	pop    ebx
   137ac:	5e                   	pop    esi
   137ad:	68 40 84 08 00       	push   0x88440
   137b2:	68 c8 01 04 00       	push   0x401c8
   137b7:	31 db                	xor    ebx,ebx
   137b9:	e8 a2 ee 00 00       	call   22660 <printk>
   137be:	83 c4 10             	add    esp,0x10
   137c1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   137c8:	e8 23 e0 ff ff       	call   117f0 <waitForKeyboardKey>
   137cd:	0f be d0             	movsx  edx,al
   137d0:	85 d2                	test   edx,edx
   137d2:	74 f4                	je     137c8 <biShell+0x118>
   137d4:	83 fa 08             	cmp    edx,0x8
   137d7:	74 27                	je     13800 <biShell+0x150>
   137d9:	83 fa 0a             	cmp    edx,0xa
   137dc:	74 70                	je     1384e <biShell+0x19e>
   137de:	83 ec 0c             	sub    esp,0xc
   137e1:	8d 73 01             	lea    esi,[ebx+0x1]
   137e4:	88 84 1d 24 f5 ff ff 	mov    BYTE PTR [ebp+ebx*1-0xadc],al
   137eb:	52                   	push   edx
   137ec:	89 f3                	mov    ebx,esi
   137ee:	e8 7d 36 00 00       	call   16e70 <putc>
   137f3:	83 c4 10             	add    esp,0x10
   137f6:	eb d0                	jmp    137c8 <biShell+0x118>
   137f8:	90                   	nop
   137f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13800:	83 fb ff             	cmp    ebx,0xffffffff
   13803:	74 c3                	je     137c8 <biShell+0x118>
   13805:	e8 b6 35 00 00       	call   16dc0 <cursorGetPosY>
   1380a:	c6 84 1d 24 f5 ff ff 	mov    BYTE PTR [ebp+ebx*1-0xadc],0x20
   13811:	20 
   13812:	89 c6                	mov    esi,eax
   13814:	83 eb 01             	sub    ebx,0x1
   13817:	e8 54 35 00 00       	call   16d70 <cursorGetPosX>
   1381c:	83 ec 08             	sub    esp,0x8
   1381f:	83 e8 01             	sub    eax,0x1
   13822:	56                   	push   esi
   13823:	50                   	push   eax
   13824:	e8 c7 34 00 00       	call   16cf0 <cursorMoveTo>
   13829:	c7 04 24 20 00 00 00 	mov    DWORD PTR [esp],0x20
   13830:	e8 3b 36 00 00       	call   16e70 <putc>
   13835:	e8 36 35 00 00       	call   16d70 <cursorGetPosX>
   1383a:	5a                   	pop    edx
   1383b:	59                   	pop    ecx
   1383c:	83 e8 01             	sub    eax,0x1
   1383f:	56                   	push   esi
   13840:	50                   	push   eax
   13841:	e8 aa 34 00 00       	call   16cf0 <cursorMoveTo>
   13846:	83 c4 10             	add    esp,0x10
   13849:	e9 7a ff ff ff       	jmp    137c8 <biShell+0x118>
   1384e:	83 ec 0c             	sub    esp,0xc
   13851:	6a 0a                	push   0xa
   13853:	e8 18 36 00 00       	call   16e70 <putc>
   13858:	c6 84 1d 24 f5 ff ff 	mov    BYTE PTR [ebp+ebx*1-0xadc],0x0
   1385f:	00 
   13860:	83 c4 10             	add    esp,0x10
   13863:	80 bd 24 f5 ff ff 00 	cmp    BYTE PTR [ebp-0xadc],0x0
   1386a:	0f 84 25 ff ff ff    	je     13795 <biShell+0xe5>
   13870:	8d 85 24 f5 ff ff    	lea    eax,[ebp-0xadc]
   13876:	83 ec 0c             	sub    esp,0xc
   13879:	50                   	push   eax
   1387a:	e8 d1 e9 ff ff       	call   12250 <findCommand>
   1387f:	89 c3                	mov    ebx,eax
   13881:	8d 85 24 f5 ff ff    	lea    eax,[ebp-0xadc]
   13887:	89 04 24             	mov    DWORD PTR [esp],eax
   1388a:	e8 91 fd ff ff       	call   13620 <execInternalCommand>
   1388f:	83 c4 10             	add    esp,0x10
   13892:	85 db                	test   ebx,ebx
   13894:	7e 28                	jle    138be <biShell+0x20e>
   13896:	8d 85 24 f5 ff ff    	lea    eax,[ebp-0xadc]
   1389c:	83 ec 08             	sub    esp,0x8
   1389f:	8d 8d 24 f6 ff ff    	lea    ecx,[ebp-0x9dc]
   138a5:	8d 5f 01             	lea    ebx,[edi+0x1]
   138a8:	50                   	push   eax
   138a9:	6b c7 32             	imul   eax,edi,0x32
   138ac:	89 df                	mov    edi,ebx
   138ae:	01 c8                	add    eax,ecx
   138b0:	50                   	push   eax
   138b1:	e8 ea ee 00 00       	call   227a0 <strcpy>
   138b6:	83 c4 10             	add    esp,0x10
   138b9:	e9 d7 fe ff ff       	jmp    13795 <biShell+0xe5>
   138be:	8d 85 24 f5 ff ff    	lea    eax,[ebp-0xadc]
   138c4:	83 ec 08             	sub    esp,0x8
   138c7:	50                   	push   eax
   138c8:	68 88 c8 06 00       	push   0x6c888
   138cd:	e8 8e ed 00 00       	call   22660 <printk>
   138d2:	83 c4 10             	add    esp,0x10
   138d5:	e9 bb fe ff ff       	jmp    13795 <biShell+0xe5>
   138da:	66 90                	xchg   ax,ax
   138dc:	66 90                	xchg   ax,ax
   138de:	66 90                	xchg   ax,ax

000138e0 <AhciIssueCmd>:
AhciIssueCmd():
   138e0:	57                   	push   edi
   138e1:	56                   	push   esi
   138e2:	53                   	push   ebx
   138e3:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   138e7:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   138ea:	83 e0 fe             	and    eax,0xfffffffe
   138ed:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   138f0:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   138f3:	a8 01                	test   al,0x1
   138f5:	0f 84 b5 01 00 00    	je     13ab0 <AhciIssueCmd+0x1d0>
   138fb:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   138fe:	a9 00 00 00 40       	test   eax,0x40000000
   13903:	75 0e                	jne    13913 <AhciIssueCmd+0x33>
   13905:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13908:	a9 00 00 00 20       	test   eax,0x20000000
   1390d:	0f 84 0d 01 00 00    	je     13a20 <AhciIssueCmd+0x140>
   13913:	83 ec 08             	sub    esp,0x8
   13916:	68 18 ca 06 00       	push   0x6ca18
   1391b:	68 00 20 00 00       	push   0x2000
   13920:	e8 5b ed 00 00       	call   22680 <printd>
   13925:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13928:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
   1392b:	83 c4 10             	add    esp,0x10
   1392e:	83 e0 01             	and    eax,0x1
   13931:	f7 d0                	not    eax
   13933:	21 d0                	and    eax,edx
   13935:	83 e0 01             	and    eax,0x1
   13938:	89 c2                	mov    edx,eax
   1393a:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1393d:	83 e0 fe             	and    eax,0xfffffffe
   13940:	09 d0                	or     eax,edx
   13942:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   13945:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13948:	83 c8 08             	or     eax,0x8
   1394b:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   1394e:	66 90                	xchg   ax,ax
   13950:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13953:	a8 08                	test   al,0x8
   13955:	75 f9                	jne    13950 <AhciIssueCmd+0x70>
   13957:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1395a:	83 c8 01             	or     eax,0x1
   1395d:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   13960:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13963:	83 c8 10             	or     eax,0x10
   13966:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   13969:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
   13970:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   13973:	83 ec 04             	sub    esp,0x4
   13976:	bf 01 00 00 00       	mov    edi,0x1
   1397b:	be 64 00 00 00       	mov    esi,0x64
   13980:	50                   	push   eax
   13981:	68 44 ca 06 00       	push   0x6ca44
   13986:	68 00 20 00 00       	push   0x2000
   1398b:	e8 f0 ec 00 00       	call   22680 <printd>
   13990:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
   13994:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   13997:	83 c4 0c             	add    esp,0xc
   1399a:	d3 e7                	shl    edi,cl
   1399c:	09 f8                	or     eax,edi
   1399e:	89 43 38             	mov    DWORD PTR [ebx+0x38],eax
   139a1:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   139a4:	50                   	push   eax
   139a5:	68 78 ca 06 00       	push   0x6ca78
   139aa:	68 00 20 00 00       	push   0x2000
   139af:	e8 cc ec 00 00       	call   22680 <printd>
   139b4:	83 c4 10             	add    esp,0x10
   139b7:	eb 0c                	jmp    139c5 <AhciIssueCmd+0xe5>
   139b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   139c0:	83 ee 01             	sub    esi,0x1
   139c3:	74 14                	je     139d9 <AhciIssueCmd+0xf9>
   139c5:	83 ec 0c             	sub    esp,0xc
   139c8:	6a 32                	push   0x32
   139ca:	e8 c1 fa 00 00       	call   23490 <wait>
   139cf:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
   139d2:	83 c4 10             	add    esp,0x10
   139d5:	a8 80                	test   al,0x80
   139d7:	75 e7                	jne    139c0 <AhciIssueCmd+0xe0>
   139d9:	be 88 13 00 00       	mov    esi,0x1388
   139de:	eb 24                	jmp    13a04 <AhciIssueCmd+0x124>
   139e0:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   139e3:	a9 00 00 00 40       	test   eax,0x40000000
   139e8:	0f 85 9a 00 00 00    	jne    13a88 <AhciIssueCmd+0x1a8>
   139ee:	83 ec 0c             	sub    esp,0xc
   139f1:	6a 14                	push   0x14
   139f3:	e8 98 fa 00 00       	call   23490 <wait>
   139f8:	83 c4 10             	add    esp,0x10
   139fb:	83 ee 01             	sub    esi,0x1
   139fe:	0f 84 d8 00 00 00    	je     13adc <AhciIssueCmd+0x1fc>
   13a04:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   13a07:	85 c7                	test   edi,eax
   13a09:	75 d5                	jne    139e0 <AhciIssueCmd+0x100>
   13a0b:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
   13a0e:	a8 01                	test   al,0x1
   13a10:	0f 85 c9 00 00 00    	jne    13adf <AhciIssueCmd+0x1ff>
   13a16:	b8 01 00 00 00       	mov    eax,0x1
   13a1b:	5b                   	pop    ebx
   13a1c:	5e                   	pop    esi
   13a1d:	5f                   	pop    edi
   13a1e:	c3                   	ret    
   13a1f:	90                   	nop
   13a20:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13a23:	a9 00 00 00 10       	test   eax,0x10000000
   13a28:	0f 85 e5 fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a2e:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13a31:	a9 00 00 00 08       	test   eax,0x8000000
   13a36:	0f 85 d7 fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a3c:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13a3f:	a9 00 00 00 04       	test   eax,0x4000000
   13a44:	0f 85 c9 fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a4a:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13a4d:	a9 00 00 00 01       	test   eax,0x1000000
   13a52:	0f 85 bb fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a58:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   13a5b:	a9 00 00 80 00       	test   eax,0x800000
   13a60:	0f 85 ad fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a66:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
   13a69:	a8 80                	test   al,0x80
   13a6b:	0f 85 a2 fe ff ff    	jne    13913 <AhciIssueCmd+0x33>
   13a71:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
   13a74:	a8 80                	test   al,0x80
   13a76:	0f 84 f4 fe ff ff    	je     13970 <AhciIssueCmd+0x90>
   13a7c:	e9 92 fe ff ff       	jmp    13913 <AhciIssueCmd+0x33>
   13a81:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13a88:	83 ec 08             	sub    esp,0x8
   13a8b:	68 00 04 04 00       	push   0x40400
   13a90:	68 00 20 00 00       	push   0x2000
   13a95:	e8 e6 eb 00 00       	call   22680 <printd>
   13a9a:	83 c4 10             	add    esp,0x10
   13a9d:	b8 ff ff ff ff       	mov    eax,0xffffffff
   13aa2:	5b                   	pop    ebx
   13aa3:	5e                   	pop    esi
   13aa4:	5f                   	pop    edi
   13aa5:	c3                   	ret    
   13aa6:	8d 76 00             	lea    esi,[esi+0x0]
   13aa9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   13ab0:	83 ec 08             	sub    esp,0x8
   13ab3:	68 dc c9 06 00       	push   0x6c9dc
   13ab8:	68 00 20 00 00       	push   0x2000
   13abd:	e8 be eb 00 00       	call   22680 <printd>
   13ac2:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13ac5:	83 c4 10             	add    esp,0x10
   13ac8:	83 c8 10             	or     eax,0x10
   13acb:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   13ace:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   13ad1:	83 c8 01             	or     eax,0x1
   13ad4:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   13ad7:	e9 1f fe ff ff       	jmp    138fb <AhciIssueCmd+0x1b>
   13adc:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
   13adf:	b8 fe ff ff ff       	mov    eax,0xfffffffe
   13ae4:	e9 32 ff ff ff       	jmp    13a1b <AhciIssueCmd+0x13b>
   13ae9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00013af0 <check_type>:
check_type():
   13af0:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   13af4:	8b 41 28             	mov    eax,DWORD PTR [ecx+0x28]
   13af7:	89 c2                	mov    edx,eax
   13af9:	c1 ea 08             	shr    edx,0x8
   13afc:	83 e2 0f             	and    edx,0xf
   13aff:	80 fa 01             	cmp    dl,0x1
   13b02:	75 34                	jne    13b38 <check_type+0x48>
   13b04:	83 e0 0f             	and    eax,0xf
   13b07:	3c 03                	cmp    al,0x3
   13b09:	75 2d                	jne    13b38 <check_type+0x48>
   13b0b:	8b 51 24             	mov    edx,DWORD PTR [ecx+0x24]
   13b0e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   13b12:	89 10                	mov    DWORD PTR [eax],edx
   13b14:	8b 51 24             	mov    edx,DWORD PTR [ecx+0x24]
   13b17:	b8 02 00 00 00       	mov    eax,0x2
   13b1c:	81 fa 01 01 3c c3    	cmp    edx,0xc33c0101
   13b22:	74 0f                	je     13b33 <check_type+0x43>
   13b24:	77 1a                	ja     13b40 <check_type+0x50>
   13b26:	81 fa 01 01 69 96    	cmp    edx,0x96690101
   13b2c:	b8 03 00 00 00       	mov    eax,0x3
   13b31:	75 1d                	jne    13b50 <check_type+0x60>
   13b33:	f3 c3                	repz ret 
   13b35:	8d 76 00             	lea    esi,[esi+0x0]
   13b38:	31 c0                	xor    eax,eax
   13b3a:	c3                   	ret    
   13b3b:	90                   	nop
   13b3c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   13b40:	81 fa 00 00 14 eb    	cmp    edx,0xeb140000
   13b46:	74 18                	je     13b60 <check_type+0x70>
   13b48:	81 fa 01 01 14 eb    	cmp    edx,0xeb140101
   13b4e:	74 10                	je     13b60 <check_type+0x70>
   13b50:	b8 01 00 00 00       	mov    eax,0x1
   13b55:	c3                   	ret    
   13b56:	8d 76 00             	lea    esi,[esi+0x0]
   13b59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   13b60:	b8 04 00 00 00       	mov    eax,0x4
   13b65:	c3                   	ret    
   13b66:	8d 76 00             	lea    esi,[esi+0x0]
   13b69:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00013b70 <ahciSpinupDrive>:
ahciSpinupDrive():
   13b70:	56                   	push   esi
   13b71:	53                   	push   ebx
   13b72:	83 ec 10             	sub    esp,0x10
   13b75:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
   13b79:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   13b7c:	24 0f                	and    al,0xf
   13b7e:	83 c8 10             	or     eax,0x10
   13b81:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   13b84:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   13b87:	83 e0 fe             	and    eax,0xfffffffe
   13b8a:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   13b8d:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   13b90:	83 e0 f0             	and    eax,0xfffffff0
   13b93:	83 c8 01             	or     eax,0x1
   13b96:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   13b99:	6a 64                	push   0x64
   13b9b:	e8 f0 f8 00 00       	call   23490 <wait>
   13ba0:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   13ba3:	83 c4 10             	add    esp,0x10
   13ba6:	83 e0 f0             	and    eax,0xfffffff0
   13ba9:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   13bac:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13baf:	83 e0 0f             	and    eax,0xf
   13bb2:	83 f8 03             	cmp    eax,0x3
   13bb5:	74 4b                	je     13c02 <ahciSpinupDrive+0x92>
   13bb7:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13bba:	83 e0 0f             	and    eax,0xf
   13bbd:	83 f8 01             	cmp    eax,0x1
   13bc0:	74 40                	je     13c02 <ahciSpinupDrive+0x92>
   13bc2:	bb e8 03 00 00       	mov    ebx,0x3e8
   13bc7:	eb 1a                	jmp    13be3 <ahciSpinupDrive+0x73>
   13bc9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   13bd0:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13bd3:	83 e0 0f             	and    eax,0xf
   13bd6:	83 f8 01             	cmp    eax,0x1
   13bd9:	74 23                	je     13bfe <ahciSpinupDrive+0x8e>
   13bdb:	85 db                	test   ebx,ebx
   13bdd:	0f 84 9b 00 00 00    	je     13c7e <ahciSpinupDrive+0x10e>
   13be3:	83 ec 0c             	sub    esp,0xc
   13be6:	83 eb 0a             	sub    ebx,0xa
   13be9:	6a 0a                	push   0xa
   13beb:	e8 a0 f8 00 00       	call   23490 <wait>
   13bf0:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13bf3:	83 c4 10             	add    esp,0x10
   13bf6:	83 e0 0f             	and    eax,0xf
   13bf9:	83 f8 03             	cmp    eax,0x3
   13bfc:	75 d2                	jne    13bd0 <ahciSpinupDrive+0x60>
   13bfe:	85 db                	test   ebx,ebx
   13c00:	74 7c                	je     13c7e <ahciSpinupDrive+0x10e>
   13c02:	8b 1d 94 99 12 00    	mov    ebx,DWORD PTR ds:0x129994
   13c08:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
   13c0c:	ba 01 00 00 00       	mov    edx,0x1
   13c11:	83 ec 04             	sub    esp,0x4
   13c14:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   13c17:	d3 e2                	shl    edx,cl
   13c19:	09 d0                	or     eax,edx
   13c1b:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
   13c1e:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
   13c21:	bb e8 03 00 00       	mov    ebx,0x3e8
   13c26:	50                   	push   eax
   13c27:	68 34 04 04 00       	push   0x40434
   13c2c:	68 00 20 00 00       	push   0x2000
   13c31:	e8 4a ea 00 00       	call   22680 <printd>
   13c36:	83 c4 10             	add    esp,0x10
   13c39:	eb 1d                	jmp    13c58 <ahciSpinupDrive+0xe8>
   13c3b:	90                   	nop
   13c3c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   13c40:	85 db                	test   ebx,ebx
   13c42:	0f 84 87 00 00 00    	je     13ccf <ahciSpinupDrive+0x15f>
   13c48:	83 ec 0c             	sub    esp,0xc
   13c4b:	83 eb 0a             	sub    ebx,0xa
   13c4e:	6a 0a                	push   0xa
   13c50:	e8 3b f8 00 00       	call   23490 <wait>
   13c55:	83 c4 10             	add    esp,0x10
   13c58:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   13c5b:	a8 80                	test   al,0x80
   13c5d:	75 e1                	jne    13c40 <ahciSpinupDrive+0xd0>
   13c5f:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   13c62:	a8 01                	test   al,0x1
   13c64:	75 da                	jne    13c40 <ahciSpinupDrive+0xd0>
   13c66:	85 db                	test   ebx,ebx
   13c68:	74 65                	je     13ccf <ahciSpinupDrive+0x15f>
   13c6a:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   13c6d:	83 c8 01             	or     eax,0x1
   13c70:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   13c73:	83 c4 04             	add    esp,0x4
   13c76:	b8 01 00 00 00       	mov    eax,0x1
   13c7b:	5b                   	pop    ebx
   13c7c:	5e                   	pop    esi
   13c7d:	c3                   	ret    
   13c7e:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13c81:	83 ec 04             	sub    esp,0x4
   13c84:	50                   	push   eax
   13c85:	68 ac ca 06 00       	push   0x6caac
   13c8a:	68 00 20 00 00       	push   0x2000
   13c8f:	e8 ec e9 00 00       	call   22680 <printd>
   13c94:	8b 56 10             	mov    edx,DWORD PTR [esi+0x10]
   13c97:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13c9a:	59                   	pop    ecx
   13c9b:	5b                   	pop    ebx
   13c9c:	52                   	push   edx
   13c9d:	8b 56 30             	mov    edx,DWORD PTR [esi+0x30]
   13ca0:	52                   	push   edx
   13ca1:	50                   	push   eax
   13ca2:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   13ca5:	50                   	push   eax
   13ca6:	68 e8 ca 06 00       	push   0x6cae8
   13cab:	68 00 20 00 00       	push   0x2000
   13cb0:	e8 cb e9 00 00       	call   22680 <printd>
   13cb5:	83 c4 18             	add    esp,0x18
   13cb8:	68 17 04 04 00       	push   0x40417
   13cbd:	68 00 20 00 00       	push   0x2000
   13cc2:	e8 b9 e9 00 00       	call   22680 <printd>
   13cc7:	83 c4 10             	add    esp,0x10
   13cca:	e9 33 ff ff ff       	jmp    13c02 <ahciSpinupDrive+0x92>
   13ccf:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13cd2:	83 ec 04             	sub    esp,0x4
   13cd5:	50                   	push   eax
   13cd6:	68 1c cb 06 00       	push   0x6cb1c
   13cdb:	68 00 20 00 00       	push   0x2000
   13ce0:	e8 9b e9 00 00       	call   22680 <printd>
   13ce5:	8b 56 10             	mov    edx,DWORD PTR [esi+0x10]
   13ce8:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   13ceb:	59                   	pop    ecx
   13cec:	5b                   	pop    ebx
   13ced:	52                   	push   edx
   13cee:	8b 56 30             	mov    edx,DWORD PTR [esi+0x30]
   13cf1:	52                   	push   edx
   13cf2:	50                   	push   eax
   13cf3:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   13cf6:	50                   	push   eax
   13cf7:	68 e8 ca 06 00       	push   0x6cae8
   13cfc:	68 00 20 00 00       	push   0x2000
   13d01:	e8 7a e9 00 00       	call   22680 <printd>
   13d06:	83 c4 18             	add    esp,0x18
   13d09:	68 17 04 04 00       	push   0x40417
   13d0e:	68 00 20 00 00       	push   0x2000
   13d13:	e8 68 e9 00 00       	call   22680 <printd>
   13d18:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   13d1b:	83 c4 10             	add    esp,0x10
   13d1e:	83 c8 01             	or     eax,0x1
   13d21:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   13d24:	83 c4 04             	add    esp,0x4
   13d27:	31 c0                	xor    eax,eax
   13d29:	5b                   	pop    ebx
   13d2a:	5e                   	pop    esi
   13d2b:	c3                   	ret    
   13d2c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00013d30 <printAHCICaps>:
printAHCICaps():
   13d30:	55                   	push   ebp
   13d31:	57                   	push   edi
   13d32:	56                   	push   esi
   13d33:	53                   	push   ebx
   13d34:	be 47 04 04 00       	mov    esi,0x40447
   13d39:	bb 43 04 04 00       	mov    ebx,0x40443
   13d3e:	81 ec 0c 02 00 00    	sub    esp,0x20c
   13d44:	e8 87 2c 00 00       	call   169d0 <terminal_clear>
   13d49:	83 ec 0c             	sub    esp,0xc
   13d4c:	68 81 04 04 00       	push   0x40481
   13d51:	e8 0a e9 00 00       	call   22660 <printk>
   13d56:	58                   	pop    eax
   13d57:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13d5c:	5a                   	pop    edx
   13d5d:	80 78 03 00          	cmp    BYTE PTR [eax+0x3],0x0
   13d61:	89 f0                	mov    eax,esi
   13d63:	0f 48 c3             	cmovs  eax,ebx
   13d66:	50                   	push   eax
   13d67:	68 64 cb 06 00       	push   0x6cb64
   13d6c:	e8 ef e8 00 00       	call   22660 <printk>
   13d71:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13d76:	59                   	pop    ecx
   13d77:	5f                   	pop    edi
   13d78:	f6 40 03 40          	test   BYTE PTR [eax+0x3],0x40
   13d7c:	89 f0                	mov    eax,esi
   13d7e:	0f 45 c3             	cmovne eax,ebx
   13d81:	50                   	push   eax
   13d82:	68 90 cb 06 00       	push   0x6cb90
   13d87:	e8 d4 e8 00 00       	call   22660 <printk>
   13d8c:	5d                   	pop    ebp
   13d8d:	58                   	pop    eax
   13d8e:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13d93:	f6 40 03 20          	test   BYTE PTR [eax+0x3],0x20
   13d97:	89 f0                	mov    eax,esi
   13d99:	0f 45 c3             	cmovne eax,ebx
   13d9c:	50                   	push   eax
   13d9d:	68 c0 cb 06 00       	push   0x6cbc0
   13da2:	e8 b9 e8 00 00       	call   22660 <printk>
   13da7:	58                   	pop    eax
   13da8:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13dad:	5a                   	pop    edx
   13dae:	f6 40 03 10          	test   BYTE PTR [eax+0x3],0x10
   13db2:	89 f0                	mov    eax,esi
   13db4:	0f 45 c3             	cmovne eax,ebx
   13db7:	50                   	push   eax
   13db8:	68 f0 cb 06 00       	push   0x6cbf0
   13dbd:	e8 9e e8 00 00       	call   22660 <printk>
   13dc2:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13dc7:	59                   	pop    ecx
   13dc8:	5f                   	pop    edi
   13dc9:	f6 40 03 08          	test   BYTE PTR [eax+0x3],0x8
   13dcd:	89 f0                	mov    eax,esi
   13dcf:	0f 45 c3             	cmovne eax,ebx
   13dd2:	50                   	push   eax
   13dd3:	68 24 cc 06 00       	push   0x6cc24
   13dd8:	e8 83 e8 00 00       	call   22660 <printk>
   13ddd:	5d                   	pop    ebp
   13dde:	58                   	pop    eax
   13ddf:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13de4:	f6 40 03 04          	test   BYTE PTR [eax+0x3],0x4
   13de8:	89 f0                	mov    eax,esi
   13dea:	0f 45 c3             	cmovne eax,ebx
   13ded:	50                   	push   eax
   13dee:	68 50 cc 06 00       	push   0x6cc50
   13df3:	e8 68 e8 00 00       	call   22660 <printk>
   13df8:	58                   	pop    eax
   13df9:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13dfe:	5a                   	pop    edx
   13dff:	f6 40 03 02          	test   BYTE PTR [eax+0x3],0x2
   13e03:	89 f0                	mov    eax,esi
   13e05:	0f 45 c3             	cmovne eax,ebx
   13e08:	50                   	push   eax
   13e09:	68 88 cc 06 00       	push   0x6cc88
   13e0e:	e8 4d e8 00 00       	call   22660 <printk>
   13e13:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13e18:	59                   	pop    ecx
   13e19:	5f                   	pop    edi
   13e1a:	f6 40 03 01          	test   BYTE PTR [eax+0x3],0x1
   13e1e:	0f 44 de             	cmove  ebx,esi
   13e21:	53                   	push   ebx
   13e22:	68 ac cc 06 00       	push   0x6ccac
   13e27:	e8 34 e8 00 00       	call   22660 <printk>
   13e2c:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13e31:	83 c4 10             	add    esp,0x10
   13e34:	ba 51 04 04 00       	mov    edx,0x40451
   13e39:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
   13e3d:	83 e0 f0             	and    eax,0xfffffff0
   13e40:	3c 10                	cmp    al,0x10
   13e42:	74 18                	je     13e5c <printAHCICaps+0x12c>
   13e44:	3c 20                	cmp    al,0x20
   13e46:	ba 4a 04 04 00       	mov    edx,0x4044a
   13e4b:	74 0f                	je     13e5c <printAHCICaps+0x12c>
   13e4d:	3c 30                	cmp    al,0x30
   13e4f:	ba 5a 04 04 00       	mov    edx,0x4045a
   13e54:	b8 63 04 04 00       	mov    eax,0x40463
   13e59:	0f 44 d0             	cmove  edx,eax
   13e5c:	83 ec 08             	sub    esp,0x8
   13e5f:	be 47 04 04 00       	mov    esi,0x40447
   13e64:	52                   	push   edx
   13e65:	68 dc cc 06 00       	push   0x6ccdc
   13e6a:	e8 f1 e7 00 00       	call   22660 <printk>
   13e6f:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13e74:	59                   	pop    ecx
   13e75:	5b                   	pop    ebx
   13e76:	f6 40 02 04          	test   BYTE PTR [eax+0x2],0x4
   13e7a:	bb 43 04 04 00       	mov    ebx,0x40443
   13e7f:	89 f0                	mov    eax,esi
   13e81:	0f 45 c3             	cmovne eax,ebx
   13e84:	50                   	push   eax
   13e85:	68 04 cd 06 00       	push   0x6cd04
   13e8a:	e8 d1 e7 00 00       	call   22660 <printk>
   13e8f:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13e94:	5f                   	pop    edi
   13e95:	5d                   	pop    ebp
   13e96:	f6 40 02 02          	test   BYTE PTR [eax+0x2],0x2
   13e9a:	89 f0                	mov    eax,esi
   13e9c:	0f 45 c3             	cmovne eax,ebx
   13e9f:	50                   	push   eax
   13ea0:	68 2c cd 06 00       	push   0x6cd2c
   13ea5:	e8 b6 e7 00 00       	call   22660 <printk>
   13eaa:	58                   	pop    eax
   13eab:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13eb0:	5a                   	pop    edx
   13eb1:	f6 40 02 01          	test   BYTE PTR [eax+0x2],0x1
   13eb5:	89 f0                	mov    eax,esi
   13eb7:	0f 45 c3             	cmovne eax,ebx
   13eba:	50                   	push   eax
   13ebb:	68 54 cd 06 00       	push   0x6cd54
   13ec0:	e8 9b e7 00 00       	call   22660 <printk>
   13ec5:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13eca:	59                   	pop    ecx
   13ecb:	5f                   	pop    edi
   13ecc:	80 78 01 00          	cmp    BYTE PTR [eax+0x1],0x0
   13ed0:	89 f0                	mov    eax,esi
   13ed2:	0f 48 c3             	cmovs  eax,ebx
   13ed5:	50                   	push   eax
   13ed6:	68 80 cd 06 00       	push   0x6cd80
   13edb:	e8 80 e7 00 00       	call   22660 <printk>
   13ee0:	5d                   	pop    ebp
   13ee1:	58                   	pop    eax
   13ee2:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13ee7:	f6 40 01 40          	test   BYTE PTR [eax+0x1],0x40
   13eeb:	89 f0                	mov    eax,esi
   13eed:	0f 45 c3             	cmovne eax,ebx
   13ef0:	50                   	push   eax
   13ef1:	68 a8 cd 06 00       	push   0x6cda8
   13ef6:	e8 65 e7 00 00       	call   22660 <printk>
   13efb:	58                   	pop    eax
   13efc:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f01:	5a                   	pop    edx
   13f02:	f6 40 01 20          	test   BYTE PTR [eax+0x1],0x20
   13f06:	89 f0                	mov    eax,esi
   13f08:	0f 45 c3             	cmovne eax,ebx
   13f0b:	50                   	push   eax
   13f0c:	68 d0 cd 06 00       	push   0x6cdd0
   13f11:	e8 4a e7 00 00       	call   22660 <printk>
   13f16:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f1b:	59                   	pop    ecx
   13f1c:	5f                   	pop    edi
   13f1d:	0f b6 40 01          	movzx  eax,BYTE PTR [eax+0x1]
   13f21:	83 e0 1f             	and    eax,0x1f
   13f24:	50                   	push   eax
   13f25:	68 f8 cd 06 00       	push   0x6cdf8
   13f2a:	e8 31 e7 00 00       	call   22660 <printk>
   13f2f:	5d                   	pop    ebp
   13f30:	58                   	pop    eax
   13f31:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f36:	80 38 00             	cmp    BYTE PTR [eax],0x0
   13f39:	89 f0                	mov    eax,esi
   13f3b:	0f 48 c3             	cmovs  eax,ebx
   13f3e:	50                   	push   eax
   13f3f:	68 20 ce 06 00       	push   0x6ce20
   13f44:	e8 17 e7 00 00       	call   22660 <printk>
   13f49:	58                   	pop    eax
   13f4a:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f4f:	5a                   	pop    edx
   13f50:	f6 00 40             	test   BYTE PTR [eax],0x40
   13f53:	89 f0                	mov    eax,esi
   13f55:	0f 45 c3             	cmovne eax,ebx
   13f58:	50                   	push   eax
   13f59:	68 58 ce 06 00       	push   0x6ce58
   13f5e:	e8 fd e6 00 00       	call   22660 <printk>
   13f63:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f68:	59                   	pop    ecx
   13f69:	5f                   	pop    edi
   13f6a:	f6 00 20             	test   BYTE PTR [eax],0x20
   13f6d:	0f 44 de             	cmove  ebx,esi
   13f70:	be 04 00 00 00       	mov    esi,0x4
   13f75:	53                   	push   ebx
   13f76:	68 88 ce 06 00       	push   0x6ce88
   13f7b:	bb cc 09 00 00       	mov    ebx,0x9cc
   13f80:	e8 db e6 00 00       	call   22660 <printk>
   13f85:	5d                   	pop    ebp
   13f86:	58                   	pop    eax
   13f87:	a1 24 99 12 00       	mov    eax,ds:0x129924
   13f8c:	0f b6 00             	movzx  eax,BYTE PTR [eax]
   13f8f:	83 e0 1f             	and    eax,0x1f
   13f92:	50                   	push   eax
   13f93:	68 b0 ce 06 00       	push   0x6ceb0
   13f98:	e8 c3 e6 00 00       	call   22660 <printk>
   13f9d:	c7 04 24 8d 04 04 00 	mov    DWORD PTR [esp],0x4048d
   13fa4:	e8 b7 e6 00 00       	call   22660 <printk>
   13fa9:	83 c4 10             	add    esp,0x10
   13fac:	eb 14                	jmp    13fc2 <printAHCICaps+0x292>
   13fae:	66 90                	xchg   ax,ax
   13fb0:	83 c6 01             	add    esi,0x1
   13fb3:	81 c3 73 02 00 00    	add    ebx,0x273
   13fb9:	83 fe 0a             	cmp    esi,0xa
   13fbc:	0f 84 14 01 00 00    	je     140d6 <printAHCICaps+0x3a6>
   13fc2:	a1 00 98 12 00       	mov    eax,ds:0x129800
   13fc7:	80 bc 18 51 02 00 00 	cmp    BYTE PTR [eax+ebx*1+0x251],0x0
   13fce:	00 
   13fcf:	74 df                	je     13fb0 <printAHCICaps+0x280>
   13fd1:	83 ec 04             	sub    esp,0x4
   13fd4:	bd 70 04 04 00       	mov    ebp,0x40470
   13fd9:	bf 75 04 04 00       	mov    edi,0x40475
   13fde:	68 00 02 00 00       	push   0x200
   13fe3:	6a 00                	push   0x0
   13fe5:	8d 44 24 0c          	lea    eax,[esp+0xc]
   13fe9:	50                   	push   eax
   13fea:	e8 91 cd 00 00       	call   20d80 <memset>
   13fef:	58                   	pop    eax
   13ff0:	a1 00 98 12 00       	mov    eax,ds:0x129800
   13ff5:	5a                   	pop    edx
   13ff6:	01 d8                	add    eax,ebx
   13ff8:	05 00 02 00 00       	add    eax,0x200
   13ffd:	50                   	push   eax
   13ffe:	8d 44 24 0c          	lea    eax,[esp+0xc]
   14002:	50                   	push   eax
   14003:	e8 98 e7 00 00       	call   227a0 <strcpy>
   14008:	a1 00 98 12 00       	mov    eax,ds:0x129800
   1400d:	83 c4 10             	add    esp,0x10
   14010:	80 bc 18 51 02 00 00 	cmp    BYTE PTR [eax+ebx*1+0x251],0x1
   14017:	01 
   14018:	b8 6a 04 04 00       	mov    eax,0x4046a
   1401d:	0f 44 c4             	cmove  eax,esp
   14020:	83 ec 04             	sub    esp,0x4
   14023:	50                   	push   eax
   14024:	56                   	push   esi
   14025:	68 a0 04 04 00       	push   0x404a0
   1402a:	e8 31 e6 00 00       	call   22660 <printk>
   1402f:	a1 00 98 12 00       	mov    eax,ds:0x129800
   14034:	83 c4 10             	add    esp,0x10
   14037:	b9 df 00 04 00       	mov    ecx,0x400df
   1403c:	ba 7c 04 04 00       	mov    edx,0x4047c
   14041:	01 d8                	add    eax,ebx
   14043:	80 b8 60 02 00 00 00 	cmp    BYTE PTR [eax+0x260],0x0
   1404a:	0f 44 e9             	cmove  ebp,ecx
   1404d:	80 b8 5f 02 00 00 00 	cmp    BYTE PTR [eax+0x25f],0x0
   14054:	0f 44 f9             	cmove  edi,ecx
   14057:	80 b8 5e 02 00 00 00 	cmp    BYTE PTR [eax+0x25e],0x0
   1405e:	0f 45 ca             	cmovne ecx,edx
   14061:	8b 90 5a 02 00 00    	mov    edx,DWORD PTR [eax+0x25a]
   14067:	ff b0 69 02 00 00    	push   DWORD PTR [eax+0x269]
   1406d:	ff b0 6f 02 00 00    	push   DWORD PTR [eax+0x26f]
   14073:	55                   	push   ebp
   14074:	83 c6 01             	add    esi,0x1
   14077:	57                   	push   edi
   14078:	51                   	push   ecx
   14079:	52                   	push   edx
   1407a:	0f af 90 56 02 00 00 	imul   edx,DWORD PTR [eax+0x256]
   14081:	c1 ea 14             	shr    edx,0x14
   14084:	52                   	push   edx
   14085:	68 d0 ce 06 00       	push   0x6ced0
   1408a:	e8 d1 e5 00 00       	call   22660 <printk>
   1408f:	a1 00 98 12 00       	mov    eax,ds:0x129800
   14094:	83 c4 1c             	add    esp,0x1c
   14097:	8b bc 18 69 02 00 00 	mov    edi,DWORD PTR [eax+ebx*1+0x269]
   1409e:	81 c3 73 02 00 00    	add    ebx,0x273
   140a4:	8b 2f                	mov    ebp,DWORD PTR [edi]
   140a6:	8b 57 08             	mov    edx,DWORD PTR [edi+0x8]
   140a9:	8b 07                	mov    eax,DWORD PTR [edi]
   140ab:	52                   	push   edx
   140ac:	50                   	push   eax
   140ad:	68 b5 04 04 00       	push   0x404b5
   140b2:	e8 a9 e5 00 00       	call   22660 <printk>
   140b7:	8b 07                	mov    eax,DWORD PTR [edi]
   140b9:	83 c4 0c             	add    esp,0xc
   140bc:	ff 75 08             	push   DWORD PTR [ebp+0x8]
   140bf:	50                   	push   eax
   140c0:	68 04 cf 06 00       	push   0x6cf04
   140c5:	e8 96 e5 00 00       	call   22660 <printk>
   140ca:	83 c4 10             	add    esp,0x10
   140cd:	83 fe 0a             	cmp    esi,0xa
   140d0:	0f 85 ec fe ff ff    	jne    13fc2 <printAHCICaps+0x292>
   140d6:	81 c4 0c 02 00 00    	add    esp,0x20c
   140dc:	5b                   	pop    ebx
   140dd:	5e                   	pop    esi
   140de:	5f                   	pop    edi
   140df:	5d                   	pop    ebp
   140e0:	c3                   	ret    
   140e1:	eb 0d                	jmp    140f0 <port_rebase>
   140e3:	90                   	nop
   140e4:	90                   	nop
   140e5:	90                   	nop
   140e6:	90                   	nop
   140e7:	90                   	nop
   140e8:	90                   	nop
   140e9:	90                   	nop
   140ea:	90                   	nop
   140eb:	90                   	nop
   140ec:	90                   	nop
   140ed:	90                   	nop
   140ee:	90                   	nop
   140ef:	90                   	nop

000140f0 <port_rebase>:
port_rebase():
   140f0:	55                   	push   ebp
   140f1:	57                   	push   edi
   140f2:	56                   	push   esi
   140f3:	53                   	push   ebx
   140f4:	83 ec 14             	sub    esp,0x14
   140f7:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
   140fb:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
   140ff:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   14103:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
   14106:	8b 06                	mov    eax,DWORD PTR [esi]
   14108:	52                   	push   edx
   14109:	50                   	push   eax
   1410a:	56                   	push   esi
   1410b:	57                   	push   edi
   1410c:	68 2c cf 06 00       	push   0x6cf2c
   14111:	68 00 20 00 00       	push   0x2000
   14116:	e8 65 e5 00 00       	call   22680 <printd>
   1411b:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   1411e:	83 c4 20             	add    esp,0x20
   14121:	83 e0 fe             	and    eax,0xfffffffe
   14124:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14127:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   1412a:	f6 c4 40             	test   ah,0x40
   1412d:	75 1e                	jne    1414d <port_rebase+0x5d>
   1412f:	eb 24                	jmp    14155 <port_rebase+0x65>
   14131:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14138:	83 ec 0c             	sub    esp,0xc
   1413b:	6a 14                	push   0x14
   1413d:	e8 2e f3 00 00       	call   23470 <waitTicks>
   14142:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14145:	83 c4 10             	add    esp,0x10
   14148:	f6 c4 40             	test   ah,0x40
   1414b:	74 08                	je     14155 <port_rebase+0x65>
   1414d:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14150:	f6 c4 80             	test   ah,0x80
   14153:	75 e3                	jne    14138 <port_rebase+0x48>
   14155:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14158:	83 ec 04             	sub    esp,0x4
   1415b:	83 e0 ef             	and    eax,0xffffffef
   1415e:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14161:	89 f8                	mov    eax,edi
   14163:	c7 46 04 00 00 00 00 	mov    DWORD PTR [esi+0x4],0x0
   1416a:	c1 e0 0f             	shl    eax,0xf
   1416d:	c1 e7 0d             	shl    edi,0xd
   14170:	8d 84 05 00 10 00 00 	lea    eax,[ebp+eax*1+0x1000]
   14177:	8d bc 3d 00 a0 00 00 	lea    edi,[ebp+edi*1+0xa000]
   1417e:	31 ed                	xor    ebp,ebp
   14180:	25 00 f0 ff ff       	and    eax,0xfffff000
   14185:	89 06                	mov    DWORD PTR [esi],eax
   14187:	8b 06                	mov    eax,DWORD PTR [esi]
   14189:	68 00 04 00 00       	push   0x400
   1418e:	6a 00                	push   0x0
   14190:	50                   	push   eax
   14191:	e8 ea cb 00 00       	call   20d80 <memset>
   14196:	8b 16                	mov    edx,DWORD PTR [esi]
   14198:	8b 06                	mov    eax,DWORD PTR [esi]
   1419a:	83 c4 0c             	add    esp,0xc
   1419d:	6a 73                	push   0x73
   1419f:	52                   	push   edx
   141a0:	50                   	push   eax
   141a1:	e8 da db ff ff       	call   11d80 <kMapPage>
   141a6:	c7 46 0c 00 00 00 00 	mov    DWORD PTR [esi+0xc],0x0
   141ad:	8b 06                	mov    eax,DWORD PTR [esi]
   141af:	83 c4 0c             	add    esp,0xc
   141b2:	05 00 10 00 00       	add    eax,0x1000
   141b7:	89 46 08             	mov    DWORD PTR [esi+0x8],eax
   141ba:	8b 46 08             	mov    eax,DWORD PTR [esi+0x8]
   141bd:	68 00 01 00 00       	push   0x100
   141c2:	6a 00                	push   0x0
   141c4:	50                   	push   eax
   141c5:	e8 b6 cb 00 00       	call   20d80 <memset>
   141ca:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
   141cd:	8b 46 08             	mov    eax,DWORD PTR [esi+0x8]
   141d0:	83 c4 0c             	add    esp,0xc
   141d3:	6a 73                	push   0x73
   141d5:	52                   	push   edx
   141d6:	50                   	push   eax
   141d7:	e8 a4 db ff ff       	call   11d80 <kMapPage>
   141dc:	8b 1e                	mov    ebx,DWORD PTR [esi]
   141de:	83 c4 10             	add    esp,0x10
   141e1:	83 c3 02             	add    ebx,0x2
   141e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   141e8:	b8 08 00 00 00       	mov    eax,0x8
   141ed:	83 ec 04             	sub    esp,0x4
   141f0:	c7 43 0a 00 00 00 00 	mov    DWORD PTR [ebx+0xa],0x0
   141f7:	66 89 03             	mov    WORD PTR [ebx],ax
   141fa:	89 e8                	mov    eax,ebp
   141fc:	83 c5 01             	add    ebp,0x1
   141ff:	c1 e0 08             	shl    eax,0x8
   14202:	83 c3 20             	add    ebx,0x20
   14205:	01 f8                	add    eax,edi
   14207:	89 43 e6             	mov    DWORD PTR [ebx-0x1a],eax
   1420a:	68 00 01 00 00       	push   0x100
   1420f:	6a 00                	push   0x0
   14211:	50                   	push   eax
   14212:	e8 69 cb 00 00       	call   20d80 <memset>
   14217:	83 c4 10             	add    esp,0x10
   1421a:	83 fd 20             	cmp    ebp,0x20
   1421d:	75 c9                	jne    141e8 <port_rebase+0xf8>
   1421f:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
   14222:	8b 06                	mov    eax,DWORD PTR [esi]
   14224:	52                   	push   edx
   14225:	50                   	push   eax
   14226:	68 ce 04 04 00       	push   0x404ce
   1422b:	68 00 20 00 00       	push   0x2000
   14230:	e8 4b e4 00 00       	call   22680 <printd>
   14235:	83 c4 10             	add    esp,0x10
   14238:	90                   	nop
   14239:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14240:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14243:	f6 c4 80             	test   ah,0x80
   14246:	75 f8                	jne    14240 <port_rebase+0x150>
   14248:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   1424b:	83 c8 10             	or     eax,0x10
   1424e:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14251:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14254:	83 c8 01             	or     eax,0x1
   14257:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   1425a:	83 c4 0c             	add    esp,0xc
   1425d:	5b                   	pop    ebx
   1425e:	5e                   	pop    esi
   1425f:	5f                   	pop    edi
   14260:	5d                   	pop    ebp
   14261:	c3                   	ret    
   14262:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14269:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00014270 <start_cmd>:
start_cmd():
   14270:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   14274:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14278:	8b 42 18             	mov    eax,DWORD PTR [edx+0x18]
   1427b:	f6 c4 80             	test   ah,0x80
   1427e:	75 f8                	jne    14278 <start_cmd+0x8>
   14280:	8b 42 18             	mov    eax,DWORD PTR [edx+0x18]
   14283:	83 c8 10             	or     eax,0x10
   14286:	89 42 18             	mov    DWORD PTR [edx+0x18],eax
   14289:	8b 42 18             	mov    eax,DWORD PTR [edx+0x18]
   1428c:	83 c8 01             	or     eax,0x1
   1428f:	89 42 18             	mov    DWORD PTR [edx+0x18],eax
   14292:	c3                   	ret    
   14293:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   14299:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000142a0 <waitForPortIdle>:
waitForPortIdle():
   142a0:	53                   	push   ebx
   142a1:	83 ec 08             	sub    esp,0x8
   142a4:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   142a8:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
   142ab:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   142ae:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
   142b1:	c1 e8 0f             	shr    eax,0xf
   142b4:	09 d0                	or     eax,edx
   142b6:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
   142b9:	c1 e9 04             	shr    ecx,0x4
   142bc:	09 c8                	or     eax,ecx
   142be:	c1 ea 0e             	shr    edx,0xe
   142c1:	09 d0                	or     eax,edx
   142c3:	a8 01                	test   al,0x1
   142c5:	74 35                	je     142fc <waitForPortIdle+0x5c>
   142c7:	89 f6                	mov    esi,esi
   142c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   142d0:	83 ec 0c             	sub    esp,0xc
   142d3:	6a 14                	push   0x14
   142d5:	e8 96 f1 00 00       	call   23470 <waitTicks>
   142da:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
   142dd:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   142e0:	83 c4 10             	add    esp,0x10
   142e3:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
   142e6:	c1 e8 0f             	shr    eax,0xf
   142e9:	09 d0                	or     eax,edx
   142eb:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
   142ee:	c1 e9 04             	shr    ecx,0x4
   142f1:	09 c8                	or     eax,ecx
   142f3:	c1 ea 0e             	shr    edx,0xe
   142f6:	09 d0                	or     eax,edx
   142f8:	a8 01                	test   al,0x1
   142fa:	75 d4                	jne    142d0 <waitForPortIdle+0x30>
   142fc:	83 c4 08             	add    esp,0x8
   142ff:	5b                   	pop    ebx
   14300:	c3                   	ret    
   14301:	eb 0d                	jmp    14310 <stop_cmd>
   14303:	90                   	nop
   14304:	90                   	nop
   14305:	90                   	nop
   14306:	90                   	nop
   14307:	90                   	nop
   14308:	90                   	nop
   14309:	90                   	nop
   1430a:	90                   	nop
   1430b:	90                   	nop
   1430c:	90                   	nop
   1430d:	90                   	nop
   1430e:	90                   	nop
   1430f:	90                   	nop

00014310 <stop_cmd>:
stop_cmd():
   14310:	53                   	push   ebx
   14311:	83 ec 08             	sub    esp,0x8
   14314:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   14318:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1431b:	83 e0 fe             	and    eax,0xfffffffe
   1431e:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   14321:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   14324:	f6 c4 40             	test   ah,0x40
   14327:	75 1c                	jne    14345 <stop_cmd+0x35>
   14329:	eb 22                	jmp    1434d <stop_cmd+0x3d>
   1432b:	90                   	nop
   1432c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14330:	83 ec 0c             	sub    esp,0xc
   14333:	6a 14                	push   0x14
   14335:	e8 36 f1 00 00       	call   23470 <waitTicks>
   1433a:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1433d:	83 c4 10             	add    esp,0x10
   14340:	f6 c4 40             	test   ah,0x40
   14343:	74 08                	je     1434d <stop_cmd+0x3d>
   14345:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   14348:	f6 c4 80             	test   ah,0x80
   1434b:	75 e3                	jne    14330 <stop_cmd+0x20>
   1434d:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   14350:	83 e0 ef             	and    eax,0xffffffef
   14353:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   14356:	83 c4 08             	add    esp,0x8
   14359:	5b                   	pop    ebx
   1435a:	c3                   	ret    
   1435b:	90                   	nop
   1435c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00014360 <find_cmdslot>:
find_cmdslot():
   14360:	57                   	push   edi
   14361:	56                   	push   esi
   14362:	53                   	push   ebx
   14363:	83 ec 08             	sub    esp,0x8
   14366:	68 68 cf 06 00       	push   0x6cf68
   1436b:	68 00 20 00 00       	push   0x2000
   14370:	e8 0b e3 00 00       	call   22680 <printd>
   14375:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
   14379:	8b 15 94 99 12 00    	mov    edx,DWORD PTR ds:0x129994
   1437f:	8b 70 38             	mov    esi,DWORD PTR [eax+0x38]
   14382:	8b 3a                	mov    edi,DWORD PTR [edx]
   14384:	8b 02                	mov    eax,DWORD PTR [edx]
   14386:	c1 ef 08             	shr    edi,0x8
   14389:	c1 e8 08             	shr    eax,0x8
   1438c:	83 e7 1f             	and    edi,0x1f
   1438f:	83 e0 1f             	and    eax,0x1f
   14392:	50                   	push   eax
   14393:	52                   	push   edx
   14394:	68 ac cf 06 00       	push   0x6cfac
   14399:	68 00 20 00 00       	push   0x2000
   1439e:	e8 dd e2 00 00       	call   22680 <printd>
   143a3:	83 c4 20             	add    esp,0x20
   143a6:	85 ff                	test   edi,edi
   143a8:	74 3b                	je     143e5 <find_cmdslot+0x85>
   143aa:	31 db                	xor    ebx,ebx
   143ac:	f7 c6 01 00 00 00    	test   esi,0x1
   143b2:	75 14                	jne    143c8 <find_cmdslot+0x68>
   143b4:	eb 52                	jmp    14408 <find_cmdslot+0xa8>
   143b6:	8d 76 00             	lea    esi,[esi+0x0]
   143b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   143c0:	f7 c6 01 00 00 00    	test   esi,0x1
   143c6:	74 40                	je     14408 <find_cmdslot+0xa8>
   143c8:	56                   	push   esi
   143c9:	53                   	push   ebx
   143ca:	83 c3 01             	add    ebx,0x1
   143cd:	68 ff 04 04 00       	push   0x404ff
   143d2:	68 00 20 00 00       	push   0x2000
   143d7:	d1 ee                	shr    esi,1
   143d9:	e8 a2 e2 00 00       	call   22680 <printd>
   143de:	83 c4 10             	add    esp,0x10
   143e1:	39 df                	cmp    edi,ebx
   143e3:	75 db                	jne    143c0 <find_cmdslot+0x60>
   143e5:	56                   	push   esi
   143e6:	57                   	push   edi
   143e7:	68 d8 cf 06 00       	push   0x6cfd8
   143ec:	68 00 20 00 00       	push   0x2000
   143f1:	e8 8a e2 00 00       	call   22680 <printd>
   143f6:	83 c4 10             	add    esp,0x10
   143f9:	b8 ff ff ff ff       	mov    eax,0xffffffff
   143fe:	5b                   	pop    ebx
   143ff:	5e                   	pop    esi
   14400:	5f                   	pop    edi
   14401:	c3                   	ret    
   14402:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   14408:	83 ec 04             	sub    esp,0x4
   1440b:	53                   	push   ebx
   1440c:	68 e1 04 04 00       	push   0x404e1
   14411:	68 00 20 00 00       	push   0x2000
   14416:	e8 65 e2 00 00       	call   22680 <printd>
   1441b:	83 c4 10             	add    esp,0x10
   1441e:	89 d8                	mov    eax,ebx
   14420:	5b                   	pop    ebx
   14421:	5e                   	pop    esi
   14422:	5f                   	pop    edi
   14423:	c3                   	ret    
   14424:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1442a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00014430 <ahciEnablePortMultiplier>:
ahciEnablePortMultiplier():
   14430:	55                   	push   ebp
   14431:	57                   	push   edi
   14432:	56                   	push   esi
   14433:	53                   	push   ebx
   14434:	83 ec 10             	sub    esp,0x10
   14437:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
   1443b:	8b 33                	mov    esi,DWORD PTR [ebx]
   1443d:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   14440:	83 e0 fe             	and    eax,0xfffffffe
   14443:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   14446:	53                   	push   ebx
   14447:	68 1c d0 06 00       	push   0x6d01c
   1444c:	68 00 20 00 00       	push   0x2000
   14451:	e8 2a e2 00 00       	call   22680 <printd>
   14456:	89 1c 24             	mov    DWORD PTR [esp],ebx
   14459:	e8 02 ff ff ff       	call   14360 <find_cmdslot>
   1445e:	83 c4 10             	add    esp,0x10
   14461:	83 f8 ff             	cmp    eax,0xffffffff
   14464:	0f 84 84 01 00 00    	je     145ee <ahciEnablePortMultiplier+0x1be>
   1446a:	89 c7                	mov    edi,eax
   1446c:	83 ec 04             	sub    esp,0x4
   1446f:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
   14476:	c1 e7 05             	shl    edi,0x5
   14479:	89 c5                	mov    ebp,eax
   1447b:	01 f7                	add    edi,esi
   1447d:	57                   	push   edi
   1447e:	68 19 05 04 00       	push   0x40519
   14483:	68 00 20 00 00       	push   0x2000
   14488:	e8 f3 e1 00 00       	call   22680 <printd>
   1448d:	0f b6 07             	movzx  eax,BYTE PTR [edi]
   14490:	8b 77 08             	mov    esi,DWORD PTR [edi+0x8]
   14493:	ba 01 00 00 00       	mov    edx,0x1
   14498:	66 89 57 02          	mov    WORD PTR [edi+0x2],dx
   1449c:	83 e0 20             	and    eax,0x20
   1449f:	83 c8 05             	or     eax,0x5
   144a2:	88 07                	mov    BYTE PTR [edi],al
   144a4:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   144a8:	83 c8 05             	or     eax,0x5
   144ab:	88 47 01             	mov    BYTE PTR [edi+0x1],al
   144ae:	56                   	push   esi
   144af:	56                   	push   esi
   144b0:	68 44 d0 06 00       	push   0x6d044
   144b5:	68 00 20 00 00       	push   0x2000
   144ba:	e8 c1 e1 00 00       	call   22680 <printd>
   144bf:	8b 86 8c 00 00 00    	mov    eax,DWORD PTR [esi+0x8c]
   144c5:	83 c4 1c             	add    esp,0x1c
   144c8:	c7 86 80 00 00 00 00 	mov    DWORD PTR [esi+0x80],0xc53000
   144cf:	30 c5 00 
   144d2:	25 00 00 c0 ff       	and    eax,0xffc00000
   144d7:	89 86 8c 00 00 00    	mov    DWORD PTR [esi+0x8c],eax
   144dd:	c1 e8 18             	shr    eax,0x18
   144e0:	83 e0 7f             	and    eax,0x7f
   144e3:	88 86 8f 00 00 00    	mov    BYTE PTR [esi+0x8f],al
   144e9:	6a 14                	push   0x14
   144eb:	6a 00                	push   0x0
   144ed:	56                   	push   esi
   144ee:	e8 8d c8 00 00       	call   20d80 <memset>
   144f3:	0f b6 46 01          	movzx  eax,BYTE PTR [esi+0x1]
   144f7:	80 4e 0f 04          	or     BYTE PTR [esi+0xf],0x4
   144fb:	83 c4 10             	add    esp,0x10
   144fe:	c6 06 27             	mov    BYTE PTR [esi],0x27
   14501:	83 e0 7f             	and    eax,0x7f
   14504:	83 c8 0f             	or     eax,0xf
   14507:	88 46 01             	mov    BYTE PTR [esi+0x1],al
   1450a:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1450d:	83 c8 08             	or     eax,0x8
   14510:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   14513:	90                   	nop
   14514:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14518:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   1451b:	a8 08                	test   al,0x8
   1451d:	75 f9                	jne    14518 <ahciEnablePortMultiplier+0xe8>
   1451f:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
   14522:	83 ec 0c             	sub    esp,0xc
   14525:	83 c8 01             	or     eax,0x1
   14528:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
   1452b:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   1452e:	09 c5                	or     ebp,eax
   14530:	89 6b 38             	mov    DWORD PTR [ebx+0x38],ebp
   14533:	53                   	push   ebx
   14534:	e8 27 fe ff ff       	call   14360 <find_cmdslot>
   14539:	83 c4 10             	add    esp,0x10
   1453c:	83 f8 ff             	cmp    eax,0xffffffff
   1453f:	89 c5                	mov    ebp,eax
   14541:	0f 84 a7 00 00 00    	je     145ee <ahciEnablePortMultiplier+0x1be>
   14547:	c1 e0 05             	shl    eax,0x5
   1454a:	83 ec 04             	sub    esp,0x4
   1454d:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
   14554:	01 c7                	add    edi,eax
   14556:	57                   	push   edi
   14557:	68 19 05 04 00       	push   0x40519
   1455c:	68 00 20 00 00       	push   0x2000
   14561:	e8 1a e1 00 00       	call   22680 <printd>
   14566:	b8 01 00 00 00       	mov    eax,0x1
   1456b:	0f b6 17             	movzx  edx,BYTE PTR [edi]
   1456e:	8b 77 08             	mov    esi,DWORD PTR [edi+0x8]
   14571:	66 89 47 02          	mov    WORD PTR [edi+0x2],ax
   14575:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   14579:	83 e2 20             	and    edx,0x20
   1457c:	83 c8 04             	or     eax,0x4
   1457f:	83 ca 05             	or     edx,0x5
   14582:	83 e0 fe             	and    eax,0xfffffffe
   14585:	88 17                	mov    BYTE PTR [edi],dl
   14587:	88 47 01             	mov    BYTE PTR [edi+0x1],al
   1458a:	56                   	push   esi
   1458b:	56                   	push   esi
   1458c:	68 44 d0 06 00       	push   0x6d044
   14591:	68 00 20 00 00       	push   0x2000
   14596:	e8 e5 e0 00 00       	call   22680 <printd>
   1459b:	8b 86 8c 00 00 00    	mov    eax,DWORD PTR [esi+0x8c]
   145a1:	83 c4 1c             	add    esp,0x1c
   145a4:	c7 86 80 00 00 00 00 	mov    DWORD PTR [esi+0x80],0xc53000
   145ab:	30 c5 00 
   145ae:	25 00 00 c0 ff       	and    eax,0xffc00000
   145b3:	89 86 8c 00 00 00    	mov    DWORD PTR [esi+0x8c],eax
   145b9:	c1 e8 18             	shr    eax,0x18
   145bc:	83 e0 7f             	and    eax,0x7f
   145bf:	88 86 8f 00 00 00    	mov    BYTE PTR [esi+0x8f],al
   145c5:	6a 14                	push   0x14
   145c7:	6a 00                	push   0x0
   145c9:	56                   	push   esi
   145ca:	e8 b1 c7 00 00       	call   20d80 <memset>
   145cf:	0f b6 46 01          	movzx  eax,BYTE PTR [esi+0x1]
   145d3:	80 66 0f fb          	and    BYTE PTR [esi+0xf],0xfb
   145d7:	83 c4 10             	add    esp,0x10
   145da:	c6 06 27             	mov    BYTE PTR [esi],0x27
   145dd:	83 e0 7f             	and    eax,0x7f
   145e0:	83 c8 0f             	or     eax,0xf
   145e3:	88 46 01             	mov    BYTE PTR [esi+0x1],al
   145e6:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   145e9:	09 c5                	or     ebp,eax
   145eb:	89 6b 38             	mov    DWORD PTR [ebx+0x38],ebp
   145ee:	83 c4 0c             	add    esp,0xc
   145f1:	5b                   	pop    ebx
   145f2:	5e                   	pop    esi
   145f3:	5f                   	pop    edi
   145f4:	5d                   	pop    ebp
   145f5:	c3                   	ret    
   145f6:	8d 76 00             	lea    esi,[esi+0x0]
   145f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00014600 <ahciIdentify>:
ahciIdentify():
   14600:	55                   	push   ebp
   14601:	57                   	push   edi
   14602:	56                   	push   esi
   14603:	53                   	push   ebx
   14604:	83 ec 28             	sub    esp,0x28
   14607:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
   1460b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   1460f:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   14613:	57                   	push   edi
   14614:	ff 35 04 98 12 00    	push   DWORD PTR ds:0x129804
   1461a:	57                   	push   edi
   1461b:	68 68 d0 06 00       	push   0x6d068
   14620:	68 00 20 00 00       	push   0x2000
   14625:	e8 56 e0 00 00       	call   22680 <printd>
   1462a:	83 c4 14             	add    esp,0x14
   1462d:	8b 1f                	mov    ebx,DWORD PTR [edi]
   1462f:	57                   	push   edi
   14630:	e8 2b fd ff ff       	call   14360 <find_cmdslot>
   14635:	83 c4 10             	add    esp,0x10
   14638:	83 f8 ff             	cmp    eax,0xffffffff
   1463b:	0f 84 a9 01 00 00    	je     147ea <ahciIdentify+0x1ea>
   14641:	89 c2                	mov    edx,eax
   14643:	83 ec 04             	sub    esp,0x4
   14646:	c7 47 14 ff ff ff ff 	mov    DWORD PTR [edi+0x14],0xffffffff
   1464d:	c1 e2 05             	shl    edx,0x5
   14650:	89 c5                	mov    ebp,eax
   14652:	8d 34 13             	lea    esi,[ebx+edx*1]
   14655:	56                   	push   esi
   14656:	68 19 05 04 00       	push   0x40519
   1465b:	68 00 20 00 00       	push   0x2000
   14660:	e8 1b e0 00 00       	call   22680 <printd>
   14665:	8b 5e 08             	mov    ebx,DWORD PTR [esi+0x8]
   14668:	80 66 01 fb          	and    BYTE PTR [esi+0x1],0xfb
   1466c:	83 c4 0c             	add    esp,0xc
   1466f:	b8 01 00 00 00       	mov    eax,0x1
   14674:	c6 06 05             	mov    BYTE PTR [esi],0x5
   14677:	66 89 46 02          	mov    WORD PTR [esi+0x2],ax
   1467b:	68 90 00 00 00       	push   0x90
   14680:	6a 00                	push   0x0
   14682:	53                   	push   ebx
   14683:	e8 f8 c6 00 00       	call   20d80 <memset>
   14688:	ff 76 08             	push   DWORD PTR [esi+0x8]
   1468b:	53                   	push   ebx
   1468c:	68 44 d0 06 00       	push   0x6d044
   14691:	68 00 20 00 00       	push   0x2000
   14696:	e8 e5 df 00 00       	call   22680 <printd>
   1469b:	8b b3 8c 00 00 00    	mov    esi,DWORD PTR [ebx+0x8c]
   146a1:	83 c4 18             	add    esp,0x18
   146a4:	b9 a1 ff ff ff       	mov    ecx,0xffffffa1
   146a9:	ba ec ff ff ff       	mov    edx,0xffffffec
   146ae:	c7 83 80 00 00 00 00 	mov    DWORD PTR [ebx+0x80],0xc53000
   146b5:	30 c5 00 
   146b8:	c6 03 27             	mov    BYTE PTR [ebx],0x27
   146bb:	c6 43 04 00          	mov    BYTE PTR [ebx+0x4],0x0
   146bf:	c6 43 05 00          	mov    BYTE PTR [ebx+0x5],0x0
   146c3:	81 e6 00 00 c0 ff    	and    esi,0xffc00000
   146c9:	c6 43 06 00          	mov    BYTE PTR [ebx+0x6],0x0
   146cd:	c6 43 08 00          	mov    BYTE PTR [ebx+0x8],0x0
   146d1:	89 f0                	mov    eax,esi
   146d3:	c6 43 09 00          	mov    BYTE PTR [ebx+0x9],0x0
   146d7:	c6 43 0a 00          	mov    BYTE PTR [ebx+0xa],0x0
   146db:	0d ff 01 00 00       	or     eax,0x1ff
   146e0:	c6 43 07 00          	mov    BYTE PTR [ebx+0x7],0x0
   146e4:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
   146e8:	89 83 8c 00 00 00    	mov    DWORD PTR [ebx+0x8c],eax
   146ee:	c1 e8 18             	shr    eax,0x18
   146f1:	c6 43 0d 00          	mov    BYTE PTR [ebx+0xd],0x0
   146f5:	83 c8 80             	or     eax,0xffffff80
   146f8:	88 83 8f 00 00 00    	mov    BYTE PTR [ebx+0x8f],al
   146fe:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   14702:	83 c8 80             	or     eax,0xffffff80
   14705:	83 7c 24 14 04       	cmp    DWORD PTR [esp+0x14],0x4
   1470a:	0f 44 d1             	cmove  edx,ecx
   1470d:	83 e0 f0             	and    eax,0xfffffff0
   14710:	88 53 02             	mov    BYTE PTR [ebx+0x2],dl
   14713:	88 43 01             	mov    BYTE PTR [ebx+0x1],al
   14716:	55                   	push   ebp
   14717:	57                   	push   edi
   14718:	e8 c3 f1 ff ff       	call   138e0 <AhciIssueCmd>
   1471d:	83 c4 10             	add    esp,0x10
   14720:	85 c0                	test   eax,eax
   14722:	0f 84 d0 00 00 00    	je     147f8 <ahciIdentify+0x1f8>
   14728:	8b 15 04 98 12 00    	mov    edx,DWORD PTR ds:0x129804
   1472e:	69 c2 73 02 00 00    	imul   eax,edx,0x273
   14734:	03 05 00 98 12 00    	add    eax,DWORD PTR ds:0x129800
   1473a:	89 90 65 02 00 00    	mov    DWORD PTR [eax+0x265],edx
   14740:	31 d2                	xor    edx,edx
   14742:	83 7c 24 0c 04       	cmp    DWORD PTR [esp+0xc],0x4
   14747:	c6 80 51 02 00 00 01 	mov    BYTE PTR [eax+0x251],0x1
   1474e:	c7 80 61 02 00 00 02 	mov    DWORD PTR [eax+0x261],0x2
   14755:	00 00 00 
   14758:	89 b8 69 02 00 00    	mov    DWORD PTR [eax+0x269],edi
   1475e:	c6 80 6d 02 00 00 00 	mov    BYTE PTR [eax+0x26d],0x0
   14765:	c6 80 6e 02 00 00 00 	mov    BYTE PTR [eax+0x26e],0x0
   1476c:	c6 80 50 02 00 00 00 	mov    BYTE PTR [eax+0x250],0x0
   14773:	0f 94 c2             	sete   dl
   14776:	83 ec 04             	sub    esp,0x4
   14779:	83 c2 02             	add    edx,0x2
   1477c:	89 90 52 02 00 00    	mov    DWORD PTR [eax+0x252],edx
   14782:	8b 15 94 99 12 00    	mov    edx,DWORD PTR ds:0x129994
   14788:	89 90 6f 02 00 00    	mov    DWORD PTR [eax+0x26f],edx
   1478e:	68 00 02 00 00       	push   0x200
   14793:	68 00 30 c5 00       	push   0xc53000
   14798:	50                   	push   eax
   14799:	e8 c2 ce 00 00       	call   21660 <memcpy>
   1479e:	a1 04 98 12 00       	mov    eax,ds:0x129804
   147a3:	8d 50 01             	lea    edx,[eax+0x1]
   147a6:	69 c0 73 02 00 00    	imul   eax,eax,0x273
   147ac:	03 05 00 98 12 00    	add    eax,DWORD PTR ds:0x129800
   147b2:	89 15 04 98 12 00    	mov    DWORD PTR ds:0x129804,edx
   147b8:	89 04 24             	mov    DWORD PTR [esp],eax
   147bb:	e8 70 a1 00 00       	call   1e930 <ataIdentify>
   147c0:	69 05 04 98 12 00 73 	imul   eax,DWORD PTR ds:0x129804,0x273
   147c7:	02 00 00 
   147ca:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   147d0:	83 c4 0c             	add    esp,0xc
   147d3:	8d 44 02 8d          	lea    eax,[edx+eax*1-0x73]
   147d7:	50                   	push   eax
   147d8:	68 c4 d0 06 00       	push   0x6d0c4
   147dd:	68 00 20 00 00       	push   0x2000
   147e2:	e8 99 de 00 00       	call   22680 <printd>
   147e7:	83 c4 10             	add    esp,0x10
   147ea:	83 c4 1c             	add    esp,0x1c
   147ed:	5b                   	pop    ebx
   147ee:	5e                   	pop    esi
   147ef:	5f                   	pop    edi
   147f0:	5d                   	pop    ebp
   147f1:	c3                   	ret    
   147f2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   147f8:	c7 44 24 34 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
   147ff:	00 
   14800:	c7 44 24 30 98 d0 06 	mov    DWORD PTR [esp+0x30],0x6d098
   14807:	00 
   14808:	83 c4 1c             	add    esp,0x1c
   1480b:	5b                   	pop    ebx
   1480c:	5e                   	pop    esi
   1480d:	5f                   	pop    edi
   1480e:	5d                   	pop    ebp
   1480f:	e9 4c de 00 00       	jmp    22660 <printk>
   14814:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1481a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00014820 <ahciSetCurrentDisk>:
ahciSetCurrentDisk():
   14820:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   14824:	a3 4c 99 12 00       	mov    ds:0x12994c,eax
   14829:	c3                   	ret    
   1482a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00014830 <ahciSetCurrentPart>:
ahciSetCurrentPart():
   14830:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   14834:	a3 50 99 12 00       	mov    ds:0x129950,eax
   14839:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1483d:	a3 54 99 12 00       	mov    ds:0x129954,eax
   14842:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   14846:	a3 58 99 12 00       	mov    ds:0x129958,eax
   1484b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1484f:	a3 5c 99 12 00       	mov    ds:0x12995c,eax
   14854:	c3                   	ret    
   14855:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14859:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00014860 <ahciBlockingRead28>:
ahciBlockingRead28():
   14860:	55                   	push   ebp
   14861:	57                   	push   edi
   14862:	56                   	push   esi
   14863:	53                   	push   ebx
   14864:	31 f6                	xor    esi,esi
   14866:	83 ec 20             	sub    esp,0x20
   14869:	a1 50 99 12 00       	mov    eax,ds:0x129950
   1486e:	03 44 24 34          	add    eax,DWORD PTR [esp+0x34]
   14872:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   14876:	89 c7                	mov    edi,eax
   14878:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
   1487c:	c1 e0 09             	shl    eax,0x9
   1487f:	50                   	push   eax
   14880:	6a 00                	push   0x0
   14882:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
   14886:	e8 f5 c4 00 00       	call   20d80 <memset>
   1488b:	58                   	pop    eax
   1488c:	5a                   	pop    edx
   1488d:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
   14891:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
   14895:	57                   	push   edi
   14896:	ff 35 4c 99 12 00    	push   DWORD PTR ds:0x12994c
   1489c:	68 e8 d0 06 00       	push   0x6d0e8
   148a1:	68 00 20 00 00       	push   0x2000
   148a6:	e8 d5 dd 00 00       	call   22680 <printd>
   148ab:	a1 4c 99 12 00       	mov    eax,ds:0x12994c
   148b0:	83 c4 14             	add    esp,0x14
   148b3:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [eax+0x10],0xffffffff
   148ba:	8b 18                	mov    ebx,DWORD PTR [eax]
   148bc:	50                   	push   eax
   148bd:	e8 9e fa ff ff       	call   14360 <find_cmdslot>
   148c2:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
   148c6:	83 c4 10             	add    esp,0x10
   148c9:	83 f8 ff             	cmp    eax,0xffffffff
   148cc:	0f 84 70 01 00 00    	je     14a42 <ahciBlockingRead28+0x1e2>
   148d2:	c1 e0 05             	shl    eax,0x5
   148d5:	83 ec 04             	sub    esp,0x4
   148d8:	01 c3                	add    ebx,eax
   148da:	53                   	push   ebx
   148db:	68 19 05 04 00       	push   0x40519
   148e0:	68 00 20 00 00       	push   0x2000
   148e5:	e8 96 dd 00 00       	call   22680 <printd>
   148ea:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
   148ee:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
   148f1:	83 c4 0c             	add    esp,0xc
   148f4:	83 e8 01             	sub    eax,0x1
   148f7:	c1 e8 04             	shr    eax,0x4
   148fa:	83 c0 01             	add    eax,0x1
   148fd:	66 89 43 02          	mov    WORD PTR [ebx+0x2],ax
   14901:	0f b7 c0             	movzx  eax,ax
   14904:	83 c0 08             	add    eax,0x8
   14907:	c1 e0 04             	shl    eax,0x4
   1490a:	50                   	push   eax
   1490b:	6a 00                	push   0x0
   1490d:	57                   	push   edi
   1490e:	e8 6d c4 00 00       	call   20d80 <memset>
   14913:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   14916:	57                   	push   edi
   14917:	68 30 d1 06 00       	push   0x6d130
   1491c:	68 00 20 00 00       	push   0x2000
   14921:	e8 5a dd 00 00       	call   22680 <printd>
   14926:	0f b7 6b 02          	movzx  ebp,WORD PTR [ebx+0x2]
   1492a:	83 c4 20             	add    esp,0x20
   1492d:	83 fd 01             	cmp    ebp,0x1
   14930:	0f 8e 3b 01 00 00    	jle    14a71 <ahciBlockingRead28+0x211>
   14936:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
   1493a:	8d b7 80 00 00 00    	lea    esi,[edi+0x80]
   14940:	b9 01 00 00 00       	mov    ecx,0x1
   14945:	8d 76 00             	lea    esi,[esi+0x0]
   14948:	8d 51 07             	lea    edx,[ecx+0x7]
   1494b:	89 1e                	mov    DWORD PTR [esi],ebx
   1494d:	83 c1 01             	add    ecx,0x1
   14950:	81 c3 00 10 00 00    	add    ebx,0x1000
   14956:	83 c6 10             	add    esi,0x10
   14959:	c1 e2 04             	shl    edx,0x4
   1495c:	01 fa                	add    edx,edi
   1495e:	8b 42 0c             	mov    eax,DWORD PTR [edx+0xc]
   14961:	25 00 00 c0 ff       	and    eax,0xffc00000
   14966:	80 cc 20             	or     ah,0x20
   14969:	89 42 0c             	mov    DWORD PTR [edx+0xc],eax
   1496c:	c1 e8 18             	shr    eax,0x18
   1496f:	83 c8 80             	or     eax,0xffffff80
   14972:	39 e9                	cmp    ecx,ebp
   14974:	88 42 0f             	mov    BYTE PTR [edx+0xf],al
   14977:	75 cf                	jne    14948 <ahciBlockingRead28+0xe8>
   14979:	8d 81 ff ff 0f 00    	lea    eax,[ecx+0xfffff]
   1497f:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
   14983:	c1 e0 0c             	shl    eax,0xc
   14986:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
   1498a:	89 c8                	mov    eax,ecx
   1498c:	f7 d8                	neg    eax
   1498e:	c1 e0 04             	shl    eax,0x4
   14991:	8d 44 03 10          	lea    eax,[ebx+eax*1+0x10]
   14995:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
   14999:	8d 41 ff             	lea    eax,[ecx-0x1]
   1499c:	83 c0 08             	add    eax,0x8
   1499f:	8b 54 24 38          	mov    edx,DWORD PTR [esp+0x38]
   149a3:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
   149a7:	c1 e0 04             	shl    eax,0x4
   149aa:	83 ec 08             	sub    esp,0x8
   149ad:	01 f8                	add    eax,edi
   149af:	8b 48 0c             	mov    ecx,DWORD PTR [eax+0xc]
   149b2:	c1 e2 09             	shl    edx,0x9
   149b5:	89 18                	mov    DWORD PTR [eax],ebx
   149b7:	81 e2 ff ff 3f 00    	and    edx,0x3fffff
   149bd:	81 e1 00 00 c0 ff    	and    ecx,0xffc00000
   149c3:	09 ca                	or     edx,ecx
   149c5:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
   149c8:	c1 ea 18             	shr    edx,0x18
   149cb:	83 ca 80             	or     edx,0xffffff80
   149ce:	88 50 0f             	mov    BYTE PTR [eax+0xf],dl
   149d1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   149d5:	80 4f 01 80          	or     BYTE PTR [edi+0x1],0x80
   149d9:	c6 07 27             	mov    BYTE PTR [edi],0x27
   149dc:	c6 47 02 25          	mov    BYTE PTR [edi+0x2],0x25
   149e0:	c6 47 07 40          	mov    BYTE PTR [edi+0x7],0x40
   149e4:	89 f0                	mov    eax,esi
   149e6:	c6 47 09 00          	mov    BYTE PTR [edi+0x9],0x0
   149ea:	c6 47 0a 00          	mov    BYTE PTR [edi+0xa],0x0
   149ee:	88 47 04             	mov    BYTE PTR [edi+0x4],al
   149f1:	89 f0                	mov    eax,esi
   149f3:	c1 e8 08             	shr    eax,0x8
   149f6:	88 47 05             	mov    BYTE PTR [edi+0x5],al
   149f9:	89 f0                	mov    eax,esi
   149fb:	c1 e8 10             	shr    eax,0x10
   149fe:	88 47 06             	mov    BYTE PTR [edi+0x6],al
   14a01:	89 f0                	mov    eax,esi
   14a03:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
   14a07:	c1 e8 18             	shr    eax,0x18
   14a0a:	88 47 08             	mov    BYTE PTR [edi+0x8],al
   14a0d:	0f b6 44 24 40       	movzx  eax,BYTE PTR [esp+0x40]
   14a12:	88 47 0c             	mov    BYTE PTR [edi+0xc],al
   14a15:	89 f0                	mov    eax,esi
   14a17:	0f b6 c4             	movzx  eax,ah
   14a1a:	88 47 0d             	mov    BYTE PTR [edi+0xd],al
   14a1d:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   14a21:	ff 35 4c 99 12 00    	push   DWORD PTR ds:0x12994c
   14a27:	e8 b4 ee ff ff       	call   138e0 <AhciIssueCmd>
   14a2c:	83 c4 10             	add    esp,0x10
   14a2f:	85 c0                	test   eax,eax
   14a31:	74 45                	je     14a78 <ahciBlockingRead28+0x218>
   14a33:	a1 4c 99 12 00       	mov    eax,ds:0x12994c
   14a38:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
   14a3b:	a9 00 00 00 40       	test   eax,0x40000000
   14a40:	75 0e                	jne    14a50 <ahciBlockingRead28+0x1f0>
   14a42:	83 c4 1c             	add    esp,0x1c
   14a45:	89 f0                	mov    eax,esi
   14a47:	5b                   	pop    ebx
   14a48:	5e                   	pop    esi
   14a49:	5f                   	pop    edi
   14a4a:	5d                   	pop    ebp
   14a4b:	c3                   	ret    
   14a4c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14a50:	83 ec 08             	sub    esp,0x8
   14a53:	31 f6                	xor    esi,esi
   14a55:	68 00 04 04 00       	push   0x40400
   14a5a:	68 00 20 00 00       	push   0x2000
   14a5f:	e8 1c dc 00 00       	call   22680 <printd>
   14a64:	83 c4 10             	add    esp,0x10
   14a67:	89 f0                	mov    eax,esi
   14a69:	83 c4 1c             	add    esp,0x1c
   14a6c:	5b                   	pop    ebx
   14a6d:	5e                   	pop    esi
   14a6e:	5f                   	pop    edi
   14a6f:	5d                   	pop    ebp
   14a70:	c3                   	ret    
   14a71:	31 c0                	xor    eax,eax
   14a73:	e9 24 ff ff ff       	jmp    1499c <ahciBlockingRead28+0x13c>
   14a78:	83 ec 08             	sub    esp,0x8
   14a7b:	be ff ff ff ff       	mov    esi,0xffffffff
   14a80:	68 5c d1 06 00       	push   0x6d15c
   14a85:	68 00 20 00 00       	push   0x2000
   14a8a:	e8 f1 db 00 00       	call   22680 <printd>
   14a8f:	83 c4 10             	add    esp,0x10
   14a92:	eb ae                	jmp    14a42 <ahciBlockingRead28+0x1e2>
   14a94:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   14a9a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00014aa0 <ahciRead>:
ahciRead():
   14aa0:	53                   	push   ebx
   14aa1:	83 ec 0c             	sub    esp,0xc
   14aa4:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   14aa8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   14aac:	53                   	push   ebx
   14aad:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   14ab1:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   14ab5:	a3 4c 99 12 00       	mov    ds:0x12994c,eax
   14aba:	e8 a1 fd ff ff       	call   14860 <ahciBlockingRead28>
   14abf:	85 c0                	test   eax,eax
   14ac1:	0f 45 c3             	cmovne eax,ebx
   14ac4:	83 c4 18             	add    esp,0x18
   14ac7:	5b                   	pop    ebx
   14ac8:	c3                   	ret    
   14ac9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00014ad0 <ahciBlockingWrite28>:
ahciBlockingWrite28():
   14ad0:	31 c0                	xor    eax,eax
   14ad2:	c3                   	ret    
   14ad3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   14ad9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00014ae0 <ahci_port_activate_device>:
ahci_port_activate_device():
   14ae0:	55                   	push   ebp
   14ae1:	57                   	push   edi
   14ae2:	56                   	push   esi
   14ae3:	53                   	push   ebx
   14ae4:	83 ec 0c             	sub    esp,0xc
   14ae7:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   14aeb:	89 f0                	mov    eax,esi
   14aed:	2b 44 24 20          	sub    eax,DWORD PTR [esp+0x20]
   14af1:	56                   	push   esi
   14af2:	8d 98 00 ff ff ff    	lea    ebx,[eax-0x100]
   14af8:	c1 fb 07             	sar    ebx,0x7
   14afb:	53                   	push   ebx
   14afc:	68 31 05 04 00       	push   0x40531
   14b01:	68 00 20 00 00       	push   0x2000
   14b06:	e8 75 db 00 00       	call   22680 <printd>
   14b0b:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14b0e:	83 c4 10             	add    esp,0x10
   14b11:	a8 07                	test   al,0x7
   14b13:	0f 84 84 01 00 00    	je     14c9d <ahci_port_activate_device+0x1bd>
   14b19:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14b1c:	83 e0 07             	and    eax,0x7
   14b1f:	83 f8 03             	cmp    eax,0x3
   14b22:	0f 84 e4 00 00 00    	je     14c0c <ahci_port_activate_device+0x12c>
   14b28:	90                   	nop
   14b29:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14b30:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14b33:	83 e0 07             	and    eax,0x7
   14b36:	83 f8 04             	cmp    eax,0x4
   14b39:	0f 84 44 01 00 00    	je     14c83 <ahci_port_activate_device+0x1a3>
   14b3f:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14b42:	83 e0 07             	and    eax,0x7
   14b45:	83 f8 05             	cmp    eax,0x5
   14b48:	0f 85 71 02 00 00    	jne    14dbf <ahci_port_activate_device+0x2df>
   14b4e:	83 ec 08             	sub    esp,0x8
   14b51:	68 05 06 04 00       	push   0x40605
   14b56:	68 00 20 00 00       	push   0x2000
   14b5b:	e8 20 db 00 00       	call   22680 <printd>
   14b60:	83 c4 10             	add    esp,0x10
   14b63:	31 ff                	xor    edi,edi
   14b65:	bd 32 00 00 00       	mov    ebp,0x32
   14b6a:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14b6d:	c1 e8 1c             	shr    eax,0x1c
   14b70:	84 c0                	test   al,al
   14b72:	74 0c                	je     14b80 <ahci_port_activate_device+0xa0>
   14b74:	85 ed                	test   ebp,ebp
   14b76:	75 4e                	jne    14bc6 <ahci_port_activate_device+0xe6>
   14b78:	90                   	nop
   14b79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14b80:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14b83:	c1 e8 08             	shr    eax,0x8
   14b86:	83 e0 0f             	and    eax,0xf
   14b89:	3c 01                	cmp    al,0x1
   14b8b:	74 53                	je     14be0 <ahci_port_activate_device+0x100>
   14b8d:	85 ff                	test   edi,edi
   14b8f:	75 53                	jne    14be4 <ahci_port_activate_device+0x104>
   14b91:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14b94:	83 ec 0c             	sub    esp,0xc
   14b97:	bf 01 00 00 00       	mov    edi,0x1
   14b9c:	bd 32 00 00 00       	mov    ebp,0x32
   14ba1:	25 ff ff ff 0f       	and    eax,0xfffffff
   14ba6:	0d 00 00 00 10       	or     eax,0x10000000
   14bab:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14bae:	6a 01                	push   0x1
   14bb0:	e8 bb e8 00 00       	call   23470 <waitTicks>
   14bb5:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14bb8:	83 c4 10             	add    esp,0x10
   14bbb:	c1 e8 1c             	shr    eax,0x1c
   14bbe:	84 c0                	test   al,al
   14bc0:	74 be                	je     14b80 <ahci_port_activate_device+0xa0>
   14bc2:	85 ed                	test   ebp,ebp
   14bc4:	74 ba                	je     14b80 <ahci_port_activate_device+0xa0>
   14bc6:	83 ec 0c             	sub    esp,0xc
   14bc9:	83 ed 01             	sub    ebp,0x1
   14bcc:	6a 01                	push   0x1
   14bce:	e8 9d e8 00 00       	call   23470 <waitTicks>
   14bd3:	83 c4 10             	add    esp,0x10
   14bd6:	eb 92                	jmp    14b6a <ahci_port_activate_device+0x8a>
   14bd8:	90                   	nop
   14bd9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14be0:	85 ff                	test   edi,edi
   14be2:	74 4f                	je     14c33 <ahci_port_activate_device+0x153>
   14be4:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14be7:	83 ec 0c             	sub    esp,0xc
   14bea:	83 e0 f0             	and    eax,0xfffffff0
   14bed:	83 c8 01             	or     eax,0x1
   14bf0:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   14bf3:	6a 64                	push   0x64
   14bf5:	e8 76 e8 00 00       	call   23470 <waitTicks>
   14bfa:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14bfd:	83 c4 10             	add    esp,0x10
   14c00:	83 e0 07             	and    eax,0x7
   14c03:	83 f8 03             	cmp    eax,0x3
   14c06:	0f 85 24 ff ff ff    	jne    14b30 <ahci_port_activate_device+0x50>
   14c0c:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14c0f:	c1 e8 08             	shr    eax,0x8
   14c12:	83 e0 0f             	and    eax,0xf
   14c15:	3c 01                	cmp    al,0x1
   14c17:	74 1a                	je     14c33 <ahci_port_activate_device+0x153>
   14c19:	83 ec 08             	sub    esp,0x8
   14c1c:	68 c1 05 04 00       	push   0x405c1
   14c21:	68 00 20 00 00       	push   0x2000
   14c26:	e8 55 da 00 00       	call   22680 <printd>
   14c2b:	83 c4 10             	add    esp,0x10
   14c2e:	e9 30 ff ff ff       	jmp    14b63 <ahci_port_activate_device+0x83>
   14c33:	83 ec 04             	sub    esp,0x4
   14c36:	53                   	push   ebx
   14c37:	68 84 d1 06 00       	push   0x6d184
   14c3c:	68 00 20 00 00       	push   0x2000
   14c41:	e8 3a da 00 00       	call   22680 <printd>
   14c46:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14c49:	8b 4e 28             	mov    ecx,DWORD PTR [esi+0x28]
   14c4c:	83 c4 0c             	add    esp,0xc
   14c4f:	8b 56 20             	mov    edx,DWORD PTR [esi+0x20]
   14c52:	8b 5e 20             	mov    ebx,DWORD PTR [esi+0x20]
   14c55:	c1 e8 08             	shr    eax,0x8
   14c58:	83 e1 07             	and    ecx,0x7
   14c5b:	83 e0 0f             	and    eax,0xf
   14c5e:	83 e2 01             	and    edx,0x1
   14c61:	50                   	push   eax
   14c62:	51                   	push   ecx
   14c63:	52                   	push   edx
   14c64:	53                   	push   ebx
   14c65:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
   14c68:	50                   	push   eax
   14c69:	68 da 05 04 00       	push   0x405da
   14c6e:	68 00 20 00 00       	push   0x2000
   14c73:	e8 08 da 00 00       	call   22680 <printd>
   14c78:	83 c4 20             	add    esp,0x20
   14c7b:	83 c4 0c             	add    esp,0xc
   14c7e:	5b                   	pop    ebx
   14c7f:	5e                   	pop    esi
   14c80:	5f                   	pop    edi
   14c81:	5d                   	pop    ebp
   14c82:	c3                   	ret    
   14c83:	83 ec 08             	sub    esp,0x8
   14c86:	68 f3 05 04 00       	push   0x405f3
   14c8b:	68 00 20 00 00       	push   0x2000
   14c90:	e8 eb d9 00 00       	call   22680 <printd>
   14c95:	83 c4 10             	add    esp,0x10
   14c98:	e9 c6 fe ff ff       	jmp    14b63 <ahci_port_activate_device+0x83>
   14c9d:	83 ec 08             	sub    esp,0x8
   14ca0:	68 4d 05 04 00       	push   0x4054d
   14ca5:	68 00 20 00 00       	push   0x2000
   14caa:	e8 d1 d9 00 00       	call   22680 <printd>
   14caf:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14cb2:	83 c4 10             	add    esp,0x10
   14cb5:	a9 00 00 10 00       	test   eax,0x100000
   14cba:	74 36                	je     14cf2 <ahci_port_activate_device+0x212>
   14cbc:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14cbf:	a9 00 00 01 00       	test   eax,0x10000
   14cc4:	0f 84 ac 01 00 00    	je     14e76 <ahci_port_activate_device+0x396>
   14cca:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14ccd:	a8 04                	test   al,0x4
   14ccf:	75 16                	jne    14ce7 <ahci_port_activate_device+0x207>
   14cd1:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14cd4:	83 ec 0c             	sub    esp,0xc
   14cd7:	83 c8 04             	or     eax,0x4
   14cda:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14cdd:	6a 14                	push   0x14
   14cdf:	e8 ac e7 00 00       	call   23490 <wait>
   14ce4:	83 c4 10             	add    esp,0x10
   14ce7:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14cea:	a8 07                	test   al,0x7
   14cec:	0f 85 27 fe ff ff    	jne    14b19 <ahci_port_activate_device+0x39>
   14cf2:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14cf5:	a8 02                	test   al,0x2
   14cf7:	0f 85 e0 00 00 00    	jne    14ddd <ahci_port_activate_device+0x2fd>
   14cfd:	83 ec 08             	sub    esp,0x8
   14d00:	68 7a 05 04 00       	push   0x4057a
   14d05:	68 00 20 00 00       	push   0x2000
   14d0a:	e8 71 d9 00 00       	call   22680 <printd>
   14d0f:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
   14d12:	83 c4 10             	add    esp,0x10
   14d15:	a9 00 00 00 04       	test   eax,0x4000000
   14d1a:	74 0b                	je     14d27 <ahci_port_activate_device+0x247>
   14d1c:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
   14d1f:	0d 00 00 00 04       	or     eax,0x4000000
   14d24:	89 46 30             	mov    DWORD PTR [esi+0x30],eax
   14d27:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14d2a:	a8 07                	test   al,0x7
   14d2c:	74 16                	je     14d44 <ahci_port_activate_device+0x264>
   14d2e:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14d31:	83 ec 0c             	sub    esp,0xc
   14d34:	83 e0 f0             	and    eax,0xfffffff0
   14d37:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   14d3a:	6a 14                	push   0x14
   14d3c:	e8 4f e7 00 00       	call   23490 <wait>
   14d41:	83 c4 10             	add    esp,0x10
   14d44:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14d47:	83 ec 0c             	sub    esp,0xc
   14d4a:	83 c8 02             	or     eax,0x2
   14d4d:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14d50:	6a 05                	push   0x5
   14d52:	e8 19 e7 00 00       	call   23470 <waitTicks>
   14d57:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
   14d5a:	83 c4 10             	add    esp,0x10
   14d5d:	a9 00 00 04 04       	test   eax,0x4040000
   14d62:	0f 85 b1 fd ff ff    	jne    14b19 <ahci_port_activate_device+0x39>
   14d68:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14d6b:	83 ec 0c             	sub    esp,0xc
   14d6e:	83 e0 f0             	and    eax,0xfffffff0
   14d71:	83 c8 01             	or     eax,0x1
   14d74:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   14d77:	6a 64                	push   0x64
   14d79:	e8 f2 e6 00 00       	call   23470 <waitTicks>
   14d7e:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14d81:	83 e0 f0             	and    eax,0xfffffff0
   14d84:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
   14d87:	c7 04 24 14 00 00 00 	mov    DWORD PTR [esp],0x14
   14d8e:	e8 fd e6 00 00       	call   23490 <wait>
   14d93:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14d96:	83 c4 10             	add    esp,0x10
   14d99:	a8 07                	test   al,0x7
   14d9b:	0f 85 78 fd ff ff    	jne    14b19 <ahci_port_activate_device+0x39>
   14da1:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14da4:	83 ec 08             	sub    esp,0x8
   14da7:	83 e0 fd             	and    eax,0xfffffffd
   14daa:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14dad:	68 8c 05 04 00       	push   0x4058c
   14db2:	68 00 20 00 00       	push   0x2000
   14db7:	e8 c4 d8 00 00       	call   22680 <printd>
   14dbc:	83 c4 10             	add    esp,0x10
   14dbf:	83 ec 04             	sub    esp,0x4
   14dc2:	53                   	push   ebx
   14dc3:	68 1a 06 04 00       	push   0x4061a
   14dc8:	68 00 20 00 00       	push   0x2000
   14dcd:	e8 ae d8 00 00       	call   22680 <printd>
   14dd2:	83 c4 10             	add    esp,0x10
   14dd5:	83 c4 0c             	add    esp,0xc
   14dd8:	5b                   	pop    ebx
   14dd9:	5e                   	pop    esi
   14dda:	5f                   	pop    edi
   14ddb:	5d                   	pop    ebp
   14ddc:	c3                   	ret    
   14ddd:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
   14de0:	c1 e8 08             	shr    eax,0x8
   14de3:	83 e0 0f             	and    eax,0xf
   14de6:	3c 01                	cmp    al,0x1
   14de8:	0f 84 2b fd ff ff    	je     14b19 <ahci_port_activate_device+0x39>
   14dee:	83 ec 08             	sub    esp,0x8
   14df1:	bf 32 00 00 00       	mov    edi,0x32
   14df6:	68 99 05 04 00       	push   0x40599
   14dfb:	68 00 20 00 00       	push   0x2000
   14e00:	e8 7b d8 00 00       	call   22680 <printd>
   14e05:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14e08:	83 c4 10             	add    esp,0x10
   14e0b:	c1 e8 1c             	shr    eax,0x1c
   14e0e:	84 c0                	test   al,al
   14e10:	75 0b                	jne    14e1d <ahci_port_activate_device+0x33d>
   14e12:	eb 20                	jmp    14e34 <ahci_port_activate_device+0x354>
   14e14:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   14e18:	83 ef 01             	sub    edi,0x1
   14e1b:	74 17                	je     14e34 <ahci_port_activate_device+0x354>
   14e1d:	83 ec 0c             	sub    esp,0xc
   14e20:	6a 01                	push   0x1
   14e22:	e8 49 e6 00 00       	call   23470 <waitTicks>
   14e27:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14e2a:	83 c4 10             	add    esp,0x10
   14e2d:	c1 e8 1c             	shr    eax,0x1c
   14e30:	84 c0                	test   al,al
   14e32:	75 e4                	jne    14e18 <ahci_port_activate_device+0x338>
   14e34:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
   14e37:	83 ec 0c             	sub    esp,0xc
   14e3a:	25 ff ff ff 0f       	and    eax,0xfffffff
   14e3f:	0d 00 00 00 10       	or     eax,0x10000000
   14e44:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
   14e47:	6a 0a                	push   0xa
   14e49:	e8 42 e6 00 00       	call   23490 <wait>
   14e4e:	8b 46 28             	mov    eax,DWORD PTR [esi+0x28]
   14e51:	83 c4 10             	add    esp,0x10
   14e54:	a8 07                	test   al,0x7
   14e56:	0f 85 bd fc ff ff    	jne    14b19 <ahci_port_activate_device+0x39>
   14e5c:	83 ec 08             	sub    esp,0x8
   14e5f:	68 a8 05 04 00       	push   0x405a8
   14e64:	68 00 20 00 00       	push   0x2000
   14e69:	e8 12 d8 00 00       	call   22680 <printd>
   14e6e:	83 c4 10             	add    esp,0x10
   14e71:	e9 49 ff ff ff       	jmp    14dbf <ahci_port_activate_device+0x2df>
   14e76:	c7 44 24 24 68 05 04 	mov    DWORD PTR [esp+0x24],0x40568
   14e7d:	00 
   14e7e:	c7 44 24 20 00 20 00 	mov    DWORD PTR [esp+0x20],0x2000
   14e85:	00 
   14e86:	83 c4 0c             	add    esp,0xc
   14e89:	5b                   	pop    ebx
   14e8a:	5e                   	pop    esi
   14e8b:	5f                   	pop    edi
   14e8c:	5d                   	pop    ebp
   14e8d:	e9 ee d7 00 00       	jmp    22680 <printd>
   14e92:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14e99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00014ea0 <ahci_enable_port>:
ahci_enable_port():
   14ea0:	55                   	push   ebp
   14ea1:	57                   	push   edi
   14ea2:	56                   	push   esi
   14ea3:	53                   	push   ebx
   14ea4:	83 ec 1c             	sub    esp,0x1c
   14ea7:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
   14eab:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   14eaf:	8b 47 0c             	mov    eax,DWORD PTR [edi+0xc]
   14eb2:	0f a3 f0             	bt     eax,esi
   14eb5:	0f 83 0e 01 00 00    	jae    14fc9 <ahci_enable_port+0x129>
   14ebb:	8d 46 02             	lea    eax,[esi+0x2]
   14ebe:	89 f3                	mov    ebx,esi
   14ec0:	31 ed                	xor    ebp,ebp
   14ec2:	c1 e3 07             	shl    ebx,0x7
   14ec5:	c1 e0 07             	shl    eax,0x7
   14ec8:	01 fb                	add    ebx,edi
   14eca:	01 f8                	add    eax,edi
   14ecc:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   14ed0:	c7 83 30 01 00 00 ff 	mov    DWORD PTR [ebx+0x130],0xffffffff
   14ed7:	ff ff ff 
   14eda:	c7 83 10 01 00 00 ff 	mov    DWORD PTR [ebx+0x110],0xffffffff
   14ee1:	ff ff ff 
   14ee4:	83 ec 0c             	sub    esp,0xc
   14ee7:	8b 83 18 01 00 00    	mov    eax,DWORD PTR [ebx+0x118]
   14eed:	83 c8 10             	or     eax,0x10
   14ef0:	89 83 18 01 00 00    	mov    DWORD PTR [ebx+0x118],eax
   14ef6:	6a 14                	push   0x14
   14ef8:	eb 13                	jmp    14f0d <ahci_enable_port+0x6d>
   14efa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   14f00:	a8 88                	test   al,0x88
   14f02:	0f 84 d0 00 00 00    	je     14fd8 <ahci_enable_port+0x138>
   14f08:	83 ec 0c             	sub    esp,0xc
   14f0b:	6a 32                	push   0x32
   14f0d:	e8 7e e5 00 00       	call   23490 <wait>
   14f12:	8b 93 20 01 00 00    	mov    edx,DWORD PTR [ebx+0x120]
   14f18:	83 c4 10             	add    esp,0x10
   14f1b:	0f b6 c2             	movzx  eax,dl
   14f1e:	a8 01                	test   al,0x1
   14f20:	74 de                	je     14f00 <ahci_enable_port+0x60>
   14f22:	80 fa 7f             	cmp    dl,0x7f
   14f25:	0f 84 ad 00 00 00    	je     14fd8 <ahci_enable_port+0x138>
   14f2b:	80 fa 41             	cmp    dl,0x41
   14f2e:	0f 84 5c 01 00 00    	je     15090 <ahci_enable_port+0x1f0>
   14f34:	8b 83 20 01 00 00    	mov    eax,DWORD PTR [ebx+0x120]
   14f3a:	83 ec 04             	sub    esp,0x4
   14f3d:	83 e0 01             	and    eax,0x1
   14f40:	50                   	push   eax
   14f41:	56                   	push   esi
   14f42:	68 b0 d1 06 00       	push   0x6d1b0
   14f47:	e8 14 d7 00 00       	call   22660 <printk>
   14f4c:	8b 83 20 01 00 00    	mov    eax,DWORD PTR [ebx+0x120]
   14f52:	8b 93 30 01 00 00    	mov    edx,DWORD PTR [ebx+0x130]
   14f58:	83 e0 01             	and    eax,0x1
   14f5b:	50                   	push   eax
   14f5c:	52                   	push   edx
   14f5d:	68 32 06 04 00       	push   0x40632
   14f62:	68 00 20 00 00       	push   0x2000
   14f67:	e8 14 d7 00 00       	call   22680 <printd>
   14f6c:	8b 83 20 01 00 00    	mov    eax,DWORD PTR [ebx+0x120]
   14f72:	8b 93 20 01 00 00    	mov    edx,DWORD PTR [ebx+0x120]
   14f78:	83 c4 20             	add    esp,0x20
   14f7b:	83 e0 01             	and    eax,0x1
   14f7e:	50                   	push   eax
   14f7f:	52                   	push   edx
   14f80:	68 45 06 04 00       	push   0x40645
   14f85:	68 00 20 00 00       	push   0x2000
   14f8a:	e8 f1 d6 00 00       	call   22680 <printd>
   14f8f:	83 c4 10             	add    esp,0x10
   14f92:	85 ed                	test   ebp,ebp
   14f94:	c7 83 30 01 00 00 ff 	mov    DWORD PTR [ebx+0x130],0xffffffff
   14f9b:	ff ff ff 
   14f9e:	0f 84 fc 00 00 00    	je     150a0 <ahci_enable_port+0x200>
   14fa4:	83 ec 04             	sub    esp,0x4
   14fa7:	56                   	push   esi
   14fa8:	c1 e6 07             	shl    esi,0x7
   14fab:	68 14 d2 06 00       	push   0x6d214
   14fb0:	68 00 20 00 00       	push   0x2000
   14fb5:	01 f7                	add    edi,esi
   14fb7:	e8 c4 d6 00 00       	call   22680 <printd>
   14fbc:	c7 87 14 01 00 00 40 	mov    DWORD PTR [edi+0x114],0x80400040
   14fc3:	00 40 80 
   14fc6:	83 c4 10             	add    esp,0x10
   14fc9:	83 c4 1c             	add    esp,0x1c
   14fcc:	5b                   	pop    ebx
   14fcd:	5e                   	pop    esi
   14fce:	5f                   	pop    edi
   14fcf:	5d                   	pop    ebp
   14fd0:	c3                   	ret    
   14fd1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   14fd8:	89 f0                	mov    eax,esi
   14fda:	c1 e0 07             	shl    eax,0x7
   14fdd:	01 f8                	add    eax,edi
   14fdf:	8b 80 28 01 00 00    	mov    eax,DWORD PTR [eax+0x128]
   14fe5:	83 e0 07             	and    eax,0x7
   14fe8:	83 f8 03             	cmp    eax,0x3
   14feb:	74 10                	je     14ffd <ahci_enable_port+0x15d>
   14fed:	83 ec 08             	sub    esp,0x8
   14ff0:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   14ff4:	57                   	push   edi
   14ff5:	e8 e6 fa ff ff       	call   14ae0 <ahci_port_activate_device>
   14ffa:	83 c4 10             	add    esp,0x10
   14ffd:	89 f0                	mov    eax,esi
   14fff:	c1 e0 07             	shl    eax,0x7
   15002:	01 f8                	add    eax,edi
   15004:	8b 88 20 01 00 00    	mov    ecx,DWORD PTR [eax+0x120]
   1500a:	8d 90 20 01 00 00    	lea    edx,[eax+0x120]
   15010:	81 e1 88 00 00 00    	and    ecx,0x88
   15016:	75 8c                	jne    14fa4 <ahci_enable_port+0x104>
   15018:	8b 80 28 01 00 00    	mov    eax,DWORD PTR [eax+0x128]
   1501e:	83 e0 07             	and    eax,0x7
   15021:	83 f8 03             	cmp    eax,0x3
   15024:	74 2b                	je     15051 <ahci_enable_port+0x1b1>
   15026:	8b 42 0c             	mov    eax,DWORD PTR [edx+0xc]
   15029:	c1 e8 08             	shr    eax,0x8
   1502c:	83 e0 0f             	and    eax,0xf
   1502f:	3c 02                	cmp    al,0x2
   15031:	74 1e                	je     15051 <ahci_enable_port+0x1b1>
   15033:	8b 42 0c             	mov    eax,DWORD PTR [edx+0xc]
   15036:	c1 e8 08             	shr    eax,0x8
   15039:	83 e0 0f             	and    eax,0xf
   1503c:	3c 06                	cmp    al,0x6
   1503e:	74 11                	je     15051 <ahci_enable_port+0x1b1>
   15040:	8b 42 0c             	mov    eax,DWORD PTR [edx+0xc]
   15043:	c1 e8 08             	shr    eax,0x8
   15046:	83 e0 0f             	and    eax,0xf
   15049:	3c 08                	cmp    al,0x8
   1504b:	0f 85 53 ff ff ff    	jne    14fa4 <ahci_enable_port+0x104>
   15051:	89 f0                	mov    eax,esi
   15053:	83 ec 04             	sub    esp,0x4
   15056:	c1 e0 07             	shl    eax,0x7
   15059:	01 c7                	add    edi,eax
   1505b:	8b 87 18 01 00 00    	mov    eax,DWORD PTR [edi+0x118]
   15061:	83 c8 01             	or     eax,0x1
   15064:	89 87 18 01 00 00    	mov    DWORD PTR [edi+0x118],eax
   1506a:	c7 87 14 01 00 00 70 	mov    DWORD PTR [edi+0x114],0xf8400070
   15071:	00 40 f8 
   15074:	56                   	push   esi
   15075:	68 e8 d1 06 00       	push   0x6d1e8
   1507a:	68 00 20 00 00       	push   0x2000
   1507f:	e8 fc d5 00 00       	call   22680 <printd>
   15084:	83 c4 10             	add    esp,0x10
   15087:	83 c4 1c             	add    esp,0x1c
   1508a:	5b                   	pop    ebx
   1508b:	5e                   	pop    esi
   1508c:	5f                   	pop    edi
   1508d:	5d                   	pop    ebp
   1508e:	c3                   	ret    
   1508f:	90                   	nop
   15090:	8b 83 20 01 00 00    	mov    eax,DWORD PTR [ebx+0x120]
   15096:	e9 99 fe ff ff       	jmp    14f34 <ahci_enable_port+0x94>
   1509b:	90                   	nop
   1509c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   150a0:	83 ec 08             	sub    esp,0x8
   150a3:	bd 01 00 00 00       	mov    ebp,0x1
   150a8:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   150ac:	57                   	push   edi
   150ad:	e8 2e fa ff ff       	call   14ae0 <ahci_port_activate_device>
   150b2:	83 c4 10             	add    esp,0x10
   150b5:	e9 16 fe ff ff       	jmp    14ed0 <ahci_enable_port+0x30>
   150ba:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

000150c0 <ahciProbePorts>:
ahciProbePorts():
   150c0:	55                   	push   ebp
   150c1:	57                   	push   edi
   150c2:	56                   	push   esi
   150c3:	53                   	push   ebx
   150c4:	83 ec 2c             	sub    esp,0x2c
   150c7:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   150cb:	8b 70 0c             	mov    esi,DWORD PTR [eax+0xc]
   150ce:	a1 50 3a 02 00       	mov    eax,ds:0x23a50
   150d3:	c1 e0 10             	shl    eax,0x10
   150d6:	05 00 30 b1 00       	add    eax,0xb13000
   150db:	85 f6                	test   esi,esi
   150dd:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   150e1:	0f 85 92 01 00 00    	jne    15279 <ahciProbePorts+0x1b9>
   150e7:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   150eb:	31 db                	xor    ebx,ebx
   150ed:	8d a8 00 01 00 00    	lea    ebp,[eax+0x100]
   150f3:	eb 14                	jmp    15109 <ahciProbePorts+0x49>
   150f5:	8d 76 00             	lea    esi,[esi+0x0]
   150f8:	83 c3 01             	add    ebx,0x1
   150fb:	d1 ee                	shr    esi,1
   150fd:	83 ed 80             	sub    ebp,0xffffff80
   15100:	83 fb 20             	cmp    ebx,0x20
   15103:	0f 84 86 00 00 00    	je     1518f <ahciProbePorts+0xcf>
   15109:	f7 c6 01 00 00 00    	test   esi,0x1
   1510f:	74 e7                	je     150f8 <ahciProbePorts+0x38>
   15111:	83 ec 08             	sub    esp,0x8
   15114:	53                   	push   ebx
   15115:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
   15119:	e8 82 fd ff ff       	call   14ea0 <ahci_enable_port>
   1511e:	c7 44 24 2c 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
   15125:	00 
   15126:	58                   	pop    eax
   15127:	5a                   	pop    edx
   15128:	8d 44 24 24          	lea    eax,[esp+0x24]
   1512c:	50                   	push   eax
   1512d:	55                   	push   ebp
   1512e:	e8 bd e9 ff ff       	call   13af0 <check_type>
   15133:	59                   	pop    ecx
   15134:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
   15138:	55                   	push   ebp
   15139:	89 c7                	mov    edi,eax
   1513b:	53                   	push   ebx
   1513c:	68 70 d2 06 00       	push   0x6d270
   15141:	68 00 20 00 00       	push   0x2000
   15146:	e8 35 d5 00 00       	call   22680 <printd>
   1514b:	83 c4 20             	add    esp,0x20
   1514e:	83 ff 01             	cmp    edi,0x1
   15151:	74 4d                	je     151a0 <ahciProbePorts+0xe0>
   15153:	83 ff 04             	cmp    edi,0x4
   15156:	0f 84 a4 00 00 00    	je     15200 <ahciProbePorts+0x140>
   1515c:	83 ff 02             	cmp    edi,0x2
   1515f:	0f 84 fb 00 00 00    	je     15260 <ahciProbePorts+0x1a0>
   15165:	83 ff 03             	cmp    edi,0x3
   15168:	75 8e                	jne    150f8 <ahciProbePorts+0x38>
   1516a:	55                   	push   ebp
   1516b:	53                   	push   ebx
   1516c:	83 c3 01             	add    ebx,0x1
   1516f:	68 24 d3 06 00       	push   0x6d324
   15174:	68 00 20 00 00       	push   0x2000
   15179:	d1 ee                	shr    esi,1
   1517b:	83 ed 80             	sub    ebp,0xffffff80
   1517e:	e8 fd d4 00 00       	call   22680 <printd>
   15183:	83 c4 10             	add    esp,0x10
   15186:	83 fb 20             	cmp    ebx,0x20
   15189:	0f 85 7a ff ff ff    	jne    15109 <ahciProbePorts+0x49>
   1518f:	83 c4 2c             	add    esp,0x2c
   15192:	5b                   	pop    ebx
   15193:	5e                   	pop    esi
   15194:	5f                   	pop    edi
   15195:	5d                   	pop    ebp
   15196:	c3                   	ret    
   15197:	89 f6                	mov    esi,esi
   15199:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   151a0:	55                   	push   ebp
   151a1:	53                   	push   ebx
   151a2:	68 9c d2 06 00       	push   0x6d29c
   151a7:	68 00 20 00 00       	push   0x2000
   151ac:	e8 cf d4 00 00       	call   22680 <printd>
   151b1:	89 d8                	mov    eax,ebx
   151b3:	c1 e0 07             	shl    eax,0x7
   151b6:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
   151ba:	8b 88 08 01 00 00    	mov    ecx,DWORD PTR [eax+0x108]
   151c0:	8b 80 00 01 00 00    	mov    eax,DWORD PTR [eax+0x100]
   151c6:	51                   	push   ecx
   151c7:	50                   	push   eax
   151c8:	68 57 06 04 00       	push   0x40657
   151cd:	68 00 20 00 00       	push   0x2000
   151d2:	e8 a9 d4 00 00       	call   22680 <printd>
   151d7:	83 c4 1c             	add    esp,0x1c
   151da:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   151de:	53                   	push   ebx
   151df:	55                   	push   ebp
   151e0:	e8 0b ef ff ff       	call   140f0 <port_rebase>
   151e5:	59                   	pop    ecx
   151e6:	5f                   	pop    edi
   151e7:	6a 01                	push   0x1
   151e9:	55                   	push   ebp
   151ea:	e8 11 f4 ff ff       	call   14600 <ahciIdentify>
   151ef:	83 c4 10             	add    esp,0x10
   151f2:	e9 01 ff ff ff       	jmp    150f8 <ahciProbePorts+0x38>
   151f7:	89 f6                	mov    esi,esi
   151f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15200:	55                   	push   ebp
   15201:	53                   	push   ebx
   15202:	68 c8 d2 06 00       	push   0x6d2c8
   15207:	68 00 20 00 00       	push   0x2000
   1520c:	e8 6f d4 00 00       	call   22680 <printd>
   15211:	89 d8                	mov    eax,ebx
   15213:	c1 e0 07             	shl    eax,0x7
   15216:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
   1521a:	8b 88 08 01 00 00    	mov    ecx,DWORD PTR [eax+0x108]
   15220:	8b 80 00 01 00 00    	mov    eax,DWORD PTR [eax+0x100]
   15226:	51                   	push   ecx
   15227:	50                   	push   eax
   15228:	68 57 06 04 00       	push   0x40657
   1522d:	68 00 20 00 00       	push   0x2000
   15232:	e8 49 d4 00 00       	call   22680 <printd>
   15237:	83 c4 1c             	add    esp,0x1c
   1523a:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1523e:	53                   	push   ebx
   1523f:	55                   	push   ebp
   15240:	e8 ab ee ff ff       	call   140f0 <port_rebase>
   15245:	58                   	pop    eax
   15246:	5a                   	pop    edx
   15247:	6a 04                	push   0x4
   15249:	55                   	push   ebp
   1524a:	e8 b1 f3 ff ff       	call   14600 <ahciIdentify>
   1524f:	83 c4 10             	add    esp,0x10
   15252:	e9 a1 fe ff ff       	jmp    150f8 <ahciProbePorts+0x38>
   15257:	89 f6                	mov    esi,esi
   15259:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15260:	55                   	push   ebp
   15261:	53                   	push   ebx
   15262:	68 f8 d2 06 00       	push   0x6d2f8
   15267:	68 00 20 00 00       	push   0x2000
   1526c:	e8 0f d4 00 00       	call   22680 <printd>
   15271:	83 c4 10             	add    esp,0x10
   15274:	e9 7f fe ff ff       	jmp    150f8 <ahciProbePorts+0x38>
   15279:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   1527d:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
   15280:	50                   	push   eax
   15281:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
   15285:	68 3c d2 06 00       	push   0x6d23c
   1528a:	68 00 20 00 00       	push   0x2000
   1528f:	e8 ec d3 00 00       	call   22680 <printd>
   15294:	83 c4 10             	add    esp,0x10
   15297:	e9 4b fe ff ff       	jmp    150e7 <ahciProbePorts+0x27>
   1529c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000152a0 <ahciInit>:
ahciInit():
   152a0:	57                   	push   edi
   152a1:	56                   	push   esi
   152a2:	53                   	push   ebx
   152a3:	81 ec a4 00 00 00    	sub    esp,0xa4
   152a9:	c7 05 04 98 12 00 04 	mov    DWORD PTR ds:0x129804,0x4
   152b0:	00 00 00 
   152b3:	68 96 00 00 00       	push   0x96
   152b8:	6a 00                	push   0x0
   152ba:	8d 7c 24 16          	lea    edi,[esp+0x16]
   152be:	57                   	push   edi
   152bf:	e8 bc ba 00 00       	call   20d80 <memset>
   152c4:	83 c4 10             	add    esp,0x10
   152c7:	80 3d ec 97 12 00 00 	cmp    BYTE PTR ds:0x1297ec,0x0
   152ce:	0f 84 2c 03 00 00    	je     15600 <ahciInit+0x360>
   152d4:	31 f6                	xor    esi,esi
   152d6:	31 db                	xor    ebx,ebx
   152d8:	31 d2                	xor    edx,edx
   152da:	eb 19                	jmp    152f5 <ahciInit+0x55>
   152dc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   152e0:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   152e7:	83 c3 01             	add    ebx,0x1
   152ea:	83 c6 50             	add    esi,0x50
   152ed:	39 d8                	cmp    eax,ebx
   152ef:	0f 8e 5b 01 00 00    	jle    15450 <ahciInit+0x1b0>
   152f5:	a1 f4 97 12 00       	mov    eax,ds:0x1297f4
   152fa:	01 f0                	add    eax,esi
   152fc:	83 78 10 01          	cmp    DWORD PTR [eax+0x10],0x1
   15300:	75 de                	jne    152e0 <ahciInit+0x40>
   15302:	83 78 14 06          	cmp    DWORD PTR [eax+0x14],0x6
   15306:	75 d8                	jne    152e0 <ahciInit+0x40>
   15308:	83 ec 04             	sub    esp,0x4
   1530b:	6a 50                	push   0x50
   1530d:	50                   	push   eax
   1530e:	68 20 98 12 00       	push   0x129820
   15313:	e8 48 c3 00 00       	call   21660 <memcpy>
   15318:	58                   	pop    eax
   15319:	5a                   	pop    edx
   1531a:	57                   	push   edi
   1531b:	68 20 98 12 00       	push   0x129820
   15320:	e8 2b 08 00 00       	call   15b50 <getDeviceNameP>
   15325:	8b 15 f4 97 12 00    	mov    edx,DWORD PTR ds:0x1297f4
   1532b:	83 c4 08             	add    esp,0x8
   1532e:	50                   	push   eax
   1532f:	01 f2                	add    edx,esi
   15331:	ff 72 14             	push   DWORD PTR [edx+0x14]
   15334:	ff 72 10             	push   DWORD PTR [edx+0x10]
   15337:	53                   	push   ebx
   15338:	68 84 d3 06 00       	push   0x6d384
   1533d:	68 00 20 00 00       	push   0x2000
   15342:	e8 39 d3 00 00       	call   22680 <printd>
   15347:	83 c4 1c             	add    esp,0x1c
   1534a:	ff 35 54 98 12 00    	push   DWORD PTR ds:0x129854
   15350:	68 bc d3 06 00       	push   0x6d3bc
   15355:	68 00 20 00 00       	push   0x2000
   1535a:	e8 21 d3 00 00       	call   22680 <printd>
   1535f:	69 05 50 3a 02 00 00 	imul   eax,DWORD PTR ds:0x23a50,0x11000
   15366:	10 01 00 
   15369:	83 c4 0c             	add    esp,0xc
   1536c:	6a 73                	push   0x73
   1536e:	ff 35 54 98 12 00    	push   DWORD PTR ds:0x129854
   15374:	05 00 30 ad 00       	add    eax,0xad3000
   15379:	50                   	push   eax
   1537a:	a3 94 99 12 00       	mov    ds:0x129994,eax
   1537f:	e8 fc c9 ff ff       	call   11d80 <kMapPage>
   15384:	a1 54 98 12 00       	mov    eax,ds:0x129854
   15389:	83 c4 0c             	add    esp,0xc
   1538c:	6a 73                	push   0x73
   1538e:	50                   	push   eax
   1538f:	50                   	push   eax
   15390:	e8 eb c9 ff ff       	call   11d80 <kMapPage>
   15395:	0f 20 d8             	mov    eax,cr3
   15398:	0f 22 d8             	mov    cr3,eax
   1539b:	a1 50 3a 02 00       	mov    eax,ds:0x23a50
   153a0:	83 c4 0c             	add    esp,0xc
   153a3:	68 00 11 00 00       	push   0x1100
   153a8:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   153ae:	8d 50 01             	lea    edx,[eax+0x1]
   153b1:	69 c0 00 11 00 00    	imul   eax,eax,0x1100
   153b7:	89 15 50 3a 02 00    	mov    DWORD PTR ds:0x23a50,edx
   153bd:	05 40 85 08 00       	add    eax,0x88540
   153c2:	50                   	push   eax
   153c3:	e8 98 c2 00 00       	call   21660 <memcpy>
   153c8:	83 c4 0c             	add    esp,0xc
   153cb:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   153d1:	68 28 39 06 00       	push   0x63928
   153d6:	68 00 20 00 00       	push   0x2000
   153db:	e8 a0 d2 00 00       	call   22680 <printd>
   153e0:	a1 28 99 12 00       	mov    eax,ds:0x129928
   153e5:	83 c4 0c             	add    esp,0xc
   153e8:	6a 04                	push   0x4
   153ea:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   153f0:	8d 50 01             	lea    edx,[eax+0x1]
   153f3:	89 15 28 99 12 00    	mov    DWORD PTR ds:0x129928,edx
   153f9:	8b 15 24 99 12 00    	mov    edx,DWORD PTR ds:0x129924
   153ff:	8d 04 82             	lea    eax,[edx+eax*4]
   15402:	50                   	push   eax
   15403:	e8 58 c2 00 00       	call   21660 <memcpy>
   15408:	a1 94 99 12 00       	mov    eax,ds:0x129994
   1540d:	83 c4 10             	add    esp,0x10
   15410:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15413:	c1 ea 1f             	shr    edx,0x1f
   15416:	84 d2                	test   dl,dl
   15418:	0f 84 5a 02 00 00    	je     15678 <ahciInit+0x3d8>
   1541e:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15421:	83 ca 02             	or     edx,0x2
   15424:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   15427:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
   1542a:	83 e2 01             	and    edx,0x1
   1542d:	0f 85 25 02 00 00    	jne    15658 <ahciInit+0x3b8>
   15433:	83 ec 0c             	sub    esp,0xc
   15436:	50                   	push   eax
   15437:	e8 84 fc ff ff       	call   150c0 <ahciProbePorts>
   1543c:	83 c4 10             	add    esp,0x10
   1543f:	ba 01 00 00 00       	mov    edx,0x1
   15444:	e9 97 fe ff ff       	jmp    152e0 <ahciInit+0x40>
   15449:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15450:	85 c0                	test   eax,eax
   15452:	0f 84 68 01 00 00    	je     155c0 <ahciInit+0x320>
   15458:	31 f6                	xor    esi,esi
   1545a:	31 db                	xor    ebx,ebx
   1545c:	eb 10                	jmp    1546e <ahciInit+0x1ce>
   1545e:	66 90                	xchg   ax,ax
   15460:	83 c3 01             	add    ebx,0x1
   15463:	83 c6 50             	add    esi,0x50
   15466:	39 d8                	cmp    eax,ebx
   15468:	0f 8e 52 01 00 00    	jle    155c0 <ahciInit+0x320>
   1546e:	8b 0d fc 97 12 00    	mov    ecx,DWORD PTR ds:0x1297fc
   15474:	01 f1                	add    ecx,esi
   15476:	83 79 10 01          	cmp    DWORD PTR [ecx+0x10],0x1
   1547a:	75 e4                	jne    15460 <ahciInit+0x1c0>
   1547c:	83 79 14 06          	cmp    DWORD PTR [ecx+0x14],0x6
   15480:	75 de                	jne    15460 <ahciInit+0x1c0>
   15482:	83 ec 04             	sub    esp,0x4
   15485:	6a 50                	push   0x50
   15487:	51                   	push   ecx
   15488:	68 20 98 12 00       	push   0x129820
   1548d:	e8 ce c1 00 00       	call   21660 <memcpy>
   15492:	58                   	pop    eax
   15493:	5a                   	pop    edx
   15494:	57                   	push   edi
   15495:	68 20 98 12 00       	push   0x129820
   1549a:	e8 b1 06 00 00       	call   15b50 <getDeviceNameP>
   1549f:	8b 15 fc 97 12 00    	mov    edx,DWORD PTR ds:0x1297fc
   154a5:	83 c4 08             	add    esp,0x8
   154a8:	50                   	push   eax
   154a9:	01 f2                	add    edx,esi
   154ab:	ff 72 14             	push   DWORD PTR [edx+0x14]
   154ae:	ff 72 10             	push   DWORD PTR [edx+0x10]
   154b1:	53                   	push   ebx
   154b2:	68 08 d4 06 00       	push   0x6d408
   154b7:	68 00 20 00 00       	push   0x2000
   154bc:	e8 bf d1 00 00       	call   22680 <printd>
   154c1:	83 c4 1c             	add    esp,0x1c
   154c4:	ff 35 54 98 12 00    	push   DWORD PTR ds:0x129854
   154ca:	68 8c 06 04 00       	push   0x4068c
   154cf:	68 00 20 00 00       	push   0x2000
   154d4:	e8 a7 d1 00 00       	call   22680 <printd>
   154d9:	69 05 50 3a 02 00 00 	imul   eax,DWORD PTR ds:0x23a50,0x11000
   154e0:	10 01 00 
   154e3:	83 c4 0c             	add    esp,0xc
   154e6:	6a 73                	push   0x73
   154e8:	ff 35 54 98 12 00    	push   DWORD PTR ds:0x129854
   154ee:	05 00 30 ad 00       	add    eax,0xad3000
   154f3:	50                   	push   eax
   154f4:	a3 94 99 12 00       	mov    ds:0x129994,eax
   154f9:	e8 82 c8 ff ff       	call   11d80 <kMapPage>
   154fe:	0f 20 d8             	mov    eax,cr3
   15501:	0f 22 d8             	mov    cr3,eax
   15504:	a1 50 3a 02 00       	mov    eax,ds:0x23a50
   15509:	83 c4 0c             	add    esp,0xc
   1550c:	68 00 11 00 00       	push   0x1100
   15511:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   15517:	8d 50 01             	lea    edx,[eax+0x1]
   1551a:	69 c0 00 11 00 00    	imul   eax,eax,0x1100
   15520:	89 15 50 3a 02 00    	mov    DWORD PTR ds:0x23a50,edx
   15526:	05 40 85 08 00       	add    eax,0x88540
   1552b:	50                   	push   eax
   1552c:	e8 2f c1 00 00       	call   21660 <memcpy>
   15531:	83 c4 0c             	add    esp,0xc
   15534:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   1553a:	68 40 d4 06 00       	push   0x6d440
   1553f:	68 00 20 00 00       	push   0x2000
   15544:	e8 37 d1 00 00       	call   22680 <printd>
   15549:	8b 15 28 99 12 00    	mov    edx,DWORD PTR ds:0x129928
   1554f:	a1 24 99 12 00       	mov    eax,ds:0x129924
   15554:	83 c4 0c             	add    esp,0xc
   15557:	6a 04                	push   0x4
   15559:	ff 35 94 99 12 00    	push   DWORD PTR ds:0x129994
   1555f:	8d 04 90             	lea    eax,[eax+edx*4]
   15562:	50                   	push   eax
   15563:	e8 f8 c0 00 00       	call   21660 <memcpy>
   15568:	a1 94 99 12 00       	mov    eax,ds:0x129994
   1556d:	83 c4 10             	add    esp,0x10
   15570:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15573:	c1 ea 1f             	shr    edx,0x1f
   15576:	84 d2                	test   dl,dl
   15578:	0f 84 aa 00 00 00    	je     15628 <ahciInit+0x388>
   1557e:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15581:	83 ca 02             	or     edx,0x2
   15584:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   15587:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
   1558a:	83 e2 01             	and    edx,0x1
   1558d:	0f 85 15 01 00 00    	jne    156a8 <ahciInit+0x408>
   15593:	83 ec 0c             	sub    esp,0xc
   15596:	83 c3 01             	add    ebx,0x1
   15599:	83 c6 50             	add    esi,0x50
   1559c:	50                   	push   eax
   1559d:	e8 1e fb ff ff       	call   150c0 <ahciProbePorts>
   155a2:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   155a9:	83 c4 10             	add    esp,0x10
   155ac:	ba 01 00 00 00       	mov    edx,0x1
   155b1:	39 d8                	cmp    eax,ebx
   155b3:	0f 8f b5 fe ff ff    	jg     1546e <ahciInit+0x1ce>
   155b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   155c0:	84 d2                	test   dl,dl
   155c2:	b8 01 00 00 00       	mov    eax,0x1
   155c7:	74 0f                	je     155d8 <ahciInit+0x338>
   155c9:	81 c4 a0 00 00 00    	add    esp,0xa0
   155cf:	5b                   	pop    ebx
   155d0:	5e                   	pop    esi
   155d1:	5f                   	pop    edi
   155d2:	c3                   	ret    
   155d3:	90                   	nop
   155d4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   155d8:	83 ec 08             	sub    esp,0x8
   155db:	68 a0 06 04 00       	push   0x406a0
   155e0:	68 00 20 00 00       	push   0x2000
   155e5:	e8 96 d0 00 00       	call   22680 <printd>
   155ea:	83 c4 10             	add    esp,0x10
   155ed:	31 c0                	xor    eax,eax
   155ef:	81 c4 a0 00 00 00    	add    esp,0xa0
   155f5:	5b                   	pop    ebx
   155f6:	5e                   	pop    esi
   155f7:	5f                   	pop    edi
   155f8:	c3                   	ret    
   155f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15600:	83 ec 08             	sub    esp,0x8
   15603:	68 50 d3 06 00       	push   0x6d350
   15608:	68 00 20 00 00       	push   0x2000
   1560d:	e8 6e d0 00 00       	call   22680 <printd>
   15612:	83 c4 10             	add    esp,0x10
   15615:	31 c0                	xor    eax,eax
   15617:	81 c4 a0 00 00 00    	add    esp,0xa0
   1561d:	5b                   	pop    ebx
   1561e:	5e                   	pop    esi
   1561f:	5f                   	pop    edi
   15620:	c3                   	ret    
   15621:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15628:	83 ec 08             	sub    esp,0x8
   1562b:	68 74 06 04 00       	push   0x40674
   15630:	68 00 20 00 00       	push   0x2000
   15635:	e8 46 d0 00 00       	call   22680 <printd>
   1563a:	a1 94 99 12 00       	mov    eax,ds:0x129994
   1563f:	83 c4 10             	add    esp,0x10
   15642:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15645:	81 ca 00 00 00 80    	or     edx,0x80000000
   1564b:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   1564e:	e9 2b ff ff ff       	jmp    1557e <ahciInit+0x2de>
   15653:	90                   	nop
   15654:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15658:	83 ec 0c             	sub    esp,0xc
   1565b:	68 e4 d3 06 00       	push   0x6d3e4
   15660:	e8 cb ca 00 00       	call   22130 <panic>
   15665:	a1 94 99 12 00       	mov    eax,ds:0x129994
   1566a:	83 c4 10             	add    esp,0x10
   1566d:	e9 c1 fd ff ff       	jmp    15433 <ahciInit+0x193>
   15672:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15678:	83 ec 08             	sub    esp,0x8
   1567b:	68 74 06 04 00       	push   0x40674
   15680:	68 00 20 00 00       	push   0x2000
   15685:	e8 f6 cf 00 00       	call   22680 <printd>
   1568a:	a1 94 99 12 00       	mov    eax,ds:0x129994
   1568f:	83 c4 10             	add    esp,0x10
   15692:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
   15695:	81 ca 00 00 00 80    	or     edx,0x80000000
   1569b:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   1569e:	e9 7b fd ff ff       	jmp    1541e <ahciInit+0x17e>
   156a3:	90                   	nop
   156a4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   156a8:	83 ec 0c             	sub    esp,0xc
   156ab:	68 e4 d3 06 00       	push   0x6d3e4
   156b0:	e8 7b ca 00 00       	call   22130 <panic>
   156b5:	a1 94 99 12 00       	mov    eax,ds:0x129994
   156ba:	83 c4 10             	add    esp,0x10
   156bd:	e9 d1 fe ff ff       	jmp    15593 <ahciInit+0x2f3>
   156c2:	66 90                	xchg   ax,ax
   156c4:	66 90                	xchg   ax,ax
   156c6:	66 90                	xchg   ax,ax
   156c8:	66 90                	xchg   ax,ax
   156ca:	66 90                	xchg   ax,ax
   156cc:	66 90                	xchg   ax,ax
   156ce:	66 90                	xchg   ax,ax

000156d0 <pciConfigReadWord>:
pciConfigReadWord():
   156d0:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   156d4:	89 c8                	mov    eax,ecx
   156d6:	25 fc 00 00 00       	and    eax,0xfc
   156db:	0d 00 00 00 80       	or     eax,0x80000000
   156e0:	89 c2                	mov    edx,eax
   156e2:	0f b6 44 24 0c       	movzx  eax,BYTE PTR [esp+0xc]
   156e7:	c1 e0 08             	shl    eax,0x8
   156ea:	09 d0                	or     eax,edx
   156ec:	0f b6 54 24 08       	movzx  edx,BYTE PTR [esp+0x8]
   156f1:	c1 e2 0b             	shl    edx,0xb
   156f4:	09 d0                	or     eax,edx
   156f6:	0f b6 54 24 04       	movzx  edx,BYTE PTR [esp+0x4]
   156fb:	c1 e2 10             	shl    edx,0x10
   156fe:	09 d0                	or     eax,edx
   15700:	ba f8 0c 00 00       	mov    edx,0xcf8
   15705:	ef                   	out    dx,eax
   15706:	ba fc 0c 00 00       	mov    edx,0xcfc
   1570b:	ed                   	in     eax,dx
   1570c:	83 e1 02             	and    ecx,0x2
   1570f:	0f b6 c9             	movzx  ecx,cl
   15712:	c1 e1 03             	shl    ecx,0x3
   15715:	d3 e8                	shr    eax,cl
   15717:	c3                   	ret    
   15718:	90                   	nop
   15719:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00015720 <pciConfigReadDWord>:
pciConfigReadDWord():
   15720:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   15724:	25 fc 00 00 00       	and    eax,0xfc
   15729:	0d 00 00 00 80       	or     eax,0x80000000
   1572e:	89 c2                	mov    edx,eax
   15730:	0f b6 44 24 0c       	movzx  eax,BYTE PTR [esp+0xc]
   15735:	c1 e0 08             	shl    eax,0x8
   15738:	09 d0                	or     eax,edx
   1573a:	0f b6 54 24 08       	movzx  edx,BYTE PTR [esp+0x8]
   1573f:	c1 e2 0b             	shl    edx,0xb
   15742:	09 d0                	or     eax,edx
   15744:	0f b6 54 24 04       	movzx  edx,BYTE PTR [esp+0x4]
   15749:	c1 e2 10             	shl    edx,0x10
   1574c:	09 d0                	or     eax,edx
   1574e:	ba f8 0c 00 00       	mov    edx,0xcf8
   15753:	ef                   	out    dx,eax
   15754:	ba fc 0c 00 00       	mov    edx,0xcfc
   15759:	ed                   	in     eax,dx
   1575a:	c3                   	ret    
   1575b:	90                   	nop
   1575c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00015760 <getVendorLongName>:
getVendorLongName():
   15760:	56                   	push   esi
   15761:	b9 8c b2 03 00       	mov    ecx,0x3b28c
   15766:	53                   	push   ebx
   15767:	b8 36 1b 00 00       	mov    eax,0x1b36
   1576c:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   15770:	0f b7 5c 24 0c       	movzx  ebx,WORD PTR [esp+0xc]
   15775:	31 d2                	xor    edx,edx
   15777:	eb 18                	jmp    15791 <getVendorLongName+0x31>
   15779:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15780:	83 c2 01             	add    edx,0x1
   15783:	81 fa 21 06 00 00    	cmp    edx,0x621
   15789:	74 25                	je     157b0 <getVendorLongName+0x50>
   1578b:	0f b7 01             	movzx  eax,WORD PTR [ecx]
   1578e:	83 c1 0c             	add    ecx,0xc
   15791:	39 d8                	cmp    eax,ebx
   15793:	75 eb                	jne    15780 <getVendorLongName+0x20>
   15795:	8d 04 52             	lea    eax,[edx+edx*2]
   15798:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
   1579c:	8b 04 85 88 b2 03 00 	mov    eax,DWORD PTR [eax*4+0x3b288]
   157a3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   157a7:	5b                   	pop    ebx
   157a8:	5e                   	pop    esi
   157a9:	e9 f2 cf 00 00       	jmp    227a0 <strcpy>
   157ae:	66 90                	xchg   ax,ax
   157b0:	c7 44 24 10 bd 06 04 	mov    DWORD PTR [esp+0x10],0x406bd
   157b7:	00 
   157b8:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
   157bc:	5b                   	pop    ebx
   157bd:	5e                   	pop    esi
   157be:	e9 dd cf 00 00       	jmp    227a0 <strcpy>
   157c3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   157c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000157d0 <getDeviceName>:
getDeviceName():
   157d0:	57                   	push   edi
   157d1:	b8 00 41 02 00       	mov    eax,0x24100
   157d6:	56                   	push   esi
   157d7:	31 d2                	xor    edx,edx
   157d9:	53                   	push   ebx
   157da:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   157de:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   157e2:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
   157e6:	eb 16                	jmp    157fe <getDeviceName+0x2e>
   157e8:	90                   	nop
   157e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   157f0:	83 c2 01             	add    edx,0x1
   157f3:	83 c0 0c             	add    eax,0xc
   157f6:	81 fa 58 1b 00 00    	cmp    edx,0x1b58
   157fc:	74 32                	je     15830 <getDeviceName+0x60>
   157fe:	0f b7 08             	movzx  ecx,WORD PTR [eax]
   15801:	39 d9                	cmp    ecx,ebx
   15803:	75 eb                	jne    157f0 <getDeviceName+0x20>
   15805:	0f b7 48 02          	movzx  ecx,WORD PTR [eax+0x2]
   15809:	39 f1                	cmp    ecx,esi
   1580b:	75 e3                	jne    157f0 <getDeviceName+0x20>
   1580d:	8d 04 52             	lea    eax,[edx+edx*2]
   15810:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
   15814:	8b 04 85 08 41 02 00 	mov    eax,DWORD PTR [eax*4+0x24108]
   1581b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   1581f:	5b                   	pop    ebx
   15820:	5e                   	pop    esi
   15821:	5f                   	pop    edi
   15822:	e9 79 cf 00 00       	jmp    227a0 <strcpy>
   15827:	89 f6                	mov    esi,esi
   15829:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15830:	c7 44 24 14 bd 06 04 	mov    DWORD PTR [esp+0x14],0x406bd
   15837:	00 
   15838:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
   1583c:	5b                   	pop    ebx
   1583d:	5e                   	pop    esi
   1583e:	5f                   	pop    edi
   1583f:	e9 5c cf 00 00       	jmp    227a0 <strcpy>
   15844:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1584a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00015850 <printPCIConfig>:
printPCIConfig():
   15850:	55                   	push   ebp
   15851:	57                   	push   edi
   15852:	56                   	push   esi
   15853:	53                   	push   ebx
   15854:	31 f6                	xor    esi,esi
   15856:	81 ec b4 00 00 00    	sub    esp,0xb4
   1585c:	0f b6 15 ec 97 12 00 	movzx  edx,BYTE PTR ds:0x1297ec
   15863:	0f b6 05 ed 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ed
   1586a:	01 d0                	add    eax,edx
   1586c:	50                   	push   eax
   1586d:	68 64 d4 06 00       	push   0x6d464
   15872:	e8 e9 cd 00 00       	call   22660 <printk>
   15877:	c7 04 24 c7 06 04 00 	mov    DWORD PTR [esp],0x406c7
   1587e:	e8 bd 15 00 00       	call   16e40 <puts>
   15883:	c7 04 24 8c d4 06 00 	mov    DWORD PTR [esp],0x6d48c
   1588a:	e8 d1 cd 00 00       	call   22660 <printk>
   1588f:	83 c4 10             	add    esp,0x10
   15892:	80 3d ec 97 12 00 00 	cmp    BYTE PTR ds:0x1297ec,0x0
   15899:	0f 84 c1 00 00 00    	je     15960 <printPCIConfig+0x110>
   1589f:	8d 5c 24 0a          	lea    ebx,[esp+0xa]
   158a3:	eb 12                	jmp    158b7 <printPCIConfig+0x67>
   158a5:	8d 76 00             	lea    esi,[esi+0x0]
   158a8:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   158af:	39 f0                	cmp    eax,esi
   158b1:	0f 8e a9 00 00 00    	jle    15960 <printPCIConfig+0x110>
   158b7:	8d 3c b6             	lea    edi,[esi+esi*4]
   158ba:	a1 f4 97 12 00       	mov    eax,ds:0x1297f4
   158bf:	83 ec 08             	sub    esp,0x8
   158c2:	83 c6 01             	add    esi,0x1
   158c5:	c1 e7 04             	shl    edi,0x4
   158c8:	01 f8                	add    eax,edi
   158ca:	0f b7 50 08          	movzx  edx,WORD PTR [eax+0x8]
   158ce:	ff 70 14             	push   DWORD PTR [eax+0x14]
   158d1:	ff 70 10             	push   DWORD PTR [eax+0x10]
   158d4:	52                   	push   edx
   158d5:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
   158d9:	52                   	push   edx
   158da:	0f b6 50 3e          	movzx  edx,BYTE PTR [eax+0x3e]
   158de:	52                   	push   edx
   158df:	0f b6 50 3d          	movzx  edx,BYTE PTR [eax+0x3d]
   158e3:	52                   	push   edx
   158e4:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
   158e8:	52                   	push   edx
   158e9:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
   158ed:	52                   	push   edx
   158ee:	0f b6 00             	movzx  eax,BYTE PTR [eax]
   158f1:	50                   	push   eax
   158f2:	68 c8 d4 06 00       	push   0x6d4c8
   158f7:	e8 64 cd 00 00       	call   22660 <printk>
   158fc:	03 3d f4 97 12 00    	add    edi,DWORD PTR ds:0x1297f4
   15902:	83 c4 2c             	add    esp,0x2c
   15905:	53                   	push   ebx
   15906:	0f b7 47 08          	movzx  eax,WORD PTR [edi+0x8]
   1590a:	50                   	push   eax
   1590b:	0f b7 47 06          	movzx  eax,WORD PTR [edi+0x6]
   1590f:	50                   	push   eax
   15910:	e8 bb fe ff ff       	call   157d0 <getDeviceName>
   15915:	58                   	pop    eax
   15916:	5a                   	pop    edx
   15917:	6a 1c                	push   0x1c
   15919:	53                   	push   ebx
   1591a:	e8 d1 d0 00 00       	call   229f0 <strleft>
   1591f:	59                   	pop    ecx
   15920:	5f                   	pop    edi
   15921:	53                   	push   ebx
   15922:	68 73 3a 06 00       	push   0x63a73
   15927:	e8 34 cd 00 00       	call   22660 <printk>
   1592c:	e8 5f 14 00 00       	call   16d90 <cursorGetMaxY>
   15931:	89 c1                	mov    ecx,eax
   15933:	8d 46 04             	lea    eax,[esi+0x4]
   15936:	83 c4 10             	add    esp,0x10
   15939:	99                   	cdq    
   1593a:	f7 f9                	idiv   ecx
   1593c:	85 d2                	test   edx,edx
   1593e:	0f 85 64 ff ff ff    	jne    158a8 <printPCIConfig+0x58>
   15944:	83 ec 0c             	sub    esp,0xc
   15947:	6a 00                	push   0x0
   15949:	e8 22 bb 00 00       	call   21470 <pauseDisplay>
   1594e:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   15955:	83 c4 10             	add    esp,0x10
   15958:	39 f0                	cmp    eax,esi
   1595a:	0f 8f 57 ff ff ff    	jg     158b7 <printPCIConfig+0x67>
   15960:	83 ec 0c             	sub    esp,0xc
   15963:	89 f7                	mov    edi,esi
   15965:	68 d1 06 04 00       	push   0x406d1
   1596a:	e8 d1 14 00 00       	call   16e40 <puts>
   1596f:	83 c4 10             	add    esp,0x10
   15972:	80 3d ed 97 12 00 00 	cmp    BYTE PTR ds:0x1297ed,0x0
   15979:	0f 84 d9 00 00 00    	je     15a58 <printPCIConfig+0x208>
   1597f:	31 ed                	xor    ebp,ebp
   15981:	8d 5c 24 0a          	lea    ebx,[esp+0xa]
   15985:	eb 1f                	jmp    159a6 <printPCIConfig+0x156>
   15987:	89 f6                	mov    esi,esi
   15989:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15990:	0f b6 15 ed 97 12 00 	movzx  edx,BYTE PTR ds:0x1297ed
   15997:	89 f8                	mov    eax,edi
   15999:	83 c5 4e             	add    ebp,0x4e
   1599c:	29 f0                	sub    eax,esi
   1599e:	39 c2                	cmp    edx,eax
   159a0:	0f 8e b2 00 00 00    	jle    15a58 <printPCIConfig+0x208>
   159a6:	8b 15 f8 97 12 00    	mov    edx,DWORD PTR ds:0x1297f8
   159ac:	83 ec 0c             	sub    esp,0xc
   159af:	83 c7 01             	add    edi,0x1
   159b2:	8d 04 2a             	lea    eax,[edx+ebp*1]
   159b5:	0f b6 52 26          	movzx  edx,BYTE PTR [edx+0x26]
   159b9:	52                   	push   edx
   159ba:	0f b6 50 27          	movzx  edx,BYTE PTR [eax+0x27]
   159be:	52                   	push   edx
   159bf:	0f b6 50 28          	movzx  edx,BYTE PTR [eax+0x28]
   159c3:	52                   	push   edx
   159c4:	0f b7 50 07          	movzx  edx,WORD PTR [eax+0x7]
   159c8:	ff 70 0d             	push   DWORD PTR [eax+0xd]
   159cb:	ff 70 09             	push   DWORD PTR [eax+0x9]
   159ce:	52                   	push   edx
   159cf:	0f b7 50 05          	movzx  edx,WORD PTR [eax+0x5]
   159d3:	52                   	push   edx
   159d4:	0f b6 50 2b          	movzx  edx,BYTE PTR [eax+0x2b]
   159d8:	52                   	push   edx
   159d9:	0f b6 50 2a          	movzx  edx,BYTE PTR [eax+0x2a]
   159dd:	52                   	push   edx
   159de:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
   159e2:	52                   	push   edx
   159e3:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
   159e7:	52                   	push   edx
   159e8:	0f b6 00             	movzx  eax,BYTE PTR [eax]
   159eb:	50                   	push   eax
   159ec:	68 fc d4 06 00       	push   0x6d4fc
   159f1:	e8 6a cc 00 00       	call   22660 <printk>
   159f6:	a1 f8 97 12 00       	mov    eax,ds:0x1297f8
   159fb:	83 c4 3c             	add    esp,0x3c
   159fe:	53                   	push   ebx
   159ff:	01 e8                	add    eax,ebp
   15a01:	0f b7 50 07          	movzx  edx,WORD PTR [eax+0x7]
   15a05:	0f b7 40 05          	movzx  eax,WORD PTR [eax+0x5]
   15a09:	52                   	push   edx
   15a0a:	50                   	push   eax
   15a0b:	e8 c0 fd ff ff       	call   157d0 <getDeviceName>
   15a10:	58                   	pop    eax
   15a11:	5a                   	pop    edx
   15a12:	6a 1c                	push   0x1c
   15a14:	53                   	push   ebx
   15a15:	e8 d6 cf 00 00       	call   229f0 <strleft>
   15a1a:	59                   	pop    ecx
   15a1b:	58                   	pop    eax
   15a1c:	53                   	push   ebx
   15a1d:	68 73 3a 06 00       	push   0x63a73
   15a22:	e8 39 cc 00 00       	call   22660 <printk>
   15a27:	e8 64 13 00 00       	call   16d90 <cursorGetMaxY>
   15a2c:	89 c1                	mov    ecx,eax
   15a2e:	8d 47 04             	lea    eax,[edi+0x4]
   15a31:	83 c4 10             	add    esp,0x10
   15a34:	99                   	cdq    
   15a35:	f7 f9                	idiv   ecx
   15a37:	85 d2                	test   edx,edx
   15a39:	0f 85 51 ff ff ff    	jne    15990 <printPCIConfig+0x140>
   15a3f:	83 ec 0c             	sub    esp,0xc
   15a42:	6a 00                	push   0x0
   15a44:	e8 27 ba 00 00       	call   21470 <pauseDisplay>
   15a49:	83 c4 10             	add    esp,0x10
   15a4c:	e9 3f ff ff ff       	jmp    15990 <printPCIConfig+0x140>
   15a51:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15a58:	83 ec 0c             	sub    esp,0xc
   15a5b:	68 db 06 04 00       	push   0x406db
   15a60:	e8 db 13 00 00       	call   16e40 <puts>
   15a65:	83 c4 10             	add    esp,0x10
   15a68:	80 3d ee 97 12 00 00 	cmp    BYTE PTR ds:0x1297ee,0x0
   15a6f:	0f 84 c3 00 00 00    	je     15b38 <printPCIConfig+0x2e8>
   15a75:	31 ed                	xor    ebp,ebp
   15a77:	31 f6                	xor    esi,esi
   15a79:	8d 5c 24 0a          	lea    ebx,[esp+0xa]
   15a7d:	83 c7 05             	add    edi,0x5
   15a80:	eb 1b                	jmp    15a9d <printPCIConfig+0x24d>
   15a82:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15a88:	0f b6 05 ee 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ee
   15a8f:	83 c6 01             	add    esi,0x1
   15a92:	83 c5 50             	add    ebp,0x50
   15a95:	39 f0                	cmp    eax,esi
   15a97:	0f 8e 9b 00 00 00    	jle    15b38 <printPCIConfig+0x2e8>
   15a9d:	a1 fc 97 12 00       	mov    eax,ds:0x1297fc
   15aa2:	83 ec 08             	sub    esp,0x8
   15aa5:	01 e8                	add    eax,ebp
   15aa7:	0f b7 50 08          	movzx  edx,WORD PTR [eax+0x8]
   15aab:	ff 70 14             	push   DWORD PTR [eax+0x14]
   15aae:	ff 70 10             	push   DWORD PTR [eax+0x10]
   15ab1:	52                   	push   edx
   15ab2:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
   15ab6:	52                   	push   edx
   15ab7:	0f b6 50 3e          	movzx  edx,BYTE PTR [eax+0x3e]
   15abb:	52                   	push   edx
   15abc:	0f b6 50 3d          	movzx  edx,BYTE PTR [eax+0x3d]
   15ac0:	52                   	push   edx
   15ac1:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
   15ac5:	52                   	push   edx
   15ac6:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
   15aca:	52                   	push   edx
   15acb:	0f b6 00             	movzx  eax,BYTE PTR [eax]
   15ace:	50                   	push   eax
   15acf:	68 c8 d4 06 00       	push   0x6d4c8
   15ad4:	e8 87 cb 00 00       	call   22660 <printk>
   15ad9:	a1 fc 97 12 00       	mov    eax,ds:0x1297fc
   15ade:	83 c4 2c             	add    esp,0x2c
   15ae1:	53                   	push   ebx
   15ae2:	01 e8                	add    eax,ebp
   15ae4:	0f b7 50 08          	movzx  edx,WORD PTR [eax+0x8]
   15ae8:	0f b7 40 06          	movzx  eax,WORD PTR [eax+0x6]
   15aec:	52                   	push   edx
   15aed:	50                   	push   eax
   15aee:	e8 dd fc ff ff       	call   157d0 <getDeviceName>
   15af3:	58                   	pop    eax
   15af4:	5a                   	pop    edx
   15af5:	6a 1c                	push   0x1c
   15af7:	53                   	push   ebx
   15af8:	e8 f3 ce 00 00       	call   229f0 <strleft>
   15afd:	59                   	pop    ecx
   15afe:	58                   	pop    eax
   15aff:	53                   	push   ebx
   15b00:	68 73 3a 06 00       	push   0x63a73
   15b05:	e8 56 cb 00 00       	call   22660 <printk>
   15b0a:	e8 81 12 00 00       	call   16d90 <cursorGetMaxY>
   15b0f:	89 c1                	mov    ecx,eax
   15b11:	8d 04 37             	lea    eax,[edi+esi*1]
   15b14:	83 c4 10             	add    esp,0x10
   15b17:	99                   	cdq    
   15b18:	f7 f9                	idiv   ecx
   15b1a:	85 d2                	test   edx,edx
   15b1c:	0f 85 66 ff ff ff    	jne    15a88 <printPCIConfig+0x238>
   15b22:	83 ec 0c             	sub    esp,0xc
   15b25:	6a 00                	push   0x0
   15b27:	e8 44 b9 00 00       	call   21470 <pauseDisplay>
   15b2c:	83 c4 10             	add    esp,0x10
   15b2f:	e9 54 ff ff ff       	jmp    15a88 <printPCIConfig+0x238>
   15b34:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15b38:	81 c4 ac 00 00 00    	add    esp,0xac
   15b3e:	5b                   	pop    ebx
   15b3f:	5e                   	pop    esi
   15b40:	5f                   	pop    edi
   15b41:	5d                   	pop    ebp
   15b42:	c3                   	ret    
   15b43:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15b49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00015b50 <getDeviceNameP>:
getDeviceNameP():
   15b50:	53                   	push   ebx
   15b51:	83 ec 0c             	sub    esp,0xc
   15b54:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   15b58:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   15b5c:	0f b7 50 08          	movzx  edx,WORD PTR [eax+0x8]
   15b60:	0f b7 40 06          	movzx  eax,WORD PTR [eax+0x6]
   15b64:	53                   	push   ebx
   15b65:	52                   	push   edx
   15b66:	50                   	push   eax
   15b67:	e8 64 fc ff ff       	call   157d0 <getDeviceName>
   15b6c:	83 c4 18             	add    esp,0x18
   15b6f:	89 d8                	mov    eax,ebx
   15b71:	5b                   	pop    ebx
   15b72:	c3                   	ret    
   15b73:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15b79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00015b80 <getClass>:
getClass():
   15b80:	55                   	push   ebp
   15b81:	57                   	push   edi
   15b82:	b8 00 3b 02 00       	mov    eax,0x23b00
   15b87:	56                   	push   esi
   15b88:	53                   	push   ebx
   15b89:	31 d2                	xor    edx,edx
   15b8b:	83 ec 0c             	sub    esp,0xc
   15b8e:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
   15b92:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
   15b96:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
   15b9a:	0f b6 5c 24 20       	movzx  ebx,BYTE PTR [esp+0x20]
   15b9f:	0f b6 4c 24 24       	movzx  ecx,BYTE PTR [esp+0x24]
   15ba4:	eb 10                	jmp    15bb6 <getClass+0x36>
   15ba6:	8d 76 00             	lea    esi,[esi+0x0]
   15ba9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15bb0:	83 c2 01             	add    edx,0x1
   15bb3:	83 c0 10             	add    eax,0x10
   15bb6:	38 18                	cmp    BYTE PTR [eax],bl
   15bb8:	75 f6                	jne    15bb0 <getClass+0x30>
   15bba:	38 48 01             	cmp    BYTE PTR [eax+0x1],cl
   15bbd:	75 f1                	jne    15bb0 <getClass+0x30>
   15bbf:	c1 e2 04             	shl    edx,0x4
   15bc2:	83 ec 08             	sub    esp,0x8
   15bc5:	8d 9a 00 3b 02 00    	lea    ebx,[edx+0x23b00]
   15bcb:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   15bce:	55                   	push   ebp
   15bcf:	e8 cc cb 00 00       	call   227a0 <strcpy>
   15bd4:	58                   	pop    eax
   15bd5:	5a                   	pop    edx
   15bd6:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   15bd9:	57                   	push   edi
   15bda:	e8 c1 cb 00 00       	call   227a0 <strcpy>
   15bdf:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   15be2:	89 74 24 30          	mov    DWORD PTR [esp+0x30],esi
   15be6:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
   15bea:	83 c4 1c             	add    esp,0x1c
   15bed:	5b                   	pop    ebx
   15bee:	5e                   	pop    esi
   15bef:	5f                   	pop    edi
   15bf0:	5d                   	pop    ebp
   15bf1:	e9 aa cb 00 00       	jmp    227a0 <strcpy>
   15bf6:	8d 76 00             	lea    esi,[esi+0x0]
   15bf9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00015c00 <getDeviceHeader>:
getDeviceHeader():
   15c00:	55                   	push   ebp
   15c01:	57                   	push   edi
   15c02:	56                   	push   esi
   15c03:	53                   	push   ebx
   15c04:	83 ec 28             	sub    esp,0x28
   15c07:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
   15c0b:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
   15c0f:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   15c13:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
   15c17:	89 fb                	mov    ebx,edi
   15c19:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
   15c1d:	0f b6 e9             	movzx  ebp,cl
   15c20:	0f b6 f8             	movzx  edi,al
   15c23:	0f b6 db             	movzx  ebx,bl
   15c26:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
   15c2a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   15c2e:	55                   	push   ebp
   15c2f:	c1 e5 08             	shl    ebp,0x8
   15c32:	53                   	push   ebx
   15c33:	57                   	push   edi
   15c34:	c1 e7 10             	shl    edi,0x10
   15c37:	81 cf 00 00 00 80    	or     edi,0x80000000
   15c3d:	c1 e3 0b             	shl    ebx,0xb
   15c40:	68 40 d5 06 00       	push   0x6d540
   15c45:	09 fb                	or     ebx,edi
   15c47:	68 00 01 00 00       	push   0x100
   15c4c:	89 df                	mov    edi,ebx
   15c4e:	e8 2d ca 00 00       	call   22680 <printd>
   15c53:	09 ef                	or     edi,ebp
   15c55:	83 c4 20             	add    esp,0x20
   15c58:	b9 01 00 00 00       	mov    ecx,0x1
   15c5d:	bd f8 0c 00 00       	mov    ebp,0xcf8
   15c62:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15c68:	8d 04 8d fc ff ff ff 	lea    eax,[ecx*4-0x4]
   15c6f:	8d 59 ff             	lea    ebx,[ecx-0x1]
   15c72:	89 ea                	mov    edx,ebp
   15c74:	09 f8                	or     eax,edi
   15c76:	ef                   	out    dx,eax
   15c77:	ba fc 0c 00 00       	mov    edx,0xcfc
   15c7c:	ed                   	in     eax,dx
   15c7d:	83 f8 ff             	cmp    eax,0xffffffff
   15c80:	0f 84 ea 00 00 00    	je     15d70 <getDeviceHeader+0x170>
   15c86:	83 fb 0f             	cmp    ebx,0xf
   15c89:	77 69                	ja     15cf4 <getDeviceHeader+0xf4>
   15c8b:	ff 24 9d 00 b2 03 00 	jmp    DWORD PTR [ebx*4+0x3b200]
   15c92:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15c98:	88 46 3d             	mov    BYTE PTR [esi+0x3d],al
   15c9b:	c1 e8 08             	shr    eax,0x8
   15c9e:	88 46 3e             	mov    BYTE PTR [esi+0x3e],al
   15ca1:	0f b6 44 24 04       	movzx  eax,BYTE PTR [esp+0x4]
   15ca6:	88 06                	mov    BYTE PTR [esi],al
   15ca8:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   15cad:	88 46 01             	mov    BYTE PTR [esi+0x1],al
   15cb0:	0f b6 44 24 0c       	movzx  eax,BYTE PTR [esp+0xc]
   15cb5:	88 46 02             	mov    BYTE PTR [esi+0x2],al
   15cb8:	83 c4 1c             	add    esp,0x1c
   15cbb:	b8 01 00 00 00       	mov    eax,0x1
   15cc0:	5b                   	pop    ebx
   15cc1:	5e                   	pop    esi
   15cc2:	5f                   	pop    edi
   15cc3:	5d                   	pop    ebp
   15cc4:	c3                   	ret    
   15cc5:	8d 76 00             	lea    esi,[esi+0x0]
   15cc8:	88 46 3c             	mov    BYTE PTR [esi+0x3c],al
   15ccb:	90                   	nop
   15ccc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15cd0:	83 c1 01             	add    ecx,0x1
   15cd3:	eb 93                	jmp    15c68 <getDeviceHeader+0x68>
   15cd5:	8d 76 00             	lea    esi,[esi+0x0]
   15cd8:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
   15cdb:	eb f3                	jmp    15cd0 <getDeviceHeader+0xd0>
   15cdd:	8d 76 00             	lea    esi,[esi+0x0]
   15ce0:	89 c2                	mov    edx,eax
   15ce2:	66 89 46 0a          	mov    WORD PTR [esi+0xa],ax
   15ce6:	c1 ea 10             	shr    edx,0x10
   15ce9:	66 89 56 0c          	mov    WORD PTR [esi+0xc],dx
   15ced:	eb e1                	jmp    15cd0 <getDeviceHeader+0xd0>
   15cef:	90                   	nop
   15cf0:	89 44 8e 0c          	mov    DWORD PTR [esi+ecx*4+0xc],eax
   15cf4:	83 f9 10             	cmp    ecx,0x10
   15cf7:	75 d7                	jne    15cd0 <getDeviceHeader+0xd0>
   15cf9:	eb a6                	jmp    15ca1 <getDeviceHeader+0xa1>
   15cfb:	90                   	nop
   15cfc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15d00:	89 c2                	mov    edx,eax
   15d02:	88 46 41             	mov    BYTE PTR [esi+0x41],al
   15d05:	c1 ea 10             	shr    edx,0x10
   15d08:	83 e2 7f             	and    edx,0x7f
   15d0b:	88 56 03             	mov    BYTE PTR [esi+0x3],dl
   15d0e:	89 c2                	mov    edx,eax
   15d10:	c1 e8 08             	shr    eax,0x8
   15d13:	c1 ea 17             	shr    edx,0x17
   15d16:	88 46 40             	mov    BYTE PTR [esi+0x40],al
   15d19:	83 e2 01             	and    edx,0x1
   15d1c:	88 56 04             	mov    BYTE PTR [esi+0x4],dl
   15d1f:	eb af                	jmp    15cd0 <getDeviceHeader+0xd0>
   15d21:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15d28:	89 c2                	mov    edx,eax
   15d2a:	c1 ea 18             	shr    edx,0x18
   15d2d:	89 56 10             	mov    DWORD PTR [esi+0x10],edx
   15d30:	89 c2                	mov    edx,eax
   15d32:	0f b6 c4             	movzx  eax,ah
   15d35:	81 e2 00 00 ff 00    	and    edx,0xff0000
   15d3b:	88 46 18             	mov    BYTE PTR [esi+0x18],al
   15d3e:	c1 ea 10             	shr    edx,0x10
   15d41:	89 56 14             	mov    DWORD PTR [esi+0x14],edx
   15d44:	eb 8a                	jmp    15cd0 <getDeviceHeader+0xd0>
   15d46:	8d 76 00             	lea    esi,[esi+0x0]
   15d49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15d50:	66 89 46 06          	mov    WORD PTR [esi+0x6],ax
   15d54:	c1 e8 10             	shr    eax,0x10
   15d57:	66 89 46 08          	mov    WORD PTR [esi+0x8],ax
   15d5b:	e9 70 ff ff ff       	jmp    15cd0 <getDeviceHeader+0xd0>
   15d60:	66 89 46 4c          	mov    WORD PTR [esi+0x4c],ax
   15d64:	c1 e8 10             	shr    eax,0x10
   15d67:	66 89 46 4a          	mov    WORD PTR [esi+0x4a],ax
   15d6b:	e9 60 ff ff ff       	jmp    15cd0 <getDeviceHeader+0xd0>
   15d70:	83 c4 1c             	add    esp,0x1c
   15d73:	31 c0                	xor    eax,eax
   15d75:	5b                   	pop    ebx
   15d76:	5e                   	pop    esi
   15d77:	5f                   	pop    edi
   15d78:	5d                   	pop    ebp
   15d79:	c3                   	ret    
   15d7a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00015d80 <getBridgeHeader>:
getBridgeHeader():
   15d80:	55                   	push   ebp
   15d81:	57                   	push   edi
   15d82:	56                   	push   esi
   15d83:	53                   	push   ebx
   15d84:	83 ec 28             	sub    esp,0x28
   15d87:	8b 74 24 48          	mov    esi,DWORD PTR [esp+0x48]
   15d8b:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
   15d8f:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   15d93:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
   15d97:	89 f1                	mov    ecx,esi
   15d99:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
   15d9d:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
   15da1:	0f b6 e9             	movzx  ebp,cl
   15da4:	89 f9                	mov    ecx,edi
   15da6:	0f b6 f8             	movzx  edi,al
   15da9:	0f b6 f1             	movzx  esi,cl
   15dac:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   15db0:	55                   	push   ebp
   15db1:	56                   	push   esi
   15db2:	57                   	push   edi
   15db3:	c1 e7 10             	shl    edi,0x10
   15db6:	81 cf 00 00 00 80    	or     edi,0x80000000
   15dbc:	c1 e6 0b             	shl    esi,0xb
   15dbf:	68 68 d5 06 00       	push   0x6d568
   15dc4:	09 fe                	or     esi,edi
   15dc6:	68 00 01 00 00       	push   0x100
   15dcb:	c1 e5 08             	shl    ebp,0x8
   15dce:	89 f7                	mov    edi,esi
   15dd0:	be 01 00 00 00       	mov    esi,0x1
   15dd5:	e8 a6 c8 00 00       	call   22680 <printd>
   15dda:	09 ef                	or     edi,ebp
   15ddc:	83 c4 20             	add    esp,0x20
   15ddf:	31 c9                	xor    ecx,ecx
   15de1:	bd f8 0c 00 00       	mov    ebp,0xcf8
   15de6:	8d 76 00             	lea    esi,[esi+0x0]
   15de9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15df0:	8d 04 8d 00 00 00 00 	lea    eax,[ecx*4+0x0]
   15df7:	89 ea                	mov    edx,ebp
   15df9:	09 f8                	or     eax,edi
   15dfb:	ef                   	out    dx,eax
   15dfc:	ba fc 0c 00 00       	mov    edx,0xcfc
   15e01:	ed                   	in     eax,dx
   15e02:	83 f8 ff             	cmp    eax,0xffffffff
   15e05:	0f 84 95 01 00 00    	je     15fa0 <getBridgeHeader+0x220>
   15e0b:	83 f9 0d             	cmp    ecx,0xd
   15e0e:	77 10                	ja     15e20 <getBridgeHeader+0xa0>
   15e10:	ff 24 8d 40 b2 03 00 	jmp    DWORD PTR [ecx*4+0x3b240]
   15e17:	89 f6                	mov    esi,esi
   15e19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15e20:	66 89 43 05          	mov    WORD PTR [ebx+0x5],ax
   15e24:	c1 e8 10             	shr    eax,0x10
   15e27:	83 fe 0e             	cmp    esi,0xe
   15e2a:	66 89 43 07          	mov    WORD PTR [ebx+0x7],ax
   15e2e:	74 13                	je     15e43 <getBridgeHeader+0xc3>
   15e30:	83 c1 01             	add    ecx,0x1
   15e33:	83 c6 01             	add    esi,0x1
   15e36:	eb b8                	jmp    15df0 <getBridgeHeader+0x70>
   15e38:	90                   	nop
   15e39:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15e40:	88 43 29             	mov    BYTE PTR [ebx+0x29],al
   15e43:	0f b6 44 24 04       	movzx  eax,BYTE PTR [esp+0x4]
   15e48:	88 03                	mov    BYTE PTR [ebx],al
   15e4a:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   15e4f:	88 43 01             	mov    BYTE PTR [ebx+0x1],al
   15e52:	0f b6 44 24 0c       	movzx  eax,BYTE PTR [esp+0xc]
   15e57:	88 43 02             	mov    BYTE PTR [ebx+0x2],al
   15e5a:	83 c4 1c             	add    esp,0x1c
   15e5d:	b8 01 00 00 00       	mov    eax,0x1
   15e62:	5b                   	pop    ebx
   15e63:	5e                   	pop    esi
   15e64:	5f                   	pop    edi
   15e65:	5d                   	pop    ebp
   15e66:	c3                   	ret    
   15e67:	89 f6                	mov    esi,esi
   15e69:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   15e70:	89 c2                	mov    edx,eax
   15e72:	25 00 ff ff 00       	and    eax,0xffff00
   15e77:	09 43 22             	or     DWORD PTR [ebx+0x22],eax
   15e7a:	66 31 d2             	xor    dx,dx
   15e7d:	c1 ea 08             	shr    edx,0x8
   15e80:	09 53 1e             	or     DWORD PTR [ebx+0x1e],edx
   15e83:	eb ab                	jmp    15e30 <getBridgeHeader+0xb0>
   15e85:	8d 76 00             	lea    esi,[esi+0x0]
   15e88:	c1 e0 10             	shl    eax,0x10
   15e8b:	09 43 46             	or     DWORD PTR [ebx+0x46],eax
   15e8e:	eb a0                	jmp    15e30 <getBridgeHeader+0xb0>
   15e90:	c1 e0 10             	shl    eax,0x10
   15e93:	09 43 3e             	or     DWORD PTR [ebx+0x3e],eax
   15e96:	eb 98                	jmp    15e30 <getBridgeHeader+0xb0>
   15e98:	90                   	nop
   15e99:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15ea0:	89 c2                	mov    edx,eax
   15ea2:	0f b7 c0             	movzx  eax,ax
   15ea5:	c7 43 42 00 00 00 00 	mov    DWORD PTR [ebx+0x42],0x0
   15eac:	c1 ea 10             	shr    edx,0x10
   15eaf:	89 43 46             	mov    DWORD PTR [ebx+0x46],eax
   15eb2:	c7 43 4a 00 00 00 00 	mov    DWORD PTR [ebx+0x4a],0x0
   15eb9:	89 53 3e             	mov    DWORD PTR [ebx+0x3e],edx
   15ebc:	e9 6f ff ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15ec1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15ec8:	89 c2                	mov    edx,eax
   15eca:	66 89 43 34          	mov    WORD PTR [ebx+0x34],ax
   15ece:	c1 ea 10             	shr    edx,0x10
   15ed1:	66 89 53 36          	mov    WORD PTR [ebx+0x36],dx
   15ed5:	e9 56 ff ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15eda:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   15ee0:	89 c2                	mov    edx,eax
   15ee2:	c1 ea 10             	shr    edx,0x10
   15ee5:	66 89 53 3c          	mov    WORD PTR [ebx+0x3c],dx
   15ee9:	0f b6 d4             	movzx  edx,ah
   15eec:	25 ff 00 00 00       	and    eax,0xff
   15ef1:	89 53 1e             	mov    DWORD PTR [ebx+0x1e],edx
   15ef4:	89 43 22             	mov    DWORD PTR [ebx+0x22],eax
   15ef7:	e9 34 ff ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15efc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15f00:	89 c2                	mov    edx,eax
   15f02:	88 43 27             	mov    BYTE PTR [ebx+0x27],al
   15f05:	c1 ea 18             	shr    edx,0x18
   15f08:	88 53 31             	mov    BYTE PTR [ebx+0x31],dl
   15f0b:	89 c2                	mov    edx,eax
   15f0d:	c1 ea 10             	shr    edx,0x10
   15f10:	88 53 28             	mov    BYTE PTR [ebx+0x28],dl
   15f13:	89 c2                	mov    edx,eax
   15f15:	c1 ea 08             	shr    edx,0x8
   15f18:	88 53 26             	mov    BYTE PTR [ebx+0x26],dl
   15f1b:	e9 10 ff ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15f20:	89 43 16             	mov    DWORD PTR [ebx+0x16],eax
   15f23:	e9 08 ff ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15f28:	90                   	nop
   15f29:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15f30:	89 43 12             	mov    DWORD PTR [ebx+0x12],eax
   15f33:	e9 f8 fe ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15f38:	90                   	nop
   15f39:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15f40:	89 c2                	mov    edx,eax
   15f42:	88 43 2e             	mov    BYTE PTR [ebx+0x2e],al
   15f45:	c1 ea 10             	shr    edx,0x10
   15f48:	83 e2 7f             	and    edx,0x7f
   15f4b:	88 53 03             	mov    BYTE PTR [ebx+0x3],dl
   15f4e:	89 c2                	mov    edx,eax
   15f50:	c1 e8 08             	shr    eax,0x8
   15f53:	c1 ea 17             	shr    edx,0x17
   15f56:	88 43 2d             	mov    BYTE PTR [ebx+0x2d],al
   15f59:	83 e2 01             	and    edx,0x1
   15f5c:	88 53 04             	mov    BYTE PTR [ebx+0x4],dl
   15f5f:	e9 cc fe ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15f64:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   15f68:	89 c2                	mov    edx,eax
   15f6a:	c1 ea 18             	shr    edx,0x18
   15f6d:	89 53 09             	mov    DWORD PTR [ebx+0x9],edx
   15f70:	89 c2                	mov    edx,eax
   15f72:	0f b6 c4             	movzx  eax,ah
   15f75:	81 e2 00 00 ff 00    	and    edx,0xff0000
   15f7b:	88 43 11             	mov    BYTE PTR [ebx+0x11],al
   15f7e:	c1 ea 10             	shr    edx,0x10
   15f81:	89 53 0d             	mov    DWORD PTR [ebx+0xd],edx
   15f84:	e9 a7 fe ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15f89:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   15f90:	66 89 43 3a          	mov    WORD PTR [ebx+0x3a],ax
   15f94:	c1 e8 10             	shr    eax,0x10
   15f97:	66 89 43 38          	mov    WORD PTR [ebx+0x38],ax
   15f9b:	e9 90 fe ff ff       	jmp    15e30 <getBridgeHeader+0xb0>
   15fa0:	83 c4 1c             	add    esp,0x1c
   15fa3:	31 c0                	xor    eax,eax
   15fa5:	5b                   	pop    ebx
   15fa6:	5e                   	pop    esi
   15fa7:	5f                   	pop    edi
   15fa8:	5d                   	pop    ebp
   15fa9:	c3                   	ret    
   15faa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00015fb0 <printPCIBridgeHeader>:
printPCIBridgeHeader():
   15fb0:	55                   	push   ebp
   15fb1:	57                   	push   edi
   15fb2:	56                   	push   esi
   15fb3:	53                   	push   ebx
   15fb4:	81 ec a8 06 00 00    	sub    esp,0x6a8
   15fba:	8d 94 24 a8 04 00 00 	lea    edx,[esp+0x4a8]
   15fc1:	8b 9c 24 bc 06 00 00 	mov    ebx,DWORD PTR [esp+0x6bc]
   15fc8:	52                   	push   edx
   15fc9:	0f b6 43 0d          	movzx  eax,BYTE PTR [ebx+0xd]
   15fcd:	8d ac 24 b8 02 00 00 	lea    ebp,[esp+0x2b8]
   15fd4:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
   15fd8:	55                   	push   ebp
   15fd9:	8d bc 24 c8 00 00 00 	lea    edi,[esp+0xc8]
   15fe0:	57                   	push   edi
   15fe1:	50                   	push   eax
   15fe2:	0f b6 43 09          	movzx  eax,BYTE PTR [ebx+0x9]
   15fe6:	50                   	push   eax
   15fe7:	e8 94 fb ff ff       	call   15b80 <getClass>
   15fec:	83 c4 14             	add    esp,0x14
   15fef:	68 e7 06 04 00       	push   0x406e7
   15ff4:	e8 67 c6 00 00       	call   22660 <printk>
   15ff9:	c7 04 24 8c d4 06 00 	mov    DWORD PTR [esp],0x6d48c
   16000:	e8 5b c6 00 00       	call   22660 <printk>
   16005:	a1 f8 97 12 00       	mov    eax,ds:0x1297f8
   1600a:	0f b6 40 26          	movzx  eax,BYTE PTR [eax+0x26]
   1600e:	89 04 24             	mov    DWORD PTR [esp],eax
   16011:	0f b6 43 27          	movzx  eax,BYTE PTR [ebx+0x27]
   16015:	50                   	push   eax
   16016:	0f b6 43 28          	movzx  eax,BYTE PTR [ebx+0x28]
   1601a:	50                   	push   eax
   1601b:	0f b7 43 07          	movzx  eax,WORD PTR [ebx+0x7]
   1601f:	ff 73 0d             	push   DWORD PTR [ebx+0xd]
   16022:	ff 73 09             	push   DWORD PTR [ebx+0x9]
   16025:	50                   	push   eax
   16026:	0f b7 43 05          	movzx  eax,WORD PTR [ebx+0x5]
   1602a:	50                   	push   eax
   1602b:	0f b6 43 2b          	movzx  eax,BYTE PTR [ebx+0x2b]
   1602f:	50                   	push   eax
   16030:	0f b6 43 2a          	movzx  eax,BYTE PTR [ebx+0x2a]
   16034:	50                   	push   eax
   16035:	0f b6 43 02          	movzx  eax,BYTE PTR [ebx+0x2]
   16039:	50                   	push   eax
   1603a:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   1603e:	50                   	push   eax
   1603f:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   16042:	50                   	push   eax
   16043:	68 90 d5 06 00       	push   0x6d590
   16048:	e8 13 c6 00 00       	call   22660 <printk>
   1604d:	0f b7 43 05          	movzx  eax,WORD PTR [ebx+0x5]
   16051:	83 c4 38             	add    esp,0x38
   16054:	8d 74 24 26          	lea    esi,[esp+0x26]
   16058:	56                   	push   esi
   16059:	50                   	push   eax
   1605a:	e8 01 f7 ff ff       	call   15760 <getVendorLongName>
   1605f:	58                   	pop    eax
   16060:	5a                   	pop    edx
   16061:	56                   	push   esi
   16062:	68 f0 06 04 00       	push   0x406f0
   16067:	e8 f4 c5 00 00       	call   22660 <printk>
   1606c:	0f b7 43 07          	movzx  eax,WORD PTR [ebx+0x7]
   16070:	83 c4 0c             	add    esp,0xc
   16073:	56                   	push   esi
   16074:	50                   	push   eax
   16075:	0f b7 43 05          	movzx  eax,WORD PTR [ebx+0x5]
   16079:	50                   	push   eax
   1607a:	e8 51 f7 ff ff       	call   157d0 <getDeviceName>
   1607f:	59                   	pop    ecx
   16080:	58                   	pop    eax
   16081:	56                   	push   esi
   16082:	68 fc 06 04 00       	push   0x406fc
   16087:	e8 d4 c5 00 00       	call   22660 <printk>
   1608c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   16090:	52                   	push   edx
   16091:	55                   	push   ebp
   16092:	57                   	push   edi
   16093:	68 d4 d5 06 00       	push   0x6d5d4
   16098:	e8 c3 c5 00 00       	call   22660 <printk>
   1609d:	83 c4 14             	add    esp,0x14
   160a0:	68 08 07 04 00       	push   0x40708
   160a5:	e8 b6 c5 00 00       	call   22660 <printk>
   160aa:	83 c4 0c             	add    esp,0xc
   160ad:	ff 73 12             	push   DWORD PTR [ebx+0x12]
   160b0:	6a 00                	push   0x0
   160b2:	68 19 07 04 00       	push   0x40719
   160b7:	e8 a4 c5 00 00       	call   22660 <printk>
   160bc:	83 c4 0c             	add    esp,0xc
   160bf:	ff 73 16             	push   DWORD PTR [ebx+0x16]
   160c2:	6a 01                	push   0x1
   160c4:	68 19 07 04 00       	push   0x40719
   160c9:	e8 92 c5 00 00       	call   22660 <printk>
   160ce:	83 c4 0c             	add    esp,0xc
   160d1:	ff 73 1e             	push   DWORD PTR [ebx+0x1e]
   160d4:	ff 73 22             	push   DWORD PTR [ebx+0x22]
   160d7:	68 f8 d5 06 00       	push   0x6d5f8
   160dc:	e8 7f c5 00 00       	call   22660 <printk>
   160e1:	0f b7 43 38          	movzx  eax,WORD PTR [ebx+0x38]
   160e5:	83 c4 0c             	add    esp,0xc
   160e8:	50                   	push   eax
   160e9:	0f b7 43 3a          	movzx  eax,WORD PTR [ebx+0x3a]
   160ed:	50                   	push   eax
   160ee:	68 1c d6 06 00       	push   0x6d61c
   160f3:	e8 68 c5 00 00       	call   22660 <printk>
   160f8:	81 c4 ac 06 00 00    	add    esp,0x6ac
   160fe:	5b                   	pop    ebx
   160ff:	5e                   	pop    esi
   16100:	5f                   	pop    edi
   16101:	5d                   	pop    ebp
   16102:	c3                   	ret    
   16103:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   16109:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00016110 <printPCIHeader>:
printPCIHeader():
   16110:	55                   	push   ebp
   16111:	57                   	push   edi
   16112:	56                   	push   esi
   16113:	53                   	push   ebx
   16114:	81 ec a8 06 00 00    	sub    esp,0x6a8
   1611a:	8d 94 24 a8 04 00 00 	lea    edx,[esp+0x4a8]
   16121:	8b b4 24 bc 06 00 00 	mov    esi,DWORD PTR [esp+0x6bc]
   16128:	52                   	push   edx
   16129:	0f b6 46 14          	movzx  eax,BYTE PTR [esi+0x14]
   1612d:	8d ac 24 b8 02 00 00 	lea    ebp,[esp+0x2b8]
   16134:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
   16138:	55                   	push   ebp
   16139:	8d bc 24 c8 00 00 00 	lea    edi,[esp+0xc8]
   16140:	57                   	push   edi
   16141:	50                   	push   eax
   16142:	0f b6 46 10          	movzx  eax,BYTE PTR [esi+0x10]
   16146:	50                   	push   eax
   16147:	e8 34 fa ff ff       	call   15b80 <getClass>
   1614c:	83 c4 14             	add    esp,0x14
   1614f:	68 29 07 04 00       	push   0x40729
   16154:	e8 07 c5 00 00       	call   22660 <printk>
   16159:	c7 04 24 8c d4 06 00 	mov    DWORD PTR [esp],0x6d48c
   16160:	e8 fb c4 00 00       	call   22660 <printk>
   16165:	58                   	pop    eax
   16166:	0f b7 46 08          	movzx  eax,WORD PTR [esi+0x8]
   1616a:	5a                   	pop    edx
   1616b:	ff 76 14             	push   DWORD PTR [esi+0x14]
   1616e:	ff 76 10             	push   DWORD PTR [esi+0x10]
   16171:	50                   	push   eax
   16172:	0f b7 46 06          	movzx  eax,WORD PTR [esi+0x6]
   16176:	50                   	push   eax
   16177:	0f b6 46 3e          	movzx  eax,BYTE PTR [esi+0x3e]
   1617b:	50                   	push   eax
   1617c:	0f b6 46 3d          	movzx  eax,BYTE PTR [esi+0x3d]
   16180:	50                   	push   eax
   16181:	0f b6 46 02          	movzx  eax,BYTE PTR [esi+0x2]
   16185:	50                   	push   eax
   16186:	0f b6 46 01          	movzx  eax,BYTE PTR [esi+0x1]
   1618a:	50                   	push   eax
   1618b:	0f b6 06             	movzx  eax,BYTE PTR [esi]
   1618e:	50                   	push   eax
   1618f:	68 40 d6 06 00       	push   0x6d640
   16194:	e8 c7 c4 00 00       	call   22660 <printk>
   16199:	0f b7 46 06          	movzx  eax,WORD PTR [esi+0x6]
   1619d:	83 c4 28             	add    esp,0x28
   161a0:	8d 5c 24 26          	lea    ebx,[esp+0x26]
   161a4:	53                   	push   ebx
   161a5:	50                   	push   eax
   161a6:	e8 b5 f5 ff ff       	call   15760 <getVendorLongName>
   161ab:	59                   	pop    ecx
   161ac:	58                   	pop    eax
   161ad:	53                   	push   ebx
   161ae:	68 f0 06 04 00       	push   0x406f0
   161b3:	e8 a8 c4 00 00       	call   22660 <printk>
   161b8:	0f b7 46 08          	movzx  eax,WORD PTR [esi+0x8]
   161bc:	83 c4 0c             	add    esp,0xc
   161bf:	53                   	push   ebx
   161c0:	50                   	push   eax
   161c1:	0f b7 46 06          	movzx  eax,WORD PTR [esi+0x6]
   161c5:	50                   	push   eax
   161c6:	e8 05 f6 ff ff       	call   157d0 <getDeviceName>
   161cb:	58                   	pop    eax
   161cc:	5a                   	pop    edx
   161cd:	53                   	push   ebx
   161ce:	68 fc 06 04 00       	push   0x406fc
   161d3:	31 db                	xor    ebx,ebx
   161d5:	e8 86 c4 00 00       	call   22660 <printk>
   161da:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   161de:	52                   	push   edx
   161df:	55                   	push   ebp
   161e0:	57                   	push   edi
   161e1:	68 d4 d5 06 00       	push   0x6d5d4
   161e6:	e8 75 c4 00 00       	call   22660 <printk>
   161eb:	83 c4 14             	add    esp,0x14
   161ee:	68 08 07 04 00       	push   0x40708
   161f3:	e8 68 c4 00 00       	call   22660 <printk>
   161f8:	83 c4 10             	add    esp,0x10
   161fb:	90                   	nop
   161fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16200:	83 ec 04             	sub    esp,0x4
   16203:	ff 74 9e 20          	push   DWORD PTR [esi+ebx*4+0x20]
   16207:	53                   	push   ebx
   16208:	68 19 07 04 00       	push   0x40719
   1620d:	83 c3 01             	add    ebx,0x1
   16210:	e8 4b c4 00 00       	call   22660 <printk>
   16215:	83 c4 10             	add    esp,0x10
   16218:	83 fb 06             	cmp    ebx,0x6
   1621b:	75 e3                	jne    16200 <printPCIHeader+0xf0>
   1621d:	0f b7 46 0a          	movzx  eax,WORD PTR [esi+0xa]
   16221:	83 ec 04             	sub    esp,0x4
   16224:	50                   	push   eax
   16225:	0f b7 46 0c          	movzx  eax,WORD PTR [esi+0xc]
   16229:	50                   	push   eax
   1622a:	68 78 d6 06 00       	push   0x6d678
   1622f:	e8 2c c4 00 00       	call   22660 <printk>
   16234:	0f b7 46 4a          	movzx  eax,WORD PTR [esi+0x4a]
   16238:	83 c4 0c             	add    esp,0xc
   1623b:	50                   	push   eax
   1623c:	0f b7 46 4c          	movzx  eax,WORD PTR [esi+0x4c]
   16240:	50                   	push   eax
   16241:	68 1c d6 06 00       	push   0x6d61c
   16246:	e8 15 c4 00 00       	call   22660 <printk>
   1624b:	0f b6 46 3d          	movzx  eax,BYTE PTR [esi+0x3d]
   1624f:	83 c4 0c             	add    esp,0xc
   16252:	50                   	push   eax
   16253:	0f b6 46 3e          	movzx  eax,BYTE PTR [esi+0x3e]
   16257:	50                   	push   eax
   16258:	68 a0 d6 06 00       	push   0x6d6a0
   1625d:	e8 fe c3 00 00       	call   22660 <printk>
   16262:	81 c4 ac 06 00 00    	add    esp,0x6ac
   16268:	5b                   	pop    ebx
   16269:	5e                   	pop    esi
   1626a:	5f                   	pop    edi
   1626b:	5d                   	pop    ebp
   1626c:	c3                   	ret    
   1626d:	8d 76 00             	lea    esi,[esi+0x0]

00016270 <pciQueryBDF>:
pciQueryBDF():
   16270:	55                   	push   ebp
   16271:	57                   	push   edi
   16272:	56                   	push   esi
   16273:	53                   	push   ebx
   16274:	81 ec ac 00 00 00    	sub    esp,0xac
   1627a:	0f b6 bc 24 c8 00 00 	movzx  edi,BYTE PTR [esp+0xc8]
   16281:	00 
   16282:	0f b6 b4 24 c4 00 00 	movzx  esi,BYTE PTR [esp+0xc4]
   16289:	00 
   1628a:	0f b6 9c 24 c0 00 00 	movzx  ebx,BYTE PTR [esp+0xc0]
   16291:	00 
   16292:	57                   	push   edi
   16293:	56                   	push   esi
   16294:	53                   	push   ebx
   16295:	68 c4 d6 06 00       	push   0x6d6c4
   1629a:	e8 c1 c3 00 00       	call   22660 <printk>
   1629f:	57                   	push   edi
   162a0:	56                   	push   esi
   162a1:	53                   	push   ebx
   162a2:	8d 6c 24 6c          	lea    ebp,[esp+0x6c]
   162a6:	55                   	push   ebp
   162a7:	e8 54 f9 ff ff       	call   15c00 <getDeviceHeader>
   162ac:	83 c4 20             	add    esp,0x20
   162af:	84 c0                	test   al,al
   162b1:	74 2d                	je     162e0 <pciQueryBDF+0x70>
   162b3:	66 83 7c 24 56 ff    	cmp    WORD PTR [esp+0x56],0xffff
   162b9:	74 6d                	je     16328 <pciQueryBDF+0xb8>
   162bb:	83 7c 24 60 06       	cmp    DWORD PTR [esp+0x60],0x6
   162c0:	74 3e                	je     16300 <pciQueryBDF+0x90>
   162c2:	83 ec 0c             	sub    esp,0xc
   162c5:	55                   	push   ebp
   162c6:	e8 45 fe ff ff       	call   16110 <printPCIHeader>
   162cb:	83 c4 10             	add    esp,0x10
   162ce:	81 c4 ac 00 00 00    	add    esp,0xac
   162d4:	5b                   	pop    ebx
   162d5:	5e                   	pop    esi
   162d6:	5f                   	pop    edi
   162d7:	5d                   	pop    ebp
   162d8:	c3                   	ret    
   162d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   162e0:	83 ec 0c             	sub    esp,0xc
   162e3:	68 32 07 04 00       	push   0x40732
   162e8:	e8 73 c3 00 00       	call   22660 <printk>
   162ed:	83 c4 10             	add    esp,0x10
   162f0:	81 c4 ac 00 00 00    	add    esp,0xac
   162f6:	5b                   	pop    ebx
   162f7:	5e                   	pop    esi
   162f8:	5f                   	pop    edi
   162f9:	5d                   	pop    ebp
   162fa:	c3                   	ret    
   162fb:	90                   	nop
   162fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16300:	57                   	push   edi
   16301:	56                   	push   esi
   16302:	53                   	push   ebx
   16303:	8d 5c 24 0e          	lea    ebx,[esp+0xe]
   16307:	53                   	push   ebx
   16308:	e8 73 fa ff ff       	call   15d80 <getBridgeHeader>
   1630d:	89 1c 24             	mov    DWORD PTR [esp],ebx
   16310:	e8 9b fc ff ff       	call   15fb0 <printPCIBridgeHeader>
   16315:	83 c4 10             	add    esp,0x10
   16318:	81 c4 ac 00 00 00    	add    esp,0xac
   1631e:	5b                   	pop    ebx
   1631f:	5e                   	pop    esi
   16320:	5f                   	pop    edi
   16321:	5d                   	pop    ebp
   16322:	c3                   	ret    
   16323:	90                   	nop
   16324:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16328:	57                   	push   edi
   16329:	56                   	push   esi
   1632a:	53                   	push   ebx
   1632b:	68 f4 d6 06 00       	push   0x6d6f4
   16330:	e8 2b c3 00 00       	call   22660 <printk>
   16335:	83 c4 10             	add    esp,0x10
   16338:	eb 94                	jmp    162ce <pciQueryBDF+0x5e>
   1633a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00016340 <addFunction>:
addFunction():
   16340:	53                   	push   ebx
   16341:	83 ec 10             	sub    esp,0x10
   16344:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   16348:	ff 73 14             	push   DWORD PTR [ebx+0x14]
   1634b:	ff 73 10             	push   DWORD PTR [ebx+0x10]
   1634e:	0f b7 43 06          	movzx  eax,WORD PTR [ebx+0x6]
   16352:	50                   	push   eax
   16353:	0f b7 43 08          	movzx  eax,WORD PTR [ebx+0x8]
   16357:	50                   	push   eax
   16358:	68 18 d7 06 00       	push   0x6d718
   1635d:	68 00 01 00 00       	push   0x100
   16362:	e8 19 c3 00 00       	call   22680 <printd>
   16367:	0f b6 05 ee 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ee
   1636e:	83 c4 1c             	add    esp,0x1c
   16371:	6a 4e                	push   0x4e
   16373:	53                   	push   ebx
   16374:	8d 50 01             	lea    edx,[eax+0x1]
   16377:	8d 04 80             	lea    eax,[eax+eax*4]
   1637a:	c1 e0 04             	shl    eax,0x4
   1637d:	03 05 fc 97 12 00    	add    eax,DWORD PTR ds:0x1297fc
   16383:	88 15 ee 97 12 00    	mov    BYTE PTR ds:0x1297ee,dl
   16389:	50                   	push   eax
   1638a:	e8 d1 b2 00 00       	call   21660 <memcpy>
   1638f:	58                   	pop    eax
   16390:	5a                   	pop    edx
   16391:	68 4d 07 04 00       	push   0x4074d
   16396:	68 00 01 00 00       	push   0x100
   1639b:	e8 e0 c2 00 00       	call   22680 <printd>
   163a0:	83 c4 18             	add    esp,0x18
   163a3:	5b                   	pop    ebx
   163a4:	c3                   	ret    
   163a5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   163a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000163b0 <addBridge>:
addBridge():
   163b0:	55                   	push   ebp
   163b1:	57                   	push   edi
   163b2:	56                   	push   esi
   163b3:	53                   	push   ebx
   163b4:	81 ec ac 00 00 00    	sub    esp,0xac
   163ba:	0f b6 ac 24 cc 00 00 	movzx  ebp,BYTE PTR [esp+0xcc]
   163c1:	00 
   163c2:	0f b6 bc 24 c8 00 00 	movzx  edi,BYTE PTR [esp+0xc8]
   163c9:	00 
   163ca:	0f b6 b4 24 c4 00 00 	movzx  esi,BYTE PTR [esp+0xc4]
   163d1:	00 
   163d2:	55                   	push   ebp
   163d3:	57                   	push   edi
   163d4:	56                   	push   esi
   163d5:	8d 5c 24 0e          	lea    ebx,[esp+0xe]
   163d9:	53                   	push   ebx
   163da:	e8 a1 f9 ff ff       	call   15d80 <getBridgeHeader>
   163df:	83 c4 10             	add    esp,0x10
   163e2:	66 83 7c 24 07 ff    	cmp    WORD PTR [esp+0x7],0xffff
   163e8:	0f 84 a6 00 00 00    	je     16494 <addBridge+0xe4>
   163ee:	83 ec 08             	sub    esp,0x8
   163f1:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
   163f6:	50                   	push   eax
   163f7:	0f b6 44 24 36       	movzx  eax,BYTE PTR [esp+0x36]
   163fc:	50                   	push   eax
   163fd:	0f b6 44 24 38       	movzx  eax,BYTE PTR [esp+0x38]
   16402:	50                   	push   eax
   16403:	0f b6 44 24 3d       	movzx  eax,BYTE PTR [esp+0x3d]
   16408:	50                   	push   eax
   16409:	ff 74 24 23          	push   DWORD PTR [esp+0x23]
   1640d:	55                   	push   ebp
   1640e:	57                   	push   edi
   1640f:	56                   	push   esi
   16410:	68 70 d7 06 00       	push   0x6d770
   16415:	68 00 01 00 00       	push   0x100
   1641a:	e8 61 c2 00 00       	call   22680 <printd>
   1641f:	83 c4 28             	add    esp,0x28
   16422:	ff 74 24 17          	push   DWORD PTR [esp+0x17]
   16426:	ff 74 24 17          	push   DWORD PTR [esp+0x17]
   1642a:	0f b7 44 24 17       	movzx  eax,WORD PTR [esp+0x17]
   1642f:	50                   	push   eax
   16430:	0f b7 44 24 1d       	movzx  eax,WORD PTR [esp+0x1d]
   16435:	50                   	push   eax
   16436:	68 c4 d7 06 00       	push   0x6d7c4
   1643b:	68 00 01 00 00       	push   0x100
   16440:	e8 3b c2 00 00       	call   22680 <printd>
   16445:	0f b6 05 ed 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ed
   1644c:	83 c4 1c             	add    esp,0x1c
   1644f:	6a 4e                	push   0x4e
   16451:	53                   	push   ebx
   16452:	8d 50 01             	lea    edx,[eax+0x1]
   16455:	6b c0 4e             	imul   eax,eax,0x4e
   16458:	03 05 f8 97 12 00    	add    eax,DWORD PTR ds:0x1297f8
   1645e:	88 15 ed 97 12 00    	mov    BYTE PTR ds:0x1297ed,dl
   16464:	50                   	push   eax
   16465:	e8 f6 b1 00 00       	call   21660 <memcpy>
   1646a:	83 c4 0c             	add    esp,0xc
   1646d:	6a 50                	push   0x50
   1646f:	ff b4 24 c8 00 00 00 	push   DWORD PTR [esp+0xc8]
   16476:	8d 44 24 5c          	lea    eax,[esp+0x5c]
   1647a:	50                   	push   eax
   1647b:	e8 e0 b1 00 00       	call   21660 <memcpy>
   16480:	58                   	pop    eax
   16481:	5a                   	pop    edx
   16482:	68 69 07 04 00       	push   0x40769
   16487:	68 00 01 00 00       	push   0x100
   1648c:	e8 ef c1 00 00       	call   22680 <printd>
   16491:	83 c4 10             	add    esp,0x10
   16494:	81 c4 ac 00 00 00    	add    esp,0xac
   1649a:	5b                   	pop    ebx
   1649b:	5e                   	pop    esi
   1649c:	5f                   	pop    edi
   1649d:	5d                   	pop    ebp
   1649e:	c3                   	ret    
   1649f:	90                   	nop

000164a0 <checkFunctions>:
checkFunctions():
   164a0:	55                   	push   ebp
   164a1:	57                   	push   edi
   164a2:	31 ed                	xor    ebp,ebp
   164a4:	56                   	push   esi
   164a5:	53                   	push   ebx
   164a6:	83 ec 6c             	sub    esp,0x6c
   164a9:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
   164b0:	8b 94 24 84 00 00 00 	mov    edx,DWORD PTR [esp+0x84]
   164b7:	8d 5c 24 10          	lea    ebx,[esp+0x10]
   164bb:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
   164bf:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
   164c3:	0f b6 fa             	movzx  edi,dl
   164c6:	0f b6 f0             	movzx  esi,al
   164c9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   164d0:	55                   	push   ebp
   164d1:	57                   	push   edi
   164d2:	56                   	push   esi
   164d3:	53                   	push   ebx
   164d4:	e8 27 f7 ff ff       	call   15c00 <getDeviceHeader>
   164d9:	83 c4 10             	add    esp,0x10
   164dc:	66 83 7c 24 16 ff    	cmp    WORD PTR [esp+0x16],0xffff
   164e2:	74 24                	je     16508 <checkFunctions+0x68>
   164e4:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
   164e9:	83 ec 0c             	sub    esp,0xc
   164ec:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
   164f0:	0f b6 44 24 1b       	movzx  eax,BYTE PTR [esp+0x1b]
   164f5:	88 44 24 1d          	mov    BYTE PTR [esp+0x1d],al
   164f9:	89 e8                	mov    eax,ebp
   164fb:	88 44 24 1e          	mov    BYTE PTR [esp+0x1e],al
   164ff:	53                   	push   ebx
   16500:	e8 3b fe ff ff       	call   16340 <addFunction>
   16505:	83 c4 10             	add    esp,0x10
   16508:	83 c5 01             	add    ebp,0x1
   1650b:	83 fd 08             	cmp    ebp,0x8
   1650e:	75 c0                	jne    164d0 <checkFunctions+0x30>
   16510:	83 c4 6c             	add    esp,0x6c
   16513:	5b                   	pop    ebx
   16514:	5e                   	pop    esi
   16515:	5f                   	pop    edi
   16516:	5d                   	pop    ebp
   16517:	c3                   	ret    
   16518:	90                   	nop
   16519:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016520 <addDevice>:
addDevice():
   16520:	53                   	push   ebx
   16521:	83 ec 14             	sub    esp,0x14
   16524:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   16528:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
   1652c:	50                   	push   eax
   1652d:	ff 73 10             	push   DWORD PTR [ebx+0x10]
   16530:	0f b7 43 08          	movzx  eax,WORD PTR [ebx+0x8]
   16534:	50                   	push   eax
   16535:	0f b7 43 06          	movzx  eax,WORD PTR [ebx+0x6]
   16539:	50                   	push   eax
   1653a:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   1653e:	50                   	push   eax
   1653f:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   16542:	50                   	push   eax
   16543:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   1654a:	50                   	push   eax
   1654b:	68 08 d8 06 00       	push   0x6d808
   16550:	68 00 01 00 00       	push   0x100
   16555:	e8 26 c1 00 00       	call   22680 <printd>
   1655a:	0f b6 05 ec 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ec
   16561:	83 c4 2c             	add    esp,0x2c
   16564:	6a 50                	push   0x50
   16566:	53                   	push   ebx
   16567:	8d 50 01             	lea    edx,[eax+0x1]
   1656a:	8d 04 80             	lea    eax,[eax+eax*4]
   1656d:	c1 e0 04             	shl    eax,0x4
   16570:	03 05 f4 97 12 00    	add    eax,DWORD PTR ds:0x1297f4
   16576:	88 15 ec 97 12 00    	mov    BYTE PTR ds:0x1297ec,dl
   1657c:	50                   	push   eax
   1657d:	e8 de b0 00 00       	call   21660 <memcpy>
   16582:	58                   	pop    eax
   16583:	5a                   	pop    edx
   16584:	68 82 07 04 00       	push   0x40782
   16589:	68 00 01 00 00       	push   0x100
   1658e:	e8 ed c0 00 00       	call   22680 <printd>
   16593:	83 c4 18             	add    esp,0x18
   16596:	5b                   	pop    ebx
   16597:	c3                   	ret    
   16598:	90                   	nop
   16599:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000165a0 <checkDevice>:
checkDevice():
   165a0:	55                   	push   ebp
   165a1:	57                   	push   edi
   165a2:	56                   	push   esi
   165a3:	53                   	push   ebx
   165a4:	83 ec 60             	sub    esp,0x60
   165a7:	8b 74 24 78          	mov    esi,DWORD PTR [esp+0x78]
   165ab:	8b 5c 24 7c          	mov    ebx,DWORD PTR [esp+0x7c]
   165af:	6a 50                	push   0x50
   165b1:	ff 74 24 78          	push   DWORD PTR [esp+0x78]
   165b5:	8d 7c 24 0c          	lea    edi,[esp+0xc]
   165b9:	0f b6 db             	movzx  ebx,bl
   165bc:	57                   	push   edi
   165bd:	e8 9e b0 00 00       	call   21660 <memcpy>
   165c2:	89 f0                	mov    eax,esi
   165c4:	6a 00                	push   0x0
   165c6:	53                   	push   ebx
   165c7:	0f b6 f0             	movzx  esi,al
   165ca:	56                   	push   esi
   165cb:	57                   	push   edi
   165cc:	e8 2f f6 ff ff       	call   15c00 <getDeviceHeader>
   165d1:	83 c4 20             	add    esp,0x20
   165d4:	84 c0                	test   al,al
   165d6:	89 c5                	mov    ebp,eax
   165d8:	74 32                	je     1660c <checkDevice+0x6c>
   165da:	83 7c 24 10 06       	cmp    DWORD PTR [esp+0x10],0x6
   165df:	74 3f                	je     16620 <checkDevice+0x80>
   165e1:	83 ec 0c             	sub    esp,0xc
   165e4:	57                   	push   edi
   165e5:	e8 36 ff ff ff       	call   16520 <addDevice>
   165ea:	83 c4 10             	add    esp,0x10
   165ed:	83 ec 04             	sub    esp,0x4
   165f0:	53                   	push   ebx
   165f1:	68 99 07 04 00       	push   0x40799
   165f6:	68 00 01 00 00       	push   0x100
   165fb:	e8 80 c0 00 00       	call   22680 <printd>
   16600:	58                   	pop    eax
   16601:	5a                   	pop    edx
   16602:	53                   	push   ebx
   16603:	56                   	push   esi
   16604:	e8 97 fe ff ff       	call   164a0 <checkFunctions>
   16609:	83 c4 10             	add    esp,0x10
   1660c:	83 c4 5c             	add    esp,0x5c
   1660f:	89 e8                	mov    eax,ebp
   16611:	5b                   	pop    ebx
   16612:	5e                   	pop    esi
   16613:	5f                   	pop    edi
   16614:	5d                   	pop    ebp
   16615:	c3                   	ret    
   16616:	8d 76 00             	lea    esi,[esi+0x0]
   16619:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   16620:	6a 00                	push   0x0
   16622:	53                   	push   ebx
   16623:	56                   	push   esi
   16624:	57                   	push   edi
   16625:	e8 86 fd ff ff       	call   163b0 <addBridge>
   1662a:	83 c4 10             	add    esp,0x10
   1662d:	eb be                	jmp    165ed <checkDevice+0x4d>
   1662f:	90                   	nop

00016630 <checkBus>:
checkBus():
   16630:	57                   	push   edi
   16631:	56                   	push   esi
   16632:	53                   	push   ebx
   16633:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   16637:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
   1663b:	83 ec 08             	sub    esp,0x8
   1663e:	68 d8 39 06 00       	push   0x639d8
   16643:	68 00 01 00 00       	push   0x100
   16648:	0f b6 f3             	movzx  esi,bl
   1664b:	31 db                	xor    ebx,ebx
   1664d:	e8 2e c0 00 00       	call   22680 <printd>
   16652:	83 c4 0c             	add    esp,0xc
   16655:	56                   	push   esi
   16656:	68 ae 07 04 00       	push   0x407ae
   1665b:	68 00 01 00 00       	push   0x100
   16660:	e8 1b c0 00 00       	call   22680 <printd>
   16665:	83 c4 10             	add    esp,0x10
   16668:	90                   	nop
   16669:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16670:	83 ec 04             	sub    esp,0x4
   16673:	53                   	push   ebx
   16674:	56                   	push   esi
   16675:	83 c3 01             	add    ebx,0x1
   16678:	57                   	push   edi
   16679:	e8 22 ff ff ff       	call   165a0 <checkDevice>
   1667e:	83 c4 10             	add    esp,0x10
   16681:	83 fb 20             	cmp    ebx,0x20
   16684:	75 ea                	jne    16670 <checkBus+0x40>
   16686:	5b                   	pop    ebx
   16687:	5e                   	pop    esi
   16688:	5f                   	pop    edi
   16689:	c3                   	ret    
   1668a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00016690 <pciInitialize>:
pciInitialize():
   16690:	55                   	push   ebp
   16691:	57                   	push   edi
   16692:	56                   	push   esi
   16693:	53                   	push   ebx
   16694:	81 ec c4 00 00 00    	sub    esp,0xc4
   1669a:	c6 05 ef 97 12 00 00 	mov    BYTE PTR ds:0x1297ef,0x0
   166a1:	c6 05 ee 97 12 00 00 	mov    BYTE PTR ds:0x1297ee,0x0
   166a8:	68 c1 07 04 00       	push   0x407c1
   166ad:	68 00 01 00 00       	push   0x100
   166b2:	c6 05 ed 97 12 00 00 	mov    BYTE PTR ds:0x1297ed,0x0
   166b9:	c6 05 ec 97 12 00 00 	mov    BYTE PTR ds:0x1297ec,0x0
   166c0:	e8 bb bf 00 00       	call   22680 <printd>
   166c5:	83 c4 10             	add    esp,0x10
   166c8:	31 c0                	xor    eax,eax
   166ca:	c7 05 a0 74 09 00 00 	mov    DWORD PTR ds:0x974a0,0x0
   166d1:	00 00 00 
   166d4:	8d 7c 24 10          	lea    edi,[esp+0x10]
   166d8:	8d 5c 24 60          	lea    ebx,[esp+0x60]
   166dc:	31 d2                	xor    edx,edx
   166de:	66 89 44 24 0e       	mov    WORD PTR [esp+0xe],ax
   166e3:	90                   	nop
   166e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   166e8:	c7 05 9c 74 09 00 00 	mov    DWORD PTR ds:0x9749c,0x0
   166ef:	00 00 00 
   166f2:	31 c0                	xor    eax,eax
   166f4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   166f8:	50                   	push   eax
   166f9:	52                   	push   edx
   166fa:	68 df 07 04 00       	push   0x407df
   166ff:	68 00 01 00 00       	push   0x100
   16704:	c7 05 98 74 09 00 00 	mov    DWORD PTR ds:0x97498,0x0
   1670b:	00 00 00 
   1670e:	e8 6d bf 00 00       	call   22680 <printd>
   16713:	0f b6 05 98 74 09 00 	movzx  eax,BYTE PTR ds:0x97498
   1671a:	50                   	push   eax
   1671b:	0f b6 05 9c 74 09 00 	movzx  eax,BYTE PTR ds:0x9749c
   16722:	50                   	push   eax
   16723:	0f b6 05 a0 74 09 00 	movzx  eax,BYTE PTR ds:0x974a0
   1672a:	50                   	push   eax
   1672b:	57                   	push   edi
   1672c:	e8 cf f4 ff ff       	call   15c00 <getDeviceHeader>
   16731:	83 c4 20             	add    esp,0x20
   16734:	84 c0                	test   al,al
   16736:	0f 84 cc 00 00 00    	je     16808 <pciInitialize+0x178>
   1673c:	0f b7 54 24 0e       	movzx  edx,WORD PTR [esp+0xe]
   16741:	a1 a0 74 09 00       	mov    eax,ds:0x974a0
   16746:	39 c2                	cmp    edx,eax
   16748:	74 0c                	je     16756 <pciInitialize+0xc6>
   1674a:	80 05 ef 97 12 00 01 	add    BYTE PTR ds:0x1297ef,0x1
   16751:	66 89 44 24 0e       	mov    WORD PTR [esp+0xe],ax
   16756:	83 7c 24 20 06       	cmp    DWORD PTR [esp+0x20],0x6
   1675b:	0f 84 c7 00 00 00    	je     16828 <pciInitialize+0x198>
   16761:	83 ec 0c             	sub    esp,0xc
   16764:	57                   	push   edi
   16765:	e8 b6 fd ff ff       	call   16520 <addDevice>
   1676a:	83 c4 10             	add    esp,0x10
   1676d:	c7 05 98 74 09 00 00 	mov    DWORD PTR ds:0x97498,0x0
   16774:	00 00 00 
   16777:	31 c0                	xor    eax,eax
   16779:	31 f6                	xor    esi,esi
   1677b:	eb 23                	jmp    167a0 <pciInitialize+0x110>
   1677d:	8d 76 00             	lea    esi,[esi+0x0]
   16780:	83 ec 0c             	sub    esp,0xc
   16783:	89 ee                	mov    esi,ebp
   16785:	53                   	push   ebx
   16786:	e8 b5 fb ff ff       	call   16340 <addFunction>
   1678b:	83 c4 10             	add    esp,0x10
   1678e:	a1 98 74 09 00       	mov    eax,ds:0x97498
   16793:	83 c0 01             	add    eax,0x1
   16796:	83 f8 07             	cmp    eax,0x7
   16799:	a3 98 74 09 00       	mov    ds:0x97498,eax
   1679e:	7f 68                	jg     16808 <pciInitialize+0x178>
   167a0:	0f b6 c0             	movzx  eax,al
   167a3:	50                   	push   eax
   167a4:	0f b6 05 9c 74 09 00 	movzx  eax,BYTE PTR ds:0x9749c
   167ab:	50                   	push   eax
   167ac:	0f b6 05 a0 74 09 00 	movzx  eax,BYTE PTR ds:0x974a0
   167b3:	50                   	push   eax
   167b4:	53                   	push   ebx
   167b5:	e8 46 f4 ff ff       	call   15c00 <getDeviceHeader>
   167ba:	83 c4 10             	add    esp,0x10
   167bd:	66 83 7c 24 66 ff    	cmp    WORD PTR [esp+0x66],0xffff
   167c3:	74 c9                	je     1678e <pciInitialize+0xfe>
   167c5:	0f b7 6c 24 68       	movzx  ebp,WORD PTR [esp+0x68]
   167ca:	66 39 6c 24 18       	cmp    WORD PTR [esp+0x18],bp
   167cf:	74 bd                	je     1678e <pciInitialize+0xfe>
   167d1:	66 39 f5             	cmp    bp,si
   167d4:	74 b8                	je     1678e <pciInitialize+0xfe>
   167d6:	83 7c 24 70 06       	cmp    DWORD PTR [esp+0x70],0x6
   167db:	75 a3                	jne    16780 <pciInitialize+0xf0>
   167dd:	0f b6 15 98 74 09 00 	movzx  edx,BYTE PTR ds:0x97498
   167e4:	89 ee                	mov    esi,ebp
   167e6:	52                   	push   edx
   167e7:	0f b6 15 9c 74 09 00 	movzx  edx,BYTE PTR ds:0x9749c
   167ee:	52                   	push   edx
   167ef:	0f b6 15 a0 74 09 00 	movzx  edx,BYTE PTR ds:0x974a0
   167f6:	52                   	push   edx
   167f7:	53                   	push   ebx
   167f8:	e8 b3 fb ff ff       	call   163b0 <addBridge>
   167fd:	83 c4 10             	add    esp,0x10
   16800:	eb 8c                	jmp    1678e <pciInitialize+0xfe>
   16802:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   16808:	a1 9c 74 09 00       	mov    eax,ds:0x9749c
   1680d:	83 c0 01             	add    eax,0x1
   16810:	83 f8 1f             	cmp    eax,0x1f
   16813:	a3 9c 74 09 00       	mov    ds:0x9749c,eax
   16818:	7f 36                	jg     16850 <pciInitialize+0x1c0>
   1681a:	8b 15 a0 74 09 00    	mov    edx,DWORD PTR ds:0x974a0
   16820:	e9 d3 fe ff ff       	jmp    166f8 <pciInitialize+0x68>
   16825:	8d 76 00             	lea    esi,[esi+0x0]
   16828:	0f b6 15 98 74 09 00 	movzx  edx,BYTE PTR ds:0x97498
   1682f:	0f b6 c0             	movzx  eax,al
   16832:	52                   	push   edx
   16833:	0f b6 15 9c 74 09 00 	movzx  edx,BYTE PTR ds:0x9749c
   1683a:	52                   	push   edx
   1683b:	50                   	push   eax
   1683c:	57                   	push   edi
   1683d:	e8 6e fb ff ff       	call   163b0 <addBridge>
   16842:	83 c4 10             	add    esp,0x10
   16845:	e9 23 ff ff ff       	jmp    1676d <pciInitialize+0xdd>
   1684a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   16850:	a1 a0 74 09 00       	mov    eax,ds:0x974a0
   16855:	8d 50 01             	lea    edx,[eax+0x1]
   16858:	83 fa 31             	cmp    edx,0x31
   1685b:	89 15 a0 74 09 00    	mov    DWORD PTR ds:0x974a0,edx
   16861:	0f 8e 81 fe ff ff    	jle    166e8 <pciInitialize+0x58>
   16867:	81 c4 bc 00 00 00    	add    esp,0xbc
   1686d:	5b                   	pop    ebx
   1686e:	5e                   	pop    esi
   1686f:	5f                   	pop    edi
   16870:	5d                   	pop    ebp
   16871:	c3                   	ret    
   16872:	66 90                	xchg   ax,ax
   16874:	66 90                	xchg   ax,ax
   16876:	66 90                	xchg   ax,ax
   16878:	66 90                	xchg   ax,ax
   1687a:	66 90                	xchg   ax,ax
   1687c:	66 90                	xchg   ax,ax
   1687e:	66 90                	xchg   ax,ax

00016880 <update_cursor>:
update_cursor():
   16880:	8b 0d 00 00 12 00    	mov    ecx,DWORD PTR ds:0x120000
   16886:	ba d4 03 00 00       	mov    edx,0x3d4
   1688b:	b8 0f 00 00 00       	mov    eax,0xf
   16890:	8d 0c 89             	lea    ecx,[ecx+ecx*4]
   16893:	c1 e1 04             	shl    ecx,0x4
   16896:	66 03 0d 04 00 12 00 	add    cx,WORD PTR ds:0x120004
   1689d:	ee                   	out    dx,al
   1689e:	ba d5 03 00 00       	mov    edx,0x3d5
   168a3:	89 c8                	mov    eax,ecx
   168a5:	ee                   	out    dx,al
   168a6:	ba d4 03 00 00       	mov    edx,0x3d4
   168ab:	b8 0e 00 00 00       	mov    eax,0xe
   168b0:	ee                   	out    dx,al
   168b1:	89 c8                	mov    eax,ecx
   168b3:	ba d5 03 00 00       	mov    edx,0x3d5
   168b8:	66 c1 e8 08          	shr    ax,0x8
   168bc:	ee                   	out    dx,al
   168bd:	c3                   	ret    
   168be:	66 90                	xchg   ax,ax

000168c0 <make_color>:
make_color():
   168c0:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   168c5:	c1 e0 04             	shl    eax,0x4
   168c8:	0a 44 24 04          	or     al,BYTE PTR [esp+0x4]
   168cc:	c3                   	ret    
   168cd:	8d 76 00             	lea    esi,[esi+0x0]

000168d0 <make_vgaentry>:
make_vgaentry():
   168d0:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   168d5:	66 0f be 54 24 04    	movsx  dx,BYTE PTR [esp+0x4]
   168db:	c1 e0 08             	shl    eax,0x8
   168de:	09 d0                	or     eax,edx
   168e0:	c3                   	ret    
   168e1:	eb 0d                	jmp    168f0 <terminal_setcolor>
   168e3:	90                   	nop
   168e4:	90                   	nop
   168e5:	90                   	nop
   168e6:	90                   	nop
   168e7:	90                   	nop
   168e8:	90                   	nop
   168e9:	90                   	nop
   168ea:	90                   	nop
   168eb:	90                   	nop
   168ec:	90                   	nop
   168ed:	90                   	nop
   168ee:	90                   	nop
   168ef:	90                   	nop

000168f0 <terminal_setcolor>:
terminal_setcolor():
   168f0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   168f4:	a2 08 00 12 00       	mov    ds:0x120008,al
   168f9:	c3                   	ret    
   168fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00016900 <terminal_putentryat>:
terminal_putentryat():
   16900:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   16904:	0f b6 54 24 08       	movzx  edx,BYTE PTR [esp+0x8]
   16909:	66 0f be 4c 24 04    	movsx  cx,BYTE PTR [esp+0x4]
   1690f:	8d 04 80             	lea    eax,[eax+eax*4]
   16912:	c1 e2 08             	shl    edx,0x8
   16915:	c1 e0 04             	shl    eax,0x4
   16918:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
   1691c:	09 ca                	or     edx,ecx
   1691e:	8b 0d 0c 00 12 00    	mov    ecx,DWORD PTR ds:0x12000c
   16924:	66 89 14 41          	mov    WORD PTR [ecx+eax*2],dx
   16928:	c3                   	ret    
   16929:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016930 <cursorSavePosition>:
cursorSavePosition():
   16930:	0f b6 05 26 00 12 00 	movzx  eax,BYTE PTR ds:0x120026
   16937:	3c 09                	cmp    al,0x9
   16939:	7f 23                	jg     1695e <cursorSavePosition+0x2e>
   1693b:	8b 15 04 00 12 00    	mov    edx,DWORD PTR ds:0x120004
   16941:	83 c0 01             	add    eax,0x1
   16944:	a2 26 00 12 00       	mov    ds:0x120026,al
   16949:	0f be c0             	movsx  eax,al
   1694c:	88 90 10 00 12 00    	mov    BYTE PTR [eax+0x120010],dl
   16952:	8b 15 00 00 12 00    	mov    edx,DWORD PTR ds:0x120000
   16958:	88 90 1c 00 12 00    	mov    BYTE PTR [eax+0x12001c],dl
   1695e:	f3 c3                	repz ret 

00016960 <cursorRestorePosition>:
cursorRestorePosition():
   16960:	0f b6 05 26 00 12 00 	movzx  eax,BYTE PTR ds:0x120026
   16967:	84 c0                	test   al,al
   16969:	7e 58                	jle    169c3 <cursorRestorePosition+0x63>
   1696b:	0f be c8             	movsx  ecx,al
   1696e:	83 e8 01             	sub    eax,0x1
   16971:	56                   	push   esi
   16972:	a2 26 00 12 00       	mov    ds:0x120026,al
   16977:	0f b6 81 1c 00 12 00 	movzx  eax,BYTE PTR [ecx+0x12001c]
   1697e:	be d4 03 00 00       	mov    esi,0x3d4
   16983:	53                   	push   ebx
   16984:	0f b6 99 10 00 12 00 	movzx  ebx,BYTE PTR [ecx+0x120010]
   1698b:	89 f2                	mov    edx,esi
   1698d:	8d 0c 80             	lea    ecx,[eax+eax*4]
   16990:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16995:	b8 0f 00 00 00       	mov    eax,0xf
   1699a:	89 1d 04 00 12 00    	mov    DWORD PTR ds:0x120004,ebx
   169a0:	c1 e1 04             	shl    ecx,0x4
   169a3:	01 d9                	add    ecx,ebx
   169a5:	ee                   	out    dx,al
   169a6:	bb d5 03 00 00       	mov    ebx,0x3d5
   169ab:	89 c8                	mov    eax,ecx
   169ad:	89 da                	mov    edx,ebx
   169af:	ee                   	out    dx,al
   169b0:	b8 0e 00 00 00       	mov    eax,0xe
   169b5:	89 f2                	mov    edx,esi
   169b7:	ee                   	out    dx,al
   169b8:	89 c8                	mov    eax,ecx
   169ba:	89 da                	mov    edx,ebx
   169bc:	66 c1 e8 08          	shr    ax,0x8
   169c0:	ee                   	out    dx,al
   169c1:	5b                   	pop    ebx
   169c2:	5e                   	pop    esi
   169c3:	f3 c3                	repz ret 
   169c5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   169c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000169d0 <terminal_clear>:
terminal_clear():
   169d0:	0f b6 15 27 00 12 00 	movzx  edx,BYTE PTR ds:0x120027
   169d7:	56                   	push   esi
   169d8:	53                   	push   ebx
   169d9:	85 d2                	test   edx,edx
   169db:	74 41                	je     16a1e <terminal_clear+0x4e>
   169dd:	0f b6 0d 08 00 12 00 	movzx  ecx,BYTE PTR ds:0x120008
   169e4:	a1 0c 00 12 00       	mov    eax,ds:0x12000c
   169e9:	8d 1c 92             	lea    ebx,[edx+edx*4]
   169ec:	c1 e3 05             	shl    ebx,0x5
   169ef:	01 c3                	add    ebx,eax
   169f1:	c1 e1 08             	shl    ecx,0x8
   169f4:	83 c9 20             	or     ecx,0x20
   169f7:	89 f6                	mov    esi,esi
   169f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   16a00:	8d 90 a0 00 00 00    	lea    edx,[eax+0xa0]
   16a06:	8d 76 00             	lea    esi,[esi+0x0]
   16a09:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   16a10:	66 89 08             	mov    WORD PTR [eax],cx
   16a13:	83 c0 02             	add    eax,0x2
   16a16:	39 d0                	cmp    eax,edx
   16a18:	75 f6                	jne    16a10 <terminal_clear+0x40>
   16a1a:	39 c3                	cmp    ebx,eax
   16a1c:	75 e2                	jne    16a00 <terminal_clear+0x30>
   16a1e:	be d4 03 00 00       	mov    esi,0x3d4
   16a23:	c7 05 04 00 12 00 00 	mov    DWORD PTR ds:0x120004,0x0
   16a2a:	00 00 00 
   16a2d:	c7 05 00 00 12 00 00 	mov    DWORD PTR ds:0x120000,0x0
   16a34:	00 00 00 
   16a37:	b8 0f 00 00 00       	mov    eax,0xf
   16a3c:	89 f2                	mov    edx,esi
   16a3e:	ee                   	out    dx,al
   16a3f:	31 c9                	xor    ecx,ecx
   16a41:	bb d5 03 00 00       	mov    ebx,0x3d5
   16a46:	89 c8                	mov    eax,ecx
   16a48:	89 da                	mov    edx,ebx
   16a4a:	ee                   	out    dx,al
   16a4b:	b8 0e 00 00 00       	mov    eax,0xe
   16a50:	89 f2                	mov    edx,esi
   16a52:	ee                   	out    dx,al
   16a53:	89 c8                	mov    eax,ecx
   16a55:	89 da                	mov    edx,ebx
   16a57:	ee                   	out    dx,al
   16a58:	5b                   	pop    ebx
   16a59:	5e                   	pop    esi
   16a5a:	c3                   	ret    
   16a5b:	90                   	nop
   16a5c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016a60 <terminal_clear_line>:
terminal_clear_line():
   16a60:	53                   	push   ebx
   16a61:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   16a65:	83 f8 31             	cmp    eax,0x31
   16a68:	77 30                	ja     16a9a <terminal_clear_line+0x3a>
   16a6a:	0f b6 15 08 00 12 00 	movzx  edx,BYTE PTR ds:0x120008
   16a71:	8b 1d 0c 00 12 00    	mov    ebx,DWORD PTR ds:0x12000c
   16a77:	8d 0c 80             	lea    ecx,[eax+eax*4]
   16a7a:	c1 e1 05             	shl    ecx,0x5
   16a7d:	8d 04 0b             	lea    eax,[ebx+ecx*1]
   16a80:	8d 8c 0b a0 00 00 00 	lea    ecx,[ebx+ecx*1+0xa0]
   16a87:	c1 e2 08             	shl    edx,0x8
   16a8a:	83 ca 20             	or     edx,0x20
   16a8d:	8d 76 00             	lea    esi,[esi+0x0]
   16a90:	66 89 10             	mov    WORD PTR [eax],dx
   16a93:	83 c0 02             	add    eax,0x2
   16a96:	39 c8                	cmp    eax,ecx
   16a98:	75 f6                	jne    16a90 <terminal_clear_line+0x30>
   16a9a:	5b                   	pop    ebx
   16a9b:	c3                   	ret    
   16a9c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016aa0 <terminal_copyline>:
terminal_copyline():
   16aa0:	83 ec 10             	sub    esp,0x10
   16aa3:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   16aa7:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
   16aab:	68 a0 00 00 00       	push   0xa0
   16ab0:	8d 04 80             	lea    eax,[eax+eax*4]
   16ab3:	c1 e0 05             	shl    eax,0x5
   16ab6:	05 00 80 0b 00       	add    eax,0xb8000
   16abb:	50                   	push   eax
   16abc:	8d 04 92             	lea    eax,[edx+edx*4]
   16abf:	c1 e0 05             	shl    eax,0x5
   16ac2:	05 00 80 0b 00       	add    eax,0xb8000
   16ac7:	50                   	push   eax
   16ac8:	e8 93 ab 00 00       	call   21660 <memcpy>
   16acd:	83 c4 1c             	add    esp,0x1c
   16ad0:	c3                   	ret    
   16ad1:	eb 0d                	jmp    16ae0 <terminal_putchar>
   16ad3:	90                   	nop
   16ad4:	90                   	nop
   16ad5:	90                   	nop
   16ad6:	90                   	nop
   16ad7:	90                   	nop
   16ad8:	90                   	nop
   16ad9:	90                   	nop
   16ada:	90                   	nop
   16adb:	90                   	nop
   16adc:	90                   	nop
   16add:	90                   	nop
   16ade:	90                   	nop
   16adf:	90                   	nop

00016ae0 <terminal_putchar>:
terminal_putchar():
   16ae0:	56                   	push   esi
   16ae1:	53                   	push   ebx
   16ae2:	83 ec 04             	sub    esp,0x4
   16ae5:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   16ae9:	80 fa 0a             	cmp    dl,0xa
   16aec:	0f 84 a6 00 00 00    	je     16b98 <terminal_putchar+0xb8>
   16af2:	80 fa 08             	cmp    dl,0x8
   16af5:	0f 84 0d 01 00 00    	je     16c08 <terminal_putchar+0x128>
   16afb:	80 fa 09             	cmp    dl,0x9
   16afe:	0f 84 44 01 00 00    	je     16c48 <terminal_putchar+0x168>
   16b04:	80 fa 0d             	cmp    dl,0xd
   16b07:	0f 84 81 00 00 00    	je     16b8e <terminal_putchar+0xae>
   16b0d:	a1 00 00 12 00       	mov    eax,ds:0x120000
   16b12:	0f b6 1d 08 00 12 00 	movzx  ebx,BYTE PTR ds:0x120008
   16b19:	66 0f be d2          	movsx  dx,dl
   16b1d:	8b 35 04 00 12 00    	mov    esi,DWORD PTR ds:0x120004
   16b23:	8d 0c 80             	lea    ecx,[eax+eax*4]
   16b26:	c1 e3 08             	shl    ebx,0x8
   16b29:	09 da                	or     edx,ebx
   16b2b:	c1 e1 04             	shl    ecx,0x4
   16b2e:	8b 1d 0c 00 12 00    	mov    ebx,DWORD PTR ds:0x12000c
   16b34:	01 f1                	add    ecx,esi
   16b36:	83 c6 01             	add    esi,0x1
   16b39:	83 fe 50             	cmp    esi,0x50
   16b3c:	66 89 14 4b          	mov    WORD PTR [ebx+ecx*2],dx
   16b40:	0f 84 72 01 00 00    	je     16cb8 <terminal_putchar+0x1d8>
   16b46:	89 35 04 00 12 00    	mov    DWORD PTR ds:0x120004,esi
   16b4c:	0f b6 15 27 00 12 00 	movzx  edx,BYTE PTR ds:0x120027
   16b53:	39 c2                	cmp    edx,eax
   16b55:	74 63                	je     16bba <terminal_putchar+0xda>
   16b57:	8d 04 80             	lea    eax,[eax+eax*4]
   16b5a:	be d4 03 00 00       	mov    esi,0x3d4
   16b5f:	89 f2                	mov    edx,esi
   16b61:	c1 e0 04             	shl    eax,0x4
   16b64:	66 03 05 04 00 12 00 	add    ax,WORD PTR ds:0x120004
   16b6b:	89 c1                	mov    ecx,eax
   16b6d:	b8 0f 00 00 00       	mov    eax,0xf
   16b72:	ee                   	out    dx,al
   16b73:	bb d5 03 00 00       	mov    ebx,0x3d5
   16b78:	89 c8                	mov    eax,ecx
   16b7a:	89 da                	mov    edx,ebx
   16b7c:	ee                   	out    dx,al
   16b7d:	b8 0e 00 00 00       	mov    eax,0xe
   16b82:	89 f2                	mov    edx,esi
   16b84:	ee                   	out    dx,al
   16b85:	89 c8                	mov    eax,ecx
   16b87:	89 da                	mov    edx,ebx
   16b89:	66 c1 e8 08          	shr    ax,0x8
   16b8d:	ee                   	out    dx,al
   16b8e:	83 c4 04             	add    esp,0x4
   16b91:	5b                   	pop    ebx
   16b92:	5e                   	pop    esi
   16b93:	c3                   	ret    
   16b94:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16b98:	a1 00 00 12 00       	mov    eax,ds:0x120000
   16b9d:	0f b6 15 27 00 12 00 	movzx  edx,BYTE PTR ds:0x120027
   16ba4:	c7 05 04 00 12 00 00 	mov    DWORD PTR ds:0x120004,0x0
   16bab:	00 00 00 
   16bae:	83 c0 01             	add    eax,0x1
   16bb1:	39 c2                	cmp    edx,eax
   16bb3:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16bb8:	75 9d                	jne    16b57 <terminal_putchar+0x77>
   16bba:	85 c0                	test   eax,eax
   16bbc:	74 38                	je     16bf6 <terminal_putchar+0x116>
   16bbe:	b8 00 80 0b 00       	mov    eax,0xb8000
   16bc3:	31 db                	xor    ebx,ebx
   16bc5:	8d 76 00             	lea    esi,[esi+0x0]
   16bc8:	8d b0 a0 00 00 00    	lea    esi,[eax+0xa0]
   16bce:	83 ec 04             	sub    esp,0x4
   16bd1:	83 c3 01             	add    ebx,0x1
   16bd4:	68 a0 00 00 00       	push   0xa0
   16bd9:	56                   	push   esi
   16bda:	50                   	push   eax
   16bdb:	e8 80 aa 00 00       	call   21660 <memcpy>
   16be0:	0f b6 15 27 00 12 00 	movzx  edx,BYTE PTR ds:0x120027
   16be7:	83 c4 10             	add    esp,0x10
   16bea:	89 f0                	mov    eax,esi
   16bec:	39 da                	cmp    edx,ebx
   16bee:	77 d8                	ja     16bc8 <terminal_putchar+0xe8>
   16bf0:	8b 15 00 00 12 00    	mov    edx,DWORD PTR ds:0x120000
   16bf6:	8d 42 ff             	lea    eax,[edx-0x1]
   16bf9:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16bfe:	e9 54 ff ff ff       	jmp    16b57 <terminal_putchar+0x77>
   16c03:	90                   	nop
   16c04:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16c08:	a1 04 00 12 00       	mov    eax,ds:0x120004
   16c0d:	83 f8 01             	cmp    eax,0x1
   16c10:	76 7e                	jbe    16c90 <terminal_putchar+0x1b0>
   16c12:	8d 50 ff             	lea    edx,[eax-0x1]
   16c15:	a1 00 00 12 00       	mov    eax,ds:0x120000
   16c1a:	89 15 04 00 12 00    	mov    DWORD PTR ds:0x120004,edx
   16c20:	8d 0c 80             	lea    ecx,[eax+eax*4]
   16c23:	8b 1d 0c 00 12 00    	mov    ebx,DWORD PTR ds:0x12000c
   16c29:	c1 e1 04             	shl    ecx,0x4
   16c2c:	01 ca                	add    edx,ecx
   16c2e:	0f b6 0d 08 00 12 00 	movzx  ecx,BYTE PTR ds:0x120008
   16c35:	c1 e1 08             	shl    ecx,0x8
   16c38:	83 c9 20             	or     ecx,0x20
   16c3b:	66 89 0c 53          	mov    WORD PTR [ebx+edx*2],cx
   16c3f:	e9 08 ff ff ff       	jmp    16b4c <terminal_putchar+0x6c>
   16c44:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16c48:	8b 0d 04 00 12 00    	mov    ecx,DWORD PTR ds:0x120004
   16c4e:	ba cd cc cc cc       	mov    edx,0xcccccccd
   16c53:	89 c8                	mov    eax,ecx
   16c55:	f7 e2                	mul    edx
   16c57:	b8 05 00 00 00       	mov    eax,0x5
   16c5c:	c1 ea 02             	shr    edx,0x2
   16c5f:	8d 5c 92 05          	lea    ebx,[edx+edx*4+0x5]
   16c63:	39 d9                	cmp    ecx,ebx
   16c65:	0f 44 d8             	cmove  ebx,eax
   16c68:	39 cb                	cmp    ebx,ecx
   16c6a:	76 19                	jbe    16c85 <terminal_putchar+0x1a5>
   16c6c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16c70:	83 ec 0c             	sub    esp,0xc
   16c73:	6a 20                	push   0x20
   16c75:	e8 66 fe ff ff       	call   16ae0 <terminal_putchar>
   16c7a:	83 c4 10             	add    esp,0x10
   16c7d:	3b 1d 04 00 12 00    	cmp    ebx,DWORD PTR ds:0x120004
   16c83:	77 eb                	ja     16c70 <terminal_putchar+0x190>
   16c85:	a1 00 00 12 00       	mov    eax,ds:0x120000
   16c8a:	e9 bd fe ff ff       	jmp    16b4c <terminal_putchar+0x6c>
   16c8f:	90                   	nop
   16c90:	a1 00 00 12 00       	mov    eax,ds:0x120000
   16c95:	c7 05 04 00 12 00 50 	mov    DWORD PTR ds:0x120004,0x50
   16c9c:	00 00 00 
   16c9f:	ba 50 00 00 00       	mov    edx,0x50
   16ca4:	83 e8 01             	sub    eax,0x1
   16ca7:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16cac:	e9 6f ff ff ff       	jmp    16c20 <terminal_putchar+0x140>
   16cb1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16cb8:	83 c0 01             	add    eax,0x1
   16cbb:	c7 05 04 00 12 00 00 	mov    DWORD PTR ds:0x120004,0x0
   16cc2:	00 00 00 
   16cc5:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16cca:	e9 7d fe ff ff       	jmp    16b4c <terminal_putchar+0x6c>
   16ccf:	90                   	nop

00016cd0 <cursorUpdateBiosCursor>:
cursorUpdateBiosCursor():
   16cd0:	a1 04 00 12 00       	mov    eax,ds:0x120004
   16cd5:	a2 50 04 00 00       	mov    ds:0x450,al
   16cda:	0f b6 05 00 00 12 00 	movzx  eax,BYTE PTR ds:0x120000
   16ce1:	83 c0 03             	add    eax,0x3
   16ce4:	a2 51 04 00 00       	mov    ds:0x451,al
   16ce9:	c3                   	ret    
   16cea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00016cf0 <cursorMoveTo>:
cursorMoveTo():
   16cf0:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   16cf4:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   16cf8:	0f b6 c1             	movzx  eax,cl
   16cfb:	0f b6 c9             	movzx  ecx,cl
   16cfe:	8d 0c 89             	lea    ecx,[ecx+ecx*4]
   16d01:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16d06:	0f b6 c2             	movzx  eax,dl
   16d09:	0f b6 d2             	movzx  edx,dl
   16d0c:	a3 04 00 12 00       	mov    ds:0x120004,eax
   16d11:	b8 0f 00 00 00       	mov    eax,0xf
   16d16:	c1 e1 04             	shl    ecx,0x4
   16d19:	01 d1                	add    ecx,edx
   16d1b:	ba d4 03 00 00       	mov    edx,0x3d4
   16d20:	ee                   	out    dx,al
   16d21:	ba d5 03 00 00       	mov    edx,0x3d5
   16d26:	89 c8                	mov    eax,ecx
   16d28:	ee                   	out    dx,al
   16d29:	ba d4 03 00 00       	mov    edx,0x3d4
   16d2e:	b8 0e 00 00 00       	mov    eax,0xe
   16d33:	ee                   	out    dx,al
   16d34:	89 c8                	mov    eax,ecx
   16d36:	ba d5 03 00 00       	mov    edx,0x3d5
   16d3b:	66 c1 e8 08          	shr    ax,0x8
   16d3f:	ee                   	out    dx,al
   16d40:	c3                   	ret    
   16d41:	eb 0d                	jmp    16d50 <cursorMoveToX>
   16d43:	90                   	nop
   16d44:	90                   	nop
   16d45:	90                   	nop
   16d46:	90                   	nop
   16d47:	90                   	nop
   16d48:	90                   	nop
   16d49:	90                   	nop
   16d4a:	90                   	nop
   16d4b:	90                   	nop
   16d4c:	90                   	nop
   16d4d:	90                   	nop
   16d4e:	90                   	nop
   16d4f:	90                   	nop

00016d50 <cursorMoveToX>:
cursorMoveToX():
   16d50:	0f b6 44 24 04       	movzx  eax,BYTE PTR [esp+0x4]
   16d55:	a3 04 00 12 00       	mov    ds:0x120004,eax
   16d5a:	c3                   	ret    
   16d5b:	90                   	nop
   16d5c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016d60 <cursorMoveToY>:
cursorMoveToY():
   16d60:	0f b6 44 24 04       	movzx  eax,BYTE PTR [esp+0x4]
   16d65:	a3 00 00 12 00       	mov    ds:0x120000,eax
   16d6a:	c3                   	ret    
   16d6b:	90                   	nop
   16d6c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016d70 <cursorGetPosX>:
cursorGetPosX():
   16d70:	0f b6 05 04 00 12 00 	movzx  eax,BYTE PTR ds:0x120004
   16d77:	c3                   	ret    
   16d78:	90                   	nop
   16d79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016d80 <cursorGetMaxX>:
cursorGetMaxX():
   16d80:	b8 50 00 00 00       	mov    eax,0x50
   16d85:	c3                   	ret    
   16d86:	8d 76 00             	lea    esi,[esi+0x0]
   16d89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00016d90 <cursorGetMaxY>:
cursorGetMaxY():
   16d90:	0f b6 05 27 00 12 00 	movzx  eax,BYTE PTR ds:0x120027
   16d97:	c3                   	ret    
   16d98:	90                   	nop
   16d99:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016da0 <displayGetMaxXY>:
displayGetMaxXY():
   16da0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   16da4:	c7 00 50 00 00 00    	mov    DWORD PTR [eax],0x50
   16daa:	0f b6 15 27 00 12 00 	movzx  edx,BYTE PTR ds:0x120027
   16db1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   16db5:	89 10                	mov    DWORD PTR [eax],edx
   16db7:	c3                   	ret    
   16db8:	90                   	nop
   16db9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016dc0 <cursorGetPosY>:
cursorGetPosY():
   16dc0:	0f b6 05 00 00 12 00 	movzx  eax,BYTE PTR ds:0x120000
   16dc7:	c3                   	ret    
   16dc8:	90                   	nop
   16dc9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00016dd0 <kTermPrint>:
kTermPrint():
   16dd0:	56                   	push   esi
   16dd1:	53                   	push   ebx
   16dd2:	83 ec 10             	sub    esp,0x10
   16dd5:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   16dd9:	53                   	push   ebx
   16dda:	e8 21 ba 00 00       	call   22800 <strlen>
   16ddf:	83 c4 10             	add    esp,0x10
   16de2:	85 c0                	test   eax,eax
   16de4:	8d 34 03             	lea    esi,[ebx+eax*1]
   16de7:	74 1d                	je     16e06 <kTermPrint+0x36>
   16de9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16df0:	0f be 03             	movsx  eax,BYTE PTR [ebx]
   16df3:	83 ec 0c             	sub    esp,0xc
   16df6:	83 c3 01             	add    ebx,0x1
   16df9:	50                   	push   eax
   16dfa:	e8 e1 fc ff ff       	call   16ae0 <terminal_putchar>
   16dff:	83 c4 10             	add    esp,0x10
   16e02:	39 f3                	cmp    ebx,esi
   16e04:	75 ea                	jne    16df0 <kTermPrint+0x20>
   16e06:	83 c4 04             	add    esp,0x4
   16e09:	5b                   	pop    ebx
   16e0a:	5e                   	pop    esi
   16e0b:	c3                   	ret    
   16e0c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016e10 <kTermInit>:
kTermInit():
   16e10:	c6 05 27 00 12 00 32 	mov    BYTE PTR ds:0x120027,0x32
   16e17:	c7 05 00 00 12 00 00 	mov    DWORD PTR ds:0x120000,0x0
   16e1e:	00 00 00 
   16e21:	c7 05 04 00 12 00 00 	mov    DWORD PTR ds:0x120004,0x0
   16e28:	00 00 00 
   16e2b:	c6 05 08 00 12 00 0e 	mov    BYTE PTR ds:0x120008,0xe
   16e32:	c7 05 0c 00 12 00 00 	mov    DWORD PTR ds:0x12000c,0xb8000
   16e39:	80 0b 00 
   16e3c:	c3                   	ret    
   16e3d:	8d 76 00             	lea    esi,[esi+0x0]

00016e40 <puts>:
puts():
   16e40:	53                   	push   ebx
   16e41:	83 ec 08             	sub    esp,0x8
   16e44:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   16e48:	0f be 03             	movsx  eax,BYTE PTR [ebx]
   16e4b:	84 c0                	test   al,al
   16e4d:	7e 17                	jle    16e66 <puts+0x26>
   16e4f:	90                   	nop
   16e50:	83 ec 0c             	sub    esp,0xc
   16e53:	83 c3 01             	add    ebx,0x1
   16e56:	50                   	push   eax
   16e57:	e8 84 fc ff ff       	call   16ae0 <terminal_putchar>
   16e5c:	0f be 03             	movsx  eax,BYTE PTR [ebx]
   16e5f:	83 c4 10             	add    esp,0x10
   16e62:	84 c0                	test   al,al
   16e64:	7f ea                	jg     16e50 <puts+0x10>
   16e66:	83 c4 08             	add    esp,0x8
   16e69:	5b                   	pop    ebx
   16e6a:	c3                   	ret    
   16e6b:	90                   	nop
   16e6c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00016e70 <putc>:
putc():
   16e70:	0f be 44 24 04       	movsx  eax,BYTE PTR [esp+0x4]
   16e75:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   16e79:	e9 62 fc ff ff       	jmp    16ae0 <terminal_putchar>
   16e7e:	66 90                	xchg   ax,ax

00016e80 <doRSDPSearch>:
doRSDPSearch():
   16e80:	56                   	push   esi
   16e81:	53                   	push   ebx
   16e82:	83 ec 04             	sub    esp,0x4
   16e85:	f6 05 79 98 12 00 04 	test   BYTE PTR ds:0x129879,0x4
   16e8c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   16e90:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   16e94:	75 5a                	jne    16ef0 <doRSDPSearch+0x70>
   16e96:	85 f6                	test   esi,esi
   16e98:	7e 46                	jle    16ee0 <doRSDPSearch+0x60>
   16e9a:	89 d8                	mov    eax,ebx
   16e9c:	8d 14 1e             	lea    edx,[esi+ebx*1]
   16e9f:	eb 0e                	jmp    16eaf <doRSDPSearch+0x2f>
   16ea1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16ea8:	83 c0 01             	add    eax,0x1
   16eab:	39 c2                	cmp    edx,eax
   16ead:	74 31                	je     16ee0 <doRSDPSearch+0x60>
   16eaf:	80 38 52             	cmp    BYTE PTR [eax],0x52
   16eb2:	75 f4                	jne    16ea8 <doRSDPSearch+0x28>
   16eb4:	80 78 01 53          	cmp    BYTE PTR [eax+0x1],0x53
   16eb8:	75 ee                	jne    16ea8 <doRSDPSearch+0x28>
   16eba:	80 78 02 44          	cmp    BYTE PTR [eax+0x2],0x44
   16ebe:	75 e8                	jne    16ea8 <doRSDPSearch+0x28>
   16ec0:	80 78 03 20          	cmp    BYTE PTR [eax+0x3],0x20
   16ec4:	75 e2                	jne    16ea8 <doRSDPSearch+0x28>
   16ec6:	80 78 04 50          	cmp    BYTE PTR [eax+0x4],0x50
   16eca:	75 dc                	jne    16ea8 <doRSDPSearch+0x28>
   16ecc:	80 78 05 54          	cmp    BYTE PTR [eax+0x5],0x54
   16ed0:	75 d6                	jne    16ea8 <doRSDPSearch+0x28>
   16ed2:	80 78 06 52          	cmp    BYTE PTR [eax+0x6],0x52
   16ed6:	75 d0                	jne    16ea8 <doRSDPSearch+0x28>
   16ed8:	80 78 07 20          	cmp    BYTE PTR [eax+0x7],0x20
   16edc:	75 ca                	jne    16ea8 <doRSDPSearch+0x28>
   16ede:	eb 05                	jmp    16ee5 <doRSDPSearch+0x65>
   16ee0:	b8 ff ff ff ff       	mov    eax,0xffffffff
   16ee5:	83 c4 04             	add    esp,0x4
   16ee8:	5b                   	pop    ebx
   16ee9:	5e                   	pop    esi
   16eea:	c3                   	ret    
   16eeb:	90                   	nop
   16eec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16ef0:	8d 04 33             	lea    eax,[ebx+esi*1]
   16ef3:	50                   	push   eax
   16ef4:	53                   	push   ebx
   16ef5:	53                   	push   ebx
   16ef6:	68 88 48 08 00       	push   0x84888
   16efb:	e8 60 b7 00 00       	call   22660 <printk>
   16f00:	83 c4 10             	add    esp,0x10
   16f03:	eb 91                	jmp    16e96 <doRSDPSearch+0x16>
   16f05:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   16f09:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00016f10 <acpiFindTable>:
acpiFindTable():
   16f10:	55                   	push   ebp
   16f11:	57                   	push   edi
   16f12:	56                   	push   esi
   16f13:	53                   	push   ebx
   16f14:	83 ec 1c             	sub    esp,0x1c
   16f17:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   16f1b:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   16f1f:	8b 45 04             	mov    eax,DWORD PTR [ebp+0x4]
   16f22:	8d 78 dc             	lea    edi,[eax-0x24]
   16f25:	c1 ef 02             	shr    edi,0x2
   16f28:	8d 47 0a             	lea    eax,[edi+0xa]
   16f2b:	31 ff                	xor    edi,edi
   16f2d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   16f31:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16f38:	8b 5c bd 24          	mov    ebx,DWORD PTR [ebp+edi*4+0x24]
   16f3c:	83 ec 04             	sub    esp,0x4
   16f3f:	53                   	push   ebx
   16f40:	56                   	push   esi
   16f41:	68 b0 48 08 00       	push   0x848b0
   16f46:	e8 15 b7 00 00       	call   22660 <printk>
   16f4b:	83 c4 0c             	add    esp,0xc
   16f4e:	6a 04                	push   0x4
   16f50:	56                   	push   esi
   16f51:	53                   	push   ebx
   16f52:	e8 59 b1 ff ff       	call   120b0 <strncmp>
   16f57:	83 c4 10             	add    esp,0x10
   16f5a:	85 c0                	test   eax,eax
   16f5c:	74 1a                	je     16f78 <acpiFindTable+0x68>
   16f5e:	83 c7 01             	add    edi,0x1
   16f61:	39 7c 24 0c          	cmp    DWORD PTR [esp+0xc],edi
   16f65:	7f d1                	jg     16f38 <acpiFindTable+0x28>
   16f67:	83 c4 1c             	add    esp,0x1c
   16f6a:	31 c0                	xor    eax,eax
   16f6c:	5b                   	pop    ebx
   16f6d:	5e                   	pop    esi
   16f6e:	5f                   	pop    edi
   16f6f:	5d                   	pop    ebp
   16f70:	c3                   	ret    
   16f71:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16f78:	83 c4 1c             	add    esp,0x1c
   16f7b:	89 d8                	mov    eax,ebx
   16f7d:	5b                   	pop    ebx
   16f7e:	5e                   	pop    esi
   16f7f:	5f                   	pop    edi
   16f80:	5d                   	pop    ebp
   16f81:	c3                   	ret    
   16f82:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   16f89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00016f90 <acpiFindTable2>:
acpiFindTable2():
   16f90:	55                   	push   ebp
   16f91:	57                   	push   edi
   16f92:	56                   	push   esi
   16f93:	53                   	push   ebx
   16f94:	83 ec 1c             	sub    esp,0x1c
   16f97:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   16f9b:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   16f9f:	8b 45 04             	mov    eax,DWORD PTR [ebp+0x4]
   16fa2:	8d 78 dc             	lea    edi,[eax-0x24]
   16fa5:	c1 ef 02             	shr    edi,0x2
   16fa8:	89 f8                	mov    eax,edi
   16faa:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
   16fae:	31 ff                	xor    edi,edi
   16fb0:	85 c0                	test   eax,eax
   16fb2:	75 15                	jne    16fc9 <acpiFindTable2+0x39>
   16fb4:	eb 4a                	jmp    17000 <acpiFindTable2+0x70>
   16fb6:	8d 76 00             	lea    esi,[esi+0x0]
   16fb9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   16fc0:	83 c7 01             	add    edi,0x1
   16fc3:	39 7c 24 0c          	cmp    DWORD PTR [esp+0xc],edi
   16fc7:	74 37                	je     17000 <acpiFindTable2+0x70>
   16fc9:	8b 5c bd 24          	mov    ebx,DWORD PTR [ebp+edi*4+0x24]
   16fcd:	83 ec 04             	sub    esp,0x4
   16fd0:	53                   	push   ebx
   16fd1:	56                   	push   esi
   16fd2:	68 b0 48 08 00       	push   0x848b0
   16fd7:	e8 84 b6 00 00       	call   22660 <printk>
   16fdc:	83 c4 0c             	add    esp,0xc
   16fdf:	6a 04                	push   0x4
   16fe1:	56                   	push   esi
   16fe2:	53                   	push   ebx
   16fe3:	e8 c8 b0 ff ff       	call   120b0 <strncmp>
   16fe8:	83 c4 10             	add    esp,0x10
   16feb:	85 c0                	test   eax,eax
   16fed:	75 d1                	jne    16fc0 <acpiFindTable2+0x30>
   16fef:	83 c4 1c             	add    esp,0x1c
   16ff2:	89 d8                	mov    eax,ebx
   16ff4:	5b                   	pop    ebx
   16ff5:	5e                   	pop    esi
   16ff6:	5f                   	pop    edi
   16ff7:	5d                   	pop    ebp
   16ff8:	c3                   	ret    
   16ff9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   17000:	83 c4 1c             	add    esp,0x1c
   17003:	31 c0                	xor    eax,eax
   17005:	5b                   	pop    ebx
   17006:	5e                   	pop    esi
   17007:	5f                   	pop    edi
   17008:	5d                   	pop    ebp
   17009:	c3                   	ret    
   1700a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00017010 <acpiFindTables>:
acpiFindTables():
   17010:	56                   	push   esi
   17011:	53                   	push   ebx
   17012:	83 ec 04             	sub    esp,0x4
   17015:	f6 05 79 98 12 00 04 	test   BYTE PTR ds:0x129879,0x4
   1701c:	0f 85 ce 00 00 00    	jne    170f0 <acpiFindTables+0xe0>
   17022:	0f b7 05 0e 04 00 00 	movzx  eax,WORD PTR ds:0x40e
   17029:	83 ec 08             	sub    esp,0x8
   1702c:	68 ff ff 00 00       	push   0xffff
   17031:	8d 34 80             	lea    esi,[eax+eax*4]
   17034:	01 f6                	add    esi,esi
   17036:	56                   	push   esi
   17037:	e8 44 fe ff ff       	call   16e80 <doRSDPSearch>
   1703c:	83 c4 10             	add    esp,0x10
   1703f:	83 f8 ff             	cmp    eax,0xffffffff
   17042:	89 c3                	mov    ebx,eax
   17044:	0f 84 fe 00 00 00    	je     17148 <acpiFindTables+0x138>
   1704a:	f6 05 79 98 12 00 04 	test   BYTE PTR ds:0x129879,0x4
   17051:	0f 85 b1 00 00 00    	jne    17108 <acpiFindTables+0xf8>
   17057:	80 7b 0f 00          	cmp    BYTE PTR [ebx+0xf],0x0
   1705b:	0f 84 7f 00 00 00    	je     170e0 <acpiFindTables+0xd0>
   17061:	8b 5b 18             	mov    ebx,DWORD PTR [ebx+0x18]
   17064:	8d 43 24             	lea    eax,[ebx+0x24]
   17067:	50                   	push   eax
   17068:	8d 43 0a             	lea    eax,[ebx+0xa]
   1706b:	50                   	push   eax
   1706c:	53                   	push   ebx
   1706d:	68 28 49 08 00       	push   0x84928
   17072:	e8 e9 b5 00 00       	call   22660 <printk>
   17077:	83 c4 10             	add    esp,0x10
   1707a:	83 ec 08             	sub    esp,0x8
   1707d:	68 8d 38 06 00       	push   0x6388d
   17082:	53                   	push   ebx
   17083:	e8 88 fe ff ff       	call   16f10 <acpiFindTable>
   17088:	83 c4 10             	add    esp,0x10
   1708b:	85 c0                	test   eax,eax
   1708d:	89 c3                	mov    ebx,eax
   1708f:	0f 84 fb 00 00 00    	je     17190 <acpiFindTables+0x180>
   17095:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
   17098:	83 ec 18             	sub    esp,0x18
   1709b:	89 04 24             	mov    DWORD PTR [esp],eax
   1709e:	8b 43 78             	mov    eax,DWORD PTR [ebx+0x78]
   170a1:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   170a5:	8b 43 7c             	mov    eax,DWORD PTR [ebx+0x7c]
   170a8:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   170ac:	53                   	push   ebx
   170ad:	68 54 49 08 00       	push   0x84954
   170b2:	e8 a9 b5 00 00       	call   22660 <printk>
   170b7:	83 c4 20             	add    esp,0x20
   170ba:	83 ec 08             	sub    esp,0x8
   170bd:	68 92 38 06 00       	push   0x63892
   170c2:	53                   	push   ebx
   170c3:	e8 48 fe ff ff       	call   16f10 <acpiFindTable>
   170c8:	5a                   	pop    edx
   170c9:	59                   	pop    ecx
   170ca:	50                   	push   eax
   170cb:	68 97 38 06 00       	push   0x63897
   170d0:	e8 8b b5 00 00       	call   22660 <printk>
   170d5:	83 c4 10             	add    esp,0x10
   170d8:	83 c4 04             	add    esp,0x4
   170db:	5b                   	pop    ebx
   170dc:	5e                   	pop    esi
   170dd:	c3                   	ret    
   170de:	66 90                	xchg   ax,ax
   170e0:	8b 5b 10             	mov    ebx,DWORD PTR [ebx+0x10]
   170e3:	e9 7c ff ff ff       	jmp    17064 <acpiFindTables+0x54>
   170e8:	90                   	nop
   170e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   170f0:	83 ec 0c             	sub    esp,0xc
   170f3:	68 d8 48 08 00       	push   0x848d8
   170f8:	e8 63 b5 00 00       	call   22660 <printk>
   170fd:	83 c4 10             	add    esp,0x10
   17100:	e9 1d ff ff ff       	jmp    17022 <acpiFindTables+0x12>
   17105:	8d 76 00             	lea    esi,[esi+0x0]
   17108:	83 ec 08             	sub    esp,0x8
   1710b:	53                   	push   ebx
   1710c:	68 75 38 06 00       	push   0x63875
   17111:	e8 4a b5 00 00       	call   22660 <printk>
   17116:	83 c4 0c             	add    esp,0xc
   17119:	80 7b 0f 00          	cmp    BYTE PTR [ebx+0xf],0x0
   1711d:	8d 53 09             	lea    edx,[ebx+0x9]
   17120:	b9 28 75 04 00       	mov    ecx,0x47528
   17125:	b8 85 8d 05 00       	mov    eax,0x58d85
   1712a:	52                   	push   edx
   1712b:	0f 45 c1             	cmovne eax,ecx
   1712e:	50                   	push   eax
   1712f:	68 04 49 08 00       	push   0x84904
   17134:	e8 27 b5 00 00       	call   22660 <printk>
   17139:	83 c4 10             	add    esp,0x10
   1713c:	e9 16 ff ff ff       	jmp    17057 <acpiFindTables+0x47>
   17141:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   17148:	83 ec 08             	sub    esp,0x8
   1714b:	68 ff ff 01 00       	push   0x1ffff
   17150:	68 00 00 0e 00       	push   0xe0000
   17155:	e8 26 fd ff ff       	call   16e80 <doRSDPSearch>
   1715a:	83 c4 10             	add    esp,0x10
   1715d:	83 f8 ff             	cmp    eax,0xffffffff
   17160:	89 c3                	mov    ebx,eax
   17162:	0f 85 e2 fe ff ff    	jne    1704a <acpiFindTables+0x3a>
   17168:	f6 05 79 98 12 00 04 	test   BYTE PTR ds:0x129879,0x4
   1716f:	0f 84 63 ff ff ff    	je     170d8 <acpiFindTables+0xc8>
   17175:	83 ec 08             	sub    esp,0x8
   17178:	56                   	push   esi
   17179:	68 63 38 06 00       	push   0x63863
   1717e:	e8 dd b4 00 00       	call   22660 <printk>
   17183:	83 c4 10             	add    esp,0x10
   17186:	e9 4d ff ff ff       	jmp    170d8 <acpiFindTables+0xc8>
   1718b:	90                   	nop
   1718c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   17190:	83 ec 0c             	sub    esp,0xc
   17193:	68 7c 49 08 00       	push   0x8497c
   17198:	e8 c3 b4 00 00       	call   22660 <printk>
   1719d:	83 c4 10             	add    esp,0x10
   171a0:	e9 15 ff ff ff       	jmp    170ba <acpiFindTables+0xaa>
   171a5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   171a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000171b0 <acpiInitialize>:
acpiInitialize():
   171b0:	e9 5b fe ff ff       	jmp    17010 <acpiFindTables>
   171b5:	66 90                	xchg   ax,ax
   171b7:	66 90                	xchg   ax,ax
   171b9:	66 90                	xchg   ax,ax
   171bb:	66 90                	xchg   ax,ax
   171bd:	66 90                	xchg   ax,ax
   171bf:	90                   	nop

000171c0 <apicCheckFor>:
apicCheckFor():
   171c0:	9c                   	pushf  
   171c1:	9c                   	pushf  
   171c2:	5a                   	pop    edx
   171c3:	89 d0                	mov    eax,edx
   171c5:	81 f2 00 00 20 00    	xor    edx,0x200000
   171cb:	52                   	push   edx
   171cc:	9d                   	popf   
   171cd:	9c                   	pushf  
   171ce:	5a                   	pop    edx
   171cf:	9d                   	popf   
   171d0:	31 d0                	xor    eax,edx
   171d2:	56                   	push   esi
   171d3:	31 f6                	xor    esi,esi
   171d5:	a9 00 00 20 00       	test   eax,0x200000
   171da:	53                   	push   ebx
   171db:	74 17                	je     171f4 <apicCheckFor+0x34>
   171dd:	31 c0                	xor    eax,eax
   171df:	0f a2                	cpuid  
   171e1:	85 c0                	test   eax,eax
   171e3:	74 0f                	je     171f4 <apicCheckFor+0x34>
   171e5:	b8 01 00 00 00       	mov    eax,0x1
   171ea:	0f a2                	cpuid  
   171ec:	c1 ea 09             	shr    edx,0x9
   171ef:	89 d6                	mov    esi,edx
   171f1:	83 e6 01             	and    esi,0x1
   171f4:	89 f0                	mov    eax,esi
   171f6:	5b                   	pop    ebx
   171f7:	5e                   	pop    esi
   171f8:	c3                   	ret    
   171f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017200 <acpiGetAPICVersion>:
acpiGetAPICVersion():
   17200:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   17205:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
   17208:	c3                   	ret    
   17209:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017210 <apciGetAPICID>:
apciGetAPICID():
   17210:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   17215:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
   17218:	c3                   	ret    
   17219:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017220 <apicGetAPICBase>:
apicGetAPICBase():
   17220:	83 ec 20             	sub    esp,0x20
   17223:	8d 44 24 10          	lea    eax,[esp+0x10]
   17227:	50                   	push   eax
   17228:	8d 44 24 10          	lea    eax,[esp+0x10]
   1722c:	50                   	push   eax
   1722d:	6a 1b                	push   0x1b
   1722f:	e8 ec 12 00 00       	call   18520 <rdmsr32>
   17234:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   17238:	83 c4 2c             	add    esp,0x2c
   1723b:	25 00 f0 ff ff       	and    eax,0xfffff000
   17240:	c3                   	ret    
   17241:	eb 0d                	jmp    17250 <apicReadRegister>
   17243:	90                   	nop
   17244:	90                   	nop
   17245:	90                   	nop
   17246:	90                   	nop
   17247:	90                   	nop
   17248:	90                   	nop
   17249:	90                   	nop
   1724a:	90                   	nop
   1724b:	90                   	nop
   1724c:	90                   	nop
   1724d:	90                   	nop
   1724e:	90                   	nop
   1724f:	90                   	nop

00017250 <apicReadRegister>:
apicReadRegister():
   17250:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   17255:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
   17259:	8b 00                	mov    eax,DWORD PTR [eax]
   1725b:	c3                   	ret    
   1725c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00017260 <apicWriteRegister>:
apicWriteRegister():
   17260:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   17265:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
   17269:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1726d:	89 10                	mov    DWORD PTR [eax],edx
   1726f:	c3                   	ret    

00017270 <apicSetAPICBase>:
apicSetAPICBase():
   17270:	53                   	push   ebx
   17271:	83 ec 0c             	sub    esp,0xc
   17274:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   17278:	6a 00                	push   0x0
   1727a:	89 d8                	mov    eax,ebx
   1727c:	25 00 f1 ff ff       	and    eax,0xfffff100
   17281:	80 cc 08             	or     ah,0x8
   17284:	50                   	push   eax
   17285:	6a 1b                	push   0x1b
   17287:	e8 c4 12 00 00       	call   18550 <wrmsr32>
   1728c:	89 1d a4 98 12 00    	mov    DWORD PTR ds:0x1298a4,ebx
   17292:	83 c4 18             	add    esp,0x18
   17295:	5b                   	pop    ebx
   17296:	c3                   	ret    
   17297:	89 f6                	mov    esi,esi
   17299:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000172a0 <cpu_get_apic_base>:
cpu_get_apic_base():
   172a0:	83 ec 20             	sub    esp,0x20
   172a3:	8d 44 24 10          	lea    eax,[esp+0x10]
   172a7:	50                   	push   eax
   172a8:	8d 44 24 10          	lea    eax,[esp+0x10]
   172ac:	50                   	push   eax
   172ad:	6a 1b                	push   0x1b
   172af:	e8 6c 12 00 00       	call   18520 <rdmsr32>
   172b4:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   172b8:	83 c4 2c             	add    esp,0x2c
   172bb:	25 00 f0 ff ff       	and    eax,0xfffff000
   172c0:	c3                   	ret    
   172c1:	eb 0d                	jmp    172d0 <apicIsEnabled>
   172c3:	90                   	nop
   172c4:	90                   	nop
   172c5:	90                   	nop
   172c6:	90                   	nop
   172c7:	90                   	nop
   172c8:	90                   	nop
   172c9:	90                   	nop
   172ca:	90                   	nop
   172cb:	90                   	nop
   172cc:	90                   	nop
   172cd:	90                   	nop
   172ce:	90                   	nop
   172cf:	90                   	nop

000172d0 <apicIsEnabled>:
apicIsEnabled():
   172d0:	83 ec 20             	sub    esp,0x20
   172d3:	8d 44 24 10          	lea    eax,[esp+0x10]
   172d7:	50                   	push   eax
   172d8:	8d 44 24 10          	lea    eax,[esp+0x10]
   172dc:	50                   	push   eax
   172dd:	6a 1b                	push   0x1b
   172df:	e8 3c 12 00 00       	call   18520 <rdmsr32>
   172e4:	31 c0                	xor    eax,eax
   172e6:	83 c4 2c             	add    esp,0x2c
   172e9:	c3                   	ret    
   172ea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

000172f0 <apicEnable>:
apicEnable():
   172f0:	83 ec 20             	sub    esp,0x20
   172f3:	8d 44 24 10          	lea    eax,[esp+0x10]
   172f7:	50                   	push   eax
   172f8:	8d 44 24 10          	lea    eax,[esp+0x10]
   172fc:	50                   	push   eax
   172fd:	6a 1b                	push   0x1b
   172ff:	e8 1c 12 00 00       	call   18520 <rdmsr32>
   17304:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   17308:	80 cc 08             	or     ah,0x8
   1730b:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1730f:	83 c4 0c             	add    esp,0xc
   17312:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   17316:	50                   	push   eax
   17317:	6a 1b                	push   0x1b
   17319:	e8 32 12 00 00       	call   18550 <wrmsr32>
   1731e:	83 c4 2c             	add    esp,0x2c
   17321:	c3                   	ret    
   17322:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   17329:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00017330 <apicDisable>:
apicDisable():
   17330:	83 ec 20             	sub    esp,0x20
   17333:	8d 44 24 10          	lea    eax,[esp+0x10]
   17337:	50                   	push   eax
   17338:	8d 44 24 10          	lea    eax,[esp+0x10]
   1733c:	50                   	push   eax
   1733d:	6a 1b                	push   0x1b
   1733f:	e8 dc 11 00 00       	call   18520 <rdmsr32>
   17344:	c7 44 24 18 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
   1734b:	00 
   1734c:	83 c4 0c             	add    esp,0xc
   1734f:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   17353:	6a 00                	push   0x0
   17355:	6a 1b                	push   0x1b
   17357:	e8 f4 11 00 00       	call   18550 <wrmsr32>
   1735c:	83 c4 2c             	add    esp,0x2c
   1735f:	c3                   	ret    

00017360 <apicGetHZ>:
apicGetHZ():
   17360:	83 ec 0c             	sub    esp,0xc
   17363:	e8 88 ff ff ff       	call   172f0 <apicEnable>
   17368:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   1736d:	83 ec 0c             	sub    esp,0xc
   17370:	c7 80 f0 00 00 00 27 	mov    DWORD PTR [eax+0xf0],0x127
   17377:	01 00 00 
   1737a:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   1737f:	c7 80 20 03 00 00 20 	mov    DWORD PTR [eax+0x320],0x20
   17386:	00 00 00 
   17389:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   1738e:	c7 80 e0 03 00 00 11 	mov    DWORD PTR [eax+0x3e0],0x11
   17395:	00 00 00 
   17398:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   1739d:	c7 80 80 03 00 00 ff 	mov    DWORD PTR [eax+0x380],0xffffffff
   173a4:	ff ff ff 
   173a7:	68 f4 01 00 00       	push   0x1f4
   173ac:	e8 df c0 00 00       	call   23490 <wait>
   173b1:	a1 a4 98 12 00       	mov    eax,ds:0x1298a4
   173b6:	31 d2                	xor    edx,edx
   173b8:	c7 80 20 03 00 00 00 	mov    DWORD PTR [eax+0x320],0x10000
   173bf:	00 01 00 
   173c2:	8b 0d a4 98 12 00    	mov    ecx,DWORD PTR ds:0x1298a4
   173c8:	8b 81 90 03 00 00    	mov    eax,DWORD PTR [ecx+0x390]
   173ce:	c7 81 e0 03 00 00 03 	mov    DWORD PTR [ecx+0x3e0],0x3
   173d5:	00 00 00 
   173d8:	6a 00                	push   0x0
   173da:	6a 32                	push   0x32
   173dc:	52                   	push   edx
   173dd:	f7 d0                	not    eax
   173df:	50                   	push   eax
   173e0:	e8 ab c1 00 00       	call   23590 <__udivdi3>
   173e5:	8b 15 a4 98 12 00    	mov    edx,DWORD PTR ds:0x1298a4
   173eb:	89 82 80 03 00 00    	mov    DWORD PTR [edx+0x380],eax
   173f1:	83 c4 2c             	add    esp,0x2c
   173f4:	c3                   	ret    
   173f5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   173f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00017400 <tscGetTicksPerSecond>:
tscGetTicksPerSecond():
   17400:	53                   	push   ebx
   17401:	83 ec 14             	sub    esp,0x14
   17404:	0f 31                	rdtsc  
   17406:	68 e8 03 00 00       	push   0x3e8
   1740b:	89 c3                	mov    ebx,eax
   1740d:	e8 7e c0 00 00       	call   23490 <wait>
   17412:	0f 31                	rdtsc  
   17414:	83 c4 18             	add    esp,0x18
   17417:	29 d8                	sub    eax,ebx
   17419:	5b                   	pop    ebx
   1741a:	c3                   	ret    
   1741b:	66 90                	xchg   ax,ax
   1741d:	66 90                	xchg   ax,ax
   1741f:	90                   	nop

00017420 <bitsSet>:
bitsSet():
   17420:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   17424:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   17428:	0f ab 02             	bts    DWORD PTR [edx],eax
   1742b:	b8 00 00 00 00       	mov    eax,0x0
   17430:	0f 92 c0             	setb   al
   17433:	85 c0                	test   eax,eax
   17435:	0f 95 c0             	setne  al
   17438:	c3                   	ret    
   17439:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017440 <bitsReset>:
bitsReset():
   17440:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   17444:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   17448:	0f b3 02             	btr    DWORD PTR [edx],eax
   1744b:	b8 00 00 00 00       	mov    eax,0x0
   17450:	0f 92 c0             	setb   al
   17453:	85 c0                	test   eax,eax
   17455:	0f 95 c0             	setne  al
   17458:	c3                   	ret    
   17459:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017460 <bitsTest>:
bitsTest():
   17460:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   17464:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   17468:	0f a3 02             	bt     DWORD PTR [edx],eax
   1746b:	b8 00 00 00 00       	mov    eax,0x0
   17470:	0f 92 c0             	setb   al
   17473:	85 c0                	test   eax,eax
   17475:	0f 95 c0             	setne  al
   17478:	c3                   	ret    
   17479:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00017480 <bitsScanF>:
bitsScanF():
   17480:	53                   	push   ebx
   17481:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   17485:	0f bc 18             	bsf    ebx,DWORD PTR [eax]
   17488:	0f 94 c1             	sete   cl
   1748b:	b8 ff ff ff ff       	mov    eax,0xffffffff
   17490:	84 c9                	test   cl,cl
   17492:	0f 44 c3             	cmove  eax,ebx
   17495:	5b                   	pop    ebx
   17496:	c3                   	ret    
   17497:	66 90                	xchg   ax,ax
   17499:	66 90                	xchg   ax,ax
   1749b:	66 90                	xchg   ax,ax
   1749d:	66 90                	xchg   ax,ax
   1749f:	90                   	nop

000174a0 <getNonKernelCodeGDTIndex>:
getNonKernelCodeGDTIndex():
   174a0:	b8 38 00 00 00       	mov    eax,0x38
   174a5:	c3                   	ret    
   174a6:	8d 76 00             	lea    esi,[esi+0x0]
   174a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000174b0 <getNonKernelDataGDTIndex>:
getNonKernelDataGDTIndex():
   174b0:	b8 30 00 00 00       	mov    eax,0x30
   174b5:	c3                   	ret    
   174b6:	8d 76 00             	lea    esi,[esi+0x0]
   174b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000174c0 <getKernelCodeGDTIndex>:
getKernelCodeGDTIndex():
   174c0:	b8 20 00 00 00       	mov    eax,0x20
   174c5:	c3                   	ret    
   174c6:	8d 76 00             	lea    esi,[esi+0x0]
   174c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000174d0 <getKernelDataGDTIndex>:
getKernelDataGDTIndex():
   174d0:	b8 10 00 00 00       	mov    eax,0x10
   174d5:	c3                   	ret    
   174d6:	8d 76 00             	lea    esi,[esi+0x0]
   174d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000174e0 <getNewGDTEntry>:
getNewGDTEntry():
   174e0:	83 ec 18             	sub    esp,0x18
   174e3:	ff 35 2c 99 12 00    	push   DWORD PTR ds:0x12992c
   174e9:	e8 92 ff ff ff       	call   17480 <bitsScanF>
   174ee:	8b 15 84 99 12 00    	mov    edx,DWORD PTR ds:0x129984
   174f4:	83 c4 1c             	add    esp,0x1c
   174f7:	8d 04 c2             	lea    eax,[edx+eax*8]
   174fa:	c3                   	ret    
   174fb:	90                   	nop
   174fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00017500 <installGDT>:
installGDT():
   17500:	83 ec 18             	sub    esp,0x18
   17503:	b8 ff 3f 00 00       	mov    eax,0x3fff
   17508:	c7 05 8a 99 12 00 00 	mov    DWORD PTR ds:0x12998a,0x164800
   1750f:	48 16 00 
   17512:	68 88 99 12 00       	push   0x129988
   17517:	66 a3 88 99 12 00    	mov    ds:0x129988,ax
   1751d:	e8 1b 9c fe ff       	call   113d <set_gdt>
   17522:	83 c4 1c             	add    esp,0x1c
   17525:	c3                   	ret    
   17526:	8d 76 00             	lea    esi,[esi+0x0]
   17529:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00017530 <gdtEntryI>:
gdtEntryI():
   17530:	55                   	push   ebp
   17531:	a1 84 99 12 00       	mov    eax,ds:0x129984
   17536:	57                   	push   edi
   17537:	56                   	push   esi
   17538:	53                   	push   ebx
   17539:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
   1753d:	0f b7 54 24 18       	movzx  edx,WORD PTR [esp+0x18]
   17542:	8b 6c 24 24          	mov    ebp,DWORD PTR [esp+0x24]
   17546:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
   1754a:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   1754e:	8d 04 c8             	lea    eax,[eax+ecx*8]
   17551:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
   17555:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
   17559:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   1755d:	c1 fa 10             	sar    edx,0x10
   17560:	88 50 04             	mov    BYTE PTR [eax+0x4],dl
   17563:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   17567:	c1 ea 18             	shr    edx,0x18
   1756a:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
   1756d:	0f b7 54 24 1c       	movzx  edx,WORD PTR [esp+0x1c]
   17572:	66 89 10             	mov    WORD PTR [eax],dx
   17575:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
   17579:	c1 fa 10             	sar    edx,0x10
   1757c:	83 e2 0f             	and    edx,0xf
   1757f:	09 ea                	or     edx,ebp
   17581:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
   17584:	89 fa                	mov    edx,edi
   17586:	84 d2                	test   dl,dl
   17588:	74 03                	je     1758d <gdtEntryI+0x5d>
   1758a:	83 cb 10             	or     ebx,0x10
   1758d:	88 58 05             	mov    BYTE PTR [eax+0x5],bl
   17590:	89 f0                	mov    eax,esi
   17592:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
   17596:	84 c0                	test   al,al
   17598:	a1 2c 99 12 00       	mov    eax,ds:0x12992c
   1759d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   175a1:	75 0d                	jne    175b0 <gdtEntryI+0x80>
   175a3:	5b                   	pop    ebx
   175a4:	5e                   	pop    esi
   175a5:	5f                   	pop    edi
   175a6:	5d                   	pop    ebp
   175a7:	e9 74 fe ff ff       	jmp    17420 <bitsSet>
   175ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   175b0:	5b                   	pop    ebx
   175b1:	5e                   	pop    esi
   175b2:	5f                   	pop    edi
   175b3:	5d                   	pop    ebp
   175b4:	e9 87 fe ff ff       	jmp    17440 <bitsReset>
   175b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000175c0 <gdtEntryApplication>:
gdtEntryApplication():
   175c0:	83 ec 10             	sub    esp,0x10
   175c3:	6a 01                	push   0x1
   175c5:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
   175ca:	50                   	push   eax
   175cb:	0f be 44 24 2c       	movsx  eax,BYTE PTR [esp+0x2c]
   175d0:	50                   	push   eax
   175d1:	0f be 44 24 2c       	movsx  eax,BYTE PTR [esp+0x2c]
   175d6:	50                   	push   eax
   175d7:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   175db:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   175df:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   175e3:	e8 48 ff ff ff       	call   17530 <gdtEntryI>
   175e8:	83 c4 2c             	add    esp,0x2c
   175eb:	c3                   	ret    
   175ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000175f0 <gdtEntryOS>:
gdtEntryOS():
   175f0:	83 ec 10             	sub    esp,0x10
   175f3:	6a 00                	push   0x0
   175f5:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
   175fa:	50                   	push   eax
   175fb:	0f be 44 24 2c       	movsx  eax,BYTE PTR [esp+0x2c]
   17600:	50                   	push   eax
   17601:	0f be 44 24 2c       	movsx  eax,BYTE PTR [esp+0x2c]
   17606:	50                   	push   eax
   17607:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   1760b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   1760f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   17613:	e8 18 ff ff ff       	call   17530 <gdtEntryI>
   17618:	83 c4 2c             	add    esp,0x2c
   1761b:	c3                   	ret    
   1761c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00017620 <gdtEntryRM>:
gdtEntryRM():
   17620:	55                   	push   ebp
   17621:	a1 80 99 12 00       	mov    eax,ds:0x129980
   17626:	57                   	push   edi
   17627:	56                   	push   esi
   17628:	53                   	push   ebx
   17629:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
   1762d:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   17631:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
   17635:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   17639:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   1763d:	8d 04 f8             	lea    eax,[eax+edi*8]
   17640:	89 cf                	mov    edi,ecx
   17642:	c1 ff 10             	sar    edi,0x10
   17645:	83 cb 10             	or     ebx,0x10
   17648:	89 fa                	mov    edx,edi
   1764a:	66 89 48 02          	mov    WORD PTR [eax+0x2],cx
   1764e:	c1 e9 18             	shr    ecx,0x18
   17651:	88 50 04             	mov    BYTE PTR [eax+0x4],dl
   17654:	89 ea                	mov    edx,ebp
   17656:	88 48 07             	mov    BYTE PTR [eax+0x7],cl
   17659:	c1 fa 10             	sar    edx,0x10
   1765c:	66 89 28             	mov    WORD PTR [eax],bp
   1765f:	88 58 05             	mov    BYTE PTR [eax+0x5],bl
   17662:	83 e2 0f             	and    edx,0xf
   17665:	09 f2                	or     edx,esi
   17667:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
   1766a:	5b                   	pop    ebx
   1766b:	5e                   	pop    esi
   1766c:	5f                   	pop    edi
   1766d:	5d                   	pop    ebp
   1766e:	c3                   	ret    
   1766f:	90                   	nop

00017670 <identifyCPUFeatures>:
identifyCPUFeatures():
   17670:	56                   	push   esi
   17671:	53                   	push   ebx
   17672:	b8 01 00 00 00       	mov    eax,0x1
   17677:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
   1767b:	0f a2                	cpuid  
   1767d:	b8 07 00 00 00       	mov    eax,0x7
   17682:	89 4e 04             	mov    DWORD PTR [esi+0x4],ecx
   17685:	89 16                	mov    DWORD PTR [esi],edx
   17687:	0f a2                	cpuid  
   17689:	89 5e 08             	mov    DWORD PTR [esi+0x8],ebx
   1768c:	5b                   	pop    ebx
   1768d:	5e                   	pop    esi
   1768e:	c3                   	ret    
   1768f:	90                   	nop

00017690 <idt_set_gate>:
idt_set_gate():
   17690:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   17694:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   17698:	66 89 10             	mov    WORD PTR [eax],dx
   1769b:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   1769f:	c1 ea 10             	shr    edx,0x10
   176a2:	66 89 50 06          	mov    WORD PTR [eax+0x6],dx
   176a6:	66 89 48 02          	mov    WORD PTR [eax+0x2],cx
   176aa:	0f b6 4c 24 10       	movzx  ecx,BYTE PTR [esp+0x10]
   176af:	83 c9 80             	or     ecx,0xffffff80
   176b2:	88 48 05             	mov    BYTE PTR [eax+0x5],cl
   176b5:	c3                   	ret    
   176b6:	8d 76 00             	lea    esi,[esi+0x0]
   176b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000176c0 <idt_install>:
idt_install():
   176c0:	83 ec 14             	sub    esp,0x14
   176c3:	ba ff 07 00 00       	mov    edx,0x7ff
   176c8:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   176cc:	66 89 10             	mov    WORD PTR [eax],dx
   176cf:	c7 40 02 00 30 16 00 	mov    DWORD PTR [eax+0x2],0x163000
   176d6:	68 ff 07 00 00       	push   0x7ff
   176db:	68 00 30 16 00       	push   0x163000
   176e0:	e8 7b 9a fe ff       	call   1160 <idt_load>
   176e5:	83 c4 1c             	add    esp,0x1c
   176e8:	c3                   	ret    
   176e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000176f0 <idt_init>:
idt_init():
   176f0:	55                   	push   ebp
   176f1:	57                   	push   edi
   176f2:	b8 20 00 01 00       	mov    eax,0x10020
   176f7:	56                   	push   esi
   176f8:	53                   	push   ebx
   176f9:	bf 08 00 00 00       	mov    edi,0x8
   176fe:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   17702:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   17706:	ba 94 05 01 00       	mov    edx,0x10594
   1770b:	66 a3 00 30 16 00    	mov    ds:0x163000,ax
   17711:	c1 e8 10             	shr    eax,0x10
   17714:	66 89 3d 02 30 16 00 	mov    WORD PTR ds:0x163002,di
   1771b:	66 a3 06 30 16 00    	mov    ds:0x163006,ax
   17721:	c6 05 05 30 16 00 8e 	mov    BYTE PTR ds:0x163005,0x8e
   17728:	bd 08 00 00 00       	mov    ebp,0x8
   1772d:	8d 04 dd 00 00 00 00 	lea    eax,[ebx*8+0x0]
   17734:	66 89 14 dd 00 30 16 	mov    WORD PTR [ebx*8+0x163000],dx
   1773b:	00 
   1773c:	c1 ea 10             	shr    edx,0x10
   1773f:	b9 08 00 00 00       	mov    ecx,0x8
   17744:	bf 08 00 00 00       	mov    edi,0x8
   17749:	66 89 90 06 30 16 00 	mov    WORD PTR [eax+0x163006],dx
   17750:	ba db 05 01 00       	mov    edx,0x105db
   17755:	66 89 a8 02 30 16 00 	mov    WORD PTR [eax+0x163002],bp
   1775c:	c6 80 05 30 16 00 8e 	mov    BYTE PTR [eax+0x163005],0x8e
   17763:	66 89 14 dd 08 30 16 	mov    WORD PTR [ebx*8+0x163008],dx
   1776a:	00 
   1776b:	c1 ea 10             	shr    edx,0x10
   1776e:	66 89 90 0e 30 16 00 	mov    WORD PTR [eax+0x16300e],dx
   17775:	ba 3c 00 01 00       	mov    edx,0x1003c
   1777a:	66 89 88 0a 30 16 00 	mov    WORD PTR [eax+0x16300a],cx
   17781:	c6 80 0d 30 16 00 8e 	mov    BYTE PTR [eax+0x16300d],0x8e
   17788:	66 89 15 10 30 16 00 	mov    WORD PTR ds:0x163010,dx
   1778f:	c1 ea 10             	shr    edx,0x10
   17792:	66 89 15 16 30 16 00 	mov    WORD PTR ds:0x163016,dx
   17799:	ba 58 00 01 00       	mov    edx,0x10058
   1779e:	b9 b2 04 01 00       	mov    ecx,0x104b2
   177a3:	bd 08 00 00 00       	mov    ebp,0x8
   177a8:	66 89 15 18 30 16 00 	mov    WORD PTR ds:0x163018,dx
   177af:	c1 ea 10             	shr    edx,0x10
   177b2:	66 89 3d 0a 30 16 00 	mov    WORD PTR ds:0x16300a,di
   177b9:	66 89 2d 12 30 16 00 	mov    WORD PTR ds:0x163012,bp
   177c0:	89 cf                	mov    edi,ecx
   177c2:	bd 08 00 00 00       	mov    ebp,0x8
   177c7:	66 89 15 1e 30 16 00 	mov    WORD PTR ds:0x16301e,dx
   177ce:	ba 68 00 01 00       	mov    edx,0x10068
   177d3:	c1 ef 10             	shr    edi,0x10
   177d6:	66 89 2d 1a 30 16 00 	mov    WORD PTR ds:0x16301a,bp
   177dd:	66 89 15 20 30 16 00 	mov    WORD PTR ds:0x163020,dx
   177e4:	bd 08 00 00 00       	mov    ebp,0x8
   177e9:	c1 ea 10             	shr    edx,0x10
   177ec:	66 89 0d 08 30 16 00 	mov    WORD PTR ds:0x163008,cx
   177f3:	66 89 3d 0e 30 16 00 	mov    WORD PTR ds:0x16300e,di
   177fa:	66 89 2d 22 30 16 00 	mov    WORD PTR ds:0x163022,bp
   17801:	bd 08 00 00 00       	mov    ebp,0x8
   17806:	c6 05 0d 30 16 00 8e 	mov    BYTE PTR ds:0x16300d,0x8e
   1780d:	c6 05 15 30 16 00 8e 	mov    BYTE PTR ds:0x163015,0x8e
   17814:	c6 05 1d 30 16 00 8e 	mov    BYTE PTR ds:0x16301d,0x8e
   1781b:	c6 05 25 30 16 00 8e 	mov    BYTE PTR ds:0x163025,0x8e
   17822:	66 89 15 26 30 16 00 	mov    WORD PTR ds:0x163026,dx
   17829:	ba 84 00 01 00       	mov    edx,0x10084
   1782e:	66 89 2d 2a 30 16 00 	mov    WORD PTR ds:0x16302a,bp
   17835:	66 89 15 28 30 16 00 	mov    WORD PTR ds:0x163028,dx
   1783c:	c1 ea 10             	shr    edx,0x10
   1783f:	bd 08 00 00 00       	mov    ebp,0x8
   17844:	66 89 15 2e 30 16 00 	mov    WORD PTR ds:0x16302e,dx
   1784b:	ba a0 00 01 00       	mov    edx,0x100a0
   17850:	66 89 2d 32 30 16 00 	mov    WORD PTR ds:0x163032,bp
   17857:	66 89 15 30 30 16 00 	mov    WORD PTR ds:0x163030,dx
   1785e:	c1 ea 10             	shr    edx,0x10
   17861:	bd 08 00 00 00       	mov    ebp,0x8
   17866:	66 89 15 36 30 16 00 	mov    WORD PTR ds:0x163036,dx
   1786d:	ba bc 00 01 00       	mov    edx,0x100bc
   17872:	66 89 2d 3a 30 16 00 	mov    WORD PTR ds:0x16303a,bp
   17879:	66 89 15 38 30 16 00 	mov    WORD PTR ds:0x163038,dx
   17880:	c1 ea 10             	shr    edx,0x10
   17883:	bd 08 00 00 00       	mov    ebp,0x8
   17888:	66 89 15 3e 30 16 00 	mov    WORD PTR ds:0x16303e,dx
   1788f:	ba d8 00 01 00       	mov    edx,0x100d8
   17894:	66 89 2d 42 30 16 00 	mov    WORD PTR ds:0x163042,bp
   1789b:	66 89 15 40 30 16 00 	mov    WORD PTR ds:0x163040,dx
   178a2:	c1 ea 10             	shr    edx,0x10
   178a5:	bd 08 00 00 00       	mov    ebp,0x8
   178aa:	66 89 15 46 30 16 00 	mov    WORD PTR ds:0x163046,dx
   178b1:	ba 05 01 01 00       	mov    edx,0x10105
   178b6:	66 89 2d 4a 30 16 00 	mov    WORD PTR ds:0x16304a,bp
   178bd:	66 89 15 48 30 16 00 	mov    WORD PTR ds:0x163048,dx
   178c4:	c1 ea 10             	shr    edx,0x10
   178c7:	bd 08 00 00 00       	mov    ebp,0x8
   178cc:	66 89 15 4e 30 16 00 	mov    WORD PTR ds:0x16304e,dx
   178d3:	ba 1e 01 01 00       	mov    edx,0x1011e
   178d8:	66 89 2d 52 30 16 00 	mov    WORD PTR ds:0x163052,bp
   178df:	66 89 15 50 30 16 00 	mov    WORD PTR ds:0x163050,dx
   178e6:	c1 ea 10             	shr    edx,0x10
   178e9:	bd 08 00 00 00       	mov    ebp,0x8
   178ee:	66 89 15 56 30 16 00 	mov    WORD PTR ds:0x163056,dx
   178f5:	ba 37 01 01 00       	mov    edx,0x10137
   178fa:	66 89 2d 5a 30 16 00 	mov    WORD PTR ds:0x16305a,bp
   17901:	66 89 15 58 30 16 00 	mov    WORD PTR ds:0x163058,dx
   17908:	c1 ea 10             	shr    edx,0x10
   1790b:	bd 08 00 00 00       	mov    ebp,0x8
   17910:	66 89 15 5e 30 16 00 	mov    WORD PTR ds:0x16305e,dx
   17917:	ba 50 01 01 00       	mov    edx,0x10150
   1791c:	66 89 2d 62 30 16 00 	mov    WORD PTR ds:0x163062,bp
   17923:	66 89 15 60 30 16 00 	mov    WORD PTR ds:0x163060,dx
   1792a:	c1 ea 10             	shr    edx,0x10
   1792d:	c6 05 2d 30 16 00 8e 	mov    BYTE PTR ds:0x16302d,0x8e
   17934:	c6 05 35 30 16 00 8e 	mov    BYTE PTR ds:0x163035,0x8e
   1793b:	c6 05 3d 30 16 00 8e 	mov    BYTE PTR ds:0x16303d,0x8e
   17942:	bd 08 00 00 00       	mov    ebp,0x8
   17947:	c6 05 45 30 16 00 8e 	mov    BYTE PTR ds:0x163045,0x8e
   1794e:	c6 05 4d 30 16 00 8e 	mov    BYTE PTR ds:0x16304d,0x8e
   17955:	c6 05 55 30 16 00 8e 	mov    BYTE PTR ds:0x163055,0x8e
   1795c:	c6 05 5d 30 16 00 8e 	mov    BYTE PTR ds:0x16305d,0x8e
   17963:	c6 05 65 30 16 00 8e 	mov    BYTE PTR ds:0x163065,0x8e
   1796a:	66 89 15 66 30 16 00 	mov    WORD PTR ds:0x163066,dx
   17971:	ba 69 01 01 00       	mov    edx,0x10169
   17976:	66 89 15 68 30 16 00 	mov    WORD PTR ds:0x163068,dx
   1797d:	c1 ea 10             	shr    edx,0x10
   17980:	66 89 2d 6a 30 16 00 	mov    WORD PTR ds:0x16306a,bp
   17987:	66 89 15 6e 30 16 00 	mov    WORD PTR ds:0x16306e,dx
   1798e:	ba 83 01 01 00       	mov    edx,0x10183
   17993:	bd 08 00 00 00       	mov    ebp,0x8
   17998:	66 89 15 70 30 16 00 	mov    WORD PTR ds:0x163070,dx
   1799f:	c1 ea 10             	shr    edx,0x10
   179a2:	66 89 2d 72 30 16 00 	mov    WORD PTR ds:0x163072,bp
   179a9:	66 89 15 76 30 16 00 	mov    WORD PTR ds:0x163076,dx
   179b0:	ba f2 02 01 00       	mov    edx,0x102f2
   179b5:	bd 08 00 00 00       	mov    ebp,0x8
   179ba:	66 89 15 78 30 16 00 	mov    WORD PTR ds:0x163078,dx
   179c1:	c1 ea 10             	shr    edx,0x10
   179c4:	66 89 2d 7a 30 16 00 	mov    WORD PTR ds:0x16307a,bp
   179cb:	66 89 15 7e 30 16 00 	mov    WORD PTR ds:0x16307e,dx
   179d2:	ba 0e 03 01 00       	mov    edx,0x1030e
   179d7:	bd 08 00 00 00       	mov    ebp,0x8
   179dc:	66 89 15 80 30 16 00 	mov    WORD PTR ds:0x163080,dx
   179e3:	c1 ea 10             	shr    edx,0x10
   179e6:	66 89 2d 82 30 16 00 	mov    WORD PTR ds:0x163082,bp
   179ed:	66 89 15 86 30 16 00 	mov    WORD PTR ds:0x163086,dx
   179f4:	ba 2a 03 01 00       	mov    edx,0x1032a
   179f9:	bd 08 00 00 00       	mov    ebp,0x8
   179fe:	66 89 15 88 30 16 00 	mov    WORD PTR ds:0x163088,dx
   17a05:	c1 ea 10             	shr    edx,0x10
   17a08:	66 89 2d 8a 30 16 00 	mov    WORD PTR ds:0x16308a,bp
   17a0f:	66 89 15 8e 30 16 00 	mov    WORD PTR ds:0x16308e,dx
   17a16:	ba 46 03 01 00       	mov    edx,0x10346
   17a1b:	bd 08 00 00 00       	mov    ebp,0x8
   17a20:	66 89 15 90 30 16 00 	mov    WORD PTR ds:0x163090,dx
   17a27:	c1 ea 10             	shr    edx,0x10
   17a2a:	66 89 2d 92 30 16 00 	mov    WORD PTR ds:0x163092,bp
   17a31:	66 89 15 96 30 16 00 	mov    WORD PTR ds:0x163096,dx
   17a38:	ba 62 03 01 00       	mov    edx,0x10362
   17a3d:	bd 08 00 00 00       	mov    ebp,0x8
   17a42:	66 89 15 98 30 16 00 	mov    WORD PTR ds:0x163098,dx
   17a49:	c1 ea 10             	shr    edx,0x10
   17a4c:	66 89 2d 9a 30 16 00 	mov    WORD PTR ds:0x16309a,bp
   17a53:	66 89 15 9e 30 16 00 	mov    WORD PTR ds:0x16309e,dx
   17a5a:	ba 7e 03 01 00       	mov    edx,0x1037e
   17a5f:	c6 05 6d 30 16 00 8e 	mov    BYTE PTR ds:0x16306d,0x8e
   17a66:	c6 05 75 30 16 00 8e 	mov    BYTE PTR ds:0x163075,0x8e
   17a6d:	c6 05 7d 30 16 00 8e 	mov    BYTE PTR ds:0x16307d,0x8e
   17a74:	bd 08 00 00 00       	mov    ebp,0x8
   17a79:	c6 05 85 30 16 00 8e 	mov    BYTE PTR ds:0x163085,0x8e
   17a80:	c6 05 8d 30 16 00 8e 	mov    BYTE PTR ds:0x16308d,0x8e
   17a87:	c6 05 95 30 16 00 8e 	mov    BYTE PTR ds:0x163095,0x8e
   17a8e:	c6 05 9d 30 16 00 8e 	mov    BYTE PTR ds:0x16309d,0x8e
   17a95:	66 89 14 dd a0 30 16 	mov    WORD PTR [ebx*8+0x1630a0],dx
   17a9c:	00 
   17a9d:	c1 ea 10             	shr    edx,0x10
   17aa0:	66 89 a8 a2 30 16 00 	mov    WORD PTR [eax+0x1630a2],bp
   17aa7:	66 89 90 a6 30 16 00 	mov    WORD PTR [eax+0x1630a6],dx
   17aae:	ba 9a 03 01 00       	mov    edx,0x1039a
   17ab3:	c6 80 a5 30 16 00 8e 	mov    BYTE PTR [eax+0x1630a5],0x8e
   17aba:	66 89 14 dd a8 30 16 	mov    WORD PTR [ebx*8+0x1630a8],dx
   17ac1:	00 
   17ac2:	c1 ea 10             	shr    edx,0x10
   17ac5:	bd 08 00 00 00       	mov    ebp,0x8
   17aca:	66 89 90 ae 30 16 00 	mov    WORD PTR [eax+0x1630ae],dx
   17ad1:	ba b6 03 01 00       	mov    edx,0x103b6
   17ad6:	66 89 a8 aa 30 16 00 	mov    WORD PTR [eax+0x1630aa],bp
   17add:	c6 80 ad 30 16 00 8e 	mov    BYTE PTR [eax+0x1630ad],0x8e
   17ae4:	66 89 15 b0 30 16 00 	mov    WORD PTR ds:0x1630b0,dx
   17aeb:	c1 ea 10             	shr    edx,0x10
   17aee:	66 89 15 b6 30 16 00 	mov    WORD PTR ds:0x1630b6,dx
   17af5:	ba d2 03 01 00       	mov    edx,0x103d2
   17afa:	bd 08 00 00 00       	mov    ebp,0x8
   17aff:	66 89 15 b8 30 16 00 	mov    WORD PTR ds:0x1630b8,dx
   17b06:	c1 ea 10             	shr    edx,0x10
   17b09:	66 89 2d b2 30 16 00 	mov    WORD PTR ds:0x1630b2,bp
   17b10:	66 89 15 be 30 16 00 	mov    WORD PTR ds:0x1630be,dx
   17b17:	ba ee 03 01 00       	mov    edx,0x103ee
   17b1c:	bd 08 00 00 00       	mov    ebp,0x8
   17b21:	66 89 15 c0 30 16 00 	mov    WORD PTR ds:0x1630c0,dx
   17b28:	c1 ea 10             	shr    edx,0x10
   17b2b:	66 89 2d ba 30 16 00 	mov    WORD PTR ds:0x1630ba,bp
   17b32:	66 89 15 c6 30 16 00 	mov    WORD PTR ds:0x1630c6,dx
   17b39:	ba 0a 04 01 00       	mov    edx,0x1040a
   17b3e:	bd 08 00 00 00       	mov    ebp,0x8
   17b43:	66 89 15 c8 30 16 00 	mov    WORD PTR ds:0x1630c8,dx
   17b4a:	c1 ea 10             	shr    edx,0x10
   17b4d:	66 89 2d c2 30 16 00 	mov    WORD PTR ds:0x1630c2,bp
   17b54:	66 89 15 ce 30 16 00 	mov    WORD PTR ds:0x1630ce,dx
   17b5b:	ba 26 04 01 00       	mov    edx,0x10426
   17b60:	bd 08 00 00 00       	mov    ebp,0x8
   17b65:	66 89 15 d0 30 16 00 	mov    WORD PTR ds:0x1630d0,dx
   17b6c:	c1 ea 10             	shr    edx,0x10
   17b6f:	66 89 2d ca 30 16 00 	mov    WORD PTR ds:0x1630ca,bp
   17b76:	66 89 15 d6 30 16 00 	mov    WORD PTR ds:0x1630d6,dx
   17b7d:	ba 42 04 01 00       	mov    edx,0x10442
   17b82:	bd 08 00 00 00       	mov    ebp,0x8
   17b87:	66 89 15 d8 30 16 00 	mov    WORD PTR ds:0x1630d8,dx
   17b8e:	c1 ea 10             	shr    edx,0x10
   17b91:	66 89 2d d2 30 16 00 	mov    WORD PTR ds:0x1630d2,bp
   17b98:	66 89 15 de 30 16 00 	mov    WORD PTR ds:0x1630de,dx
   17b9f:	ba 5e 04 01 00       	mov    edx,0x1045e
   17ba4:	bd 08 00 00 00       	mov    ebp,0x8
   17ba9:	66 89 15 e0 30 16 00 	mov    WORD PTR ds:0x1630e0,dx
   17bb0:	c1 ea 10             	shr    edx,0x10
   17bb3:	66 89 2d da 30 16 00 	mov    WORD PTR ds:0x1630da,bp
   17bba:	66 89 15 e6 30 16 00 	mov    WORD PTR ds:0x1630e6,dx
   17bc1:	bd 08 00 00 00       	mov    ebp,0x8
   17bc6:	ba 7a 04 01 00       	mov    edx,0x1047a
   17bcb:	66 89 2d e2 30 16 00 	mov    WORD PTR ds:0x1630e2,bp
   17bd2:	66 89 15 e8 30 16 00 	mov    WORD PTR ds:0x1630e8,dx
   17bd9:	bd 08 00 00 00       	mov    ebp,0x8
   17bde:	c1 ea 10             	shr    edx,0x10
   17be1:	c6 05 b5 30 16 00 8e 	mov    BYTE PTR ds:0x1630b5,0x8e
   17be8:	c6 05 bd 30 16 00 8e 	mov    BYTE PTR ds:0x1630bd,0x8e
   17bef:	c6 05 c5 30 16 00 8e 	mov    BYTE PTR ds:0x1630c5,0x8e
   17bf6:	c6 05 cd 30 16 00 8e 	mov    BYTE PTR ds:0x1630cd,0x8e
   17bfd:	c6 05 d5 30 16 00 8e 	mov    BYTE PTR ds:0x1630d5,0x8e
   17c04:	c6 05 dd 30 16 00 8e 	mov    BYTE PTR ds:0x1630dd,0x8e
   17c0b:	c6 05 e5 30 16 00 8e 	mov    BYTE PTR ds:0x1630e5,0x8e
   17c12:	66 89 2d ea 30 16 00 	mov    WORD PTR ds:0x1630ea,bp
   17c19:	bd 08 00 00 00       	mov    ebp,0x8
   17c1e:	66 89 15 ee 30 16 00 	mov    WORD PTR ds:0x1630ee,dx
   17c25:	ba 96 04 01 00       	mov    edx,0x10496
   17c2a:	66 89 3d fe 30 16 00 	mov    WORD PTR ds:0x1630fe,di
   17c31:	66 89 15 f0 30 16 00 	mov    WORD PTR ds:0x1630f0,dx
   17c38:	c1 ea 10             	shr    edx,0x10
   17c3b:	bf 78 05 01 00       	mov    edi,0x10578
   17c40:	66 89 15 f6 30 16 00 	mov    WORD PTR ds:0x1630f6,dx
   17c47:	ba 08 00 00 00       	mov    edx,0x8
   17c4c:	66 89 0d f8 30 16 00 	mov    WORD PTR ds:0x1630f8,cx
   17c53:	66 89 15 fa 30 16 00 	mov    WORD PTR ds:0x1630fa,dx
   17c5a:	c6 05 ed 30 16 00 8e 	mov    BYTE PTR ds:0x1630ed,0x8e
   17c61:	89 fa                	mov    edx,edi
   17c63:	66 89 2d f2 30 16 00 	mov    WORD PTR ds:0x1630f2,bp
   17c6a:	c6 05 f5 30 16 00 8e 	mov    BYTE PTR ds:0x1630f5,0x8e
   17c71:	b9 08 00 00 00       	mov    ecx,0x8
   17c76:	c6 05 fd 30 16 00 8e 	mov    BYTE PTR ds:0x1630fd,0x8e
   17c7d:	66 89 3c dd 00 31 16 	mov    WORD PTR [ebx*8+0x163100],di
   17c84:	00 
   17c85:	c1 ef 10             	shr    edi,0x10
   17c88:	66 89 88 02 31 16 00 	mov    WORD PTR [eax+0x163102],cx
   17c8f:	c6 80 05 31 16 00 8e 	mov    BYTE PTR [eax+0x163105],0x8e
   17c96:	89 f9                	mov    ecx,edi
   17c98:	66 89 b8 06 31 16 00 	mov    WORD PTR [eax+0x163106],di
   17c9f:	66 89 14 dd 08 31 16 	mov    WORD PTR [ebx*8+0x163108],dx
   17ca6:	00 
   17ca7:	bb 08 00 00 00       	mov    ebx,0x8
   17cac:	66 89 98 0a 31 16 00 	mov    WORD PTR [eax+0x16310a],bx
   17cb3:	c6 80 0d 31 16 00 8e 	mov    BYTE PTR [eax+0x16310d],0x8e
   17cba:	66 89 b8 0e 31 16 00 	mov    WORD PTR [eax+0x16310e],di
   17cc1:	b8 10 31 16 00       	mov    eax,0x163110
   17cc6:	8d 76 00             	lea    esi,[esi+0x0]
   17cc9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   17cd0:	bb 08 00 00 00       	mov    ebx,0x8
   17cd5:	66 89 10             	mov    WORD PTR [eax],dx
   17cd8:	c6 40 05 8e          	mov    BYTE PTR [eax+0x5],0x8e
   17cdc:	66 89 58 02          	mov    WORD PTR [eax+0x2],bx
   17ce0:	66 89 48 06          	mov    WORD PTR [eax+0x6],cx
   17ce4:	83 c0 08             	add    eax,0x8
   17ce7:	3d f8 37 16 00       	cmp    eax,0x1637f8
   17cec:	75 e2                	jne    17cd0 <idt_init+0x5e0>
   17cee:	b8 ff 07 00 00       	mov    eax,0x7ff
   17cf3:	c7 46 02 00 30 16 00 	mov    DWORD PTR [esi+0x2],0x163000
   17cfa:	66 89 06             	mov    WORD PTR [esi],ax
   17cfd:	c7 44 24 14 00 30 16 	mov    DWORD PTR [esp+0x14],0x163000
   17d04:	00 
   17d05:	c7 44 24 18 ff 07 00 	mov    DWORD PTR [esp+0x18],0x7ff
   17d0c:	00 
   17d0d:	5b                   	pop    ebx
   17d0e:	5e                   	pop    esi
   17d0f:	5f                   	pop    edi
   17d10:	5d                   	pop    ebp
   17d11:	e9 4a 94 fe ff       	jmp    1160 <idt_load>
   17d16:	8d 76 00             	lea    esi,[esi+0x0]
   17d19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00017d20 <idt_get_gate>:
idt_get_gate():
   17d20:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
   17d25:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   17d29:	8d 04 c2             	lea    eax,[edx+eax*8]
   17d2c:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   17d30:	0f b7 48 02          	movzx  ecx,WORD PTR [eax+0x2]
   17d34:	66 89 0a             	mov    WORD PTR [edx],cx
   17d37:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
   17d3b:	0f b7 08             	movzx  ecx,WORD PTR [eax]
   17d3e:	c1 e2 10             	shl    edx,0x10
   17d41:	09 ca                	or     edx,ecx
   17d43:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   17d47:	89 11                	mov    DWORD PTR [ecx],edx
   17d49:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
   17d4d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   17d51:	88 10                	mov    BYTE PTR [eax],dl
   17d53:	c3                   	ret    
   17d54:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   17d5a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00017d60 <idt_get_gate_address>:
idt_get_gate_address():
   17d60:	0f b6 54 24 04       	movzx  edx,BYTE PTR [esp+0x4]
   17d65:	0f b7 04 d5 06 30 16 	movzx  eax,WORD PTR [edx*8+0x163006]
   17d6c:	00 
   17d6d:	0f b7 14 d5 00 30 16 	movzx  edx,WORD PTR [edx*8+0x163000]
   17d74:	00 
   17d75:	c1 e0 10             	shl    eax,0x10
   17d78:	09 d0                	or     eax,edx
   17d7a:	c3                   	ret    
   17d7b:	66 90                	xchg   ax,ax
   17d7d:	66 90                	xchg   ax,ax
   17d7f:	90                   	nop

00017d80 <irq0_handler>:
irq0_handler():
   17d80:	83 ec 0c             	sub    esp,0xc
   17d83:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   17d88:	8b 10                	mov    edx,DWORD PTR [eax]
   17d8a:	83 c2 01             	add    edx,0x1
   17d8d:	89 10                	mov    DWORD PTR [eax],edx
   17d8f:	8b 00                	mov    eax,DWORD PTR [eax]
   17d91:	31 d2                	xor    edx,edx
   17d93:	f7 35 c0 97 12 00    	div    DWORD PTR ds:0x1297c0
   17d99:	85 d2                	test   edx,edx
   17d9b:	75 07                	jne    17da4 <irq0_handler+0x24>
   17d9d:	83 05 cc 97 12 00 01 	add    DWORD PTR ds:0x1297cc,0x1
   17da4:	a1 78 98 12 00       	mov    eax,ds:0x129878
   17da9:	a8 04                	test   al,0x4
   17dab:	75 6b                	jne    17e18 <irq0_handler+0x98>
   17dad:	a8 02                	test   al,0x2
   17daf:	75 07                	jne    17db8 <irq0_handler+0x38>
   17db1:	83 c4 0c             	add    esp,0xc
   17db4:	c3                   	ret    
   17db5:	8d 76 00             	lea    esi,[esi+0x0]
   17db8:	e8 73 eb ff ff       	call   16930 <cursorSavePosition>
   17dbd:	83 ec 08             	sub    esp,0x8
   17dc0:	6a 31                	push   0x31
   17dc2:	6a 37                	push   0x37
   17dc4:	e8 27 ef ff ff       	call   16cf0 <cursorMoveTo>
   17dc9:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   17dce:	5a                   	pop    edx
   17dcf:	59                   	pop    ecx
   17dd0:	8b 00                	mov    eax,DWORD PTR [eax]
   17dd2:	50                   	push   eax
   17dd3:	68 d9 38 06 00       	push   0x638d9
   17dd8:	e8 83 a8 00 00       	call   22660 <printk>
   17ddd:	a1 30 97 12 00       	mov    eax,ds:0x129730
   17de2:	83 c4 10             	add    esp,0x10
   17de5:	ff 35 38 97 12 00    	push   DWORD PTR ds:0x129738
   17deb:	ff 35 3c 97 12 00    	push   DWORD PTR ds:0x12973c
   17df1:	25 00 02 00 00       	and    eax,0x200
   17df6:	83 f8 01             	cmp    eax,0x1
   17df9:	19 c0                	sbb    eax,eax
   17dfb:	83 e0 20             	and    eax,0x20
   17dfe:	83 c0 49             	add    eax,0x49
   17e01:	50                   	push   eax
   17e02:	68 dc 38 06 00       	push   0x638dc
   17e07:	e8 54 a8 00 00       	call   22660 <printk>
   17e0c:	83 c4 1c             	add    esp,0x1c
   17e0f:	e9 4c eb ff ff       	jmp    16960 <cursorRestorePosition>
   17e14:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   17e18:	e8 13 eb ff ff       	call   16930 <cursorSavePosition>
   17e1d:	83 ec 08             	sub    esp,0x8
   17e20:	68 a0 75 09 00       	push   0x975a0
   17e25:	68 cc 97 12 00       	push   0x1297cc
   17e2a:	e8 b1 ae 00 00       	call   22ce0 <gmtime_r>
   17e2f:	68 a0 75 09 00       	push   0x975a0
   17e34:	68 a5 38 06 00       	push   0x638a5
   17e39:	6a 32                	push   0x32
   17e3b:	68 60 75 09 00       	push   0x97560
   17e40:	e8 1b 99 ff ff       	call   11760 <strftime>
   17e45:	83 c4 18             	add    esp,0x18
   17e48:	6a 18                	push   0x18
   17e4a:	6a 00                	push   0x0
   17e4c:	e8 9f ee ff ff       	call   16cf0 <cursorMoveTo>
   17e51:	58                   	pop    eax
   17e52:	5a                   	pop    edx
   17e53:	68 60 75 09 00       	push   0x97560
   17e58:	68 b7 38 06 00       	push   0x638b7
   17e5d:	e8 fe a7 00 00       	call   22660 <printk>
   17e62:	59                   	pop    ecx
   17e63:	58                   	pop    eax
   17e64:	6a 18                	push   0x18
   17e66:	6a 41                	push   0x41
   17e68:	e8 83 ee ff ff       	call   16cf0 <cursorMoveTo>
   17e6d:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   17e72:	5a                   	pop    edx
   17e73:	59                   	pop    ecx
   17e74:	8b 00                	mov    eax,DWORD PTR [eax]
   17e76:	50                   	push   eax
   17e77:	68 d0 38 06 00       	push   0x638d0
   17e7c:	e8 df a7 00 00       	call   22660 <printk>
   17e81:	e8 da ea ff ff       	call   16960 <cursorRestorePosition>
   17e86:	a1 78 98 12 00       	mov    eax,ds:0x129878
   17e8b:	83 c4 10             	add    esp,0x10
   17e8e:	e9 1a ff ff ff       	jmp    17dad <irq0_handler+0x2d>
   17e93:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   17e99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00017ea0 <kbd_handler>:
kbd_handler():
   17ea0:	53                   	push   ebx
   17ea1:	83 ec 08             	sub    esp,0x8
   17ea4:	e4 60                	in     al,0x60
   17ea6:	a2 c4 74 09 00       	mov    ds:0x974c4,al
   17eab:	fa                   	cli    
   17eac:	3c 9d                	cmp    al,0x9d
   17eae:	0f 84 24 02 00 00    	je     180d8 <kbd_handler+0x238>
   17eb4:	0f 86 16 01 00 00    	jbe    17fd0 <kbd_handler+0x130>
   17eba:	3c b8                	cmp    al,0xb8
   17ebc:	0f 84 e6 01 00 00    	je     180a8 <kbd_handler+0x208>
   17ec2:	3c ba                	cmp    al,0xba
   17ec4:	0f 84 3e 01 00 00    	je     18008 <kbd_handler+0x168>
   17eca:	3c aa                	cmp    al,0xaa
   17ecc:	0f 84 e6 01 00 00    	je     180b8 <kbd_handler+0x218>
   17ed2:	8d 50 35             	lea    edx,[eax+0x35]
   17ed5:	81 e2 fd 00 00 00    	and    edx,0xfd
   17edb:	0f 84 4f 01 00 00    	je     18030 <kbd_handler+0x190>
   17ee1:	8d 50 38             	lea    edx,[eax+0x38]
   17ee4:	81 e2 f7 00 00 00    	and    edx,0xf7
   17eea:	0f 84 40 01 00 00    	je     18030 <kbd_handler+0x190>
   17ef0:	84 c0                	test   al,al
   17ef2:	0f 88 f3 00 00 00    	js     17feb <kbd_handler+0x14b>
   17ef8:	0f b6 15 64 35 09 00 	movzx  edx,BYTE PTR ds:0x93564
   17eff:	0f b6 c0             	movzx  eax,al
   17f02:	84 d2                	test   dl,dl
   17f04:	75 0f                	jne    17f15 <kbd_handler+0x75>
   17f06:	0f b6 15 67 35 09 00 	movzx  edx,BYTE PTR ds:0x93567
   17f0d:	84 d2                	test   dl,dl
   17f0f:	0f 84 23 02 00 00    	je     18138 <kbd_handler+0x298>
   17f15:	0f b6 98 20 fc 03 00 	movzx  ebx,BYTE PTR [eax+0x3fc20]
   17f1c:	0f b6 05 65 35 09 00 	movzx  eax,BYTE PTR ds:0x93565
   17f23:	84 c0                	test   al,al
   17f25:	0f 85 95 02 00 00    	jne    181c0 <kbd_handler+0x320>
   17f2b:	a1 60 99 12 00       	mov    eax,ds:0x129960
   17f30:	3d 2f 25 16 00       	cmp    eax,0x16252f
   17f35:	77 0f                	ja     17f46 <kbd_handler+0xa6>
   17f37:	0f b6 15 66 35 09 00 	movzx  edx,BYTE PTR ds:0x93566
   17f3e:	84 d2                	test   dl,dl
   17f40:	0f 84 aa 01 00 00    	je     180f0 <kbd_handler+0x250>
   17f46:	f6 05 78 98 12 00 10 	test   BYTE PTR ds:0x129878,0x10
   17f4d:	0f 85 8d 02 00 00    	jne    181e0 <kbd_handler+0x340>
   17f53:	e8 d8 e9 ff ff       	call   16930 <cursorSavePosition>
   17f58:	83 ec 08             	sub    esp,0x8
   17f5b:	6a 00                	push   0x0
   17f5d:	6a 4e                	push   0x4e
   17f5f:	e8 8c ed ff ff       	call   16cf0 <cursorMoveTo>
   17f64:	58                   	pop    eax
   17f65:	5a                   	pop    edx
   17f66:	6a 4b                	push   0x4b
   17f68:	68 cc 00 04 00       	push   0x400cc
   17f6d:	e8 ee a6 00 00       	call   22660 <printk>
   17f72:	e8 e9 e9 ff ff       	call   16960 <cursorRestorePosition>
   17f77:	83 c4 10             	add    esp,0x10
   17f7a:	80 fb 6a             	cmp    bl,0x6a
   17f7d:	0f b6 05 66 35 09 00 	movzx  eax,BYTE PTR ds:0x93566
   17f84:	75 08                	jne    17f8e <kbd_handler+0xee>
   17f86:	84 c0                	test   al,al
   17f88:	0f 85 5a 01 00 00    	jne    180e8 <kbd_handler+0x248>
   17f8e:	0f b6 05 66 35 09 00 	movzx  eax,BYTE PTR ds:0x93566
   17f95:	84 c0                	test   al,al
   17f97:	0f 84 cb 00 00 00    	je     18068 <kbd_handler+0x1c8>
   17f9d:	0f b6 05 65 35 09 00 	movzx  eax,BYTE PTR ds:0x93565
   17fa4:	84 c0                	test   al,al
   17fa6:	0f 84 bc 00 00 00    	je     18068 <kbd_handler+0x1c8>
   17fac:	80 fb e0             	cmp    bl,0xe0
   17faf:	0f 85 b3 00 00 00    	jne    18068 <kbd_handler+0x1c8>
   17fb5:	83 ec 0c             	sub    esp,0xc
   17fb8:	6a 00                	push   0x0
   17fba:	e8 51 92 00 00       	call   21210 <reboot>
   17fbf:	0f b6 05 66 35 09 00 	movzx  eax,BYTE PTR ds:0x93566
   17fc6:	83 c4 10             	add    esp,0x10
   17fc9:	eb 20                	jmp    17feb <kbd_handler+0x14b>
   17fcb:	90                   	nop
   17fcc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   17fd0:	3c 2a                	cmp    al,0x2a
   17fd2:	0f 84 f0 00 00 00    	je     180c8 <kbd_handler+0x228>
   17fd8:	3c 38                	cmp    al,0x38
   17fda:	74 44                	je     18020 <kbd_handler+0x180>
   17fdc:	3c 1d                	cmp    al,0x1d
   17fde:	0f 85 ee fe ff ff    	jne    17ed2 <kbd_handler+0x32>
   17fe4:	c6 05 65 35 09 00 01 	mov    BYTE PTR ds:0x93565,0x1
   17feb:	e4 61                	in     al,0x61
   17fed:	89 c2                	mov    edx,eax
   17fef:	83 c8 82             	or     eax,0xffffff82
   17ff2:	e6 61                	out    0x61,al
   17ff4:	89 d0                	mov    eax,edx
   17ff6:	83 e0 7f             	and    eax,0x7f
   17ff9:	83 c8 02             	or     eax,0x2
   17ffc:	e6 61                	out    0x61,al
   17ffe:	83 c4 08             	add    esp,0x8
   18001:	5b                   	pop    ebx
   18002:	c3                   	ret    
   18003:	90                   	nop
   18004:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18008:	0f b6 05 67 35 09 00 	movzx  eax,BYTE PTR ds:0x93567
   1800f:	84 c0                	test   al,al
   18011:	0f 94 c0             	sete   al
   18014:	a2 67 35 09 00       	mov    ds:0x93567,al
   18019:	eb d0                	jmp    17feb <kbd_handler+0x14b>
   1801b:	90                   	nop
   1801c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18020:	c6 05 66 35 09 00 01 	mov    BYTE PTR ds:0x93566,0x1
   18027:	eb c2                	jmp    17feb <kbd_handler+0x14b>
   18029:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   18030:	8b 15 60 99 12 00    	mov    edx,DWORD PTR ds:0x129960
   18036:	81 fa 2f 25 16 00    	cmp    edx,0x16252f
   1803c:	0f 87 ae fe ff ff    	ja     17ef0 <kbd_handler+0x50>
   18042:	0f b6 0d 66 35 09 00 	movzx  ecx,BYTE PTR ds:0x93566
   18049:	84 c9                	test   cl,cl
   1804b:	0f 85 9f fe ff ff    	jne    17ef0 <kbd_handler+0x50>
   18051:	8d 4a 01             	lea    ecx,[edx+0x1]
   18054:	89 0d 60 99 12 00    	mov    DWORD PTR ds:0x129960,ecx
   1805a:	88 42 01             	mov    BYTE PTR [edx+0x1],al
   1805d:	e9 8e fe ff ff       	jmp    17ef0 <kbd_handler+0x50>
   18062:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   18068:	0f b6 05 66 35 09 00 	movzx  eax,BYTE PTR ds:0x93566
   1806f:	84 c0                	test   al,al
   18071:	0f 84 74 ff ff ff    	je     17feb <kbd_handler+0x14b>
   18077:	80 fb 63             	cmp    bl,0x63
   1807a:	0f 84 76 01 00 00    	je     181f6 <kbd_handler+0x356>
   18080:	80 fb 62             	cmp    bl,0x62
   18083:	0f 84 bb 00 00 00    	je     18144 <kbd_handler+0x2a4>
   18089:	80 fb 64             	cmp    bl,0x64
   1808c:	0f 84 b0 01 00 00    	je     18242 <kbd_handler+0x3a2>
   18092:	80 fb 65             	cmp    bl,0x65
   18095:	0f 85 50 ff ff ff    	jne    17feb <kbd_handler+0x14b>
   1809b:	e8 c0 91 00 00       	call   21260 <dumpKernelAddresses>
   180a0:	e9 46 ff ff ff       	jmp    17feb <kbd_handler+0x14b>
   180a5:	8d 76 00             	lea    esi,[esi+0x0]
   180a8:	c6 05 66 35 09 00 00 	mov    BYTE PTR ds:0x93566,0x0
   180af:	e9 37 ff ff ff       	jmp    17feb <kbd_handler+0x14b>
   180b4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   180b8:	c6 05 64 35 09 00 00 	mov    BYTE PTR ds:0x93564,0x0
   180bf:	e9 27 ff ff ff       	jmp    17feb <kbd_handler+0x14b>
   180c4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   180c8:	c6 05 64 35 09 00 01 	mov    BYTE PTR ds:0x93564,0x1
   180cf:	e9 17 ff ff ff       	jmp    17feb <kbd_handler+0x14b>
   180d4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   180d8:	c6 05 65 35 09 00 00 	mov    BYTE PTR ds:0x93565,0x0
   180df:	e9 07 ff ff ff       	jmp    17feb <kbd_handler+0x14b>
   180e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   180e8:	cc                   	int3   
   180e9:	e9 a0 fe ff ff       	jmp    17f8e <kbd_handler+0xee>
   180ee:	66 90                	xchg   ax,ax
   180f0:	8d 50 01             	lea    edx,[eax+0x1]
   180f3:	89 15 60 99 12 00    	mov    DWORD PTR ds:0x129960,edx
   180f9:	88 58 01             	mov    BYTE PTR [eax+0x1],bl
   180fc:	f6 05 78 98 12 00 10 	test   BYTE PTR ds:0x129878,0x10
   18103:	0f 85 43 01 00 00    	jne    1824c <kbd_handler+0x3ac>
   18109:	e8 22 e8 ff ff       	call   16930 <cursorSavePosition>
   1810e:	83 ec 08             	sub    esp,0x8
   18111:	6a 00                	push   0x0
   18113:	6a 4e                	push   0x4e
   18115:	e8 d6 eb ff ff       	call   16cf0 <cursorMoveTo>
   1811a:	59                   	pop    ecx
   1811b:	58                   	pop    eax
   1811c:	6a 6b                	push   0x6b
   1811e:	68 cc 00 04 00       	push   0x400cc
   18123:	e8 38 a5 00 00       	call   22660 <printk>
   18128:	e8 33 e8 ff ff       	call   16960 <cursorRestorePosition>
   1812d:	83 c4 10             	add    esp,0x10
   18130:	e9 45 fe ff ff       	jmp    17f7a <kbd_handler+0xda>
   18135:	8d 76 00             	lea    esi,[esi+0x0]
   18138:	0f b6 98 a0 fc 03 00 	movzx  ebx,BYTE PTR [eax+0x3fca0]
   1813f:	e9 d8 fd ff ff       	jmp    17f1c <kbd_handler+0x7c>
   18144:	e8 e7 e7 ff ff       	call   16930 <cursorSavePosition>
   18149:	83 ec 08             	sub    esp,0x8
   1814c:	68 20 75 09 00       	push   0x97520
   18151:	68 cc 97 12 00       	push   0x1297cc
   18156:	e8 85 ab 00 00       	call   22ce0 <gmtime_r>
   1815b:	68 20 75 09 00       	push   0x97520
   18160:	68 a5 38 06 00       	push   0x638a5
   18165:	6a 32                	push   0x32
   18167:	68 e0 74 09 00       	push   0x974e0
   1816c:	e8 ef 95 ff ff       	call   11760 <strftime>
   18171:	83 c4 18             	add    esp,0x18
   18174:	6a 31                	push   0x31
   18176:	6a 00                	push   0x0
   18178:	e8 73 eb ff ff       	call   16cf0 <cursorMoveTo>
   1817d:	58                   	pop    eax
   1817e:	5a                   	pop    edx
   1817f:	68 e0 74 09 00       	push   0x974e0
   18184:	68 b7 38 06 00       	push   0x638b7
   18189:	e8 d2 a4 00 00       	call   22660 <printk>
   1818e:	59                   	pop    ecx
   1818f:	5b                   	pop    ebx
   18190:	6a 31                	push   0x31
   18192:	6a 41                	push   0x41
   18194:	e8 57 eb ff ff       	call   16cf0 <cursorMoveTo>
   18199:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   1819e:	5a                   	pop    edx
   1819f:	59                   	pop    ecx
   181a0:	8b 00                	mov    eax,DWORD PTR [eax]
   181a2:	50                   	push   eax
   181a3:	68 d0 38 06 00       	push   0x638d0
   181a8:	e8 b3 a4 00 00       	call   22660 <printk>
   181ad:	e8 ae e7 ff ff       	call   16960 <cursorRestorePosition>
   181b2:	83 c4 10             	add    esp,0x10
   181b5:	e9 31 fe ff ff       	jmp    17feb <kbd_handler+0x14b>
   181ba:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   181c0:	83 ec 0c             	sub    esp,0xc
   181c3:	83 eb 20             	sub    ebx,0x20
   181c6:	68 ea 38 06 00       	push   0x638ea
   181cb:	e8 90 a4 00 00       	call   22660 <printk>
   181d0:	83 c4 10             	add    esp,0x10
   181d3:	e9 53 fd ff ff       	jmp    17f2b <kbd_handler+0x8b>
   181d8:	90                   	nop
   181d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   181e0:	83 ec 08             	sub    esp,0x8
   181e3:	50                   	push   eax
   181e4:	68 04 39 06 00       	push   0x63904
   181e9:	e8 72 a4 00 00       	call   22660 <printk>
   181ee:	83 c4 10             	add    esp,0x10
   181f1:	e9 5d fd ff ff       	jmp    17f53 <kbd_handler+0xb3>
   181f6:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   181fb:	83 ec 08             	sub    esp,0x8
   181fe:	8b 00                	mov    eax,DWORD PTR [eax]
   18200:	50                   	push   eax
   18201:	68 d9 38 06 00       	push   0x638d9
   18206:	e8 55 a4 00 00       	call   22660 <printk>
   1820b:	a1 30 97 12 00       	mov    eax,ds:0x129730
   18210:	83 c4 10             	add    esp,0x10
   18213:	ff 35 38 97 12 00    	push   DWORD PTR ds:0x129738
   18219:	ff 35 3c 97 12 00    	push   DWORD PTR ds:0x12973c
   1821f:	25 00 02 00 00       	and    eax,0x200
   18224:	83 f8 01             	cmp    eax,0x1
   18227:	19 c0                	sbb    eax,eax
   18229:	83 e0 20             	and    eax,0x20
   1822c:	83 c0 49             	add    eax,0x49
   1822f:	50                   	push   eax
   18230:	68 dc 38 06 00       	push   0x638dc
   18235:	e8 26 a4 00 00       	call   22660 <printk>
   1823a:	83 c4 10             	add    esp,0x10
   1823d:	e9 a9 fd ff ff       	jmp    17feb <kbd_handler+0x14b>
   18242:	e8 39 8d 00 00       	call   20f80 <printDumpedRegs>
   18247:	e9 9f fd ff ff       	jmp    17feb <kbd_handler+0x14b>
   1824c:	83 ec 04             	sub    esp,0x4
   1824f:	0f b6 c3             	movzx  eax,bl
   18252:	ff 35 60 99 12 00    	push   DWORD PTR ds:0x129960
   18258:	50                   	push   eax
   18259:	68 ec 38 06 00       	push   0x638ec
   1825e:	e8 fd a3 00 00       	call   22660 <printk>
   18263:	83 c4 10             	add    esp,0x10
   18266:	e9 9e fe ff ff       	jmp    18109 <kbd_handler+0x269>
   1826b:	90                   	nop
   1826c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00018270 <pagingExceptionHandler>:
pagingExceptionHandler():
   18270:	55                   	push   ebp
   18271:	57                   	push   edi
   18272:	56                   	push   esi
   18273:	53                   	push   ebx
   18274:	83 ec 0c             	sub    esp,0xc
   18277:	66 83 3d e4 96 12 00 	cmp    WORD PTR ds:0x1296e4,0xe
   1827e:	0e 
   1827f:	0f 84 67 01 00 00    	je     183ec <pagingExceptionHandler+0x17c>
   18285:	80 3d e1 97 12 00 00 	cmp    BYTE PTR ds:0x1297e1,0x0
   1828c:	0f 85 99 00 00 00    	jne    1832b <pagingExceptionHandler+0xbb>
   18292:	a1 78 98 12 00       	mov    eax,ds:0x129878
   18297:	31 db                	xor    ebx,ebx
   18299:	c7 05 78 98 12 00 00 	mov    DWORD PTR ds:0x129878,0x0
   182a0:	00 00 00 
   182a3:	85 c0                	test   eax,eax
   182a5:	74 05                	je     182ac <pagingExceptionHandler+0x3c>
   182a7:	a3 78 98 12 00       	mov    ds:0x129878,eax
   182ac:	8b 15 40 97 12 00    	mov    edx,DWORD PTR ds:0x129740
   182b2:	89 d0                	mov    eax,edx
   182b4:	25 00 f0 ff ff       	and    eax,0xfffff000
   182b9:	3d 00 00 00 c0       	cmp    eax,0xc0000000
   182be:	0f 85 5c 01 00 00    	jne    18420 <pagingExceptionHandler+0x1b0>
   182c4:	f6 05 78 98 12 00 40 	test   BYTE PTR ds:0x129878,0x40
   182cb:	74 11                	je     182de <pagingExceptionHandler+0x6e>
   182cd:	83 ec 08             	sub    esp,0x8
   182d0:	52                   	push   edx
   182d1:	68 40 4a 08 00       	push   0x84a40
   182d6:	e8 85 a3 00 00       	call   22660 <printk>
   182db:	83 c4 10             	add    esp,0x10
   182de:	83 ec 08             	sub    esp,0x8
   182e1:	6a 00                	push   0x0
   182e3:	53                   	push   ebx
   182e4:	e8 27 98 ff ff       	call   11b10 <kPagingSetPageReadOnlyFlag>
   182e9:	0f b6 05 e1 97 12 00 	movzx  eax,BYTE PTR ds:0x1297e1
   182f0:	83 c4 10             	add    esp,0x10
   182f3:	8b 15 b8 97 12 00    	mov    edx,DWORD PTR ds:0x1297b8
   182f9:	83 c2 01             	add    edx,0x1
   182fc:	89 15 b8 97 12 00    	mov    DWORD PTR ds:0x1297b8,edx
   18302:	50                   	push   eax
   18303:	b8 00 00 00 00       	mov    eax,0x0
   18308:	0f 22 d0             	mov    cr2,eax
   1830b:	58                   	pop    eax
   1830c:	84 c0                	test   al,al
   1830e:	75 10                	jne    18320 <pagingExceptionHandler+0xb0>
   18310:	81 3d 40 97 12 00 00 	cmp    DWORD PTR ds:0x129740,0xc0000000
   18317:	00 00 c0 
   1831a:	0f 84 07 01 00 00    	je     18427 <pagingExceptionHandler+0x1b7>
   18320:	fb                   	sti    
   18321:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   18328:	f4                   	hlt    
   18329:	eb fd                	jmp    18328 <pagingExceptionHandler+0xb8>
   1832b:	31 db                	xor    ebx,ebx
   1832d:	f6 05 79 98 12 00 10 	test   BYTE PTR ds:0x129879,0x10
   18334:	0f b6 05 e1 97 12 00 	movzx  eax,BYTE PTR ds:0x1297e1
   1833b:	74 b6                	je     182f3 <pagingExceptionHandler+0x83>
   1833d:	83 ec 0c             	sub    esp,0xc
   18340:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   18346:	e8 75 96 ff ff       	call   119c0 <kPagingGet4kPDEntryValue>
   1834b:	89 c7                	mov    edi,eax
   1834d:	58                   	pop    eax
   1834e:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   18354:	e8 97 97 ff ff       	call   11af0 <kPagingGet4kPTEntryValue>
   18359:	5a                   	pop    edx
   1835a:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   18360:	89 c5                	mov    ebp,eax
   18362:	e8 b9 96 ff ff       	call   11a20 <kPagingGet4kPDEntryAddress>
   18367:	83 c4 10             	add    esp,0x10
   1836a:	66 83 3d e4 96 12 00 	cmp    WORD PTR ds:0x1296e4,0xe
   18371:	0e 
   18372:	89 c6                	mov    esi,eax
   18374:	75 16                	jne    1838c <pagingExceptionHandler+0x11c>
   18376:	83 ec 08             	sub    esp,0x8
   18379:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   1837f:	68 b8 49 08 00       	push   0x849b8
   18384:	e8 d7 a2 00 00       	call   22660 <printk>
   18389:	83 c4 10             	add    esp,0x10
   1838c:	83 ec 0c             	sub    esp,0xc
   1838f:	55                   	push   ebp
   18390:	53                   	push   ebx
   18391:	57                   	push   edi
   18392:	56                   	push   esi
   18393:	68 ec 49 08 00       	push   0x849ec
   18398:	e8 c3 a2 00 00       	call   22660 <printk>
   1839d:	83 c4 20             	add    esp,0x20
   183a0:	e8 db 8b 00 00       	call   20f80 <printDumpedRegs>
   183a5:	a1 b8 97 12 00       	mov    eax,ds:0x1297b8
   183aa:	83 ec 08             	sub    esp,0x8
   183ad:	83 c0 01             	add    eax,0x1
   183b0:	50                   	push   eax
   183b1:	68 14 4a 08 00       	push   0x84a14
   183b6:	e8 a5 a2 00 00       	call   22660 <printk>
   183bb:	8b 15 40 97 12 00    	mov    edx,DWORD PTR ds:0x129740
   183c1:	83 c4 10             	add    esp,0x10
   183c4:	0f b6 05 e1 97 12 00 	movzx  eax,BYTE PTR ds:0x1297e1
   183cb:	89 d1                	mov    ecx,edx
   183cd:	81 e1 00 f0 ff ff    	and    ecx,0xfffff000
   183d3:	81 f9 00 00 00 c0    	cmp    ecx,0xc0000000
   183d9:	0f 85 14 ff ff ff    	jne    182f3 <pagingExceptionHandler+0x83>
   183df:	84 c0                	test   al,al
   183e1:	0f 85 0c ff ff ff    	jne    182f3 <pagingExceptionHandler+0x83>
   183e7:	e9 d8 fe ff ff       	jmp    182c4 <pagingExceptionHandler+0x54>
   183ec:	83 ec 0c             	sub    esp,0xc
   183ef:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   183f5:	e8 76 96 ff ff       	call   11a70 <kPagingGet4kPTEntryAddress>
   183fa:	83 c4 10             	add    esp,0x10
   183fd:	80 3d e1 97 12 00 00 	cmp    BYTE PTR ds:0x1297e1,0x0
   18404:	89 c3                	mov    ebx,eax
   18406:	0f 85 21 ff ff ff    	jne    1832d <pagingExceptionHandler+0xbd>
   1840c:	a1 78 98 12 00       	mov    eax,ds:0x129878
   18411:	c7 05 78 98 12 00 00 	mov    DWORD PTR ds:0x129878,0x0
   18418:	00 00 00 
   1841b:	e9 83 fe ff ff       	jmp    182a3 <pagingExceptionHandler+0x33>
   18420:	31 c0                	xor    eax,eax
   18422:	e9 cc fe ff ff       	jmp    182f3 <pagingExceptionHandler+0x83>
   18427:	c7 05 40 97 12 00 00 	mov    DWORD PTR ds:0x129740,0x0
   1842e:	00 00 00 
   18431:	83 c4 0c             	add    esp,0xc
   18434:	5b                   	pop    ebx
   18435:	5e                   	pop    esi
   18436:	5f                   	pop    edi
   18437:	5d                   	pop    ebp
   18438:	c3                   	ret    
   18439:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00018440 <defaultISRHandler>:
defaultISRHandler():
   18440:	83 ec 0c             	sub    esp,0xc
   18443:	f6 05 79 98 12 00 10 	test   BYTE PTR ds:0x129879,0x10
   1844a:	75 08                	jne    18454 <defaultISRHandler+0x14>
   1844c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18450:	fa                   	cli    
   18451:	f4                   	hlt    
   18452:	eb fc                	jmp    18450 <defaultISRHandler+0x10>
   18454:	0f b7 05 e4 96 12 00 	movzx  eax,WORD PTR ds:0x1296e4
   1845b:	83 ec 08             	sub    esp,0x8
   1845e:	50                   	push   eax
   1845f:	68 8c 4a 08 00       	push   0x84a8c
   18464:	e8 f7 a1 00 00       	call   22660 <printk>
   18469:	e8 12 8b 00 00       	call   20f80 <printDumpedRegs>
   1846e:	a1 b8 97 12 00       	mov    eax,ds:0x1297b8
   18473:	83 c4 0c             	add    esp,0xc
   18476:	83 c0 01             	add    eax,0x1
   18479:	50                   	push   eax
   1847a:	68 14 4a 08 00       	push   0x84a14
   1847f:	68 00 10 00 00       	push   0x1000
   18484:	e8 f7 a1 00 00       	call   22680 <printd>
   18489:	83 c4 10             	add    esp,0x10
   1848c:	eb c2                	jmp    18450 <defaultISRHandler+0x10>
   1848e:	66 90                	xchg   ax,ax

00018490 <doubleFaultHandler>:
doubleFaultHandler():
   18490:	56                   	push   esi
   18491:	53                   	push   ebx
   18492:	31 db                	xor    ebx,ebx
   18494:	83 ec 04             	sub    esp,0x4
   18497:	8b 35 2c 97 12 00    	mov    esi,DWORD PTR ds:0x12972c
   1849d:	e8 2e e5 ff ff       	call   169d0 <terminal_clear>
   184a2:	0f b7 05 e4 96 12 00 	movzx  eax,WORD PTR ds:0x1296e4
   184a9:	83 ec 0c             	sub    esp,0xc
   184ac:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   184b2:	ff 35 38 97 12 00    	push   DWORD PTR ds:0x129738
   184b8:	ff 35 3c 97 12 00    	push   DWORD PTR ds:0x12973c
   184be:	50                   	push   eax
   184bf:	68 c0 4a 08 00       	push   0x84ac0
   184c4:	e8 97 a1 00 00       	call   22660 <printk>
   184c9:	83 c4 14             	add    esp,0x14
   184cc:	68 16 39 06 00       	push   0x63916
   184d1:	e8 8a a1 00 00       	call   22660 <printk>
   184d6:	83 c4 10             	add    esp,0x10
   184d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   184e0:	8b 15 e8 96 12 00    	mov    edx,DWORD PTR ds:0x1296e8
   184e6:	8d 04 1e             	lea    eax,[esi+ebx*1]
   184e9:	83 ec 04             	sub    esp,0x4
   184ec:	ff 34 1a             	push   DWORD PTR [edx+ebx*1]
   184ef:	50                   	push   eax
   184f0:	83 c3 04             	add    ebx,0x4
   184f3:	68 1e 39 06 00       	push   0x6391e
   184f8:	e8 63 a1 00 00       	call   22660 <printk>
   184fd:	83 c4 10             	add    esp,0x10
   18500:	83 fb 28             	cmp    ebx,0x28
   18503:	75 db                	jne    184e0 <doubleFaultHandler+0x50>
   18505:	fa                   	cli    
   18506:	f4                   	hlt    
   18507:	83 c4 04             	add    esp,0x4
   1850a:	5b                   	pop    ebx
   1850b:	5e                   	pop    esi
   1850c:	c3                   	ret    
   1850d:	66 90                	xchg   ax,ax
   1850f:	90                   	nop

00018510 <rdmsr64>:
rdmsr64():
   18510:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   18514:	0f 32                	rdmsr  
   18516:	c3                   	ret    
   18517:	89 f6                	mov    esi,esi
   18519:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00018520 <rdmsr32>:
rdmsr32():
   18520:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   18524:	0f 32                	rdmsr  
   18526:	89 d1                	mov    ecx,edx
   18528:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1852c:	89 0a                	mov    DWORD PTR [edx],ecx
   1852e:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   18532:	89 02                	mov    DWORD PTR [edx],eax
   18534:	c3                   	ret    
   18535:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18539:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00018540 <wrmsr64>:
wrmsr64():
   18540:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   18544:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   18548:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   1854c:	0f 30                	wrmsr  
   1854e:	c3                   	ret    
   1854f:	90                   	nop

00018550 <wrmsr32>:
wrmsr32():
   18550:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   18554:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   18558:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   1855c:	0f 30                	wrmsr  
   1855e:	c3                   	ret    
   1855f:	90                   	nop

00018560 <IRQ_set_mask>:
IRQ_set_mask():
   18560:	53                   	push   ebx
   18561:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   18565:	3c 07                	cmp    al,0x7
   18567:	76 17                	jbe    18580 <IRQ_set_mask+0x20>
   18569:	8d 48 f8             	lea    ecx,[eax-0x8]
   1856c:	ba a1 00 00 00       	mov    edx,0xa1
   18571:	ec                   	in     al,dx
   18572:	bb 01 00 00 00       	mov    ebx,0x1
   18577:	d3 e3                	shl    ebx,cl
   18579:	09 d8                	or     eax,ebx
   1857b:	ee                   	out    dx,al
   1857c:	5b                   	pop    ebx
   1857d:	c3                   	ret    
   1857e:	66 90                	xchg   ax,ax
   18580:	89 c1                	mov    ecx,eax
   18582:	ba 21 00 00 00       	mov    edx,0x21
   18587:	eb e8                	jmp    18571 <IRQ_set_mask+0x11>
   18589:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00018590 <IRQ_clear_mask>:
IRQ_clear_mask():
   18590:	53                   	push   ebx
   18591:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   18595:	3c 07                	cmp    al,0x7
   18597:	76 17                	jbe    185b0 <IRQ_clear_mask+0x20>
   18599:	8d 48 f8             	lea    ecx,[eax-0x8]
   1859c:	ba a1 00 00 00       	mov    edx,0xa1
   185a1:	ec                   	in     al,dx
   185a2:	bb fe ff ff ff       	mov    ebx,0xfffffffe
   185a7:	d3 c3                	rol    ebx,cl
   185a9:	21 d8                	and    eax,ebx
   185ab:	ee                   	out    dx,al
   185ac:	5b                   	pop    ebx
   185ad:	c3                   	ret    
   185ae:	66 90                	xchg   ax,ax
   185b0:	89 c1                	mov    ecx,eax
   185b2:	ba 21 00 00 00       	mov    edx,0x21
   185b7:	eb e8                	jmp    185a1 <IRQ_clear_mask+0x11>
   185b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000185c0 <PIC_remap>:
PIC_remap():
   185c0:	e4 21                	in     al,0x21
   185c2:	89 c1                	mov    ecx,eax
   185c4:	e4 a1                	in     al,0xa1
   185c6:	89 c2                	mov    edx,eax
   185c8:	b8 11 00 00 00       	mov    eax,0x11
   185cd:	e6 20                	out    0x20,al
   185cf:	90                   	nop
   185d0:	e6 a0                	out    0xa0,al
   185d2:	90                   	nop
   185d3:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   185d7:	e6 21                	out    0x21,al
   185d9:	90                   	nop
   185da:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   185de:	e6 a1                	out    0xa1,al
   185e0:	90                   	nop
   185e1:	b8 04 00 00 00       	mov    eax,0x4
   185e6:	e6 21                	out    0x21,al
   185e8:	90                   	nop
   185e9:	b8 02 00 00 00       	mov    eax,0x2
   185ee:	e6 a1                	out    0xa1,al
   185f0:	90                   	nop
   185f1:	b8 01 00 00 00       	mov    eax,0x1
   185f6:	e6 21                	out    0x21,al
   185f8:	90                   	nop
   185f9:	e6 a1                	out    0xa1,al
   185fb:	90                   	nop
   185fc:	89 c8                	mov    eax,ecx
   185fe:	e6 21                	out    0x21,al
   18600:	89 d0                	mov    eax,edx
   18602:	e6 a1                	out    0xa1,al
   18604:	c3                   	ret    
   18605:	66 90                	xchg   ax,ax
   18607:	66 90                	xchg   ax,ax
   18609:	66 90                	xchg   ax,ax
   1860b:	66 90                	xchg   ax,ax
   1860d:	66 90                	xchg   ax,ax
   1860f:	90                   	nop

00018610 <mpScanForConfig>:
mpScanForConfig():
   18610:	56                   	push   esi
   18611:	53                   	push   ebx
   18612:	83 ec 04             	sub    esp,0x4
   18615:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   18619:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   1861d:	01 de                	add    esi,ebx
   1861f:	f6 05 79 98 12 00 08 	test   BYTE PTR ds:0x129879,0x8
   18626:	75 48                	jne    18670 <mpScanForConfig+0x60>
   18628:	39 f3                	cmp    ebx,esi
   1862a:	7c 0b                	jl     18637 <mpScanForConfig+0x27>
   1862c:	eb 32                	jmp    18660 <mpScanForConfig+0x50>
   1862e:	66 90                	xchg   ax,ax
   18630:	83 c3 01             	add    ebx,0x1
   18633:	39 f3                	cmp    ebx,esi
   18635:	74 29                	je     18660 <mpScanForConfig+0x50>
   18637:	83 ec 04             	sub    esp,0x4
   1863a:	6a 04                	push   0x4
   1863c:	68 30 39 06 00       	push   0x63930
   18641:	53                   	push   ebx
   18642:	e8 69 9a ff ff       	call   120b0 <strncmp>
   18647:	83 c4 10             	add    esp,0x10
   1864a:	85 c0                	test   eax,eax
   1864c:	75 e2                	jne    18630 <mpScanForConfig+0x20>
   1864e:	89 1d 70 35 09 00    	mov    DWORD PTR ds:0x93570,ebx
   18654:	83 c4 04             	add    esp,0x4
   18657:	b8 01 00 00 00       	mov    eax,0x1
   1865c:	5b                   	pop    ebx
   1865d:	5e                   	pop    esi
   1865e:	c3                   	ret    
   1865f:	90                   	nop
   18660:	83 c4 04             	add    esp,0x4
   18663:	31 c0                	xor    eax,eax
   18665:	5b                   	pop    ebx
   18666:	5e                   	pop    esi
   18667:	c3                   	ret    
   18668:	90                   	nop
   18669:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   18670:	56                   	push   esi
   18671:	53                   	push   ebx
   18672:	68 04 4b 08 00       	push   0x84b04
   18677:	68 00 08 00 00       	push   0x800
   1867c:	e8 ff 9f 00 00       	call   22680 <printd>
   18681:	83 c4 10             	add    esp,0x10
   18684:	eb a2                	jmp    18628 <mpScanForConfig+0x18>
   18686:	8d 76 00             	lea    esi,[esi+0x0]
   18689:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00018690 <mpFindTables>:
mpFindTables():
   18690:	53                   	push   ebx
   18691:	83 ec 10             	sub    esp,0x10
   18694:	0f b7 05 0e 04 00 00 	movzx  eax,WORD PTR ds:0x40e
   1869b:	68 00 04 00 00       	push   0x400
   186a0:	c1 e0 04             	shl    eax,0x4
   186a3:	50                   	push   eax
   186a4:	e8 67 ff ff ff       	call   18610 <mpScanForConfig>
   186a9:	83 c4 10             	add    esp,0x10
   186ac:	84 c0                	test   al,al
   186ae:	74 38                	je     186e8 <mpFindTables+0x58>
   186b0:	f6 05 79 98 12 00 08 	test   BYTE PTR ds:0x129879,0x8
   186b7:	bb 01 00 00 00       	mov    ebx,0x1
   186bc:	74 1d                	je     186db <mpFindTables+0x4b>
   186be:	a1 70 35 09 00       	mov    eax,ds:0x93570
   186c3:	0f b6 50 09          	movzx  edx,BYTE PTR [eax+0x9]
   186c7:	52                   	push   edx
   186c8:	50                   	push   eax
   186c9:	68 70 4b 08 00       	push   0x84b70
   186ce:	68 00 08 00 00       	push   0x800
   186d3:	e8 a8 9f 00 00       	call   22680 <printd>
   186d8:	83 c4 10             	add    esp,0x10
   186db:	83 c4 08             	add    esp,0x8
   186de:	89 d8                	mov    eax,ebx
   186e0:	5b                   	pop    ebx
   186e1:	c3                   	ret    
   186e2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   186e8:	83 ec 08             	sub    esp,0x8
   186eb:	68 00 04 00 00       	push   0x400
   186f0:	68 00 fc 09 00       	push   0x9fc00
   186f5:	e8 16 ff ff ff       	call   18610 <mpScanForConfig>
   186fa:	83 c4 10             	add    esp,0x10
   186fd:	84 c0                	test   al,al
   186ff:	75 af                	jne    186b0 <mpFindTables+0x20>
   18701:	83 ec 08             	sub    esp,0x8
   18704:	68 ff ff 00 00       	push   0xffff
   18709:	68 00 00 0f 00       	push   0xf0000
   1870e:	e8 fd fe ff ff       	call   18610 <mpScanForConfig>
   18713:	83 c4 10             	add    esp,0x10
   18716:	84 c0                	test   al,al
   18718:	89 c3                	mov    ebx,eax
   1871a:	75 94                	jne    186b0 <mpFindTables+0x20>
   1871c:	f6 05 79 98 12 00 08 	test   BYTE PTR ds:0x129879,0x8
   18723:	74 b6                	je     186db <mpFindTables+0x4b>
   18725:	83 ec 08             	sub    esp,0x8
   18728:	68 28 4b 08 00       	push   0x84b28
   1872d:	68 00 08 00 00       	push   0x800
   18732:	e8 49 9f 00 00       	call   22680 <printd>
   18737:	83 c4 10             	add    esp,0x10
   1873a:	eb 9f                	jmp    186db <mpFindTables+0x4b>
   1873c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00018740 <printMPTable>:
printMPTable():
   18740:	55                   	push   ebp
   18741:	57                   	push   edi
   18742:	56                   	push   esi
   18743:	53                   	push   ebx
   18744:	be 03 00 00 00       	mov    esi,0x3
   18749:	83 ec 1c             	sub    esp,0x1c
   1874c:	8b 3d 80 98 12 00    	mov    edi,DWORD PTR ds:0x129880
   18752:	83 7f 1c ff          	cmp    DWORD PTR [edi+0x1c],0xffffffff
   18756:	0f 84 1f 01 00 00    	je     1887b <printMPTable+0x13b>
   1875c:	83 7f 14 04          	cmp    DWORD PTR [edi+0x14],0x4
   18760:	0f 87 15 01 00 00    	ja     1887b <printMPTable+0x13b>
   18766:	8b 47 14             	mov    eax,DWORD PTR [edi+0x14]
   18769:	ff 24 85 20 fd 03 00 	jmp    DWORD PTR [eax*4+0x3fd20]
   18770:	0f b6 47 06          	movzx  eax,BYTE PTR [edi+0x6]
   18774:	0f b7 4f 02          	movzx  ecx,WORD PTR [edi+0x2]
   18778:	ba 8d a3 05 00       	mov    edx,0x5a38d
   1877d:	0f b6 6f 07          	movzx  ebp,BYTE PTR [edi+0x7]
   18781:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   18785:	0f b6 47 05          	movzx  eax,BYTE PTR [edi+0x5]
   18789:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1878d:	0f b6 47 04          	movzx  eax,BYTE PTR [edi+0x4]
   18791:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   18795:	89 c8                	mov    eax,ecx
   18797:	66 83 e0 0c          	and    ax,0xc
   1879b:	74 1c                	je     187b9 <printMPTable+0x79>
   1879d:	66 83 f8 04          	cmp    ax,0x4
   187a1:	ba 39 39 06 00       	mov    edx,0x63939
   187a6:	74 11                	je     187b9 <printMPTable+0x79>
   187a8:	66 83 f8 08          	cmp    ax,0x8
   187ac:	ba fc fc 04 00       	mov    edx,0x4fcfc
   187b1:	b8 c7 95 04 00       	mov    eax,0x495c7
   187b6:	0f 45 d0             	cmovne edx,eax
   187b9:	66 83 e1 03          	and    cx,0x3
   187bd:	b8 a2 e0 05 00       	mov    eax,0x5e0a2
   187c2:	74 1c                	je     187e0 <printMPTable+0xa0>
   187c4:	66 83 f9 01          	cmp    cx,0x1
   187c8:	b8 3e 39 06 00       	mov    eax,0x6393e
   187cd:	74 11                	je     187e0 <printMPTable+0xa0>
   187cf:	66 83 f9 02          	cmp    cx,0x2
   187d3:	b8 41 39 06 00       	mov    eax,0x63941
   187d8:	b9 94 f5 05 00       	mov    ecx,0x5f594
   187dd:	0f 44 c1             	cmove  eax,ecx
   187e0:	0f b6 5f 01          	movzx  ebx,BYTE PTR [edi+0x1]
   187e4:	b9 54 93 04 00       	mov    ecx,0x49354
   187e9:	84 db                	test   bl,bl
   187eb:	74 24                	je     18811 <printMPTable+0xd1>
   187ed:	80 fb 01             	cmp    bl,0x1
   187f0:	b9 de 27 06 00       	mov    ecx,0x627de
   187f5:	74 1a                	je     18811 <printMPTable+0xd1>
   187f7:	80 fb 02             	cmp    bl,0x2
   187fa:	b9 ab 2a 06 00       	mov    ecx,0x62aab
   187ff:	74 10                	je     18811 <printMPTable+0xd1>
   18801:	80 fb 03             	cmp    bl,0x3
   18804:	b9 47 39 06 00       	mov    ecx,0x63947
   18809:	bb 4b 39 06 00       	mov    ebx,0x6394b
   1880e:	0f 44 cb             	cmove  ecx,ebx
   18811:	55                   	push   ebp
   18812:	ff 74 24 08          	push   DWORD PTR [esp+0x8]
   18816:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1881a:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1881e:	52                   	push   edx
   1881f:	50                   	push   eax
   18820:	51                   	push   ecx
   18821:	68 0c 4c 08 00       	push   0x84c0c
   18826:	e8 35 9e 00 00       	call   22660 <printk>
   1882b:	83 c4 20             	add    esp,0x20
   1882e:	eb 27                	jmp    18857 <printMPTable+0x117>
   18830:	f6 47 03 01          	test   BYTE PTR [edi+0x3],0x1
   18834:	ba 52 f1 05 00       	mov    edx,0x5f152
   18839:	b8 35 39 06 00       	mov    eax,0x63935
   1883e:	0f 44 c2             	cmove  eax,edx
   18841:	50                   	push   eax
   18842:	ff 77 04             	push   DWORD PTR [edi+0x4]
   18845:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   18849:	50                   	push   eax
   1884a:	68 e0 4b 08 00       	push   0x84be0
   1884f:	e8 0c 9e 00 00       	call   22660 <printk>
   18854:	83 c4 10             	add    esp,0x10
   18857:	e8 34 e5 ff ff       	call   16d90 <cursorGetMaxY>
   1885c:	89 c1                	mov    ecx,eax
   1885e:	89 f0                	mov    eax,esi
   18860:	83 c7 20             	add    edi,0x20
   18863:	99                   	cdq    
   18864:	f7 f9                	idiv   ecx
   18866:	85 d2                	test   edx,edx
   18868:	0f 84 62 01 00 00    	je     189d0 <printMPTable+0x290>
   1886e:	83 c6 01             	add    esi,0x1
   18871:	83 7f 1c ff          	cmp    DWORD PTR [edi+0x1c],0xffffffff
   18875:	0f 85 e1 fe ff ff    	jne    1875c <printMPTable+0x1c>
   1887b:	83 c4 1c             	add    esp,0x1c
   1887e:	5b                   	pop    ebx
   1887f:	5e                   	pop    esi
   18880:	5f                   	pop    edi
   18881:	5d                   	pop    ebp
   18882:	c3                   	ret    
   18883:	90                   	nop
   18884:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18888:	0f b6 07             	movzx  eax,BYTE PTR [edi]
   1888b:	83 ec 0c             	sub    esp,0xc
   1888e:	50                   	push   eax
   1888f:	0f b6 47 07          	movzx  eax,BYTE PTR [edi+0x7]
   18893:	50                   	push   eax
   18894:	0f b6 47 06          	movzx  eax,BYTE PTR [edi+0x6]
   18898:	50                   	push   eax
   18899:	0f b6 47 05          	movzx  eax,BYTE PTR [edi+0x5]
   1889d:	50                   	push   eax
   1889e:	0f b6 47 04          	movzx  eax,BYTE PTR [edi+0x4]
   188a2:	50                   	push   eax
   188a3:	0f b6 47 03          	movzx  eax,BYTE PTR [edi+0x3]
   188a7:	50                   	push   eax
   188a8:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
   188ac:	50                   	push   eax
   188ad:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   188b1:	50                   	push   eax
   188b2:	68 b4 4b 08 00       	push   0x84bb4
   188b7:	e8 a4 9d 00 00       	call   22660 <printk>
   188bc:	83 c4 30             	add    esp,0x30
   188bf:	eb 96                	jmp    18857 <printMPTable+0x117>
   188c1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   188c8:	0f b6 47 06          	movzx  eax,BYTE PTR [edi+0x6]
   188cc:	0f b7 4f 02          	movzx  ecx,WORD PTR [edi+0x2]
   188d0:	ba 8d a3 05 00       	mov    edx,0x5a38d
   188d5:	0f b6 6f 07          	movzx  ebp,BYTE PTR [edi+0x7]
   188d9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   188dd:	0f b6 47 05          	movzx  eax,BYTE PTR [edi+0x5]
   188e1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   188e5:	0f b6 47 04          	movzx  eax,BYTE PTR [edi+0x4]
   188e9:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   188ed:	89 c8                	mov    eax,ecx
   188ef:	66 83 e0 0c          	and    ax,0xc
   188f3:	74 1c                	je     18911 <printMPTable+0x1d1>
   188f5:	66 83 f8 04          	cmp    ax,0x4
   188f9:	ba 39 39 06 00       	mov    edx,0x63939
   188fe:	74 11                	je     18911 <printMPTable+0x1d1>
   18900:	66 83 f8 08          	cmp    ax,0x8
   18904:	ba fc fc 04 00       	mov    edx,0x4fcfc
   18909:	b8 c7 95 04 00       	mov    eax,0x495c7
   1890e:	0f 45 d0             	cmovne edx,eax
   18911:	66 83 e1 03          	and    cx,0x3
   18915:	b8 a2 e0 05 00       	mov    eax,0x5e0a2
   1891a:	74 1c                	je     18938 <printMPTable+0x1f8>
   1891c:	66 83 f9 01          	cmp    cx,0x1
   18920:	b8 3e 39 06 00       	mov    eax,0x6393e
   18925:	74 11                	je     18938 <printMPTable+0x1f8>
   18927:	66 83 f9 02          	cmp    cx,0x2
   1892b:	b8 41 39 06 00       	mov    eax,0x63941
   18930:	b9 94 f5 05 00       	mov    ecx,0x5f594
   18935:	0f 44 c1             	cmove  eax,ecx
   18938:	0f b6 5f 01          	movzx  ebx,BYTE PTR [edi+0x1]
   1893c:	b9 54 93 04 00       	mov    ecx,0x49354
   18941:	84 db                	test   bl,bl
   18943:	74 24                	je     18969 <printMPTable+0x229>
   18945:	80 fb 01             	cmp    bl,0x1
   18948:	b9 de 27 06 00       	mov    ecx,0x627de
   1894d:	74 1a                	je     18969 <printMPTable+0x229>
   1894f:	80 fb 02             	cmp    bl,0x2
   18952:	b9 ab 2a 06 00       	mov    ecx,0x62aab
   18957:	74 10                	je     18969 <printMPTable+0x229>
   18959:	80 fb 03             	cmp    bl,0x3
   1895c:	b9 47 39 06 00       	mov    ecx,0x63947
   18961:	bb 4b 39 06 00       	mov    ebx,0x6394b
   18966:	0f 44 cb             	cmove  ecx,ebx
   18969:	55                   	push   ebp
   1896a:	ff 74 24 08          	push   DWORD PTR [esp+0x8]
   1896e:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   18972:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   18976:	52                   	push   edx
   18977:	50                   	push   eax
   18978:	51                   	push   ecx
   18979:	68 44 4c 08 00       	push   0x84c44
   1897e:	e8 dd 9c 00 00       	call   22660 <printk>
   18983:	83 c4 20             	add    esp,0x20
   18986:	e9 cc fe ff ff       	jmp    18857 <printMPTable+0x117>
   1898b:	90                   	nop
   1898c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   18990:	0f b6 4f 03          	movzx  ecx,BYTE PTR [edi+0x3]
   18994:	b8 ea 7e 04 00       	mov    eax,0x47eea
   18999:	ba df 00 04 00       	mov    edx,0x400df
   1899e:	f6 c1 02             	test   cl,0x2
   189a1:	0f 45 d0             	cmovne edx,eax
   189a4:	83 e1 01             	and    ecx,0x1
   189a7:	b8 35 39 06 00       	mov    eax,0x63935
   189ac:	b9 52 f1 05 00       	mov    ecx,0x5f152
   189b1:	52                   	push   edx
   189b2:	0f 44 c1             	cmove  eax,ecx
   189b5:	50                   	push   eax
   189b6:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   189ba:	50                   	push   eax
   189bb:	68 94 4b 08 00       	push   0x84b94
   189c0:	e8 9b 9c 00 00       	call   22660 <printk>
   189c5:	83 c4 10             	add    esp,0x10
   189c8:	e9 8a fe ff ff       	jmp    18857 <printMPTable+0x117>
   189cd:	8d 76 00             	lea    esi,[esi+0x0]
   189d0:	83 ec 0c             	sub    esp,0xc
   189d3:	68 7c 4c 08 00       	push   0x84c7c
   189d8:	e8 63 e4 ff ff       	call   16e40 <puts>
   189dd:	e8 0e 8e ff ff       	call   117f0 <waitForKeyboardKey>
   189e2:	e8 d9 e3 ff ff       	call   16dc0 <cursorGetPosY>
   189e7:	5a                   	pop    edx
   189e8:	59                   	pop    ecx
   189e9:	50                   	push   eax
   189ea:	6a 00                	push   0x0
   189ec:	e8 ff e2 ff ff       	call   16cf0 <cursorMoveTo>
   189f1:	83 c4 10             	add    esp,0x10
   189f4:	e9 75 fe ff ff       	jmp    1886e <printMPTable+0x12e>
   189f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00018a00 <mpInit>:
mpInit():
   18a00:	55                   	push   ebp
   18a01:	57                   	push   edi
   18a02:	56                   	push   esi
   18a03:	53                   	push   ebx
   18a04:	83 ec 30             	sub    esp,0x30
   18a07:	6a 0f                	push   0xf
   18a09:	6a 00                	push   0x0
   18a0b:	8d 5c 24 1d          	lea    ebx,[esp+0x1d]
   18a0f:	53                   	push   ebx
   18a10:	e8 6b 83 00 00       	call   20d80 <memset>
   18a15:	e8 76 fc ff ff       	call   18690 <mpFindTables>
   18a1a:	a1 70 35 09 00       	mov    eax,ds:0x93570
   18a1f:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
   18a23:	89 14 24             	mov    DWORD PTR [esp],edx
   18a26:	0f b6 50 0f          	movzx  edx,BYTE PTR [eax+0xf]
   18a2a:	52                   	push   edx
   18a2b:	0f b6 50 0e          	movzx  edx,BYTE PTR [eax+0xe]
   18a2f:	52                   	push   edx
   18a30:	0f b6 50 0d          	movzx  edx,BYTE PTR [eax+0xd]
   18a34:	52                   	push   edx
   18a35:	0f b6 50 0c          	movzx  edx,BYTE PTR [eax+0xc]
   18a39:	52                   	push   edx
   18a3a:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
   18a3e:	52                   	push   edx
   18a3f:	0f be 50 03          	movsx  edx,BYTE PTR [eax+0x3]
   18a43:	52                   	push   edx
   18a44:	0f be 50 02          	movsx  edx,BYTE PTR [eax+0x2]
   18a48:	52                   	push   edx
   18a49:	0f be 50 01          	movsx  edx,BYTE PTR [eax+0x1]
   18a4d:	52                   	push   edx
   18a4e:	0f be 10             	movsx  edx,BYTE PTR [eax]
   18a51:	52                   	push   edx
   18a52:	50                   	push   eax
   18a53:	68 9c 4c 08 00       	push   0x84c9c
   18a58:	68 00 08 00 00       	push   0x800
   18a5d:	e8 1e 9c 00 00       	call   22680 <printd>
   18a62:	8b 15 70 35 09 00    	mov    edx,DWORD PTR ds:0x93570
   18a68:	83 c4 40             	add    esp,0x40
   18a6b:	0f b6 42 0b          	movzx  eax,BYTE PTR [edx+0xb]
   18a6f:	84 c0                	test   al,al
   18a71:	0f 85 99 06 00 00    	jne    19110 <mpInit+0x710>
   18a77:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
   18a7a:	83 ec 08             	sub    esp,0x8
   18a7d:	31 ff                	xor    edi,edi
   18a7f:	bd e0 ff ff ff       	mov    ebp,0xffffffe0
   18a84:	0f b7 50 04          	movzx  edx,WORD PTR [eax+0x4]
   18a88:	ff 70 1c             	push   DWORD PTR [eax+0x1c]
   18a8b:	a3 6c 35 09 00       	mov    ds:0x9356c,eax
   18a90:	ff 70 24             	push   DWORD PTR [eax+0x24]
   18a93:	52                   	push   edx
   18a94:	0f be 50 03          	movsx  edx,BYTE PTR [eax+0x3]
   18a98:	52                   	push   edx
   18a99:	0f be 50 02          	movsx  edx,BYTE PTR [eax+0x2]
   18a9d:	52                   	push   edx
   18a9e:	0f be 50 01          	movsx  edx,BYTE PTR [eax+0x1]
   18aa2:	52                   	push   edx
   18aa3:	0f be 10             	movsx  edx,BYTE PTR [eax]
   18aa6:	52                   	push   edx
   18aa7:	50                   	push   eax
   18aa8:	68 28 4d 08 00       	push   0x84d28
   18aad:	68 00 08 00 00       	push   0x800
   18ab2:	e8 c9 9b 00 00       	call   22680 <printd>
   18ab7:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18abc:	83 c4 2c             	add    esp,0x2c
   18abf:	6a 04                	push   0x4
   18ac1:	83 c0 08             	add    eax,0x8
   18ac4:	50                   	push   eax
   18ac5:	53                   	push   ebx
   18ac6:	e8 95 8b 00 00       	call   21660 <memcpy>
   18acb:	83 c4 0c             	add    esp,0xc
   18ace:	53                   	push   ebx
   18acf:	68 4f 39 06 00       	push   0x6394f
   18ad4:	68 00 08 00 00       	push   0x800
   18ad9:	e8 a2 9b 00 00       	call   22680 <printd>
   18ade:	83 c4 0c             	add    esp,0xc
   18ae1:	6a 0f                	push   0xf
   18ae3:	6a 00                	push   0x0
   18ae5:	53                   	push   ebx
   18ae6:	e8 95 82 00 00       	call   20d80 <memset>
   18aeb:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18af0:	83 c4 0c             	add    esp,0xc
   18af3:	6a 0c                	push   0xc
   18af5:	83 c0 10             	add    eax,0x10
   18af8:	50                   	push   eax
   18af9:	53                   	push   ebx
   18afa:	e8 61 8b 00 00       	call   21660 <memcpy>
   18aff:	83 c4 0c             	add    esp,0xc
   18b02:	53                   	push   ebx
   18b03:	68 5d 39 06 00       	push   0x6395d
   18b08:	68 00 08 00 00       	push   0x800
   18b0d:	e8 6e 9b 00 00       	call   22680 <printd>
   18b12:	a1 70 35 09 00       	mov    eax,ds:0x93570
   18b17:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
   18b1a:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18b1f:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   18b23:	83 c3 2c             	add    ebx,0x2c
   18b26:	53                   	push   ebx
   18b27:	50                   	push   eax
   18b28:	68 78 4d 08 00       	push   0x84d78
   18b2d:	68 00 08 00 00       	push   0x800
   18b32:	e8 49 9b 00 00       	call   22680 <printd>
   18b37:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18b3c:	83 c4 20             	add    esp,0x20
   18b3f:	66 83 78 22 00       	cmp    WORD PTR [eax+0x22],0x0
   18b44:	0f 84 12 02 00 00    	je     18d5c <mpInit+0x35c>
   18b4a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   18b50:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   18b53:	3c 04                	cmp    al,0x4
   18b55:	0f 87 a5 04 00 00    	ja     19000 <mpInit+0x600>
   18b5b:	ff 24 85 34 fd 03 00 	jmp    DWORD PTR [eax*4+0x3fd34]
   18b62:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   18b68:	83 ec 08             	sub    esp,0x8
   18b6b:	89 fe                	mov    esi,edi
   18b6d:	68 a4 39 06 00       	push   0x639a4
   18b72:	68 00 08 00 00       	push   0x800
   18b77:	c1 e6 05             	shl    esi,0x5
   18b7a:	e8 01 9b 00 00       	call   22680 <printd>
   18b7f:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18b84:	83 c4 0c             	add    esp,0xc
   18b87:	6a 08                	push   0x8
   18b89:	53                   	push   ebx
   18b8a:	01 f0                	add    eax,esi
   18b8c:	50                   	push   eax
   18b8d:	e8 ce 8a 00 00       	call   21660 <memcpy>
   18b92:	83 c4 10             	add    esp,0x10
   18b95:	85 ff                	test   edi,edi
   18b97:	0f 85 e3 04 00 00    	jne    19080 <mpInit+0x680>
   18b9d:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18ba2:	01 f0                	add    eax,esi
   18ba4:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [eax+0x18],0xffffffff
   18bab:	c7 40 14 03 00 00 00 	mov    DWORD PTR [eax+0x14],0x3
   18bb2:	8d 43 08             	lea    eax,[ebx+0x8]
   18bb5:	0f b6 73 07          	movzx  esi,BYTE PTR [ebx+0x7]
   18bb9:	b9 8d a3 05 00       	mov    ecx,0x5a38d
   18bbe:	89 04 24             	mov    DWORD PTR [esp],eax
   18bc1:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
   18bc5:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   18bc9:	0f b6 43 05          	movzx  eax,BYTE PTR [ebx+0x5]
   18bcd:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   18bd1:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
   18bd5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   18bd9:	0f b7 43 02          	movzx  eax,WORD PTR [ebx+0x2]
   18bdd:	89 c2                	mov    edx,eax
   18bdf:	66 83 e2 0c          	and    dx,0xc
   18be3:	74 1c                	je     18c01 <mpInit+0x201>
   18be5:	66 83 fa 04          	cmp    dx,0x4
   18be9:	b9 39 39 06 00       	mov    ecx,0x63939
   18bee:	74 11                	je     18c01 <mpInit+0x201>
   18bf0:	66 83 fa 08          	cmp    dx,0x8
   18bf4:	b9 fc fc 04 00       	mov    ecx,0x4fcfc
   18bf9:	ba c7 95 04 00       	mov    edx,0x495c7
   18bfe:	0f 45 ca             	cmovne ecx,edx
   18c01:	66 83 e0 03          	and    ax,0x3
   18c05:	ba a2 e0 05 00       	mov    edx,0x5e0a2
   18c0a:	74 1c                	je     18c28 <mpInit+0x228>
   18c0c:	66 83 f8 01          	cmp    ax,0x1
   18c10:	ba 3e 39 06 00       	mov    edx,0x6393e
   18c15:	74 11                	je     18c28 <mpInit+0x228>
   18c17:	66 83 f8 02          	cmp    ax,0x2
   18c1b:	ba 41 39 06 00       	mov    edx,0x63941
   18c20:	b8 94 f5 05 00       	mov    eax,0x5f594
   18c25:	0f 44 d0             	cmove  edx,eax
   18c28:	0f b6 5b 01          	movzx  ebx,BYTE PTR [ebx+0x1]
   18c2c:	b8 54 93 04 00       	mov    eax,0x49354
   18c31:	84 db                	test   bl,bl
   18c33:	74 24                	je     18c59 <mpInit+0x259>
   18c35:	80 fb 01             	cmp    bl,0x1
   18c38:	b8 de 27 06 00       	mov    eax,0x627de
   18c3d:	74 1a                	je     18c59 <mpInit+0x259>
   18c3f:	80 fb 02             	cmp    bl,0x2
   18c42:	b8 ab 2a 06 00       	mov    eax,0x62aab
   18c47:	74 10                	je     18c59 <mpInit+0x259>
   18c49:	80 fb 03             	cmp    bl,0x3
   18c4c:	b8 4b 39 06 00       	mov    eax,0x6394b
   18c51:	bb 47 39 06 00       	mov    ebx,0x63947
   18c56:	0f 45 c3             	cmovne eax,ebx
   18c59:	83 ec 0c             	sub    esp,0xc
   18c5c:	56                   	push   esi
   18c5d:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   18c61:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   18c65:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   18c69:	51                   	push   ecx
   18c6a:	52                   	push   edx
   18c6b:	50                   	push   eax
   18c6c:	68 14 4e 08 00       	push   0x84e14
   18c71:	68 00 08 00 00       	push   0x800
   18c76:	e8 05 9a 00 00       	call   22680 <printd>
   18c7b:	83 c4 30             	add    esp,0x30
   18c7e:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
   18c81:	e9 9a 00 00 00       	jmp    18d20 <mpInit+0x320>
   18c86:	8d 76 00             	lea    esi,[esi+0x0]
   18c89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   18c90:	83 ec 08             	sub    esp,0x8
   18c93:	89 fe                	mov    esi,edi
   18c95:	68 9c 39 06 00       	push   0x6399c
   18c9a:	68 00 08 00 00       	push   0x800
   18c9f:	c1 e6 05             	shl    esi,0x5
   18ca2:	e8 d9 99 00 00       	call   22680 <printd>
   18ca7:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18cac:	83 c4 0c             	add    esp,0xc
   18caf:	6a 08                	push   0x8
   18cb1:	53                   	push   ebx
   18cb2:	01 f0                	add    eax,esi
   18cb4:	50                   	push   eax
   18cb5:	e8 a6 89 00 00       	call   21660 <memcpy>
   18cba:	83 c4 10             	add    esp,0x10
   18cbd:	85 ff                	test   edi,edi
   18cbf:	0f 85 5b 03 00 00    	jne    19020 <mpInit+0x620>
   18cc5:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18cca:	01 f0                	add    eax,esi
   18ccc:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [eax+0x18],0xffffffff
   18cd3:	c7 40 14 02 00 00 00 	mov    DWORD PTR [eax+0x14],0x2
   18cda:	f6 43 03 01          	test   BYTE PTR [ebx+0x3],0x1
   18cde:	ba 35 39 06 00       	mov    edx,0x63935
   18ce3:	b8 52 f1 05 00       	mov    eax,0x5f152
   18ce8:	8d 73 08             	lea    esi,[ebx+0x8]
   18ceb:	0f 45 c2             	cmovne eax,edx
   18cee:	83 ec 0c             	sub    esp,0xc
   18cf1:	50                   	push   eax
   18cf2:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   18cf5:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   18cf9:	50                   	push   eax
   18cfa:	68 ec 4d 08 00       	push   0x84dec
   18cff:	68 00 08 00 00       	push   0x800
   18d04:	e8 77 99 00 00       	call   22680 <printd>
   18d09:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
   18d0c:	83 c4 20             	add    esp,0x20
   18d0f:	89 f3                	mov    ebx,esi
   18d11:	a3 7c 98 12 00       	mov    ds:0x12987c,eax
   18d16:	8d 76 00             	lea    esi,[esi+0x0]
   18d19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   18d20:	85 ff                	test   edi,edi
   18d22:	74 21                	je     18d45 <mpInit+0x345>
   18d24:	89 f8                	mov    eax,edi
   18d26:	ba d3 4d 62 10       	mov    edx,0x10624dd3
   18d2b:	f7 ea                	imul   edx
   18d2d:	89 f8                	mov    eax,edi
   18d2f:	c1 f8 1f             	sar    eax,0x1f
   18d32:	c1 fa 04             	sar    edx,0x4
   18d35:	29 c2                	sub    edx,eax
   18d37:	69 d2 fa 00 00 00    	imul   edx,edx,0xfa
   18d3d:	39 d7                	cmp    edi,edx
   18d3f:	0f 84 ab 02 00 00    	je     18ff0 <mpInit+0x5f0>
   18d45:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18d4a:	83 c7 01             	add    edi,0x1
   18d4d:	83 c5 20             	add    ebp,0x20
   18d50:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   18d54:	39 f8                	cmp    eax,edi
   18d56:	0f 8f f4 fd ff ff    	jg     18b50 <mpInit+0x150>
   18d5c:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18d61:	83 ec 08             	sub    esp,0x8
   18d64:	8d 90 c0 00 00 00    	lea    edx,[eax+0xc0]
   18d6a:	52                   	push   edx
   18d6b:	8d 90 80 00 00 00    	lea    edx,[eax+0x80]
   18d71:	ff b0 bc 00 00 00    	push   DWORD PTR [eax+0xbc]
   18d77:	52                   	push   edx
   18d78:	ff b0 b8 00 00 00    	push   DWORD PTR [eax+0xb8]
   18d7e:	68 a0 4d 08 00       	push   0x84da0
   18d83:	68 00 08 00 00       	push   0x800
   18d88:	e8 f3 98 00 00       	call   22680 <printd>
   18d8d:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   18d92:	83 c4 20             	add    esp,0x20
   18d95:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   18d99:	83 c4 2c             	add    esp,0x2c
   18d9c:	5b                   	pop    ebx
   18d9d:	5e                   	pop    esi
   18d9e:	5f                   	pop    edi
   18d9f:	5d                   	pop    ebp
   18da0:	c3                   	ret    
   18da1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   18da8:	83 ec 08             	sub    esp,0x8
   18dab:	89 fe                	mov    esi,edi
   18dad:	68 71 39 06 00       	push   0x63971
   18db2:	68 00 08 00 00       	push   0x800
   18db7:	c1 e6 05             	shl    esi,0x5
   18dba:	e8 c1 98 00 00       	call   22680 <printd>
   18dbf:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18dc4:	83 c4 0c             	add    esp,0xc
   18dc7:	6a 14                	push   0x14
   18dc9:	53                   	push   ebx
   18dca:	01 f0                	add    eax,esi
   18dcc:	50                   	push   eax
   18dcd:	e8 8e 88 00 00       	call   21660 <memcpy>
   18dd2:	83 c4 10             	add    esp,0x10
   18dd5:	85 ff                	test   edi,edi
   18dd7:	0f 85 d3 02 00 00    	jne    190b0 <mpInit+0x6b0>
   18ddd:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18de2:	01 f0                	add    eax,esi
   18de4:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [eax+0x18],0xffffffff
   18deb:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
   18df2:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
   18df6:	b9 df 00 04 00       	mov    ecx,0x400df
   18dfb:	ba ea 7e 04 00       	mov    edx,0x47eea
   18e00:	a8 02                	test   al,0x2
   18e02:	0f 44 d1             	cmove  edx,ecx
   18e05:	a8 01                	test   al,0x1
   18e07:	b9 35 39 06 00       	mov    ecx,0x63935
   18e0c:	b8 52 f1 05 00       	mov    eax,0x5f152
   18e11:	0f 45 c1             	cmovne eax,ecx
   18e14:	83 ec 0c             	sub    esp,0xc
   18e17:	83 c3 14             	add    ebx,0x14
   18e1a:	52                   	push   edx
   18e1b:	50                   	push   eax
   18e1c:	0f b6 43 ed          	movzx  eax,BYTE PTR [ebx-0x13]
   18e20:	50                   	push   eax
   18e21:	68 79 39 06 00       	push   0x63979
   18e26:	68 00 08 00 00       	push   0x800
   18e2b:	e8 50 98 00 00       	call   22680 <printd>
   18e30:	83 c4 20             	add    esp,0x20
   18e33:	e9 e8 fe ff ff       	jmp    18d20 <mpInit+0x320>
   18e38:	90                   	nop
   18e39:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   18e40:	83 ec 08             	sub    esp,0x8
   18e43:	89 fe                	mov    esi,edi
   18e45:	68 ac 39 06 00       	push   0x639ac
   18e4a:	68 00 08 00 00       	push   0x800
   18e4f:	c1 e6 05             	shl    esi,0x5
   18e52:	e8 29 98 00 00       	call   22680 <printd>
   18e57:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18e5c:	83 c4 0c             	add    esp,0xc
   18e5f:	6a 08                	push   0x8
   18e61:	53                   	push   ebx
   18e62:	01 f0                	add    eax,esi
   18e64:	50                   	push   eax
   18e65:	e8 f6 87 00 00       	call   21660 <memcpy>
   18e6a:	83 c4 10             	add    esp,0x10
   18e6d:	85 ff                	test   edi,edi
   18e6f:	0f 85 db 01 00 00    	jne    19050 <mpInit+0x650>
   18e75:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18e7a:	01 f0                	add    eax,esi
   18e7c:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [eax+0x18],0xffffffff
   18e83:	c7 40 14 04 00 00 00 	mov    DWORD PTR [eax+0x14],0x4
   18e8a:	8d 43 08             	lea    eax,[ebx+0x8]
   18e8d:	0f b6 73 07          	movzx  esi,BYTE PTR [ebx+0x7]
   18e91:	b9 8d a3 05 00       	mov    ecx,0x5a38d
   18e96:	89 04 24             	mov    DWORD PTR [esp],eax
   18e99:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
   18e9d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   18ea1:	0f b6 43 05          	movzx  eax,BYTE PTR [ebx+0x5]
   18ea5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   18ea9:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
   18ead:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   18eb1:	0f b7 43 02          	movzx  eax,WORD PTR [ebx+0x2]
   18eb5:	89 c2                	mov    edx,eax
   18eb7:	66 83 e2 0c          	and    dx,0xc
   18ebb:	74 1c                	je     18ed9 <mpInit+0x4d9>
   18ebd:	66 83 fa 04          	cmp    dx,0x4
   18ec1:	b9 39 39 06 00       	mov    ecx,0x63939
   18ec6:	74 11                	je     18ed9 <mpInit+0x4d9>
   18ec8:	66 83 fa 08          	cmp    dx,0x8
   18ecc:	b9 fc fc 04 00       	mov    ecx,0x4fcfc
   18ed1:	ba c7 95 04 00       	mov    edx,0x495c7
   18ed6:	0f 45 ca             	cmovne ecx,edx
   18ed9:	66 83 e0 03          	and    ax,0x3
   18edd:	ba a2 e0 05 00       	mov    edx,0x5e0a2
   18ee2:	74 1c                	je     18f00 <mpInit+0x500>
   18ee4:	66 83 f8 01          	cmp    ax,0x1
   18ee8:	ba 3e 39 06 00       	mov    edx,0x6393e
   18eed:	74 11                	je     18f00 <mpInit+0x500>
   18eef:	66 83 f8 02          	cmp    ax,0x2
   18ef3:	ba 41 39 06 00       	mov    edx,0x63941
   18ef8:	b8 94 f5 05 00       	mov    eax,0x5f594
   18efd:	0f 44 d0             	cmove  edx,eax
   18f00:	0f b6 5b 01          	movzx  ebx,BYTE PTR [ebx+0x1]
   18f04:	b8 54 93 04 00       	mov    eax,0x49354
   18f09:	84 db                	test   bl,bl
   18f0b:	74 24                	je     18f31 <mpInit+0x531>
   18f0d:	80 fb 01             	cmp    bl,0x1
   18f10:	b8 de 27 06 00       	mov    eax,0x627de
   18f15:	74 1a                	je     18f31 <mpInit+0x531>
   18f17:	80 fb 02             	cmp    bl,0x2
   18f1a:	b8 ab 2a 06 00       	mov    eax,0x62aab
   18f1f:	74 10                	je     18f31 <mpInit+0x531>
   18f21:	80 fb 03             	cmp    bl,0x3
   18f24:	b8 4b 39 06 00       	mov    eax,0x6394b
   18f29:	bb 47 39 06 00       	mov    ebx,0x63947
   18f2e:	0f 45 c3             	cmovne eax,ebx
   18f31:	83 ec 0c             	sub    esp,0xc
   18f34:	56                   	push   esi
   18f35:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   18f39:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   18f3d:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   18f41:	51                   	push   ecx
   18f42:	52                   	push   edx
   18f43:	50                   	push   eax
   18f44:	68 54 4e 08 00       	push   0x84e54
   18f49:	68 00 08 00 00       	push   0x800
   18f4e:	e8 2d 97 00 00       	call   22680 <printd>
   18f53:	83 c4 30             	add    esp,0x30
   18f56:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
   18f59:	e9 c2 fd ff ff       	jmp    18d20 <mpInit+0x320>
   18f5e:	66 90                	xchg   ax,ax
   18f60:	83 ec 08             	sub    esp,0x8
   18f63:	89 fe                	mov    esi,edi
   18f65:	68 94 39 06 00       	push   0x63994
   18f6a:	68 00 08 00 00       	push   0x800
   18f6f:	c1 e6 05             	shl    esi,0x5
   18f72:	e8 09 97 00 00       	call   22680 <printd>
   18f77:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18f7c:	83 c4 0c             	add    esp,0xc
   18f7f:	6a 08                	push   0x8
   18f81:	53                   	push   ebx
   18f82:	01 f0                	add    eax,esi
   18f84:	50                   	push   eax
   18f85:	e8 d6 86 00 00       	call   21660 <memcpy>
   18f8a:	83 c4 10             	add    esp,0x10
   18f8d:	85 ff                	test   edi,edi
   18f8f:	0f 85 4b 01 00 00    	jne    190e0 <mpInit+0x6e0>
   18f95:	a1 80 98 12 00       	mov    eax,ds:0x129880
   18f9a:	01 f0                	add    eax,esi
   18f9c:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [eax+0x18],0xffffffff
   18fa3:	c7 40 14 01 00 00 00 	mov    DWORD PTR [eax+0x14],0x1
   18faa:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   18fad:	83 ec 08             	sub    esp,0x8
   18fb0:	8d 73 08             	lea    esi,[ebx+0x8]
   18fb3:	50                   	push   eax
   18fb4:	0f b6 43 07          	movzx  eax,BYTE PTR [ebx+0x7]
   18fb8:	50                   	push   eax
   18fb9:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
   18fbd:	50                   	push   eax
   18fbe:	0f b6 43 05          	movzx  eax,BYTE PTR [ebx+0x5]
   18fc2:	50                   	push   eax
   18fc3:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
   18fc7:	50                   	push   eax
   18fc8:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
   18fcc:	50                   	push   eax
   18fcd:	0f b6 43 02          	movzx  eax,BYTE PTR [ebx+0x2]
   18fd1:	50                   	push   eax
   18fd2:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   18fd6:	89 f3                	mov    ebx,esi
   18fd8:	50                   	push   eax
   18fd9:	68 c4 4d 08 00       	push   0x84dc4
   18fde:	68 00 08 00 00       	push   0x800
   18fe3:	e8 98 96 00 00       	call   22680 <printd>
   18fe8:	83 c4 30             	add    esp,0x30
   18feb:	e9 30 fd ff ff       	jmp    18d20 <mpInit+0x320>
   18ff0:	e8 fb 87 ff ff       	call   117f0 <waitForKeyboardKey>
   18ff5:	e9 4b fd ff ff       	jmp    18d45 <mpInit+0x345>
   18ffa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19000:	83 ec 04             	sub    esp,0x4
   19003:	83 c3 08             	add    ebx,0x8
   19006:	50                   	push   eax
   19007:	68 b4 39 06 00       	push   0x639b4
   1900c:	68 00 08 00 00       	push   0x800
   19011:	e8 6a 96 00 00       	call   22680 <printd>
   19016:	83 c4 10             	add    esp,0x10
   19019:	e9 02 fd ff ff       	jmp    18d20 <mpInit+0x320>
   1901e:	66 90                	xchg   ax,ax
   19020:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   19025:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   19029:	83 e8 01             	sub    eax,0x1
   1902c:	39 f8                	cmp    eax,edi
   1902e:	0f 84 fc 00 00 00    	je     19130 <mpInit+0x730>
   19034:	8b 15 80 98 12 00    	mov    edx,DWORD PTR ds:0x129880
   1903a:	8d 04 32             	lea    eax,[edx+esi*1]
   1903d:	01 ea                	add    edx,ebp
   1903f:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
   19042:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   19045:	e9 89 fc ff ff       	jmp    18cd3 <mpInit+0x2d3>
   1904a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19050:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   19055:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   19059:	83 e8 01             	sub    eax,0x1
   1905c:	39 f8                	cmp    eax,edi
   1905e:	0f 84 14 01 00 00    	je     19178 <mpInit+0x778>
   19064:	8b 15 80 98 12 00    	mov    edx,DWORD PTR ds:0x129880
   1906a:	8d 04 32             	lea    eax,[edx+esi*1]
   1906d:	01 ea                	add    edx,ebp
   1906f:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
   19072:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   19075:	e9 09 fe ff ff       	jmp    18e83 <mpInit+0x483>
   1907a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19080:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   19085:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   19089:	83 e8 01             	sub    eax,0x1
   1908c:	39 f8                	cmp    eax,edi
   1908e:	0f 84 fc 00 00 00    	je     19190 <mpInit+0x790>
   19094:	8b 15 80 98 12 00    	mov    edx,DWORD PTR ds:0x129880
   1909a:	8d 04 32             	lea    eax,[edx+esi*1]
   1909d:	01 ea                	add    edx,ebp
   1909f:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
   190a2:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   190a5:	e9 01 fb ff ff       	jmp    18bab <mpInit+0x1ab>
   190aa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   190b0:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   190b5:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   190b9:	83 e8 01             	sub    eax,0x1
   190bc:	39 f8                	cmp    eax,edi
   190be:	0f 84 84 00 00 00    	je     19148 <mpInit+0x748>
   190c4:	8b 15 80 98 12 00    	mov    edx,DWORD PTR ds:0x129880
   190ca:	8d 04 32             	lea    eax,[edx+esi*1]
   190cd:	01 ea                	add    edx,ebp
   190cf:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
   190d2:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   190d5:	e9 11 fd ff ff       	jmp    18deb <mpInit+0x3eb>
   190da:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   190e0:	a1 6c 35 09 00       	mov    eax,ds:0x9356c
   190e5:	0f b7 40 22          	movzx  eax,WORD PTR [eax+0x22]
   190e9:	83 e8 01             	sub    eax,0x1
   190ec:	39 f8                	cmp    eax,edi
   190ee:	74 70                	je     19160 <mpInit+0x760>
   190f0:	8b 15 80 98 12 00    	mov    edx,DWORD PTR ds:0x129880
   190f6:	8d 04 32             	lea    eax,[edx+esi*1]
   190f9:	01 ea                	add    edx,ebp
   190fb:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
   190fe:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   19101:	e9 9d fe ff ff       	jmp    18fa3 <mpInit+0x5a3>
   19106:	8d 76 00             	lea    esi,[esi+0x0]
   19109:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19110:	83 ec 08             	sub    esp,0x8
   19113:	50                   	push   eax
   19114:	68 e8 4c 08 00       	push   0x84ce8
   19119:	e8 42 95 00 00       	call   22660 <printk>
   1911e:	83 c4 10             	add    esp,0x10
   19121:	31 c0                	xor    eax,eax
   19123:	83 c4 2c             	add    esp,0x2c
   19126:	5b                   	pop    ebx
   19127:	5e                   	pop    esi
   19128:	5f                   	pop    edi
   19129:	5d                   	pop    ebp
   1912a:	c3                   	ret    
   1912b:	90                   	nop
   1912c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19130:	a1 80 98 12 00       	mov    eax,ds:0x129880
   19135:	01 f0                	add    eax,esi
   19137:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [eax+0x1c],0xffffffff
   1913e:	e9 90 fb ff ff       	jmp    18cd3 <mpInit+0x2d3>
   19143:	90                   	nop
   19144:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19148:	a1 80 98 12 00       	mov    eax,ds:0x129880
   1914d:	01 f0                	add    eax,esi
   1914f:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [eax+0x1c],0xffffffff
   19156:	e9 90 fc ff ff       	jmp    18deb <mpInit+0x3eb>
   1915b:	90                   	nop
   1915c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19160:	a1 80 98 12 00       	mov    eax,ds:0x129880
   19165:	01 f0                	add    eax,esi
   19167:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [eax+0x1c],0xffffffff
   1916e:	e9 30 fe ff ff       	jmp    18fa3 <mpInit+0x5a3>
   19173:	90                   	nop
   19174:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19178:	a1 80 98 12 00       	mov    eax,ds:0x129880
   1917d:	01 f0                	add    eax,esi
   1917f:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [eax+0x1c],0xffffffff
   19186:	e9 f8 fc ff ff       	jmp    18e83 <mpInit+0x483>
   1918b:	90                   	nop
   1918c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19190:	a1 80 98 12 00       	mov    eax,ds:0x129880
   19195:	01 f0                	add    eax,esi
   19197:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [eax+0x1c],0xffffffff
   1919e:	e9 08 fa ff ff       	jmp    18bab <mpInit+0x1ab>
   191a3:	66 90                	xchg   ax,ax
   191a5:	66 90                	xchg   ax,ax
   191a7:	66 90                	xchg   ax,ax
   191a9:	66 90                	xchg   ax,ax
   191ab:	66 90                	xchg   ax,ax
   191ad:	66 90                	xchg   ax,ax
   191af:	90                   	nop

000191b0 <activateDebugger>:
activateDebugger():
   191b0:	53                   	push   ebx
   191b1:	83 ec 08             	sub    esp,0x8
   191b4:	80 35 cd 75 09 00 01 	xor    BYTE PTR ds:0x975cd,0x1
   191bb:	0f 84 87 00 00 00    	je     19248 <activateDebugger+0x98>
   191c1:	0f b6 05 27 00 12 00 	movzx  eax,BYTE PTR ds:0x120027
   191c8:	c6 05 27 00 12 00 14 	mov    BYTE PTR ds:0x120027,0x14
   191cf:	bb 15 00 00 00       	mov    ebx,0x15
   191d4:	a2 cc 75 09 00       	mov    ds:0x975cc,al
   191d9:	e8 52 d7 ff ff       	call   16930 <cursorSavePosition>
   191de:	83 ec 08             	sub    esp,0x8
   191e1:	6a 00                	push   0x0
   191e3:	6a 46                	push   0x46
   191e5:	e8 06 db ff ff       	call   16cf0 <cursorMoveTo>
   191ea:	c7 04 24 7a 42 04 00 	mov    DWORD PTR [esp],0x4427a
   191f1:	e8 6a 94 00 00       	call   22660 <printk>
   191f6:	0f b6 05 cc 75 09 00 	movzx  eax,BYTE PTR ds:0x975cc
   191fd:	83 c4 10             	add    esp,0x10
   19200:	83 f8 15             	cmp    eax,0x15
   19203:	7e 1d                	jle    19222 <activateDebugger+0x72>
   19205:	8d 76 00             	lea    esi,[esi+0x0]
   19208:	83 ec 0c             	sub    esp,0xc
   1920b:	53                   	push   ebx
   1920c:	83 c3 01             	add    ebx,0x1
   1920f:	e8 4c d8 ff ff       	call   16a60 <terminal_clear_line>
   19214:	0f b6 05 cc 75 09 00 	movzx  eax,BYTE PTR ds:0x975cc
   1921b:	83 c4 10             	add    esp,0x10
   1921e:	39 d8                	cmp    eax,ebx
   19220:	7f e6                	jg     19208 <activateDebugger+0x58>
   19222:	83 ec 08             	sub    esp,0x8
   19225:	6a 15                	push   0x15
   19227:	6a 00                	push   0x0
   19229:	e8 c2 da ff ff       	call   16cf0 <cursorMoveTo>
   1922e:	c7 04 24 94 4e 08 00 	mov    DWORD PTR [esp],0x84e94
   19235:	e8 26 94 00 00       	call   22660 <printk>
   1923a:	83 c4 18             	add    esp,0x18
   1923d:	5b                   	pop    ebx
   1923e:	e9 1d d7 ff ff       	jmp    16960 <cursorRestorePosition>
   19243:	90                   	nop
   19244:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19248:	0f b6 05 cc 75 09 00 	movzx  eax,BYTE PTR ds:0x975cc
   1924f:	a2 27 00 12 00       	mov    ds:0x120027,al
   19254:	e8 d7 d6 ff ff       	call   16930 <cursorSavePosition>
   19259:	83 ec 08             	sub    esp,0x8
   1925c:	6a 00                	push   0x0
   1925e:	6a 46                	push   0x46
   19260:	e8 8b da ff ff       	call   16cf0 <cursorMoveTo>
   19265:	c7 04 24 53 b9 05 00 	mov    DWORD PTR [esp],0x5b953
   1926c:	e8 ef 93 00 00       	call   22660 <printk>
   19271:	83 c4 18             	add    esp,0x18
   19274:	5b                   	pop    ebx
   19275:	e9 e6 d6 ff ff       	jmp    16960 <cursorRestorePosition>
   1927a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00019280 <debugStep>:
debugStep():
   19280:	83 ec 0c             	sub    esp,0xc
   19283:	e8 a8 d6 ff ff       	call   16930 <cursorSavePosition>
   19288:	83 ec 08             	sub    esp,0x8
   1928b:	6a 16                	push   0x16
   1928d:	6a 00                	push   0x0
   1928f:	e8 5c da ff ff       	call   16cf0 <cursorMoveTo>
   19294:	e8 27 7e 00 00       	call   210c0 <printDebugRegs>
   19299:	e8 c2 d6 ff ff       	call   16960 <cursorRestorePosition>
   1929e:	83 c4 1c             	add    esp,0x1c
   192a1:	e9 4a 85 ff ff       	jmp    117f0 <waitForKeyboardKey>
   192a6:	66 90                	xchg   ax,ax
   192a8:	66 90                	xchg   ax,ax
   192aa:	66 90                	xchg   ax,ax
   192ac:	66 90                	xchg   ax,ax
   192ae:	66 90                	xchg   ax,ax

000192b0 <fatfs_lba_of_cluster.part.0>:
fatfs_lba_of_cluster.part.0():
   192b0:	53                   	push   ebx
   192b1:	0f b7 58 28          	movzx  ebx,WORD PTR [eax+0x28]
   192b5:	83 ea 02             	sub    edx,0x2
   192b8:	0f b6 08             	movzx  ecx,BYTE PTR [eax]
   192bb:	c1 fb 04             	sar    ebx,0x4
   192be:	03 58 04             	add    ebx,DWORD PTR [eax+0x4]
   192c1:	0f af d1             	imul   edx,ecx
   192c4:	8d 04 13             	lea    eax,[ebx+edx*1]
   192c7:	5b                   	pop    ebx
   192c8:	c3                   	ret    
   192c9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000192d0 <fatfs_init>:
fatfs_init():
   192d0:	55                   	push   ebp
   192d1:	57                   	push   edi
   192d2:	56                   	push   esi
   192d3:	53                   	push   ebx
   192d4:	83 ec 28             	sub    esp,0x28
   192d7:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
   192db:	c7 83 44 02 00 00 ff 	mov    DWORD PTR [ebx+0x244],0xffffffff
   192e2:	ff ff ff 
   192e5:	c7 83 48 02 00 00 00 	mov    DWORD PTR [ebx+0x248],0x0
   192ec:	00 00 00 
   192ef:	c7 43 24 00 00 00 00 	mov    DWORD PTR [ebx+0x24],0x0
   192f6:	53                   	push   ebx
   192f7:	e8 e4 41 00 00       	call   1d4e0 <fatfs_fat_init>
   192fc:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   192ff:	83 c4 10             	add    esp,0x10
   19302:	85 c0                	test   eax,eax
   19304:	0f 84 e6 02 00 00    	je     195f0 <fatfs_init+0x320>
   1930a:	8d 73 44             	lea    esi,[ebx+0x44]
   1930d:	83 ec 04             	sub    esp,0x4
   19310:	6a 01                	push   0x1
   19312:	56                   	push   esi
   19313:	6a 00                	push   0x0
   19315:	ff d0                	call   eax
   19317:	83 c4 10             	add    esp,0x10
   1931a:	85 c0                	test   eax,eax
   1931c:	0f 84 ce 02 00 00    	je     195f0 <fatfs_init+0x320>
   19322:	66 81 bb 42 02 00 00 	cmp    WORD PTR [ebx+0x242],0xaa55
   19329:	55 aa 
   1932b:	0f 85 af 02 00 00    	jne    195e0 <fatfs_init+0x310>
   19331:	0f b6 83 43 02 00 00 	movzx  eax,BYTE PTR [ebx+0x243]
   19338:	0f b6 93 42 02 00 00 	movzx  edx,BYTE PTR [ebx+0x242]
   1933f:	c1 e0 08             	shl    eax,0x8
   19342:	01 d0                	add    eax,edx
   19344:	3d 55 aa 00 00       	cmp    eax,0xaa55
   19349:	0f 85 b1 02 00 00    	jne    19600 <fatfs_init+0x330>
   1934f:	0f b6 8b 06 02 00 00 	movzx  ecx,BYTE PTR [ebx+0x206]
   19356:	80 f9 0f             	cmp    cl,0xf
   19359:	0f 86 e1 01 00 00    	jbe    19540 <fatfs_init+0x270>
   1935f:	c7 43 1c 00 00 00 00 	mov    DWORD PTR [ebx+0x1c],0x0
   19366:	31 c0                	xor    eax,eax
   19368:	83 ec 04             	sub    esp,0x4
   1936b:	6a 01                	push   0x1
   1936d:	56                   	push   esi
   1936e:	50                   	push   eax
   1936f:	ff 53 34             	call   DWORD PTR [ebx+0x34]
   19372:	83 c4 10             	add    esp,0x10
   19375:	85 c0                	test   eax,eax
   19377:	0f 84 73 02 00 00    	je     195f0 <fatfs_init+0x320>
   1937d:	0f b6 43 50          	movzx  eax,BYTE PTR [ebx+0x50]
   19381:	0f b6 53 4f          	movzx  edx,BYTE PTR [ebx+0x4f]
   19385:	c1 e0 08             	shl    eax,0x8
   19388:	01 d0                	add    eax,edx
   1938a:	3d 00 02 00 00       	cmp    eax,0x200
   1938f:	0f 85 7b 02 00 00    	jne    19610 <fatfs_init+0x340>
   19395:	0f b6 43 51          	movzx  eax,BYTE PTR [ebx+0x51]
   19399:	0f b6 53 52          	movzx  edx,BYTE PTR [ebx+0x52]
   1939d:	88 44 24 0b          	mov    BYTE PTR [esp+0xb],al
   193a1:	88 03                	mov    BYTE PTR [ebx],al
   193a3:	0f b6 43 53          	movzx  eax,BYTE PTR [ebx+0x53]
   193a7:	88 54 24 0d          	mov    BYTE PTR [esp+0xd],dl
   193ab:	89 c1                	mov    ecx,eax
   193ad:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
   193b1:	0f b6 c2             	movzx  eax,dl
   193b4:	c1 e1 08             	shl    ecx,0x8
   193b7:	0f b6 53 55          	movzx  edx,BYTE PTR [ebx+0x55]
   193bb:	8d 34 01             	lea    esi,[ecx+eax*1]
   193be:	0f b6 43 54          	movzx  eax,BYTE PTR [ebx+0x54]
   193c2:	89 d1                	mov    ecx,edx
   193c4:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
   193c8:	88 44 24 0a          	mov    BYTE PTR [esp+0xa],al
   193cc:	0f b6 43 56          	movzx  eax,BYTE PTR [ebx+0x56]
   193d0:	89 c2                	mov    edx,eax
   193d2:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
   193d6:	0f b6 c1             	movzx  eax,cl
   193d9:	c1 e2 08             	shl    edx,0x8
   193dc:	0f b6 4b 5a          	movzx  ecx,BYTE PTR [ebx+0x5a]
   193e0:	01 d0                	add    eax,edx
   193e2:	0f b6 53 5b          	movzx  edx,BYTE PTR [ebx+0x5b]
   193e6:	66 89 43 28          	mov    WORD PTR [ebx+0x28],ax
   193ea:	c1 e2 08             	shl    edx,0x8
   193ed:	01 ca                	add    edx,ecx
   193ef:	0f 84 a3 01 00 00    	je     19598 <fatfs_init+0x2c8>
   193f5:	89 d7                	mov    edi,edx
   193f7:	89 53 20             	mov    DWORD PTR [ebx+0x20],edx
   193fa:	0f b6 4b 73          	movzx  ecx,BYTE PTR [ebx+0x73]
   193fe:	0f b7 c0             	movzx  eax,ax
   19401:	c1 e0 05             	shl    eax,0x5
   19404:	05 ff 01 00 00       	add    eax,0x1ff
   19409:	c1 f8 09             	sar    eax,0x9
   1940c:	c1 e1 18             	shl    ecx,0x18
   1940f:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
   19412:	0f b6 83 42 02 00 00 	movzx  eax,BYTE PTR [ebx+0x242]
   19419:	89 cd                	mov    ebp,ecx
   1941b:	0f b6 4b 72          	movzx  ecx,BYTE PTR [ebx+0x72]
   1941f:	c1 e1 10             	shl    ecx,0x10
   19422:	01 e9                	add    ecx,ebp
   19424:	0f b6 6b 70          	movzx  ebp,BYTE PTR [ebx+0x70]
   19428:	01 e9                	add    ecx,ebp
   1942a:	0f b6 6b 71          	movzx  ebp,BYTE PTR [ebx+0x71]
   1942e:	c1 e5 08             	shl    ebp,0x8
   19431:	01 cd                	add    ebp,ecx
   19433:	0f b6 4b 74          	movzx  ecx,BYTE PTR [ebx+0x74]
   19437:	89 6b 08             	mov    DWORD PTR [ebx+0x8],ebp
   1943a:	0f b6 6b 75          	movzx  ebp,BYTE PTR [ebx+0x75]
   1943e:	c1 e5 08             	shl    ebp,0x8
   19441:	01 e9                	add    ecx,ebp
   19443:	66 89 4b 18          	mov    WORD PTR [ebx+0x18],cx
   19447:	0f b7 ce             	movzx  ecx,si
   1944a:	0f b6 74 24 0a       	movzx  esi,BYTE PTR [esp+0xa]
   1944f:	0f af fe             	imul   edi,esi
   19452:	8d 2c 39             	lea    ebp,[ecx+edi*1]
   19455:	03 4b 1c             	add    ecx,DWORD PTR [ebx+0x1c]
   19458:	89 6b 0c             	mov    DWORD PTR [ebx+0xc],ebp
   1945b:	01 cf                	add    edi,ecx
   1945d:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
   19460:	0f b6 8b 43 02 00 00 	movzx  ecx,BYTE PTR [ebx+0x243]
   19467:	89 7b 04             	mov    DWORD PTR [ebx+0x4],edi
   1946a:	c1 e1 08             	shl    ecx,0x8
   1946d:	01 c8                	add    eax,ecx
   1946f:	3d 55 aa 00 00       	cmp    eax,0xaa55
   19474:	0f 85 66 01 00 00    	jne    195e0 <fatfs_init+0x310>
   1947a:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
   1947f:	0f b6 4c 24 0f       	movzx  ecx,BYTE PTR [esp+0xf]
   19484:	c1 e0 08             	shl    eax,0x8
   19487:	01 c1                	add    ecx,eax
   19489:	c1 e1 05             	shl    ecx,0x5
   1948c:	81 c1 ff 01 00 00    	add    ecx,0x1ff
   19492:	c1 f9 09             	sar    ecx,0x9
   19495:	85 d2                	test   edx,edx
   19497:	75 21                	jne    194ba <fatfs_init+0x1ea>
   19499:	0f b6 43 6b          	movzx  eax,BYTE PTR [ebx+0x6b]
   1949d:	0f b6 53 68          	movzx  edx,BYTE PTR [ebx+0x68]
   194a1:	c1 e0 18             	shl    eax,0x18
   194a4:	89 c7                	mov    edi,eax
   194a6:	0f b6 43 6a          	movzx  eax,BYTE PTR [ebx+0x6a]
   194aa:	c1 e0 10             	shl    eax,0x10
   194ad:	01 f8                	add    eax,edi
   194af:	01 d0                	add    eax,edx
   194b1:	0f b6 53 69          	movzx  edx,BYTE PTR [ebx+0x69]
   194b5:	c1 e2 08             	shl    edx,0x8
   194b8:	01 c2                	add    edx,eax
   194ba:	0f b6 43 58          	movzx  eax,BYTE PTR [ebx+0x58]
   194be:	0f b6 7b 57          	movzx  edi,BYTE PTR [ebx+0x57]
   194c2:	c1 e0 08             	shl    eax,0x8
   194c5:	01 f8                	add    eax,edi
   194c7:	75 23                	jne    194ec <fatfs_init+0x21c>
   194c9:	0f b6 43 67          	movzx  eax,BYTE PTR [ebx+0x67]
   194cd:	0f b6 6b 64          	movzx  ebp,BYTE PTR [ebx+0x64]
   194d1:	c1 e0 18             	shl    eax,0x18
   194d4:	89 c7                	mov    edi,eax
   194d6:	0f b6 43 66          	movzx  eax,BYTE PTR [ebx+0x66]
   194da:	c1 e0 10             	shl    eax,0x10
   194dd:	01 f8                	add    eax,edi
   194df:	01 c5                	add    ebp,eax
   194e1:	0f b6 43 65          	movzx  eax,BYTE PTR [ebx+0x65]
   194e5:	c1 e0 08             	shl    eax,0x8
   194e8:	8d 44 05 00          	lea    eax,[ebp+eax*1+0x0]
   194ec:	0f b6 6c 24 0c       	movzx  ebp,BYTE PTR [esp+0xc]
   194f1:	0f b6 7c 24 0d       	movzx  edi,BYTE PTR [esp+0xd]
   194f6:	0f af d6             	imul   edx,esi
   194f9:	c1 e5 08             	shl    ebp,0x8
   194fc:	01 ef                	add    edi,ebp
   194fe:	01 f9                	add    ecx,edi
   19500:	01 ca                	add    edx,ecx
   19502:	29 d0                	sub    eax,edx
   19504:	0f b6 54 24 0b       	movzx  edx,BYTE PTR [esp+0xb]
   19509:	84 d2                	test   dl,dl
   1950b:	0f 84 0f 01 00 00    	je     19620 <fatfs_init+0x350>
   19511:	0f b6 ca             	movzx  ecx,dl
   19514:	31 d2                	xor    edx,edx
   19516:	f7 f1                	div    ecx
   19518:	3d f4 0f 00 00       	cmp    eax,0xff4
   1951d:	0f 86 fd 00 00 00    	jbe    19620 <fatfs_init+0x350>
   19523:	3d f4 ff 00 00       	cmp    eax,0xfff4
   19528:	0f 86 9a 00 00 00    	jbe    195c8 <fatfs_init+0x2f8>
   1952e:	c7 43 30 01 00 00 00 	mov    DWORD PTR [ebx+0x30],0x1
   19535:	31 c0                	xor    eax,eax
   19537:	83 c4 1c             	add    esp,0x1c
   1953a:	5b                   	pop    ebx
   1953b:	5e                   	pop    esi
   1953c:	5f                   	pop    edi
   1953d:	5d                   	pop    ebp
   1953e:	c3                   	ret    
   1953f:	90                   	nop
   19540:	b8 01 00 00 00       	mov    eax,0x1
   19545:	d3 e0                	shl    eax,cl
   19547:	a9 60 d8 00 00       	test   eax,0xd860
   1954c:	75 11                	jne    1955f <fatfs_init+0x28f>
   1954e:	84 c9                	test   cl,cl
   19550:	0f 84 09 fe ff ff    	je     1935f <fatfs_init+0x8f>
   19556:	80 f9 06             	cmp    cl,0x6
   19559:	0f 87 00 fe ff ff    	ja     1935f <fatfs_init+0x8f>
   1955f:	0f b6 83 0d 02 00 00 	movzx  eax,BYTE PTR [ebx+0x20d]
   19566:	c1 e0 18             	shl    eax,0x18
   19569:	89 c2                	mov    edx,eax
   1956b:	0f b6 83 0c 02 00 00 	movzx  eax,BYTE PTR [ebx+0x20c]
   19572:	c1 e0 10             	shl    eax,0x10
   19575:	01 d0                	add    eax,edx
   19577:	0f b6 93 0a 02 00 00 	movzx  edx,BYTE PTR [ebx+0x20a]
   1957e:	01 c2                	add    edx,eax
   19580:	0f b6 83 0b 02 00 00 	movzx  eax,BYTE PTR [ebx+0x20b]
   19587:	c1 e0 08             	shl    eax,0x8
   1958a:	01 d0                	add    eax,edx
   1958c:	89 43 1c             	mov    DWORD PTR [ebx+0x1c],eax
   1958f:	e9 d4 fd ff ff       	jmp    19368 <fatfs_init+0x98>
   19594:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19598:	0f b6 4b 6b          	movzx  ecx,BYTE PTR [ebx+0x6b]
   1959c:	0f b6 7b 68          	movzx  edi,BYTE PTR [ebx+0x68]
   195a0:	c1 e1 18             	shl    ecx,0x18
   195a3:	89 cd                	mov    ebp,ecx
   195a5:	0f b6 4b 6a          	movzx  ecx,BYTE PTR [ebx+0x6a]
   195a9:	c1 e1 10             	shl    ecx,0x10
   195ac:	01 e9                	add    ecx,ebp
   195ae:	01 f9                	add    ecx,edi
   195b0:	0f b6 7b 69          	movzx  edi,BYTE PTR [ebx+0x69]
   195b4:	c1 e7 08             	shl    edi,0x8
   195b7:	01 cf                	add    edi,ecx
   195b9:	89 7b 20             	mov    DWORD PTR [ebx+0x20],edi
   195bc:	e9 39 fe ff ff       	jmp    193fa <fatfs_init+0x12a>
   195c1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   195c8:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   195cf:	c7 43 30 00 00 00 00 	mov    DWORD PTR [ebx+0x30],0x0
   195d6:	83 c4 1c             	add    esp,0x1c
   195d9:	5b                   	pop    ebx
   195da:	31 c0                	xor    eax,eax
   195dc:	5e                   	pop    esi
   195dd:	5f                   	pop    edi
   195de:	5d                   	pop    ebp
   195df:	c3                   	ret    
   195e0:	83 c4 1c             	add    esp,0x1c
   195e3:	b8 fd ff ff ff       	mov    eax,0xfffffffd
   195e8:	5b                   	pop    ebx
   195e9:	5e                   	pop    esi
   195ea:	5f                   	pop    edi
   195eb:	5d                   	pop    ebp
   195ec:	c3                   	ret    
   195ed:	8d 76 00             	lea    esi,[esi+0x0]
   195f0:	b8 ff ff ff ff       	mov    eax,0xffffffff
   195f5:	e9 3d ff ff ff       	jmp    19537 <fatfs_init+0x267>
   195fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19600:	b8 fc ff ff ff       	mov    eax,0xfffffffc
   19605:	e9 2d ff ff ff       	jmp    19537 <fatfs_init+0x267>
   1960a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19610:	b8 fe ff ff ff       	mov    eax,0xfffffffe
   19615:	e9 1d ff ff ff       	jmp    19537 <fatfs_init+0x267>
   1961a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19620:	b8 fb ff ff ff       	mov    eax,0xfffffffb
   19625:	e9 0d ff ff ff       	jmp    19537 <fatfs_init+0x267>
   1962a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00019630 <fatfs_lba_of_cluster>:
fatfs_lba_of_cluster():
   19630:	53                   	push   ebx
   19631:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
   19635:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   19639:	8b 43 30             	mov    eax,DWORD PTR [ebx+0x30]
   1963c:	85 c0                	test   eax,eax
   1963e:	74 10                	je     19650 <fatfs_lba_of_cluster+0x20>
   19640:	0f b6 0b             	movzx  ecx,BYTE PTR [ebx]
   19643:	8d 42 fe             	lea    eax,[edx-0x2]
   19646:	0f af c1             	imul   eax,ecx
   19649:	03 43 04             	add    eax,DWORD PTR [ebx+0x4]
   1964c:	5b                   	pop    ebx
   1964d:	c3                   	ret    
   1964e:	66 90                	xchg   ax,ax
   19650:	89 d8                	mov    eax,ebx
   19652:	5b                   	pop    ebx
   19653:	e9 58 fc ff ff       	jmp    192b0 <fatfs_lba_of_cluster.part.0>
   19658:	90                   	nop
   19659:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00019660 <fatfs_sector_read>:
fatfs_sector_read():
   19660:	53                   	push   ebx
   19661:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   19665:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   19669:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1966d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   19671:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
   19675:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
   19679:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1967d:	5b                   	pop    ebx
   1967e:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
   19681:	ff e0                	jmp    eax
   19683:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19689:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00019690 <fatfs_sector_write>:
fatfs_sector_write():
   19690:	53                   	push   ebx
   19691:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   19695:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   19699:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1969d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   196a1:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
   196a5:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
   196a9:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   196ad:	5b                   	pop    ebx
   196ae:	8b 40 38             	mov    eax,DWORD PTR [eax+0x38]
   196b1:	ff e0                	jmp    eax
   196b3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   196b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000196c0 <fatfs_sector_reader>:
fatfs_sector_reader():
   196c0:	55                   	push   ebp
   196c1:	57                   	push   edi
   196c2:	56                   	push   esi
   196c3:	53                   	push   ebx
   196c4:	83 ec 1c             	sub    esp,0x1c
   196c7:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
   196cb:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
   196cf:	8b 6c 24 38          	mov    ebp,DWORD PTR [esp+0x38]
   196d3:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
   196d7:	8b 53 30             	mov    edx,DWORD PTR [ebx+0x30]
   196da:	85 d2                	test   edx,edx
   196dc:	75 52                	jne    19730 <fatfs_sector_reader+0x70>
   196de:	85 c9                	test   ecx,ecx
   196e0:	75 4e                	jne    19730 <fatfs_sector_reader+0x70>
   196e2:	39 6b 10             	cmp    DWORD PTR [ebx+0x10],ebp
   196e5:	0f 86 dd 00 00 00    	jbe    197c8 <fatfs_sector_reader+0x108>
   196eb:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   196ee:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
   196f1:	01 c5                	add    ebp,eax
   196f3:	85 ff                	test   edi,edi
   196f5:	0f 85 9b 00 00 00    	jne    19796 <fatfs_sector_reader+0xd6>
   196fb:	3b ab 44 02 00 00    	cmp    ebp,DWORD PTR [ebx+0x244]
   19701:	0f 84 d1 00 00 00    	je     197d8 <fatfs_sector_reader+0x118>
   19707:	8d 43 44             	lea    eax,[ebx+0x44]
   1970a:	89 ab 44 02 00 00    	mov    DWORD PTR [ebx+0x244],ebp
   19710:	89 6c 24 30          	mov    DWORD PTR [esp+0x30],ebp
   19714:	c7 44 24 38 01 00 00 	mov    DWORD PTR [esp+0x38],0x1
   1971b:	00 
   1971c:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
   19720:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   19723:	83 c4 1c             	add    esp,0x1c
   19726:	5b                   	pop    ebx
   19727:	5e                   	pop    esi
   19728:	5f                   	pop    edi
   19729:	5d                   	pop    ebp
   1972a:	ff e0                	jmp    eax
   1972c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19730:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   19733:	31 d2                	xor    edx,edx
   19735:	89 c6                	mov    esi,eax
   19737:	89 e8                	mov    eax,ebp
   19739:	f7 f6                	div    esi
   1973b:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
   1973f:	89 c6                	mov    esi,eax
   19741:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   19745:	0f af c6             	imul   eax,esi
   19748:	29 c5                	sub    ebp,eax
   1974a:	85 f6                	test   esi,esi
   1974c:	89 6c 24 0c          	mov    DWORD PTR [esp+0xc],ebp
   19750:	74 1c                	je     1976e <fatfs_sector_reader+0xae>
   19752:	31 ed                	xor    ebp,ebp
   19754:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19758:	83 ec 08             	sub    esp,0x8
   1975b:	83 c5 01             	add    ebp,0x1
   1975e:	51                   	push   ecx
   1975f:	53                   	push   ebx
   19760:	e8 2b 3e 00 00       	call   1d590 <fatfs_find_next_cluster>
   19765:	83 c4 10             	add    esp,0x10
   19768:	39 ee                	cmp    esi,ebp
   1976a:	89 c1                	mov    ecx,eax
   1976c:	75 ea                	jne    19758 <fatfs_sector_reader+0x98>
   1976e:	83 f9 ff             	cmp    ecx,0xffffffff
   19771:	74 55                	je     197c8 <fatfs_sector_reader+0x108>
   19773:	8b 43 30             	mov    eax,DWORD PTR [ebx+0x30]
   19776:	85 c0                	test   eax,eax
   19778:	74 3e                	je     197b8 <fatfs_sector_reader+0xf8>
   1977a:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1977d:	83 e9 02             	sub    ecx,0x2
   19780:	0f af c8             	imul   ecx,eax
   19783:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
   19786:	01 c8                	add    eax,ecx
   19788:	8b 6c 24 0c          	mov    ebp,DWORD PTR [esp+0xc]
   1978c:	01 c5                	add    ebp,eax
   1978e:	85 ff                	test   edi,edi
   19790:	0f 84 65 ff ff ff    	je     196fb <fatfs_sector_reader+0x3b>
   19796:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
   1979a:	89 6c 24 30          	mov    DWORD PTR [esp+0x30],ebp
   1979e:	c7 44 24 38 01 00 00 	mov    DWORD PTR [esp+0x38],0x1
   197a5:	00 
   197a6:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   197a9:	83 c4 1c             	add    esp,0x1c
   197ac:	5b                   	pop    ebx
   197ad:	5e                   	pop    esi
   197ae:	5f                   	pop    edi
   197af:	5d                   	pop    ebp
   197b0:	ff e0                	jmp    eax
   197b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   197b8:	89 ca                	mov    edx,ecx
   197ba:	89 d8                	mov    eax,ebx
   197bc:	e8 ef fa ff ff       	call   192b0 <fatfs_lba_of_cluster.part.0>
   197c1:	eb c5                	jmp    19788 <fatfs_sector_reader+0xc8>
   197c3:	90                   	nop
   197c4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   197c8:	83 c4 1c             	add    esp,0x1c
   197cb:	31 c0                	xor    eax,eax
   197cd:	5b                   	pop    ebx
   197ce:	5e                   	pop    esi
   197cf:	5f                   	pop    edi
   197d0:	5d                   	pop    ebp
   197d1:	c3                   	ret    
   197d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   197d8:	83 c4 1c             	add    esp,0x1c
   197db:	b8 01 00 00 00       	mov    eax,0x1
   197e0:	5b                   	pop    ebx
   197e1:	5e                   	pop    esi
   197e2:	5f                   	pop    edi
   197e3:	5d                   	pop    ebp
   197e4:	c3                   	ret    
   197e5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   197e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000197f0 <fatfs_read_sector>:
fatfs_read_sector():
   197f0:	57                   	push   edi
   197f1:	56                   	push   esi
   197f2:	53                   	push   ebx
   197f3:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
   197f7:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   197fb:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
   197ff:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
   19803:	85 d2                	test   edx,edx
   19805:	8b 43 30             	mov    eax,DWORD PTR [ebx+0x30]
   19808:	75 36                	jne    19840 <fatfs_read_sector+0x50>
   1980a:	85 c0                	test   eax,eax
   1980c:	75 32                	jne    19840 <fatfs_read_sector+0x50>
   1980e:	39 7b 10             	cmp    DWORD PTR [ebx+0x10],edi
   19811:	76 6d                	jbe    19880 <fatfs_read_sector+0x90>
   19813:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   19816:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
   19819:	01 f8                	add    eax,edi
   1981b:	85 f6                	test   esi,esi
   1981d:	74 7e                	je     1989d <fatfs_read_sector+0xad>
   1981f:	c7 44 24 18 01 00 00 	mov    DWORD PTR [esp+0x18],0x1
   19826:	00 
   19827:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
   1982b:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1982f:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   19832:	5b                   	pop    ebx
   19833:	5e                   	pop    esi
   19834:	5f                   	pop    edi
   19835:	ff e0                	jmp    eax
   19837:	89 f6                	mov    esi,esi
   19839:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19840:	85 f6                	test   esi,esi
   19842:	74 4c                	je     19890 <fatfs_read_sector+0xa0>
   19844:	85 c0                	test   eax,eax
   19846:	74 28                	je     19870 <fatfs_read_sector+0x80>
   19848:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1984b:	83 ea 02             	sub    edx,0x2
   1984e:	0f af c2             	imul   eax,edx
   19851:	03 43 04             	add    eax,DWORD PTR [ebx+0x4]
   19854:	01 f8                	add    eax,edi
   19856:	c7 44 24 18 01 00 00 	mov    DWORD PTR [esp+0x18],0x1
   1985d:	00 
   1985e:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
   19862:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   19866:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   19869:	5b                   	pop    ebx
   1986a:	5e                   	pop    esi
   1986b:	5f                   	pop    edi
   1986c:	ff e0                	jmp    eax
   1986e:	66 90                	xchg   ax,ax
   19870:	89 d8                	mov    eax,ebx
   19872:	e8 39 fa ff ff       	call   192b0 <fatfs_lba_of_cluster.part.0>
   19877:	eb db                	jmp    19854 <fatfs_read_sector+0x64>
   19879:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19880:	5b                   	pop    ebx
   19881:	31 c0                	xor    eax,eax
   19883:	5e                   	pop    esi
   19884:	5f                   	pop    edi
   19885:	c3                   	ret    
   19886:	8d 76 00             	lea    esi,[esi+0x0]
   19889:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19890:	85 c0                	test   eax,eax
   19892:	75 2c                	jne    198c0 <fatfs_read_sector+0xd0>
   19894:	89 d8                	mov    eax,ebx
   19896:	e8 15 fa ff ff       	call   192b0 <fatfs_lba_of_cluster.part.0>
   1989b:	01 f8                	add    eax,edi
   1989d:	8d 53 44             	lea    edx,[ebx+0x44]
   198a0:	89 83 44 02 00 00    	mov    DWORD PTR [ebx+0x244],eax
   198a6:	c7 44 24 18 01 00 00 	mov    DWORD PTR [esp+0x18],0x1
   198ad:	00 
   198ae:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   198b2:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
   198b6:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   198b9:	5b                   	pop    ebx
   198ba:	5e                   	pop    esi
   198bb:	5f                   	pop    edi
   198bc:	ff e0                	jmp    eax
   198be:	66 90                	xchg   ax,ax
   198c0:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   198c3:	83 ea 02             	sub    edx,0x2
   198c6:	0f af d0             	imul   edx,eax
   198c9:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
   198cc:	01 d0                	add    eax,edx
   198ce:	01 f8                	add    eax,edi
   198d0:	eb cb                	jmp    1989d <fatfs_read_sector+0xad>
   198d2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   198d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000198e0 <fatfs_write_sector>:
fatfs_write_sector():
   198e0:	55                   	push   ebp
   198e1:	57                   	push   edi
   198e2:	56                   	push   esi
   198e3:	53                   	push   ebx
   198e4:	83 ec 0c             	sub    esp,0xc
   198e7:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   198eb:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
   198ef:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
   198f3:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
   198f7:	8b 73 38             	mov    esi,DWORD PTR [ebx+0x38]
   198fa:	85 f6                	test   esi,esi
   198fc:	0f 84 86 00 00 00    	je     19988 <fatfs_write_sector+0xa8>
   19902:	85 d2                	test   edx,edx
   19904:	8b 43 30             	mov    eax,DWORD PTR [ebx+0x30]
   19907:	75 37                	jne    19940 <fatfs_write_sector+0x60>
   19909:	85 c0                	test   eax,eax
   1990b:	75 33                	jne    19940 <fatfs_write_sector+0x60>
   1990d:	39 6b 10             	cmp    DWORD PTR [ebx+0x10],ebp
   19910:	76 76                	jbe    19988 <fatfs_write_sector+0xa8>
   19912:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   19915:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
   19918:	01 e8                	add    eax,ebp
   1991a:	85 ff                	test   edi,edi
   1991c:	0f 84 83 00 00 00    	je     199a5 <fatfs_write_sector+0xc5>
   19922:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
   19926:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   1992a:	89 f0                	mov    eax,esi
   1992c:	c7 44 24 28 01 00 00 	mov    DWORD PTR [esp+0x28],0x1
   19933:	00 
   19934:	83 c4 0c             	add    esp,0xc
   19937:	5b                   	pop    ebx
   19938:	5e                   	pop    esi
   19939:	5f                   	pop    edi
   1993a:	5d                   	pop    ebp
   1993b:	ff e0                	jmp    eax
   1993d:	8d 76 00             	lea    esi,[esi+0x0]
   19940:	85 ff                	test   edi,edi
   19942:	74 54                	je     19998 <fatfs_write_sector+0xb8>
   19944:	85 c0                	test   eax,eax
   19946:	74 30                	je     19978 <fatfs_write_sector+0x98>
   19948:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1994b:	83 ea 02             	sub    edx,0x2
   1994e:	0f af c2             	imul   eax,edx
   19951:	03 43 04             	add    eax,DWORD PTR [ebx+0x4]
   19954:	01 e8                	add    eax,ebp
   19956:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
   1995a:	c7 44 24 28 01 00 00 	mov    DWORD PTR [esp+0x28],0x1
   19961:	00 
   19962:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   19966:	83 c4 0c             	add    esp,0xc
   19969:	89 f0                	mov    eax,esi
   1996b:	5b                   	pop    ebx
   1996c:	5e                   	pop    esi
   1996d:	5f                   	pop    edi
   1996e:	5d                   	pop    ebp
   1996f:	ff e0                	jmp    eax
   19971:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19978:	89 d8                	mov    eax,ebx
   1997a:	e8 31 f9 ff ff       	call   192b0 <fatfs_lba_of_cluster.part.0>
   1997f:	eb d3                	jmp    19954 <fatfs_write_sector+0x74>
   19981:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19988:	83 c4 0c             	add    esp,0xc
   1998b:	31 c0                	xor    eax,eax
   1998d:	5b                   	pop    ebx
   1998e:	5e                   	pop    esi
   1998f:	5f                   	pop    edi
   19990:	5d                   	pop    ebp
   19991:	c3                   	ret    
   19992:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19998:	85 c0                	test   eax,eax
   1999a:	75 34                	jne    199d0 <fatfs_write_sector+0xf0>
   1999c:	89 d8                	mov    eax,ebx
   1999e:	e8 0d f9 ff ff       	call   192b0 <fatfs_lba_of_cluster.part.0>
   199a3:	01 e8                	add    eax,ebp
   199a5:	89 83 44 02 00 00    	mov    DWORD PTR [ebx+0x244],eax
   199ab:	83 c3 44             	add    ebx,0x44
   199ae:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   199b2:	89 5c 24 24          	mov    DWORD PTR [esp+0x24],ebx
   199b6:	c7 44 24 28 01 00 00 	mov    DWORD PTR [esp+0x28],0x1
   199bd:	00 
   199be:	83 c4 0c             	add    esp,0xc
   199c1:	5b                   	pop    ebx
   199c2:	89 f0                	mov    eax,esi
   199c4:	5e                   	pop    esi
   199c5:	5f                   	pop    edi
   199c6:	5d                   	pop    ebp
   199c7:	ff e0                	jmp    eax
   199c9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   199d0:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   199d3:	83 ea 02             	sub    edx,0x2
   199d6:	0f af d0             	imul   edx,eax
   199d9:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
   199dc:	01 d0                	add    eax,edx
   199de:	01 e8                	add    eax,ebp
   199e0:	eb c3                	jmp    199a5 <fatfs_write_sector+0xc5>
   199e2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   199e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000199f0 <fatfs_show_details>:
fatfs_show_details():
   199f0:	53                   	push   ebx
   199f1:	83 ec 14             	sub    esp,0x14
   199f4:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   199f8:	68 cb 39 06 00       	push   0x639cb
   199fd:	e8 5e 8c 00 00       	call   22660 <printk>
   19a02:	83 7b 30 01          	cmp    DWORD PTR [ebx+0x30],0x1
   19a06:	58                   	pop    eax
   19a07:	b8 bf 39 06 00       	mov    eax,0x639bf
   19a0c:	5a                   	pop    edx
   19a0d:	ba c5 39 06 00       	mov    edx,0x639c5
   19a12:	0f 45 c2             	cmovne eax,edx
   19a15:	50                   	push   eax
   19a16:	68 da 39 06 00       	push   0x639da
   19a1b:	e8 40 8c 00 00       	call   22660 <printk>
   19a20:	59                   	pop    ecx
   19a21:	58                   	pop    eax
   19a22:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   19a25:	68 dc 4e 08 00       	push   0x84edc
   19a2a:	e8 31 8c 00 00       	call   22660 <printk>
   19a2f:	58                   	pop    eax
   19a30:	5a                   	pop    edx
   19a31:	ff 73 14             	push   DWORD PTR [ebx+0x14]
   19a34:	68 e4 39 06 00       	push   0x639e4
   19a39:	e8 22 8c 00 00       	call   22660 <printk>
   19a3e:	59                   	pop    ecx
   19a3f:	58                   	pop    eax
   19a40:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   19a43:	68 fc 39 06 00       	push   0x639fc
   19a48:	e8 13 8c 00 00       	call   22660 <printk>
   19a4d:	58                   	pop    eax
   19a4e:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   19a51:	5a                   	pop    edx
   19a52:	50                   	push   eax
   19a53:	68 18 3a 06 00       	push   0x63a18
   19a58:	e8 03 8c 00 00       	call   22660 <printk>
   19a5d:	83 c4 18             	add    esp,0x18
   19a60:	5b                   	pop    ebx
   19a61:	c3                   	ret    
   19a62:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19a69:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00019a70 <fatfs_get_root_cluster>:
fatfs_get_root_cluster():
   19a70:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   19a74:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
   19a77:	c3                   	ret    
   19a78:	90                   	nop
   19a79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00019a80 <fatfs_get_file_entry>:
fatfs_get_file_entry():
   19a80:	55                   	push   ebp
   19a81:	57                   	push   edi
   19a82:	56                   	push   esi
   19a83:	53                   	push   ebx
   19a84:	81 ec 44 01 00 00    	sub    esp,0x144
   19a8a:	6a 01                	push   0x1
   19a8c:	8d 74 24 36          	lea    esi,[esp+0x36]
   19a90:	56                   	push   esi
   19a91:	e8 ca 2a 00 00       	call   1c560 <fatfs_lfn_cache_init>
   19a96:	83 c4 10             	add    esp,0x10
   19a99:	8b 84 24 50 01 00 00 	mov    eax,DWORD PTR [esp+0x150]
   19aa0:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   19aa7:	00 
   19aa8:	8d 6c 24 1d          	lea    ebp,[esp+0x1d]
   19aac:	8d b8 44 02 00 00    	lea    edi,[eax+0x244]
   19ab2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19ab8:	6a 00                	push   0x0
   19aba:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   19abe:	ff b4 24 5c 01 00 00 	push   DWORD PTR [esp+0x15c]
   19ac5:	ff b4 24 5c 01 00 00 	push   DWORD PTR [esp+0x15c]
   19acc:	e8 ef fb ff ff       	call   196c0 <fatfs_sector_reader>
   19ad1:	83 c4 10             	add    esp,0x10
   19ad4:	85 c0                	test   eax,eax
   19ad6:	0f 84 63 01 00 00    	je     19c3f <fatfs_get_file_entry+0x1bf>
   19adc:	8b 84 24 50 01 00 00 	mov    eax,DWORD PTR [esp+0x150]
   19ae3:	8d 58 44             	lea    ebx,[eax+0x44]
   19ae6:	eb 1c                	jmp    19b04 <fatfs_get_file_entry+0x84>
   19ae8:	90                   	nop
   19ae9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19af0:	83 ec 08             	sub    esp,0x8
   19af3:	53                   	push   ebx
   19af4:	56                   	push   esi
   19af5:	e8 a6 2a 00 00       	call   1c5a0 <fatfs_lfn_cache_entry>
   19afa:	83 c4 10             	add    esp,0x10
   19afd:	83 c3 20             	add    ebx,0x20
   19b00:	39 df                	cmp    edi,ebx
   19b02:	74 69                	je     19b6d <fatfs_get_file_entry+0xed>
   19b04:	83 ec 0c             	sub    esp,0xc
   19b07:	53                   	push   ebx
   19b08:	e8 a3 2b 00 00       	call   1c6b0 <fatfs_entry_lfn_text>
   19b0d:	83 c4 10             	add    esp,0x10
   19b10:	85 c0                	test   eax,eax
   19b12:	75 dc                	jne    19af0 <fatfs_get_file_entry+0x70>
   19b14:	83 ec 0c             	sub    esp,0xc
   19b17:	53                   	push   ebx
   19b18:	e8 b3 2b 00 00       	call   1c6d0 <fatfs_entry_lfn_invalid>
   19b1d:	83 c4 10             	add    esp,0x10
   19b20:	85 c0                	test   eax,eax
   19b22:	75 34                	jne    19b58 <fatfs_get_file_entry+0xd8>
   19b24:	83 ec 08             	sub    esp,0x8
   19b27:	53                   	push   ebx
   19b28:	56                   	push   esi
   19b29:	e8 d2 2b 00 00       	call   1c700 <fatfs_entry_lfn_exists>
   19b2e:	83 c4 10             	add    esp,0x10
   19b31:	85 c0                	test   eax,eax
   19b33:	74 4b                	je     19b80 <fatfs_get_file_entry+0x100>
   19b35:	83 ec 0c             	sub    esp,0xc
   19b38:	56                   	push   esi
   19b39:	e8 32 2b 00 00       	call   1c670 <fatfs_lfn_cache_get>
   19b3e:	5a                   	pop    edx
   19b3f:	59                   	pop    ecx
   19b40:	ff b4 24 60 01 00 00 	push   DWORD PTR [esp+0x160]
   19b47:	50                   	push   eax
   19b48:	e8 13 34 00 00       	call   1cf60 <fatfs_compare_names>
   19b4d:	83 c4 10             	add    esp,0x10
   19b50:	85 c0                	test   eax,eax
   19b52:	0f 85 b2 00 00 00    	jne    19c0a <fatfs_get_file_entry+0x18a>
   19b58:	83 ec 08             	sub    esp,0x8
   19b5b:	83 c3 20             	add    ebx,0x20
   19b5e:	6a 00                	push   0x0
   19b60:	56                   	push   esi
   19b61:	e8 fa 29 00 00       	call   1c560 <fatfs_lfn_cache_init>
   19b66:	83 c4 10             	add    esp,0x10
   19b69:	39 df                	cmp    edi,ebx
   19b6b:	75 97                	jne    19b04 <fatfs_get_file_entry+0x84>
   19b6d:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   19b72:	e9 41 ff ff ff       	jmp    19ab8 <fatfs_get_file_entry+0x38>
   19b77:	89 f6                	mov    esi,esi
   19b79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19b80:	83 ec 0c             	sub    esp,0xc
   19b83:	53                   	push   ebx
   19b84:	e8 c7 2b 00 00       	call   1c750 <fatfs_entry_sfn_only>
   19b89:	83 c4 10             	add    esp,0x10
   19b8c:	85 c0                	test   eax,eax
   19b8e:	0f 84 69 ff ff ff    	je     19afd <fatfs_get_file_entry+0x7d>
   19b94:	83 ec 04             	sub    esp,0x4
   19b97:	6a 0d                	push   0xd
   19b99:	6a 00                	push   0x0
   19b9b:	55                   	push   ebp
   19b9c:	e8 df 71 00 00       	call   20d80 <memset>
   19ba1:	83 c4 10             	add    esp,0x10
   19ba4:	31 c0                	xor    eax,eax
   19ba6:	8d 76 00             	lea    esi,[esi+0x0]
   19ba9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19bb0:	0f b6 14 03          	movzx  edx,BYTE PTR [ebx+eax*1]
   19bb4:	88 54 05 00          	mov    BYTE PTR [ebp+eax*1+0x0],dl
   19bb8:	83 c0 01             	add    eax,0x1
   19bbb:	83 f8 08             	cmp    eax,0x8
   19bbe:	75 f0                	jne    19bb0 <fatfs_get_file_entry+0x130>
   19bc0:	0f b6 43 08          	movzx  eax,BYTE PTR [ebx+0x8]
   19bc4:	31 d2                	xor    edx,edx
   19bc6:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
   19bca:	3c 20                	cmp    al,0x20
   19bcc:	0f b6 43 09          	movzx  eax,BYTE PTR [ebx+0x9]
   19bd0:	0f 95 c2             	setne  dl
   19bd3:	88 44 24 27          	mov    BYTE PTR [esp+0x27],al
   19bd7:	3c 20                	cmp    al,0x20
   19bd9:	0f b6 43 0a          	movzx  eax,BYTE PTR [ebx+0xa]
   19bdd:	88 44 24 28          	mov    BYTE PTR [esp+0x28],al
   19be1:	74 4d                	je     19c30 <fatfs_get_file_entry+0x1b0>
   19be3:	80 7c 24 1d 2e       	cmp    BYTE PTR [esp+0x1d],0x2e
   19be8:	74 4e                	je     19c38 <fatfs_get_file_entry+0x1b8>
   19bea:	c6 44 24 25 2e       	mov    BYTE PTR [esp+0x25],0x2e
   19bef:	83 ec 08             	sub    esp,0x8
   19bf2:	ff b4 24 60 01 00 00 	push   DWORD PTR [esp+0x160]
   19bf9:	55                   	push   ebp
   19bfa:	e8 61 33 00 00       	call   1cf60 <fatfs_compare_names>
   19bff:	83 c4 10             	add    esp,0x10
   19c02:	85 c0                	test   eax,eax
   19c04:	0f 84 4e ff ff ff    	je     19b58 <fatfs_get_file_entry+0xd8>
   19c0a:	83 ec 04             	sub    esp,0x4
   19c0d:	6a 20                	push   0x20
   19c0f:	53                   	push   ebx
   19c10:	ff b4 24 68 01 00 00 	push   DWORD PTR [esp+0x168]
   19c17:	e8 44 7a 00 00       	call   21660 <memcpy>
   19c1c:	83 c4 10             	add    esp,0x10
   19c1f:	b8 01 00 00 00       	mov    eax,0x1
   19c24:	81 c4 3c 01 00 00    	add    esp,0x13c
   19c2a:	5b                   	pop    ebx
   19c2b:	5e                   	pop    esi
   19c2c:	5f                   	pop    edi
   19c2d:	5d                   	pop    ebp
   19c2e:	c3                   	ret    
   19c2f:	90                   	nop
   19c30:	3c 20                	cmp    al,0x20
   19c32:	75 af                	jne    19be3 <fatfs_get_file_entry+0x163>
   19c34:	85 d2                	test   edx,edx
   19c36:	75 ab                	jne    19be3 <fatfs_get_file_entry+0x163>
   19c38:	c6 44 24 25 20       	mov    BYTE PTR [esp+0x25],0x20
   19c3d:	eb b0                	jmp    19bef <fatfs_get_file_entry+0x16f>
   19c3f:	81 c4 3c 01 00 00    	add    esp,0x13c
   19c45:	31 c0                	xor    eax,eax
   19c47:	5b                   	pop    ebx
   19c48:	5e                   	pop    esi
   19c49:	5f                   	pop    edi
   19c4a:	5d                   	pop    ebp
   19c4b:	c3                   	ret    
   19c4c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00019c50 <fatfs_sfn_exists>:
fatfs_sfn_exists():
   19c50:	55                   	push   ebp
   19c51:	57                   	push   edi
   19c52:	56                   	push   esi
   19c53:	53                   	push   ebx
   19c54:	31 f6                	xor    esi,esi
   19c56:	83 ec 0c             	sub    esp,0xc
   19c59:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
   19c5d:	8d 9f 44 02 00 00    	lea    ebx,[edi+0x244]
   19c63:	90                   	nop
   19c64:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19c68:	6a 00                	push   0x0
   19c6a:	56                   	push   esi
   19c6b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   19c6f:	57                   	push   edi
   19c70:	e8 4b fa ff ff       	call   196c0 <fatfs_sector_reader>
   19c75:	83 c4 10             	add    esp,0x10
   19c78:	85 c0                	test   eax,eax
   19c7a:	74 5e                	je     19cda <fatfs_sfn_exists+0x8a>
   19c7c:	8d 6f 44             	lea    ebp,[edi+0x44]
   19c7f:	eb 0e                	jmp    19c8f <fatfs_sfn_exists+0x3f>
   19c81:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19c88:	83 c5 20             	add    ebp,0x20
   19c8b:	39 dd                	cmp    ebp,ebx
   19c8d:	74 59                	je     19ce8 <fatfs_sfn_exists+0x98>
   19c8f:	83 ec 0c             	sub    esp,0xc
   19c92:	55                   	push   ebp
   19c93:	e8 18 2a 00 00       	call   1c6b0 <fatfs_entry_lfn_text>
   19c98:	83 c4 10             	add    esp,0x10
   19c9b:	85 c0                	test   eax,eax
   19c9d:	75 e9                	jne    19c88 <fatfs_sfn_exists+0x38>
   19c9f:	83 ec 0c             	sub    esp,0xc
   19ca2:	55                   	push   ebp
   19ca3:	e8 28 2a 00 00       	call   1c6d0 <fatfs_entry_lfn_invalid>
   19ca8:	83 c4 10             	add    esp,0x10
   19cab:	85 c0                	test   eax,eax
   19cad:	75 d9                	jne    19c88 <fatfs_sfn_exists+0x38>
   19caf:	83 ec 0c             	sub    esp,0xc
   19cb2:	55                   	push   ebp
   19cb3:	e8 98 2a 00 00       	call   1c750 <fatfs_entry_sfn_only>
   19cb8:	83 c4 10             	add    esp,0x10
   19cbb:	85 c0                	test   eax,eax
   19cbd:	74 c9                	je     19c88 <fatfs_sfn_exists+0x38>
   19cbf:	83 ec 04             	sub    esp,0x4
   19cc2:	6a 0b                	push   0xb
   19cc4:	ff 74 24 30          	push   DWORD PTR [esp+0x30]
   19cc8:	55                   	push   ebp
   19cc9:	e8 e2 83 ff ff       	call   120b0 <strncmp>
   19cce:	83 c4 10             	add    esp,0x10
   19cd1:	85 c0                	test   eax,eax
   19cd3:	75 b3                	jne    19c88 <fatfs_sfn_exists+0x38>
   19cd5:	b8 01 00 00 00       	mov    eax,0x1
   19cda:	83 c4 0c             	add    esp,0xc
   19cdd:	5b                   	pop    ebx
   19cde:	5e                   	pop    esi
   19cdf:	5f                   	pop    edi
   19ce0:	5d                   	pop    ebp
   19ce1:	c3                   	ret    
   19ce2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   19ce8:	83 c6 01             	add    esi,0x1
   19ceb:	e9 78 ff ff ff       	jmp    19c68 <fatfs_sfn_exists+0x18>

00019cf0 <fatfs_update_timestamps>:
fatfs_update_timestamps():
   19cf0:	57                   	push   edi
   19cf1:	56                   	push   esi
   19cf2:	53                   	push   ebx
   19cf3:	83 ec 1c             	sub    esp,0x1c
   19cf6:	8d 5c 24 18          	lea    ebx,[esp+0x18]
   19cfa:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
   19cfe:	53                   	push   ebx
   19cff:	e8 bc 8f 00 00       	call   22cc0 <time>
   19d04:	89 1c 24             	mov    DWORD PTR [esp],ebx
   19d07:	e8 b4 91 00 00       	call   22ec0 <localtime>
   19d0c:	83 c4 0c             	add    esp,0xc
   19d0f:	ff 30                	push   DWORD PTR [eax]
   19d11:	ff 70 04             	push   DWORD PTR [eax+0x4]
   19d14:	ff 70 08             	push   DWORD PTR [eax+0x8]
   19d17:	89 c3                	mov    ebx,eax
   19d19:	e8 72 2f 00 00       	call   1cc90 <fatfs_convert_to_fat_time>
   19d1e:	89 c7                	mov    edi,eax
   19d20:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
   19d23:	83 c4 0c             	add    esp,0xc
   19d26:	05 6c 07 00 00       	add    eax,0x76c
   19d2b:	50                   	push   eax
   19d2c:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   19d2f:	83 c0 01             	add    eax,0x1
   19d32:	50                   	push   eax
   19d33:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
   19d36:	e8 85 2f 00 00       	call   1ccc0 <fatfs_convert_to_fat_date>
   19d3b:	83 c4 10             	add    esp,0x10
   19d3e:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
   19d42:	85 db                	test   ebx,ebx
   19d44:	74 1a                	je     19d60 <fatfs_update_timestamps+0x70>
   19d46:	89 fa                	mov    edx,edi
   19d48:	89 f9                	mov    ecx,edi
   19d4a:	88 46 10             	mov    BYTE PTR [esi+0x10],al
   19d4d:	66 c1 ea 08          	shr    dx,0x8
   19d51:	88 4e 0e             	mov    BYTE PTR [esi+0xe],cl
   19d54:	88 56 0f             	mov    BYTE PTR [esi+0xf],dl
   19d57:	89 c2                	mov    edx,eax
   19d59:	66 c1 ea 08          	shr    dx,0x8
   19d5d:	88 56 11             	mov    BYTE PTR [esi+0x11],dl
   19d60:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
   19d64:	85 c9                	test   ecx,ecx
   19d66:	74 1a                	je     19d82 <fatfs_update_timestamps+0x92>
   19d68:	89 fa                	mov    edx,edi
   19d6a:	89 f9                	mov    ecx,edi
   19d6c:	88 46 18             	mov    BYTE PTR [esi+0x18],al
   19d6f:	66 c1 ea 08          	shr    dx,0x8
   19d73:	88 4e 16             	mov    BYTE PTR [esi+0x16],cl
   19d76:	88 56 17             	mov    BYTE PTR [esi+0x17],dl
   19d79:	89 c2                	mov    edx,eax
   19d7b:	66 c1 ea 08          	shr    dx,0x8
   19d7f:	88 56 19             	mov    BYTE PTR [esi+0x19],dl
   19d82:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
   19d86:	85 d2                	test   edx,edx
   19d88:	74 0c                	je     19d96 <fatfs_update_timestamps+0xa6>
   19d8a:	89 c2                	mov    edx,eax
   19d8c:	88 46 12             	mov    BYTE PTR [esi+0x12],al
   19d8f:	66 c1 ea 08          	shr    dx,0x8
   19d93:	88 56 13             	mov    BYTE PTR [esi+0x13],dl
   19d96:	83 c4 10             	add    esp,0x10
   19d99:	b8 01 00 00 00       	mov    eax,0x1
   19d9e:	5b                   	pop    ebx
   19d9f:	5e                   	pop    esi
   19da0:	5f                   	pop    edi
   19da1:	c3                   	ret    
   19da2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19da9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00019db0 <fatfs_update_file_length>:
fatfs_update_file_length():
   19db0:	55                   	push   ebp
   19db1:	57                   	push   edi
   19db2:	56                   	push   esi
   19db3:	53                   	push   ebx
   19db4:	83 ec 1c             	sub    esp,0x1c
   19db7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   19dbb:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
   19dbf:	89 04 24             	mov    DWORD PTR [esp],eax
   19dc2:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   19dc6:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   19dca:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
   19dce:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   19dd2:	8b 47 38             	mov    eax,DWORD PTR [edi+0x38]
   19dd5:	85 c0                	test   eax,eax
   19dd7:	0f 84 db 00 00 00    	je     19eb8 <fatfs_update_file_length+0x108>
   19ddd:	8d 47 44             	lea    eax,[edi+0x44]
   19de0:	8d 9f 44 02 00 00    	lea    ebx,[edi+0x244]
   19de6:	31 f6                	xor    esi,esi
   19de8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   19dec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19df0:	6a 00                	push   0x0
   19df2:	56                   	push   esi
   19df3:	ff 74 24 08          	push   DWORD PTR [esp+0x8]
   19df7:	57                   	push   edi
   19df8:	e8 c3 f8 ff ff       	call   196c0 <fatfs_sector_reader>
   19dfd:	83 c4 10             	add    esp,0x10
   19e00:	85 c0                	test   eax,eax
   19e02:	0f 84 b0 00 00 00    	je     19eb8 <fatfs_update_file_length+0x108>
   19e08:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
   19e0c:	eb 0d                	jmp    19e1b <fatfs_update_file_length+0x6b>
   19e0e:	66 90                	xchg   ax,ax
   19e10:	83 c5 20             	add    ebp,0x20
   19e13:	39 eb                	cmp    ebx,ebp
   19e15:	0f 84 95 00 00 00    	je     19eb0 <fatfs_update_file_length+0x100>
   19e1b:	83 ec 0c             	sub    esp,0xc
   19e1e:	55                   	push   ebp
   19e1f:	e8 8c 28 00 00       	call   1c6b0 <fatfs_entry_lfn_text>
   19e24:	83 c4 10             	add    esp,0x10
   19e27:	85 c0                	test   eax,eax
   19e29:	75 e5                	jne    19e10 <fatfs_update_file_length+0x60>
   19e2b:	83 ec 0c             	sub    esp,0xc
   19e2e:	55                   	push   ebp
   19e2f:	e8 9c 28 00 00       	call   1c6d0 <fatfs_entry_lfn_invalid>
   19e34:	83 c4 10             	add    esp,0x10
   19e37:	85 c0                	test   eax,eax
   19e39:	75 d5                	jne    19e10 <fatfs_update_file_length+0x60>
   19e3b:	83 ec 0c             	sub    esp,0xc
   19e3e:	55                   	push   ebp
   19e3f:	e8 0c 29 00 00       	call   1c750 <fatfs_entry_sfn_only>
   19e44:	83 c4 10             	add    esp,0x10
   19e47:	85 c0                	test   eax,eax
   19e49:	74 c5                	je     19e10 <fatfs_update_file_length+0x60>
   19e4b:	83 ec 04             	sub    esp,0x4
   19e4e:	6a 0b                	push   0xb
   19e50:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   19e54:	55                   	push   ebp
   19e55:	e8 56 82 ff ff       	call   120b0 <strncmp>
   19e5a:	83 c4 10             	add    esp,0x10
   19e5d:	85 c0                	test   eax,eax
   19e5f:	75 af                	jne    19e10 <fatfs_update_file_length+0x60>
   19e61:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   19e65:	89 45 1c             	mov    DWORD PTR [ebp+0x1c],eax
   19e68:	6a 01                	push   0x1
   19e6a:	6a 01                	push   0x1
   19e6c:	6a 00                	push   0x0
   19e6e:	55                   	push   ebp
   19e6f:	e8 7c fe ff ff       	call   19cf0 <fatfs_update_timestamps>
   19e74:	83 c4 0c             	add    esp,0xc
   19e77:	6a 20                	push   0x20
   19e79:	55                   	push   ebp
   19e7a:	55                   	push   ebp
   19e7b:	e8 e0 77 00 00       	call   21660 <memcpy>
   19e80:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   19e84:	c7 44 24 48 01 00 00 	mov    DWORD PTR [esp+0x48],0x1
   19e8b:	00 
   19e8c:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
   19e90:	8b 87 44 02 00 00    	mov    eax,DWORD PTR [edi+0x244]
   19e96:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
   19e9a:	8b 47 38             	mov    eax,DWORD PTR [edi+0x38]
   19e9d:	83 c4 2c             	add    esp,0x2c
   19ea0:	5b                   	pop    ebx
   19ea1:	5e                   	pop    esi
   19ea2:	5f                   	pop    edi
   19ea3:	5d                   	pop    ebp
   19ea4:	ff e0                	jmp    eax
   19ea6:	8d 76 00             	lea    esi,[esi+0x0]
   19ea9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19eb0:	83 c6 01             	add    esi,0x1
   19eb3:	e9 38 ff ff ff       	jmp    19df0 <fatfs_update_file_length+0x40>
   19eb8:	83 c4 1c             	add    esp,0x1c
   19ebb:	31 c0                	xor    eax,eax
   19ebd:	5b                   	pop    ebx
   19ebe:	5e                   	pop    esi
   19ebf:	5f                   	pop    edi
   19ec0:	5d                   	pop    ebp
   19ec1:	c3                   	ret    
   19ec2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   19ec9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00019ed0 <fatfs_mark_file_deleted>:
fatfs_mark_file_deleted():
   19ed0:	55                   	push   ebp
   19ed1:	57                   	push   edi
   19ed2:	56                   	push   esi
   19ed3:	53                   	push   ebx
   19ed4:	83 ec 1c             	sub    esp,0x1c
   19ed7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   19edb:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
   19edf:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   19ee3:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   19ee7:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   19eeb:	8b 47 38             	mov    eax,DWORD PTR [edi+0x38]
   19eee:	85 c0                	test   eax,eax
   19ef0:	0f 84 da 00 00 00    	je     19fd0 <fatfs_mark_file_deleted+0x100>
   19ef6:	8d 47 44             	lea    eax,[edi+0x44]
   19ef9:	8d 9f 44 02 00 00    	lea    ebx,[edi+0x244]
   19eff:	31 f6                	xor    esi,esi
   19f01:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   19f05:	8d 76 00             	lea    esi,[esi+0x0]
   19f08:	6a 00                	push   0x0
   19f0a:	56                   	push   esi
   19f0b:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   19f0f:	57                   	push   edi
   19f10:	e8 ab f7 ff ff       	call   196c0 <fatfs_sector_reader>
   19f15:	83 c4 10             	add    esp,0x10
   19f18:	85 c0                	test   eax,eax
   19f1a:	0f 84 b0 00 00 00    	je     19fd0 <fatfs_mark_file_deleted+0x100>
   19f20:	8b 6c 24 08          	mov    ebp,DWORD PTR [esp+0x8]
   19f24:	eb 15                	jmp    19f3b <fatfs_mark_file_deleted+0x6b>
   19f26:	8d 76 00             	lea    esi,[esi+0x0]
   19f29:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   19f30:	83 c5 20             	add    ebp,0x20
   19f33:	39 eb                	cmp    ebx,ebp
   19f35:	0f 84 8d 00 00 00    	je     19fc8 <fatfs_mark_file_deleted+0xf8>
   19f3b:	83 ec 0c             	sub    esp,0xc
   19f3e:	55                   	push   ebp
   19f3f:	e8 6c 27 00 00       	call   1c6b0 <fatfs_entry_lfn_text>
   19f44:	83 c4 10             	add    esp,0x10
   19f47:	85 c0                	test   eax,eax
   19f49:	75 e5                	jne    19f30 <fatfs_mark_file_deleted+0x60>
   19f4b:	83 ec 0c             	sub    esp,0xc
   19f4e:	55                   	push   ebp
   19f4f:	e8 7c 27 00 00       	call   1c6d0 <fatfs_entry_lfn_invalid>
   19f54:	83 c4 10             	add    esp,0x10
   19f57:	85 c0                	test   eax,eax
   19f59:	75 d5                	jne    19f30 <fatfs_mark_file_deleted+0x60>
   19f5b:	83 ec 0c             	sub    esp,0xc
   19f5e:	55                   	push   ebp
   19f5f:	e8 ec 27 00 00       	call   1c750 <fatfs_entry_sfn_only>
   19f64:	83 c4 10             	add    esp,0x10
   19f67:	85 c0                	test   eax,eax
   19f69:	74 c5                	je     19f30 <fatfs_mark_file_deleted+0x60>
   19f6b:	83 ec 04             	sub    esp,0x4
   19f6e:	6a 0b                	push   0xb
   19f70:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   19f74:	55                   	push   ebp
   19f75:	e8 36 81 ff ff       	call   120b0 <strncmp>
   19f7a:	83 c4 10             	add    esp,0x10
   19f7d:	85 c0                	test   eax,eax
   19f7f:	75 af                	jne    19f30 <fatfs_mark_file_deleted+0x60>
   19f81:	c6 45 00 e5          	mov    BYTE PTR [ebp+0x0],0xe5
   19f85:	6a 01                	push   0x1
   19f87:	6a 01                	push   0x1
   19f89:	6a 00                	push   0x0
   19f8b:	55                   	push   ebp
   19f8c:	e8 5f fd ff ff       	call   19cf0 <fatfs_update_timestamps>
   19f91:	83 c4 0c             	add    esp,0xc
   19f94:	6a 20                	push   0x20
   19f96:	55                   	push   ebp
   19f97:	55                   	push   ebp
   19f98:	e8 c3 76 00 00       	call   21660 <memcpy>
   19f9d:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   19fa1:	c7 44 24 48 01 00 00 	mov    DWORD PTR [esp+0x48],0x1
   19fa8:	00 
   19fa9:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
   19fad:	8b 87 44 02 00 00    	mov    eax,DWORD PTR [edi+0x244]
   19fb3:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
   19fb7:	8b 47 38             	mov    eax,DWORD PTR [edi+0x38]
   19fba:	83 c4 2c             	add    esp,0x2c
   19fbd:	5b                   	pop    ebx
   19fbe:	5e                   	pop    esi
   19fbf:	5f                   	pop    edi
   19fc0:	5d                   	pop    ebp
   19fc1:	ff e0                	jmp    eax
   19fc3:	90                   	nop
   19fc4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   19fc8:	83 c6 01             	add    esi,0x1
   19fcb:	e9 38 ff ff ff       	jmp    19f08 <fatfs_mark_file_deleted+0x38>
   19fd0:	83 c4 1c             	add    esp,0x1c
   19fd3:	31 c0                	xor    eax,eax
   19fd5:	5b                   	pop    ebx
   19fd6:	5e                   	pop    esi
   19fd7:	5f                   	pop    edi
   19fd8:	5d                   	pop    ebp
   19fd9:	c3                   	ret    
   19fda:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00019fe0 <fatfs_list_directory_start>:
fatfs_list_directory_start():
   19fe0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   19fe4:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   19fe8:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
   19fee:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   19ff1:	c6 40 08 00          	mov    BYTE PTR [eax+0x8],0x0
   19ff5:	c3                   	ret    
   19ff6:	8d 76 00             	lea    esi,[esi+0x0]
   19ff9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001a000 <fatfs_list_directory_next>:
fatfs_list_directory_next():
   1a000:	55                   	push   ebp
   1a001:	57                   	push   edi
   1a002:	56                   	push   esi
   1a003:	53                   	push   ebx
   1a004:	81 ec 44 01 00 00    	sub    esp,0x144
   1a00a:	6a 00                	push   0x0
   1a00c:	8d 7c 24 36          	lea    edi,[esp+0x36]
   1a010:	57                   	push   edi
   1a011:	e8 4a 25 00 00       	call   1c560 <fatfs_lfn_cache_init>
   1a016:	8b 84 24 64 01 00 00 	mov    eax,DWORD PTR [esp+0x164]
   1a01d:	83 c4 10             	add    esp,0x10
   1a020:	8b 8c 24 50 01 00 00 	mov    ecx,DWORD PTR [esp+0x150]
   1a027:	8b 00                	mov    eax,DWORD PTR [eax]
   1a029:	8d 69 44             	lea    ebp,[ecx+0x44]
   1a02c:	6a 00                	push   0x0
   1a02e:	50                   	push   eax
   1a02f:	8b 84 24 5c 01 00 00 	mov    eax,DWORD PTR [esp+0x15c]
   1a036:	ff 70 04             	push   DWORD PTR [eax+0x4]
   1a039:	ff b4 24 5c 01 00 00 	push   DWORD PTR [esp+0x15c]
   1a040:	e8 7b f6 ff ff       	call   196c0 <fatfs_sector_reader>
   1a045:	83 c4 10             	add    esp,0x10
   1a048:	85 c0                	test   eax,eax
   1a04a:	0f 84 04 02 00 00    	je     1a254 <fatfs_list_directory_next+0x254>
   1a050:	8b 84 24 54 01 00 00 	mov    eax,DWORD PTR [esp+0x154]
   1a057:	0f b6 70 08          	movzx  esi,BYTE PTR [eax+0x8]
   1a05b:	89 f0                	mov    eax,esi
   1a05d:	3c 0f                	cmp    al,0xf
   1a05f:	76 1d                	jbe    1a07e <fatfs_list_directory_next+0x7e>
   1a061:	eb 5f                	jmp    1a0c2 <fatfs_list_directory_next+0xc2>
   1a063:	90                   	nop
   1a064:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a068:	83 ec 08             	sub    esp,0x8
   1a06b:	53                   	push   ebx
   1a06c:	57                   	push   edi
   1a06d:	e8 2e 25 00 00       	call   1c5a0 <fatfs_lfn_cache_entry>
   1a072:	83 c4 10             	add    esp,0x10
   1a075:	83 c6 01             	add    esi,0x1
   1a078:	89 f0                	mov    eax,esi
   1a07a:	3c 10                	cmp    al,0x10
   1a07c:	74 44                	je     1a0c2 <fatfs_list_directory_next+0xc2>
   1a07e:	89 f3                	mov    ebx,esi
   1a080:	83 ec 0c             	sub    esp,0xc
   1a083:	c1 e3 05             	shl    ebx,0x5
   1a086:	81 e3 e0 1f 00 00    	and    ebx,0x1fe0
   1a08c:	01 eb                	add    ebx,ebp
   1a08e:	53                   	push   ebx
   1a08f:	e8 1c 26 00 00       	call   1c6b0 <fatfs_entry_lfn_text>
   1a094:	83 c4 10             	add    esp,0x10
   1a097:	85 c0                	test   eax,eax
   1a099:	75 cd                	jne    1a068 <fatfs_list_directory_next+0x68>
   1a09b:	83 ec 0c             	sub    esp,0xc
   1a09e:	53                   	push   ebx
   1a09f:	e8 2c 26 00 00       	call   1c6d0 <fatfs_entry_lfn_invalid>
   1a0a4:	83 c4 10             	add    esp,0x10
   1a0a7:	85 c0                	test   eax,eax
   1a0a9:	74 3d                	je     1a0e8 <fatfs_list_directory_next+0xe8>
   1a0ab:	83 ec 08             	sub    esp,0x8
   1a0ae:	83 c6 01             	add    esi,0x1
   1a0b1:	6a 00                	push   0x0
   1a0b3:	57                   	push   edi
   1a0b4:	e8 a7 24 00 00       	call   1c560 <fatfs_lfn_cache_init>
   1a0b9:	89 f0                	mov    eax,esi
   1a0bb:	83 c4 10             	add    esp,0x10
   1a0be:	3c 10                	cmp    al,0x10
   1a0c0:	75 bc                	jne    1a07e <fatfs_list_directory_next+0x7e>
   1a0c2:	8b 84 24 54 01 00 00 	mov    eax,DWORD PTR [esp+0x154]
   1a0c9:	8b 8c 24 54 01 00 00 	mov    ecx,DWORD PTR [esp+0x154]
   1a0d0:	8b 00                	mov    eax,DWORD PTR [eax]
   1a0d2:	c6 41 08 00          	mov    BYTE PTR [ecx+0x8],0x0
   1a0d6:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1a0da:	83 c0 01             	add    eax,0x1
   1a0dd:	89 01                	mov    DWORD PTR [ecx],eax
   1a0df:	e9 48 ff ff ff       	jmp    1a02c <fatfs_list_directory_next+0x2c>
   1a0e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a0e8:	83 ec 08             	sub    esp,0x8
   1a0eb:	53                   	push   ebx
   1a0ec:	57                   	push   edi
   1a0ed:	e8 0e 26 00 00       	call   1c700 <fatfs_entry_lfn_exists>
   1a0f2:	83 c4 10             	add    esp,0x10
   1a0f5:	85 c0                	test   eax,eax
   1a0f7:	0f 85 62 01 00 00    	jne    1a25f <fatfs_list_directory_next+0x25f>
   1a0fd:	83 ec 0c             	sub    esp,0xc
   1a100:	53                   	push   ebx
   1a101:	e8 4a 26 00 00       	call   1c750 <fatfs_entry_sfn_only>
   1a106:	83 c4 10             	add    esp,0x10
   1a109:	85 c0                	test   eax,eax
   1a10b:	0f 84 64 ff ff ff    	je     1a075 <fatfs_list_directory_next+0x75>
   1a111:	83 ec 08             	sub    esp,0x8
   1a114:	6a 00                	push   0x0
   1a116:	57                   	push   edi
   1a117:	e8 44 24 00 00       	call   1c560 <fatfs_lfn_cache_init>
   1a11c:	83 c4 0c             	add    esp,0xc
   1a11f:	6a 0d                	push   0xd
   1a121:	6a 00                	push   0x0
   1a123:	8d 7c 24 29          	lea    edi,[esp+0x29]
   1a127:	57                   	push   edi
   1a128:	e8 53 6c 00 00       	call   20d80 <memset>
   1a12d:	83 c4 10             	add    esp,0x10
   1a130:	31 c0                	xor    eax,eax
   1a132:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a138:	0f b6 14 03          	movzx  edx,BYTE PTR [ebx+eax*1]
   1a13c:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
   1a13f:	83 c0 01             	add    eax,0x1
   1a142:	83 f8 08             	cmp    eax,0x8
   1a145:	75 f1                	jne    1a138 <fatfs_list_directory_next+0x138>
   1a147:	0f b6 43 08          	movzx  eax,BYTE PTR [ebx+0x8]
   1a14b:	0f b6 53 09          	movzx  edx,BYTE PTR [ebx+0x9]
   1a14f:	3c 20                	cmp    al,0x20
   1a151:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
   1a155:	88 54 24 27          	mov    BYTE PTR [esp+0x27],dl
   1a159:	0f 95 c0             	setne  al
   1a15c:	80 fa 20             	cmp    dl,0x20
   1a15f:	ba 01 00 00 00       	mov    edx,0x1
   1a164:	0f b6 c0             	movzx  eax,al
   1a167:	0f 45 c2             	cmovne eax,edx
   1a16a:	0f b6 53 0a          	movzx  edx,BYTE PTR [ebx+0xa]
   1a16e:	80 fa 20             	cmp    dl,0x20
   1a171:	88 54 24 28          	mov    BYTE PTR [esp+0x28],dl
   1a175:	74 0e                	je     1a185 <fatfs_list_directory_next+0x185>
   1a177:	80 7c 24 1d 2e       	cmp    BYTE PTR [esp+0x1d],0x2e
   1a17c:	74 0b                	je     1a189 <fatfs_list_directory_next+0x189>
   1a17e:	c6 44 24 25 2e       	mov    BYTE PTR [esp+0x25],0x2e
   1a183:	eb 09                	jmp    1a18e <fatfs_list_directory_next+0x18e>
   1a185:	85 c0                	test   eax,eax
   1a187:	75 ee                	jne    1a177 <fatfs_list_directory_next+0x177>
   1a189:	c6 44 24 25 20       	mov    BYTE PTR [esp+0x25],0x20
   1a18e:	83 ec 08             	sub    esp,0x8
   1a191:	57                   	push   edi
   1a192:	ff b4 24 64 01 00 00 	push   DWORD PTR [esp+0x164]
   1a199:	e8 02 30 00 00       	call   1d1a0 <fatfs_get_sfn_display_name>
   1a19e:	89 1c 24             	mov    DWORD PTR [esp],ebx
   1a1a1:	e8 ea 25 00 00       	call   1c790 <fatfs_entry_is_dir>
   1a1a6:	83 c4 10             	add    esp,0x10
   1a1a9:	85 c0                	test   eax,eax
   1a1ab:	8b 8c 24 58 01 00 00 	mov    ecx,DWORD PTR [esp+0x158]
   1a1b2:	8b 84 24 58 01 00 00 	mov    eax,DWORD PTR [esp+0x158]
   1a1b9:	0f 95 80 80 00 00 00 	setne  BYTE PTR [eax+0x80]
   1a1c0:	0f b6 43 0f          	movzx  eax,BYTE PTR [ebx+0xf]
   1a1c4:	0f b6 53 0e          	movzx  edx,BYTE PTR [ebx+0xe]
   1a1c8:	c1 e0 08             	shl    eax,0x8
   1a1cb:	09 d0                	or     eax,edx
   1a1cd:	66 89 81 94 00 00 00 	mov    WORD PTR [ecx+0x94],ax
   1a1d4:	0f b6 43 11          	movzx  eax,BYTE PTR [ebx+0x11]
   1a1d8:	0f b6 53 10          	movzx  edx,BYTE PTR [ebx+0x10]
   1a1dc:	c1 e0 08             	shl    eax,0x8
   1a1df:	09 d0                	or     eax,edx
   1a1e1:	66 89 81 92 00 00 00 	mov    WORD PTR [ecx+0x92],ax
   1a1e8:	0f b6 43 13          	movzx  eax,BYTE PTR [ebx+0x13]
   1a1ec:	0f b6 53 12          	movzx  edx,BYTE PTR [ebx+0x12]
   1a1f0:	c1 e0 08             	shl    eax,0x8
   1a1f3:	09 d0                	or     eax,edx
   1a1f5:	66 89 81 8c 00 00 00 	mov    WORD PTR [ecx+0x8c],ax
   1a1fc:	0f b6 43 17          	movzx  eax,BYTE PTR [ebx+0x17]
   1a200:	0f b6 53 16          	movzx  edx,BYTE PTR [ebx+0x16]
   1a204:	c1 e0 08             	shl    eax,0x8
   1a207:	09 d0                	or     eax,edx
   1a209:	66 89 81 8e 00 00 00 	mov    WORD PTR [ecx+0x8e],ax
   1a210:	0f b6 43 19          	movzx  eax,BYTE PTR [ebx+0x19]
   1a214:	0f b6 53 18          	movzx  edx,BYTE PTR [ebx+0x18]
   1a218:	c1 e0 08             	shl    eax,0x8
   1a21b:	09 d0                	or     eax,edx
   1a21d:	66 89 81 90 00 00 00 	mov    WORD PTR [ecx+0x90],ax
   1a224:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
   1a227:	89 81 88 00 00 00    	mov    DWORD PTR [ecx+0x88],eax
   1a22d:	0f b7 43 14          	movzx  eax,WORD PTR [ebx+0x14]
   1a231:	c1 e0 10             	shl    eax,0x10
   1a234:	89 c2                	mov    edx,eax
   1a236:	0f b7 43 1a          	movzx  eax,WORD PTR [ebx+0x1a]
   1a23a:	09 d0                	or     eax,edx
   1a23c:	89 81 84 00 00 00    	mov    DWORD PTR [ecx+0x84],eax
   1a242:	8b 8c 24 54 01 00 00 	mov    ecx,DWORD PTR [esp+0x154]
   1a249:	8d 46 01             	lea    eax,[esi+0x1]
   1a24c:	88 41 08             	mov    BYTE PTR [ecx+0x8],al
   1a24f:	b8 01 00 00 00       	mov    eax,0x1
   1a254:	81 c4 3c 01 00 00    	add    esp,0x13c
   1a25a:	5b                   	pop    ebx
   1a25b:	5e                   	pop    esi
   1a25c:	5f                   	pop    edi
   1a25d:	5d                   	pop    ebp
   1a25e:	c3                   	ret    
   1a25f:	83 ec 0c             	sub    esp,0xc
   1a262:	57                   	push   edi
   1a263:	e8 08 24 00 00       	call   1c670 <fatfs_lfn_cache_get>
   1a268:	83 c4 0c             	add    esp,0xc
   1a26b:	6a 7f                	push   0x7f
   1a26d:	50                   	push   eax
   1a26e:	ff b4 24 64 01 00 00 	push   DWORD PTR [esp+0x164]
   1a275:	e8 96 7e ff ff       	call   12110 <strncpy>
   1a27a:	89 1c 24             	mov    DWORD PTR [esp],ebx
   1a27d:	e8 0e 25 00 00       	call   1c790 <fatfs_entry_is_dir>
   1a282:	83 c4 10             	add    esp,0x10
   1a285:	85 c0                	test   eax,eax
   1a287:	8b 8c 24 58 01 00 00 	mov    ecx,DWORD PTR [esp+0x158]
   1a28e:	8b 84 24 58 01 00 00 	mov    eax,DWORD PTR [esp+0x158]
   1a295:	0f 95 80 80 00 00 00 	setne  BYTE PTR [eax+0x80]
   1a29c:	0f b6 43 0f          	movzx  eax,BYTE PTR [ebx+0xf]
   1a2a0:	0f b6 53 0e          	movzx  edx,BYTE PTR [ebx+0xe]
   1a2a4:	c1 e0 08             	shl    eax,0x8
   1a2a7:	09 d0                	or     eax,edx
   1a2a9:	66 89 81 94 00 00 00 	mov    WORD PTR [ecx+0x94],ax
   1a2b0:	0f b6 43 11          	movzx  eax,BYTE PTR [ebx+0x11]
   1a2b4:	0f b6 53 10          	movzx  edx,BYTE PTR [ebx+0x10]
   1a2b8:	c1 e0 08             	shl    eax,0x8
   1a2bb:	09 d0                	or     eax,edx
   1a2bd:	66 89 81 92 00 00 00 	mov    WORD PTR [ecx+0x92],ax
   1a2c4:	0f b6 43 13          	movzx  eax,BYTE PTR [ebx+0x13]
   1a2c8:	0f b6 53 12          	movzx  edx,BYTE PTR [ebx+0x12]
   1a2cc:	c1 e0 08             	shl    eax,0x8
   1a2cf:	09 d0                	or     eax,edx
   1a2d1:	66 89 81 8c 00 00 00 	mov    WORD PTR [ecx+0x8c],ax
   1a2d8:	0f b6 43 17          	movzx  eax,BYTE PTR [ebx+0x17]
   1a2dc:	0f b6 53 16          	movzx  edx,BYTE PTR [ebx+0x16]
   1a2e0:	c1 e0 08             	shl    eax,0x8
   1a2e3:	09 d0                	or     eax,edx
   1a2e5:	66 89 81 8e 00 00 00 	mov    WORD PTR [ecx+0x8e],ax
   1a2ec:	0f b6 43 19          	movzx  eax,BYTE PTR [ebx+0x19]
   1a2f0:	0f b6 53 18          	movzx  edx,BYTE PTR [ebx+0x18]
   1a2f4:	c1 e0 08             	shl    eax,0x8
   1a2f7:	09 d0                	or     eax,edx
   1a2f9:	66 89 81 90 00 00 00 	mov    WORD PTR [ecx+0x90],ax
   1a300:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
   1a303:	89 81 88 00 00 00    	mov    DWORD PTR [ecx+0x88],eax
   1a309:	0f b7 43 14          	movzx  eax,WORD PTR [ebx+0x14]
   1a30d:	c1 e0 10             	shl    eax,0x10
   1a310:	89 c2                	mov    edx,eax
   1a312:	0f b7 43 1a          	movzx  eax,WORD PTR [ebx+0x1a]
   1a316:	09 d0                	or     eax,edx
   1a318:	89 81 84 00 00 00    	mov    DWORD PTR [ecx+0x84],eax
   1a31e:	8b 8c 24 54 01 00 00 	mov    ecx,DWORD PTR [esp+0x154]
   1a325:	8d 46 01             	lea    eax,[esi+0x1]
   1a328:	88 41 08             	mov    BYTE PTR [ecx+0x8],al
   1a32b:	81 c4 3c 01 00 00    	add    esp,0x13c
   1a331:	b8 01 00 00 00       	mov    eax,0x1
   1a336:	5b                   	pop    ebx
   1a337:	5e                   	pop    esi
   1a338:	5f                   	pop    edi
   1a339:	5d                   	pop    ebp
   1a33a:	c3                   	ret    
   1a33b:	66 90                	xchg   ax,ax
   1a33d:	66 90                	xchg   ax,ax
   1a33f:	90                   	nop

0001a340 <fatfs_cache_init>:
fatfs_cache_init():
   1a340:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1a344:	8d 82 20 01 00 00    	lea    eax,[edx+0x120]
   1a34a:	81 c2 20 03 00 00    	add    edx,0x320
   1a350:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
   1a356:	c7 80 00 02 00 00 00 	mov    DWORD PTR [eax+0x200],0x0
   1a35d:	00 00 00 
   1a360:	83 c0 04             	add    eax,0x4
   1a363:	39 d0                	cmp    eax,edx
   1a365:	75 e9                	jne    1a350 <fatfs_cache_init+0x10>
   1a367:	b8 01 00 00 00       	mov    eax,0x1
   1a36c:	c3                   	ret    
   1a36d:	8d 76 00             	lea    esi,[esi+0x0]

0001a370 <fatfs_cache_get_next_cluster>:
fatfs_cache_get_next_cluster():
   1a370:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1a374:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1a378:	89 ca                	mov    edx,ecx
   1a37a:	83 e2 7f             	and    edx,0x7f
   1a37d:	8d 14 90             	lea    edx,[eax+edx*4]
   1a380:	31 c0                	xor    eax,eax
   1a382:	3b 8a 20 01 00 00    	cmp    ecx,DWORD PTR [edx+0x120]
   1a388:	74 06                	je     1a390 <fatfs_cache_get_next_cluster+0x20>
   1a38a:	f3 c3                	repz ret 
   1a38c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a390:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1a394:	8b 92 20 03 00 00    	mov    edx,DWORD PTR [edx+0x320]
   1a39a:	89 10                	mov    DWORD PTR [eax],edx
   1a39c:	b8 01 00 00 00       	mov    eax,0x1
   1a3a1:	c3                   	ret    
   1a3a2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1a3a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001a3b0 <fatfs_cache_set_next_cluster>:
fatfs_cache_set_next_cluster():
   1a3b0:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1a3b4:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   1a3b8:	89 d0                	mov    eax,edx
   1a3ba:	83 e0 7f             	and    eax,0x7f
   1a3bd:	8d 04 81             	lea    eax,[ecx+eax*4]
   1a3c0:	3b 90 20 01 00 00    	cmp    edx,DWORD PTR [eax+0x120]
   1a3c6:	74 06                	je     1a3ce <fatfs_cache_set_next_cluster+0x1e>
   1a3c8:	89 90 20 01 00 00    	mov    DWORD PTR [eax+0x120],edx
   1a3ce:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   1a3d2:	89 88 20 03 00 00    	mov    DWORD PTR [eax+0x320],ecx
   1a3d8:	b8 01 00 00 00       	mov    eax,0x1
   1a3dd:	c3                   	ret    
   1a3de:	66 90                	xchg   ax,ax

0001a3e0 <_check_file_open>:
_check_file_open():
   1a3e0:	55                   	push   ebp
   1a3e1:	57                   	push   edi
   1a3e2:	8d a8 94 00 00 00    	lea    ebp,[eax+0x94]
   1a3e8:	56                   	push   esi
   1a3e9:	53                   	push   ebx
   1a3ea:	89 c6                	mov    esi,eax
   1a3ec:	8d 78 14             	lea    edi,[eax+0x14]
   1a3ef:	83 ec 0c             	sub    esp,0xc
   1a3f2:	8b 1d 48 00 12 00    	mov    ebx,DWORD PTR ds:0x120048
   1a3f8:	85 db                	test   ebx,ebx
   1a3fa:	75 0b                	jne    1a407 <_check_file_open+0x27>
   1a3fc:	eb 52                	jmp    1a450 <_check_file_open+0x70>
   1a3fe:	66 90                	xchg   ax,ax
   1a400:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
   1a403:	85 db                	test   ebx,ebx
   1a405:	74 49                	je     1a450 <_check_file_open+0x70>
   1a407:	8d 83 cc f8 ff ff    	lea    eax,[ebx-0x734]
   1a40d:	39 f0                	cmp    eax,esi
   1a40f:	74 ef                	je     1a400 <_check_file_open+0x20>
   1a411:	8d 83 e0 f8 ff ff    	lea    eax,[ebx-0x720]
   1a417:	83 ec 08             	sub    esp,0x8
   1a41a:	57                   	push   edi
   1a41b:	50                   	push   eax
   1a41c:	e8 3f 2b 00 00       	call   1cf60 <fatfs_compare_names>
   1a421:	83 c4 10             	add    esp,0x10
   1a424:	85 c0                	test   eax,eax
   1a426:	74 d8                	je     1a400 <_check_file_open+0x20>
   1a428:	8d 83 60 f9 ff ff    	lea    eax,[ebx-0x6a0]
   1a42e:	83 ec 08             	sub    esp,0x8
   1a431:	55                   	push   ebp
   1a432:	50                   	push   eax
   1a433:	e8 28 2b 00 00       	call   1cf60 <fatfs_compare_names>
   1a438:	83 c4 10             	add    esp,0x10
   1a43b:	85 c0                	test   eax,eax
   1a43d:	74 c1                	je     1a400 <_check_file_open+0x20>
   1a43f:	83 c4 0c             	add    esp,0xc
   1a442:	b8 01 00 00 00       	mov    eax,0x1
   1a447:	5b                   	pop    ebx
   1a448:	5e                   	pop    esi
   1a449:	5f                   	pop    edi
   1a44a:	5d                   	pop    ebp
   1a44b:	c3                   	ret    
   1a44c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a450:	83 c4 0c             	add    esp,0xc
   1a453:	31 c0                	xor    eax,eax
   1a455:	5b                   	pop    ebx
   1a456:	5e                   	pop    esi
   1a457:	5f                   	pop    edi
   1a458:	5d                   	pop    ebp
   1a459:	c3                   	ret    
   1a45a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001a460 <_open_directory>:
_open_directory():
   1a460:	55                   	push   ebp
   1a461:	57                   	push   edi
   1a462:	89 c7                	mov    edi,eax
   1a464:	56                   	push   esi
   1a465:	53                   	push   ebx
   1a466:	81 ec c8 00 00 00    	sub    esp,0xc8
   1a46c:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
   1a470:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1a474:	68 60 00 12 00       	push   0x120060
   1a479:	e8 f2 f5 ff ff       	call   19a70 <fatfs_get_root_cluster>
   1a47e:	89 3c 24             	mov    DWORD PTR [esp],edi
   1a481:	89 c3                	mov    ebx,eax
   1a483:	e8 e8 28 00 00       	call   1cd70 <fatfs_total_path_levels>
   1a488:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1a48c:	83 c4 10             	add    esp,0x10
   1a48f:	85 c0                	test   eax,eax
   1a491:	78 75                	js     1a508 <_open_directory+0xa8>
   1a493:	31 f6                	xor    esi,esi
   1a495:	8d 7c 24 30          	lea    edi,[esp+0x30]
   1a499:	8d 6c 24 10          	lea    ebp,[esp+0x10]
   1a49d:	eb 3d                	jmp    1a4dc <_open_directory+0x7c>
   1a49f:	90                   	nop
   1a4a0:	55                   	push   ebp
   1a4a1:	57                   	push   edi
   1a4a2:	53                   	push   ebx
   1a4a3:	68 60 00 12 00       	push   0x120060
   1a4a8:	e8 d3 f5 ff ff       	call   19a80 <fatfs_get_file_entry>
   1a4ad:	83 c4 10             	add    esp,0x10
   1a4b0:	85 c0                	test   eax,eax
   1a4b2:	74 40                	je     1a4f4 <_open_directory+0x94>
   1a4b4:	83 ec 0c             	sub    esp,0xc
   1a4b7:	55                   	push   ebp
   1a4b8:	e8 d3 22 00 00       	call   1c790 <fatfs_entry_is_dir>
   1a4bd:	83 c4 10             	add    esp,0x10
   1a4c0:	85 c0                	test   eax,eax
   1a4c2:	74 30                	je     1a4f4 <_open_directory+0x94>
   1a4c4:	0f b7 5c 24 24       	movzx  ebx,WORD PTR [esp+0x24]
   1a4c9:	0f b7 44 24 2a       	movzx  eax,WORD PTR [esp+0x2a]
   1a4ce:	83 c6 01             	add    esi,0x1
   1a4d1:	c1 e3 10             	shl    ebx,0x10
   1a4d4:	01 c3                	add    ebx,eax
   1a4d6:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
   1a4da:	7c 2c                	jl     1a508 <_open_directory+0xa8>
   1a4dc:	68 80 00 00 00       	push   0x80
   1a4e1:	57                   	push   edi
   1a4e2:	56                   	push   esi
   1a4e3:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1a4e7:	e8 f4 28 00 00       	call   1cde0 <fatfs_get_substring>
   1a4ec:	83 c4 10             	add    esp,0x10
   1a4ef:	83 f8 ff             	cmp    eax,0xffffffff
   1a4f2:	75 ac                	jne    1a4a0 <_open_directory+0x40>
   1a4f4:	81 c4 bc 00 00 00    	add    esp,0xbc
   1a4fa:	31 c0                	xor    eax,eax
   1a4fc:	5b                   	pop    ebx
   1a4fd:	5e                   	pop    esi
   1a4fe:	5f                   	pop    edi
   1a4ff:	5d                   	pop    ebp
   1a500:	c3                   	ret    
   1a501:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1a508:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1a50c:	89 18                	mov    DWORD PTR [eax],ebx
   1a50e:	81 c4 bc 00 00 00    	add    esp,0xbc
   1a514:	b8 01 00 00 00       	mov    eax,0x1
   1a519:	5b                   	pop    ebx
   1a51a:	5e                   	pop    esi
   1a51b:	5f                   	pop    edi
   1a51c:	5d                   	pop    ebp
   1a51d:	c3                   	ret    
   1a51e:	66 90                	xchg   ax,ax

0001a520 <_write_sectors>:
_write_sectors():
   1a520:	55                   	push   ebp
   1a521:	57                   	push   edi
   1a522:	56                   	push   esi
   1a523:	53                   	push   ebx
   1a524:	89 c6                	mov    esi,eax
   1a526:	89 d3                	mov    ebx,edx
   1a528:	89 d0                	mov    eax,edx
   1a52a:	31 d2                	xor    edx,edx
   1a52c:	83 ec 2c             	sub    esp,0x2c
   1a52f:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1a533:	0f b6 0d 60 00 12 00 	movzx  ecx,BYTE PTR ds:0x120060
   1a53a:	c7 44 24 18 ff ff ff 	mov    DWORD PTR [esp+0x18],0xffffffff
   1a541:	ff 
   1a542:	f7 f1                	div    ecx
   1a544:	8b 54 24 40          	mov    edx,DWORD PTR [esp+0x40]
   1a548:	89 c7                	mov    edi,eax
   1a54a:	89 c8                	mov    eax,ecx
   1a54c:	0f af c7             	imul   eax,edi
   1a54f:	29 c3                	sub    ebx,eax
   1a551:	89 c8                	mov    eax,ecx
   1a553:	01 da                	add    edx,ebx
   1a555:	29 d8                	sub    eax,ebx
   1a557:	89 5c 24 08          	mov    DWORD PTR [esp+0x8],ebx
   1a55b:	39 d1                	cmp    ecx,edx
   1a55d:	8b 9e 20 05 00 00    	mov    ebx,DWORD PTR [esi+0x520]
   1a563:	0f 43 44 24 40       	cmovae eax,DWORD PTR [esp+0x40]
   1a568:	39 df                	cmp    edi,ebx
   1a56a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1a56e:	0f 84 1c 01 00 00    	je     1a690 <_write_sectors+0x170>
   1a574:	85 ff                	test   edi,edi
   1a576:	0f 85 ec 00 00 00    	jne    1a668 <_write_sectors+0x148>
   1a57c:	8b 6e 04             	mov    ebp,DWORD PTR [esi+0x4]
   1a57f:	31 db                	xor    ebx,ebx
   1a581:	39 df                	cmp    edi,ebx
   1a583:	77 1f                	ja     1a5a4 <_write_sectors+0x84>
   1a585:	e9 0e 01 00 00       	jmp    1a698 <_write_sectors+0x178>
   1a58a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a590:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
   1a594:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
   1a598:	83 fd ff             	cmp    ebp,0xffffffff
   1a59b:	74 4e                	je     1a5eb <_write_sectors+0xcb>
   1a59d:	83 c3 01             	add    ebx,0x1
   1a5a0:	39 df                	cmp    edi,ebx
   1a5a2:	76 7c                	jbe    1a620 <_write_sectors+0x100>
   1a5a4:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   1a5a8:	50                   	push   eax
   1a5a9:	53                   	push   ebx
   1a5aa:	56                   	push   esi
   1a5ab:	68 60 00 12 00       	push   0x120060
   1a5b0:	e8 bb fd ff ff       	call   1a370 <fatfs_cache_get_next_cluster>
   1a5b5:	83 c4 10             	add    esp,0x10
   1a5b8:	85 c0                	test   eax,eax
   1a5ba:	75 d4                	jne    1a590 <_write_sectors+0x70>
   1a5bc:	83 ec 08             	sub    esp,0x8
   1a5bf:	55                   	push   ebp
   1a5c0:	68 60 00 12 00       	push   0x120060
   1a5c5:	e8 c6 2f 00 00       	call   1d590 <fatfs_find_next_cluster>
   1a5ca:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
   1a5ce:	50                   	push   eax
   1a5cf:	53                   	push   ebx
   1a5d0:	56                   	push   esi
   1a5d1:	68 60 00 12 00       	push   0x120060
   1a5d6:	e8 d5 fd ff ff       	call   1a3b0 <fatfs_cache_set_next_cluster>
   1a5db:	83 c4 20             	add    esp,0x20
   1a5de:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
   1a5e2:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
   1a5e6:	83 fd ff             	cmp    ebp,0xffffffff
   1a5e9:	75 b2                	jne    1a59d <_write_sectors+0x7d>
   1a5eb:	0f b6 0d 60 00 12 00 	movzx  ecx,BYTE PTR ds:0x120060
   1a5f2:	83 ec 04             	sub    esp,0x4
   1a5f5:	31 d2                	xor    edx,edx
   1a5f7:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
   1a5fb:	8d 44 08 ff          	lea    eax,[eax+ecx*1-0x1]
   1a5ff:	f7 f1                	div    ecx
   1a601:	50                   	push   eax
   1a602:	8d 44 24 20          	lea    eax,[esp+0x20]
   1a606:	50                   	push   eax
   1a607:	68 60 00 12 00       	push   0x120060
   1a60c:	e8 5f 34 00 00       	call   1da70 <fatfs_add_free_space>
   1a611:	83 c4 10             	add    esp,0x10
   1a614:	85 c0                	test   eax,eax
   1a616:	8b 6c 24 18          	mov    ebp,DWORD PTR [esp+0x18]
   1a61a:	74 64                	je     1a680 <_write_sectors+0x160>
   1a61c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a620:	89 ae 24 05 00 00    	mov    DWORD PTR [esi+0x524],ebp
   1a626:	89 be 20 05 00 00    	mov    DWORD PTR [esi+0x520],edi
   1a62c:	83 ec 08             	sub    esp,0x8
   1a62f:	55                   	push   ebp
   1a630:	68 60 00 12 00       	push   0x120060
   1a635:	e8 f6 ef ff ff       	call   19630 <fatfs_lba_of_cluster>
   1a63a:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   1a63e:	57                   	push   edi
   1a63f:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   1a643:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
   1a647:	50                   	push   eax
   1a648:	68 60 00 12 00       	push   0x120060
   1a64d:	e8 3e f0 ff ff       	call   19690 <fatfs_sector_write>
   1a652:	83 c4 20             	add    esp,0x20
   1a655:	85 c0                	test   eax,eax
   1a657:	74 27                	je     1a680 <_write_sectors+0x160>
   1a659:	83 c4 2c             	add    esp,0x2c
   1a65c:	89 f8                	mov    eax,edi
   1a65e:	5b                   	pop    ebx
   1a65f:	5e                   	pop    esi
   1a660:	5f                   	pop    edi
   1a661:	5d                   	pop    ebp
   1a662:	c3                   	ret    
   1a663:	90                   	nop
   1a664:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a668:	8d 43 01             	lea    eax,[ebx+0x1]
   1a66b:	39 c7                	cmp    edi,eax
   1a66d:	0f 85 09 ff ff ff    	jne    1a57c <_write_sectors+0x5c>
   1a673:	8b ae 24 05 00 00    	mov    ebp,DWORD PTR [esi+0x524]
   1a679:	e9 03 ff ff ff       	jmp    1a581 <_write_sectors+0x61>
   1a67e:	66 90                	xchg   ax,ax
   1a680:	83 c4 2c             	add    esp,0x2c
   1a683:	31 c0                	xor    eax,eax
   1a685:	5b                   	pop    ebx
   1a686:	5e                   	pop    esi
   1a687:	5f                   	pop    edi
   1a688:	5d                   	pop    ebp
   1a689:	c3                   	ret    
   1a68a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a690:	8b ae 24 05 00 00    	mov    ebp,DWORD PTR [esi+0x524]
   1a696:	eb 94                	jmp    1a62c <_write_sectors+0x10c>
   1a698:	83 fd ff             	cmp    ebp,0xffffffff
   1a69b:	75 83                	jne    1a620 <_write_sectors+0x100>
   1a69d:	e9 50 ff ff ff       	jmp    1a5f2 <_write_sectors+0xd2>
   1a6a2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1a6a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001a6b0 <_read_sectors>:
_read_sectors():
   1a6b0:	55                   	push   ebp
   1a6b1:	57                   	push   edi
   1a6b2:	89 d7                	mov    edi,edx
   1a6b4:	56                   	push   esi
   1a6b5:	53                   	push   ebx
   1a6b6:	89 c3                	mov    ebx,eax
   1a6b8:	89 d0                	mov    eax,edx
   1a6ba:	31 d2                	xor    edx,edx
   1a6bc:	83 ec 2c             	sub    esp,0x2c
   1a6bf:	8b ab 20 05 00 00    	mov    ebp,DWORD PTR [ebx+0x520]
   1a6c5:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1a6c9:	0f b6 0d 60 00 12 00 	movzx  ecx,BYTE PTR ds:0x120060
   1a6d0:	f7 f1                	div    ecx
   1a6d2:	8b 54 24 40          	mov    edx,DWORD PTR [esp+0x40]
   1a6d6:	89 c6                	mov    esi,eax
   1a6d8:	89 c8                	mov    eax,ecx
   1a6da:	0f af c6             	imul   eax,esi
   1a6dd:	29 c7                	sub    edi,eax
   1a6df:	89 c8                	mov    eax,ecx
   1a6e1:	01 fa                	add    edx,edi
   1a6e3:	29 f8                	sub    eax,edi
   1a6e5:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
   1a6e9:	39 d1                	cmp    ecx,edx
   1a6eb:	0f 43 44 24 40       	cmovae eax,DWORD PTR [esp+0x40]
   1a6f0:	39 ee                	cmp    esi,ebp
   1a6f2:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
   1a6f6:	0f 84 b4 00 00 00    	je     1a7b0 <_read_sectors+0x100>
   1a6fc:	85 f6                	test   esi,esi
   1a6fe:	0f 85 c4 00 00 00    	jne    1a7c8 <_read_sectors+0x118>
   1a704:	8b 7b 04             	mov    edi,DWORD PTR [ebx+0x4]
   1a707:	31 ed                	xor    ebp,ebp
   1a709:	eb 0c                	jmp    1a717 <_read_sectors+0x67>
   1a70b:	90                   	nop
   1a70c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a710:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
   1a714:	83 c5 01             	add    ebp,0x1
   1a717:	39 ee                	cmp    esi,ebp
   1a719:	76 45                	jbe    1a760 <_read_sectors+0xb0>
   1a71b:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   1a71f:	50                   	push   eax
   1a720:	55                   	push   ebp
   1a721:	53                   	push   ebx
   1a722:	68 60 00 12 00       	push   0x120060
   1a727:	e8 44 fc ff ff       	call   1a370 <fatfs_cache_get_next_cluster>
   1a72c:	83 c4 10             	add    esp,0x10
   1a72f:	85 c0                	test   eax,eax
   1a731:	75 dd                	jne    1a710 <_read_sectors+0x60>
   1a733:	83 ec 08             	sub    esp,0x8
   1a736:	57                   	push   edi
   1a737:	68 60 00 12 00       	push   0x120060
   1a73c:	e8 4f 2e 00 00       	call   1d590 <fatfs_find_next_cluster>
   1a741:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
   1a745:	50                   	push   eax
   1a746:	55                   	push   ebp
   1a747:	53                   	push   ebx
   1a748:	68 60 00 12 00       	push   0x120060
   1a74d:	e8 5e fc ff ff       	call   1a3b0 <fatfs_cache_set_next_cluster>
   1a752:	83 c4 20             	add    esp,0x20
   1a755:	eb b9                	jmp    1a710 <_read_sectors+0x60>
   1a757:	89 f6                	mov    esi,esi
   1a759:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1a760:	83 ff ff             	cmp    edi,0xffffffff
   1a763:	74 56                	je     1a7bb <_read_sectors+0x10b>
   1a765:	89 bb 24 05 00 00    	mov    DWORD PTR [ebx+0x524],edi
   1a76b:	89 b3 20 05 00 00    	mov    DWORD PTR [ebx+0x520],esi
   1a771:	83 ec 08             	sub    esp,0x8
   1a774:	57                   	push   edi
   1a775:	68 60 00 12 00       	push   0x120060
   1a77a:	e8 b1 ee ff ff       	call   19630 <fatfs_lba_of_cluster>
   1a77f:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
   1a783:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   1a787:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
   1a78b:	50                   	push   eax
   1a78c:	68 60 00 12 00       	push   0x120060
   1a791:	e8 ca ee ff ff       	call   19660 <fatfs_sector_read>
   1a796:	83 c4 20             	add    esp,0x20
   1a799:	85 c0                	test   eax,eax
   1a79b:	74 1e                	je     1a7bb <_read_sectors+0x10b>
   1a79d:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
   1a7a1:	83 c4 2c             	add    esp,0x2c
   1a7a4:	5b                   	pop    ebx
   1a7a5:	5e                   	pop    esi
   1a7a6:	5f                   	pop    edi
   1a7a7:	5d                   	pop    ebp
   1a7a8:	c3                   	ret    
   1a7a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1a7b0:	8b bb 24 05 00 00    	mov    edi,DWORD PTR [ebx+0x524]
   1a7b6:	83 ff ff             	cmp    edi,0xffffffff
   1a7b9:	75 b6                	jne    1a771 <_read_sectors+0xc1>
   1a7bb:	83 c4 2c             	add    esp,0x2c
   1a7be:	31 c0                	xor    eax,eax
   1a7c0:	5b                   	pop    ebx
   1a7c1:	5e                   	pop    esi
   1a7c2:	5f                   	pop    edi
   1a7c3:	5d                   	pop    ebp
   1a7c4:	c3                   	ret    
   1a7c5:	8d 76 00             	lea    esi,[esi+0x0]
   1a7c8:	8d 45 01             	lea    eax,[ebp+0x1]
   1a7cb:	39 c6                	cmp    esi,eax
   1a7cd:	0f 85 31 ff ff ff    	jne    1a704 <_read_sectors+0x54>
   1a7d3:	8b bb 24 05 00 00    	mov    edi,DWORD PTR [ebx+0x524]
   1a7d9:	e9 39 ff ff ff       	jmp    1a717 <_read_sectors+0x67>
   1a7de:	66 90                	xchg   ax,ax

0001a7e0 <fat_list_insert_last>:
fat_list_insert_last():
   1a7e0:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
   1a7e3:	53                   	push   ebx
   1a7e4:	85 c9                	test   ecx,ecx
   1a7e6:	74 18                	je     1a800 <fat_list_insert_last+0x20>
   1a7e8:	8b 59 04             	mov    ebx,DWORD PTR [ecx+0x4]
   1a7eb:	89 0a                	mov    DWORD PTR [edx],ecx
   1a7ed:	89 5a 04             	mov    DWORD PTR [edx+0x4],ebx
   1a7f0:	8b 59 04             	mov    ebx,DWORD PTR [ecx+0x4]
   1a7f3:	85 db                	test   ebx,ebx
   1a7f5:	74 29                	je     1a820 <fat_list_insert_last+0x40>
   1a7f7:	89 13                	mov    DWORD PTR [ebx],edx
   1a7f9:	89 51 04             	mov    DWORD PTR [ecx+0x4],edx
   1a7fc:	5b                   	pop    ebx
   1a7fd:	c3                   	ret    
   1a7fe:	66 90                	xchg   ax,ax
   1a800:	8b 08                	mov    ecx,DWORD PTR [eax]
   1a802:	85 c9                	test   ecx,ecx
   1a804:	74 2a                	je     1a830 <fat_list_insert_last+0x50>
   1a806:	8b 19                	mov    ebx,DWORD PTR [ecx]
   1a808:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
   1a80b:	89 1a                	mov    DWORD PTR [edx],ebx
   1a80d:	8b 19                	mov    ebx,DWORD PTR [ecx]
   1a80f:	85 db                	test   ebx,ebx
   1a811:	74 15                	je     1a828 <fat_list_insert_last+0x48>
   1a813:	89 53 04             	mov    DWORD PTR [ebx+0x4],edx
   1a816:	89 11                	mov    DWORD PTR [ecx],edx
   1a818:	5b                   	pop    ebx
   1a819:	c3                   	ret    
   1a81a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a820:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   1a823:	eb d4                	jmp    1a7f9 <fat_list_insert_last+0x19>
   1a825:	8d 76 00             	lea    esi,[esi+0x0]
   1a828:	89 10                	mov    DWORD PTR [eax],edx
   1a82a:	89 11                	mov    DWORD PTR [ecx],edx
   1a82c:	eb ea                	jmp    1a818 <fat_list_insert_last+0x38>
   1a82e:	66 90                	xchg   ax,ax
   1a830:	89 10                	mov    DWORD PTR [eax],edx
   1a832:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   1a835:	5b                   	pop    ebx
   1a836:	c7 02 00 00 00 00    	mov    DWORD PTR [edx],0x0
   1a83c:	c7 42 04 00 00 00 00 	mov    DWORD PTR [edx+0x4],0x0
   1a843:	c3                   	ret    
   1a844:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a84a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001a850 <_allocate_file>:
_allocate_file():
   1a850:	53                   	push   ebx
   1a851:	8b 1d 40 00 12 00    	mov    ebx,DWORD PTR ds:0x120040
   1a857:	85 db                	test   ebx,ebx
   1a859:	74 2d                	je     1a888 <_allocate_file+0x38>
   1a85b:	8b 03                	mov    eax,DWORD PTR [ebx]
   1a85d:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
   1a860:	85 c0                	test   eax,eax
   1a862:	74 2c                	je     1a890 <_allocate_file+0x40>
   1a864:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   1a867:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
   1a86a:	85 d2                	test   edx,edx
   1a86c:	74 32                	je     1a8a0 <_allocate_file+0x50>
   1a86e:	89 02                	mov    DWORD PTR [edx],eax
   1a870:	89 da                	mov    edx,ebx
   1a872:	b8 48 00 12 00       	mov    eax,0x120048
   1a877:	e8 64 ff ff ff       	call   1a7e0 <fat_list_insert_last>
   1a87c:	8d 83 cc f8 ff ff    	lea    eax,[ebx-0x734]
   1a882:	5b                   	pop    ebx
   1a883:	c3                   	ret    
   1a884:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a888:	31 c0                	xor    eax,eax
   1a88a:	5b                   	pop    ebx
   1a88b:	c3                   	ret    
   1a88c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1a890:	85 d2                	test   edx,edx
   1a892:	89 15 40 00 12 00    	mov    DWORD PTR ds:0x120040,edx
   1a898:	75 d4                	jne    1a86e <_allocate_file+0x1e>
   1a89a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1a8a0:	a3 44 00 12 00       	mov    ds:0x120044,eax
   1a8a5:	eb c9                	jmp    1a870 <_allocate_file+0x20>
   1a8a7:	89 f6                	mov    esi,esi
   1a8a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001a8b0 <_free_file>:
_free_file():
   1a8b0:	8b 90 34 07 00 00    	mov    edx,DWORD PTR [eax+0x734]
   1a8b6:	8b 88 38 07 00 00    	mov    ecx,DWORD PTR [eax+0x738]
   1a8bc:	85 d2                	test   edx,edx
   1a8be:	74 20                	je     1a8e0 <_free_file+0x30>
   1a8c0:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
   1a8c3:	8b 88 38 07 00 00    	mov    ecx,DWORD PTR [eax+0x738]
   1a8c9:	85 c9                	test   ecx,ecx
   1a8cb:	74 1d                	je     1a8ea <_free_file+0x3a>
   1a8cd:	89 11                	mov    DWORD PTR [ecx],edx
   1a8cf:	8d 90 34 07 00 00    	lea    edx,[eax+0x734]
   1a8d5:	b8 40 00 12 00       	mov    eax,0x120040
   1a8da:	e9 01 ff ff ff       	jmp    1a7e0 <fat_list_insert_last>
   1a8df:	90                   	nop
   1a8e0:	85 c9                	test   ecx,ecx
   1a8e2:	89 0d 48 00 12 00    	mov    DWORD PTR ds:0x120048,ecx
   1a8e8:	75 e3                	jne    1a8cd <_free_file+0x1d>
   1a8ea:	89 15 4c 00 12 00    	mov    DWORD PTR ds:0x12004c,edx
   1a8f0:	8d 90 34 07 00 00    	lea    edx,[eax+0x734]
   1a8f6:	b8 40 00 12 00       	mov    eax,0x120040
   1a8fb:	e9 e0 fe ff ff       	jmp    1a7e0 <fat_list_insert_last>

0001a900 <_open_file>:
_open_file():
   1a900:	55                   	push   ebp
   1a901:	57                   	push   edi
   1a902:	89 c5                	mov    ebp,eax
   1a904:	56                   	push   esi
   1a905:	53                   	push   ebx
   1a906:	83 ec 2c             	sub    esp,0x2c
   1a909:	e8 42 ff ff ff       	call   1a850 <_allocate_file>
   1a90e:	85 c0                	test   eax,eax
   1a910:	0f 84 62 01 00 00    	je     1aa78 <_open_file+0x178>
   1a916:	8d 78 14             	lea    edi,[eax+0x14]
   1a919:	83 ec 04             	sub    esp,0x4
   1a91c:	89 c3                	mov    ebx,eax
   1a91e:	68 80 00 00 00       	push   0x80
   1a923:	6a 00                	push   0x0
   1a925:	8d b3 94 00 00 00    	lea    esi,[ebx+0x94]
   1a92b:	57                   	push   edi
   1a92c:	e8 4f 64 00 00       	call   20d80 <memset>
   1a931:	83 c4 0c             	add    esp,0xc
   1a934:	68 80 00 00 00       	push   0x80
   1a939:	6a 00                	push   0x0
   1a93b:	56                   	push   esi
   1a93c:	e8 3f 64 00 00       	call   20d80 <memset>
   1a941:	c7 04 24 80 00 00 00 	mov    DWORD PTR [esp],0x80
   1a948:	56                   	push   esi
   1a949:	68 80 00 00 00       	push   0x80
   1a94e:	57                   	push   edi
   1a94f:	55                   	push   ebp
   1a950:	e8 6b 25 00 00       	call   1cec0 <fatfs_split_path>
   1a955:	83 c4 20             	add    esp,0x20
   1a958:	83 f8 ff             	cmp    eax,0xffffffff
   1a95b:	89 d8                	mov    eax,ebx
   1a95d:	0f 84 ff 00 00 00    	je     1aa62 <_open_file+0x162>
   1a963:	e8 78 fa ff ff       	call   1a3e0 <_check_file_open>
   1a968:	85 c0                	test   eax,eax
   1a96a:	0f 85 f0 00 00 00    	jne    1aa60 <_open_file+0x160>
   1a970:	80 7b 14 00          	cmp    BYTE PTR [ebx+0x14],0x0
   1a974:	0f 84 ce 00 00 00    	je     1aa48 <_open_file+0x148>
   1a97a:	89 da                	mov    edx,ebx
   1a97c:	89 f8                	mov    eax,edi
   1a97e:	e8 dd fa ff ff       	call   1a460 <_open_directory>
   1a983:	85 c0                	test   eax,eax
   1a985:	0f 84 d5 00 00 00    	je     1aa60 <_open_file+0x160>
   1a98b:	8b 03                	mov    eax,DWORD PTR [ebx]
   1a98d:	89 e7                	mov    edi,esp
   1a98f:	57                   	push   edi
   1a990:	56                   	push   esi
   1a991:	50                   	push   eax
   1a992:	68 60 00 12 00       	push   0x120060
   1a997:	e8 e4 f0 ff ff       	call   19a80 <fatfs_get_file_entry>
   1a99c:	83 c4 10             	add    esp,0x10
   1a99f:	85 c0                	test   eax,eax
   1a9a1:	0f 84 b9 00 00 00    	je     1aa60 <_open_file+0x160>
   1a9a7:	83 ec 0c             	sub    esp,0xc
   1a9aa:	57                   	push   edi
   1a9ab:	e8 f0 1d 00 00       	call   1c7a0 <fatfs_entry_is_file>
   1a9b0:	83 c4 10             	add    esp,0x10
   1a9b3:	85 c0                	test   eax,eax
   1a9b5:	0f 84 a5 00 00 00    	je     1aa60 <_open_file+0x160>
   1a9bb:	8d 83 14 01 00 00    	lea    eax,[ebx+0x114]
   1a9c1:	83 ec 04             	sub    esp,0x4
   1a9c4:	6a 0b                	push   0xb
   1a9c6:	57                   	push   edi
   1a9c7:	50                   	push   eax
   1a9c8:	e8 93 6c 00 00       	call   21660 <memcpy>
   1a9cd:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
   1a9d1:	0f b7 54 24 2a       	movzx  edx,WORD PTR [esp+0x2a]
   1a9d6:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1a9dd:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1a9e4:	ff ff ff 
   1a9e7:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1a9ee:	00 00 00 
   1a9f1:	c7 83 20 05 00 00 ff 	mov    DWORD PTR [ebx+0x520],0xffffffff
   1a9f8:	ff ff ff 
   1a9fb:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
   1a9fe:	0f b7 44 24 24       	movzx  eax,WORD PTR [esp+0x24]
   1aa03:	c7 83 24 05 00 00 ff 	mov    DWORD PTR [ebx+0x524],0xffffffff
   1aa0a:	ff ff ff 
   1aa0d:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
   1aa14:	c1 e0 10             	shl    eax,0x10
   1aa17:	01 d0                	add    eax,edx
   1aa19:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
   1aa1c:	58                   	pop    eax
   1aa1d:	5a                   	pop    edx
   1aa1e:	53                   	push   ebx
   1aa1f:	68 60 00 12 00       	push   0x120060
   1aa24:	e8 17 f9 ff ff       	call   1a340 <fatfs_cache_init>
   1aa29:	c7 04 24 60 00 12 00 	mov    DWORD PTR [esp],0x120060
   1aa30:	e8 0b 2b 00 00       	call   1d540 <fatfs_fat_purge>
   1aa35:	83 c4 10             	add    esp,0x10
   1aa38:	89 d8                	mov    eax,ebx
   1aa3a:	83 c4 2c             	add    esp,0x2c
   1aa3d:	5b                   	pop    ebx
   1aa3e:	5e                   	pop    esi
   1aa3f:	5f                   	pop    edi
   1aa40:	5d                   	pop    ebp
   1aa41:	c3                   	ret    
   1aa42:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1aa48:	83 ec 0c             	sub    esp,0xc
   1aa4b:	68 60 00 12 00       	push   0x120060
   1aa50:	e8 1b f0 ff ff       	call   19a70 <fatfs_get_root_cluster>
   1aa55:	83 c4 10             	add    esp,0x10
   1aa58:	89 03                	mov    DWORD PTR [ebx],eax
   1aa5a:	e9 2e ff ff ff       	jmp    1a98d <_open_file+0x8d>
   1aa5f:	90                   	nop
   1aa60:	89 d8                	mov    eax,ebx
   1aa62:	e8 49 fe ff ff       	call   1a8b0 <_free_file>
   1aa67:	83 c4 2c             	add    esp,0x2c
   1aa6a:	31 c0                	xor    eax,eax
   1aa6c:	5b                   	pop    ebx
   1aa6d:	5e                   	pop    esi
   1aa6e:	5f                   	pop    edi
   1aa6f:	5d                   	pop    ebp
   1aa70:	c3                   	ret    
   1aa71:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1aa78:	31 c0                	xor    eax,eax
   1aa7a:	eb be                	jmp    1aa3a <_open_file+0x13a>
   1aa7c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001aa80 <fl_attach_locks>:
fl_attach_locks():
   1aa80:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1aa84:	a3 9c 00 12 00       	mov    ds:0x12009c,eax
   1aa89:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1aa8d:	a3 a0 00 12 00       	mov    ds:0x1200a0,eax
   1aa92:	c3                   	ret    
   1aa93:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1aa99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001aaa0 <fl_attach_media>:
fl_attach_media():
   1aaa0:	53                   	push   ebx
   1aaa1:	83 ec 08             	sub    esp,0x8
   1aaa4:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   1aaa9:	85 c0                	test   eax,eax
   1aaab:	74 43                	je     1aaf0 <fl_attach_media+0x50>
   1aaad:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1aab1:	83 ec 0c             	sub    esp,0xc
   1aab4:	a3 94 00 12 00       	mov    ds:0x120094,eax
   1aab9:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
   1aabd:	68 60 00 12 00       	push   0x120060
   1aac2:	a3 98 00 12 00       	mov    ds:0x120098,eax
   1aac7:	e8 04 e8 ff ff       	call   192d0 <fatfs_init>
   1aacc:	83 c4 10             	add    esp,0x10
   1aacf:	85 c0                	test   eax,eax
   1aad1:	89 c3                	mov    ebx,eax
   1aad3:	75 2b                	jne    1ab00 <fl_attach_media+0x60>
   1aad5:	c7 05 c8 04 12 00 01 	mov    DWORD PTR ds:0x1204c8,0x1
   1aadc:	00 00 00 
   1aadf:	83 c4 08             	add    esp,0x8
   1aae2:	31 c0                	xor    eax,eax
   1aae4:	5b                   	pop    ebx
   1aae5:	c3                   	ret    
   1aae6:	8d 76 00             	lea    esi,[esi+0x0]
   1aae9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1aaf0:	e8 cb 8b 00 00       	call   236c0 <fl_init>
   1aaf5:	eb b6                	jmp    1aaad <fl_attach_media+0xd>
   1aaf7:	89 f6                	mov    esi,esi
   1aaf9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1ab00:	83 ec 08             	sub    esp,0x8
   1ab03:	50                   	push   eax
   1ab04:	68 fc 4e 08 00       	push   0x84efc
   1ab09:	e8 52 7b 00 00       	call   22660 <printk>
   1ab0e:	83 c4 10             	add    esp,0x10
   1ab11:	89 d8                	mov    eax,ebx
   1ab13:	83 c4 08             	add    esp,0x8
   1ab16:	5b                   	pop    ebx
   1ab17:	c3                   	ret    
   1ab18:	90                   	nop
   1ab19:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001ab20 <fl_fopen>:
fl_fopen():
   1ab20:	55                   	push   ebp
   1ab21:	57                   	push   edi
   1ab22:	56                   	push   esi
   1ab23:	53                   	push   ebx
   1ab24:	83 ec 4c             	sub    esp,0x4c
   1ab27:	8b 2d cc 04 12 00    	mov    ebp,DWORD PTR ds:0x1204cc
   1ab2d:	8b 74 24 64          	mov    esi,DWORD PTR [esp+0x64]
   1ab31:	85 ed                	test   ebp,ebp
   1ab33:	0f 84 f7 00 00 00    	je     1ac30 <fl_fopen+0x110>
   1ab39:	8b 3d c8 04 12 00    	mov    edi,DWORD PTR ds:0x1204c8
   1ab3f:	85 ff                	test   edi,edi
   1ab41:	0f 84 fc 00 00 00    	je     1ac43 <fl_fopen+0x123>
   1ab47:	8b 5c 24 60          	mov    ebx,DWORD PTR [esp+0x60]
   1ab4b:	85 db                	test   ebx,ebx
   1ab4d:	0f 84 f0 00 00 00    	je     1ac43 <fl_fopen+0x123>
   1ab53:	85 f6                	test   esi,esi
   1ab55:	0f 84 e8 00 00 00    	je     1ac43 <fl_fopen+0x123>
   1ab5b:	83 ec 0c             	sub    esp,0xc
   1ab5e:	31 db                	xor    ebx,ebx
   1ab60:	31 ed                	xor    ebp,ebp
   1ab62:	56                   	push   esi
   1ab63:	e8 98 7c 00 00       	call   22800 <strlen>
   1ab68:	83 c4 10             	add    esp,0x10
   1ab6b:	39 c3                	cmp    ebx,eax
   1ab6d:	7d 30                	jge    1ab9f <fl_fopen+0x7f>
   1ab6f:	90                   	nop
   1ab70:	0f b6 0c 1e          	movzx  ecx,BYTE PTR [esi+ebx*1]
   1ab74:	8d 51 d5             	lea    edx,[ecx-0x2b]
   1ab77:	80 fa 4c             	cmp    dl,0x4c
   1ab7a:	77 1c                	ja     1ab98 <fl_fopen+0x78>
   1ab7c:	0f b6 d2             	movzx  edx,dl
   1ab7f:	ff 24 95 48 fd 03 00 	jmp    DWORD PTR [edx*4+0x3fd48]
   1ab86:	8d 76 00             	lea    esi,[esi+0x0]
   1ab89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1ab90:	83 cd 32             	or     ebp,0x32
   1ab93:	90                   	nop
   1ab94:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1ab98:	83 c3 01             	add    ebx,0x1
   1ab9b:	39 c3                	cmp    ebx,eax
   1ab9d:	7c d1                	jl     1ab70 <fl_fopen+0x50>
   1ab9f:	8b 0d 98 00 12 00    	mov    ecx,DWORD PTR ds:0x120098
   1aba5:	89 e8                	mov    eax,ebp
   1aba7:	83 e0 d9             	and    eax,0xffffffd9
   1abaa:	85 c9                	test   ecx,ecx
   1abac:	0f 44 e8             	cmove  ebp,eax
   1abaf:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1abb4:	85 c0                	test   eax,eax
   1abb6:	74 02                	je     1abba <fl_fopen+0x9a>
   1abb8:	ff d0                	call   eax
   1abba:	89 e8                	mov    eax,ebp
   1abbc:	83 e0 01             	and    eax,0x1
   1abbf:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
   1abc3:	0f 85 87 00 00 00    	jne    1ac50 <fl_fopen+0x130>
   1abc9:	f7 c5 20 00 00 00    	test   ebp,0x20
   1abcf:	0f 85 ab 00 00 00    	jne    1ac80 <fl_fopen+0x160>
   1abd5:	31 db                	xor    ebx,ebx
   1abd7:	e9 8f 00 00 00       	jmp    1ac6b <fl_fopen+0x14b>
   1abdc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1abe0:	83 cd 26             	or     ebp,0x26
   1abe3:	eb b3                	jmp    1ab98 <fl_fopen+0x78>
   1abe5:	8d 76 00             	lea    esi,[esi+0x0]
   1abe8:	f7 c5 01 00 00 00    	test   ebp,0x1
   1abee:	74 18                	je     1ac08 <fl_fopen+0xe8>
   1abf0:	83 cd 02             	or     ebp,0x2
   1abf3:	eb a3                	jmp    1ab98 <fl_fopen+0x78>
   1abf5:	8d 76 00             	lea    esi,[esi+0x0]
   1abf8:	83 cd 01             	or     ebp,0x1
   1abfb:	eb 9b                	jmp    1ab98 <fl_fopen+0x78>
   1abfd:	8d 76 00             	lea    esi,[esi+0x0]
   1ac00:	83 cd 08             	or     ebp,0x8
   1ac03:	eb 93                	jmp    1ab98 <fl_fopen+0x78>
   1ac05:	8d 76 00             	lea    esi,[esi+0x0]
   1ac08:	f7 c5 02 00 00 00    	test   ebp,0x2
   1ac0e:	74 08                	je     1ac18 <fl_fopen+0xf8>
   1ac10:	83 cd 31             	or     ebp,0x31
   1ac13:	eb 83                	jmp    1ab98 <fl_fopen+0x78>
   1ac15:	8d 76 00             	lea    esi,[esi+0x0]
   1ac18:	89 ea                	mov    edx,ebp
   1ac1a:	83 ca 27             	or     edx,0x27
   1ac1d:	f7 c5 04 00 00 00    	test   ebp,0x4
   1ac23:	0f 45 ea             	cmovne ebp,edx
   1ac26:	e9 6d ff ff ff       	jmp    1ab98 <fl_fopen+0x78>
   1ac2b:	90                   	nop
   1ac2c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1ac30:	e8 8b 8a 00 00       	call   236c0 <fl_init>
   1ac35:	8b 3d c8 04 12 00    	mov    edi,DWORD PTR ds:0x1204c8
   1ac3b:	85 ff                	test   edi,edi
   1ac3d:	0f 85 04 ff ff ff    	jne    1ab47 <fl_fopen+0x27>
   1ac43:	83 c4 4c             	add    esp,0x4c
   1ac46:	31 db                	xor    ebx,ebx
   1ac48:	89 d8                	mov    eax,ebx
   1ac4a:	5b                   	pop    ebx
   1ac4b:	5e                   	pop    esi
   1ac4c:	5f                   	pop    edi
   1ac4d:	5d                   	pop    ebp
   1ac4e:	c3                   	ret    
   1ac4f:	90                   	nop
   1ac50:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
   1ac54:	e8 a7 fc ff ff       	call   1a900 <_open_file>
   1ac59:	85 c0                	test   eax,eax
   1ac5b:	89 c3                	mov    ebx,eax
   1ac5d:	0f 84 66 ff ff ff    	je     1abc9 <fl_fopen+0xa9>
   1ac63:	89 e8                	mov    eax,ebp
   1ac65:	88 83 30 07 00 00    	mov    BYTE PTR [ebx+0x730],al
   1ac6b:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1ac70:	85 c0                	test   eax,eax
   1ac72:	74 02                	je     1ac76 <fl_fopen+0x156>
   1ac74:	ff d0                	call   eax
   1ac76:	83 c4 4c             	add    esp,0x4c
   1ac79:	89 d8                	mov    eax,ebx
   1ac7b:	5b                   	pop    ebx
   1ac7c:	5e                   	pop    esi
   1ac7d:	5f                   	pop    edi
   1ac7e:	5d                   	pop    ebp
   1ac7f:	c3                   	ret    
   1ac80:	8b 15 98 00 12 00    	mov    edx,DWORD PTR ds:0x120098
   1ac86:	85 d2                	test   edx,edx
   1ac88:	0f 84 e0 01 00 00    	je     1ae6e <fl_fopen+0x34e>
   1ac8e:	e8 bd fb ff ff       	call   1a850 <_allocate_file>
   1ac93:	85 c0                	test   eax,eax
   1ac95:	89 c3                	mov    ebx,eax
   1ac97:	0f 84 d1 01 00 00    	je     1ae6e <fl_fopen+0x34e>
   1ac9d:	8d 70 14             	lea    esi,[eax+0x14]
   1aca0:	83 ec 04             	sub    esp,0x4
   1aca3:	68 80 00 00 00       	push   0x80
   1aca8:	6a 00                	push   0x0
   1acaa:	56                   	push   esi
   1acab:	e8 d0 60 00 00       	call   20d80 <memset>
   1acb0:	8d 83 94 00 00 00    	lea    eax,[ebx+0x94]
   1acb6:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1acba:	83 c4 0c             	add    esp,0xc
   1acbd:	89 c7                	mov    edi,eax
   1acbf:	68 80 00 00 00       	push   0x80
   1acc4:	6a 00                	push   0x0
   1acc6:	50                   	push   eax
   1acc7:	e8 b4 60 00 00       	call   20d80 <memset>
   1accc:	c7 04 24 80 00 00 00 	mov    DWORD PTR [esp],0x80
   1acd3:	57                   	push   edi
   1acd4:	68 80 00 00 00       	push   0x80
   1acd9:	56                   	push   esi
   1acda:	ff 74 24 7c          	push   DWORD PTR [esp+0x7c]
   1acde:	e8 dd 21 00 00       	call   1cec0 <fatfs_split_path>
   1ace3:	83 c4 20             	add    esp,0x20
   1ace6:	83 f8 ff             	cmp    eax,0xffffffff
   1ace9:	89 d8                	mov    eax,ebx
   1aceb:	0f 84 c5 01 00 00    	je     1aeb6 <fl_fopen+0x396>
   1acf1:	e8 ea f6 ff ff       	call   1a3e0 <_check_file_open>
   1acf6:	85 c0                	test   eax,eax
   1acf8:	0f 85 b6 01 00 00    	jne    1aeb4 <fl_fopen+0x394>
   1acfe:	80 7b 14 00          	cmp    BYTE PTR [ebx+0x14],0x0
   1ad02:	0f 85 98 01 00 00    	jne    1aea0 <fl_fopen+0x380>
   1ad08:	83 ec 0c             	sub    esp,0xc
   1ad0b:	68 60 00 12 00       	push   0x120060
   1ad10:	e8 5b ed ff ff       	call   19a70 <fatfs_get_root_cluster>
   1ad15:	83 c4 10             	add    esp,0x10
   1ad18:	89 03                	mov    DWORD PTR [ebx],eax
   1ad1a:	8d 54 24 20          	lea    edx,[esp+0x20]
   1ad1e:	52                   	push   edx
   1ad1f:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   1ad23:	50                   	push   eax
   1ad24:	68 60 00 12 00       	push   0x120060
   1ad29:	e8 52 ed ff ff       	call   19a80 <fatfs_get_file_entry>
   1ad2e:	83 c4 10             	add    esp,0x10
   1ad31:	83 f8 01             	cmp    eax,0x1
   1ad34:	0f 84 7a 01 00 00    	je     1aeb4 <fl_fopen+0x394>
   1ad3a:	8d 43 04             	lea    eax,[ebx+0x4]
   1ad3d:	c7 43 04 00 00 00 00 	mov    DWORD PTR [ebx+0x4],0x0
   1ad44:	6a 01                	push   0x1
   1ad46:	8d bb 14 01 00 00    	lea    edi,[ebx+0x114]
   1ad4c:	be 01 00 00 00       	mov    esi,0x1
   1ad51:	50                   	push   eax
   1ad52:	6a 01                	push   0x1
   1ad54:	68 60 00 12 00       	push   0x120060
   1ad59:	e8 b2 2d 00 00       	call   1db10 <fatfs_allocate_free_space>
   1ad5e:	83 c4 10             	add    esp,0x10
   1ad61:	85 c0                	test   eax,eax
   1ad63:	0f 84 4b 01 00 00    	je     1aeb4 <fl_fopen+0x394>
   1ad69:	89 e8                	mov    eax,ebp
   1ad6b:	8b 6c 24 08          	mov    ebp,DWORD PTR [esp+0x8]
   1ad6f:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
   1ad73:	eb 12                	jmp    1ad87 <fl_fopen+0x267>
   1ad75:	8d 76 00             	lea    esi,[esi+0x0]
   1ad78:	81 fe 0f 27 00 00    	cmp    esi,0x270f
   1ad7e:	0f 84 cb 00 00 00    	je     1ae4f <fl_fopen+0x32f>
   1ad84:	83 c6 01             	add    esi,0x1
   1ad87:	83 ec 08             	sub    esp,0x8
   1ad8a:	55                   	push   ebp
   1ad8b:	8d 44 24 21          	lea    eax,[esp+0x21]
   1ad8f:	50                   	push   eax
   1ad90:	e8 3b 1c 00 00       	call   1c9d0 <fatfs_lfn_create_sfn>
   1ad95:	89 f0                	mov    eax,esi
   1ad97:	83 c4 10             	add    esp,0x10
   1ad9a:	83 e8 01             	sub    eax,0x1
   1ad9d:	0f 84 1a 01 00 00    	je     1aebd <fl_fopen+0x39d>
   1ada3:	83 ec 04             	sub    esp,0x4
   1ada6:	50                   	push   eax
   1ada7:	8d 44 24 1d          	lea    eax,[esp+0x1d]
   1adab:	50                   	push   eax
   1adac:	57                   	push   edi
   1adad:	e8 4e 1d 00 00       	call   1cb00 <fatfs_lfn_generate_tail>
   1adb2:	83 c4 0c             	add    esp,0xc
   1adb5:	57                   	push   edi
   1adb6:	ff 33                	push   DWORD PTR [ebx]
   1adb8:	68 60 00 12 00       	push   0x120060
   1adbd:	e8 8e ee ff ff       	call   19c50 <fatfs_sfn_exists>
   1adc2:	83 c4 10             	add    esp,0x10
   1adc5:	85 c0                	test   eax,eax
   1adc7:	75 af                	jne    1ad78 <fl_fopen+0x258>
   1adc9:	0f b6 6c 24 0f       	movzx  ebp,BYTE PTR [esp+0xf]
   1adce:	83 ec 04             	sub    esp,0x4
   1add1:	6a 00                	push   0x0
   1add3:	6a 00                	push   0x0
   1add5:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1add8:	57                   	push   edi
   1add9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1addd:	ff 33                	push   DWORD PTR [ebx]
   1addf:	68 60 00 12 00       	push   0x120060
   1ade4:	e8 f7 2d 00 00       	call   1dbe0 <fatfs_add_file_entry>
   1ade9:	83 c4 20             	add    esp,0x20
   1adec:	85 c0                	test   eax,eax
   1adee:	74 64                	je     1ae54 <fl_fopen+0x334>
   1adf0:	83 ec 08             	sub    esp,0x8
   1adf3:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
   1adfa:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1ae01:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1ae08:	ff ff ff 
   1ae0b:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1ae12:	00 00 00 
   1ae15:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
   1ae1c:	c7 83 20 05 00 00 ff 	mov    DWORD PTR [ebx+0x520],0xffffffff
   1ae23:	ff ff ff 
   1ae26:	c7 83 24 05 00 00 ff 	mov    DWORD PTR [ebx+0x524],0xffffffff
   1ae2d:	ff ff ff 
   1ae30:	53                   	push   ebx
   1ae31:	68 60 00 12 00       	push   0x120060
   1ae36:	e8 05 f5 ff ff       	call   1a340 <fatfs_cache_init>
   1ae3b:	c7 04 24 60 00 12 00 	mov    DWORD PTR [esp],0x120060
   1ae42:	e8 f9 26 00 00       	call   1d540 <fatfs_fat_purge>
   1ae47:	83 c4 10             	add    esp,0x10
   1ae4a:	e9 14 fe ff ff       	jmp    1ac63 <fl_fopen+0x143>
   1ae4f:	0f b6 6c 24 0f       	movzx  ebp,BYTE PTR [esp+0xf]
   1ae54:	83 ec 08             	sub    esp,0x8
   1ae57:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1ae5a:	68 60 00 12 00       	push   0x120060
   1ae5f:	e8 8c 2a 00 00       	call   1d8f0 <fatfs_free_cluster_chain>
   1ae64:	89 d8                	mov    eax,ebx
   1ae66:	e8 45 fa ff ff       	call   1a8b0 <_free_file>
   1ae6b:	83 c4 10             	add    esp,0x10
   1ae6e:	80 7c 24 0e 00       	cmp    BYTE PTR [esp+0xe],0x0
   1ae73:	0f 85 5c fd ff ff    	jne    1abd5 <fl_fopen+0xb5>
   1ae79:	f7 c5 06 00 00 00    	test   ebp,0x6
   1ae7f:	0f 84 50 fd ff ff    	je     1abd5 <fl_fopen+0xb5>
   1ae85:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
   1ae89:	e8 72 fa ff ff       	call   1a900 <_open_file>
   1ae8e:	85 c0                	test   eax,eax
   1ae90:	89 c3                	mov    ebx,eax
   1ae92:	0f 85 cb fd ff ff    	jne    1ac63 <fl_fopen+0x143>
   1ae98:	31 db                	xor    ebx,ebx
   1ae9a:	e9 cc fd ff ff       	jmp    1ac6b <fl_fopen+0x14b>
   1ae9f:	90                   	nop
   1aea0:	89 da                	mov    edx,ebx
   1aea2:	89 f0                	mov    eax,esi
   1aea4:	e8 b7 f5 ff ff       	call   1a460 <_open_directory>
   1aea9:	85 c0                	test   eax,eax
   1aeab:	74 07                	je     1aeb4 <fl_fopen+0x394>
   1aead:	8b 03                	mov    eax,DWORD PTR [ebx]
   1aeaf:	e9 66 fe ff ff       	jmp    1ad1a <fl_fopen+0x1fa>
   1aeb4:	89 d8                	mov    eax,ebx
   1aeb6:	e8 f5 f9 ff ff       	call   1a8b0 <_free_file>
   1aebb:	eb b1                	jmp    1ae6e <fl_fopen+0x34e>
   1aebd:	50                   	push   eax
   1aebe:	6a 0b                	push   0xb
   1aec0:	8d 44 24 1d          	lea    eax,[esp+0x1d]
   1aec4:	50                   	push   eax
   1aec5:	57                   	push   edi
   1aec6:	e8 95 67 00 00       	call   21660 <memcpy>
   1aecb:	83 c4 0c             	add    esp,0xc
   1aece:	57                   	push   edi
   1aecf:	ff 33                	push   DWORD PTR [ebx]
   1aed1:	68 60 00 12 00       	push   0x120060
   1aed6:	e8 75 ed ff ff       	call   19c50 <fatfs_sfn_exists>
   1aedb:	83 c4 10             	add    esp,0x10
   1aede:	85 c0                	test   eax,eax
   1aee0:	0f 85 9e fe ff ff    	jne    1ad84 <fl_fopen+0x264>
   1aee6:	e9 de fe ff ff       	jmp    1adc9 <fl_fopen+0x2a9>
   1aeeb:	90                   	nop
   1aeec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001aef0 <fl_fflush>:
fl_fflush():
   1aef0:	53                   	push   ebx
   1aef1:	83 ec 08             	sub    esp,0x8
   1aef4:	8b 15 cc 04 12 00    	mov    edx,DWORD PTR ds:0x1204cc
   1aefa:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1aefe:	85 d2                	test   edx,edx
   1af00:	74 2e                	je     1af30 <fl_fflush+0x40>
   1af02:	85 db                	test   ebx,ebx
   1af04:	74 20                	je     1af26 <fl_fflush+0x36>
   1af06:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1af0b:	85 c0                	test   eax,eax
   1af0d:	74 02                	je     1af11 <fl_fflush+0x21>
   1af0f:	ff d0                	call   eax
   1af11:	8b 83 2c 07 00 00    	mov    eax,DWORD PTR [ebx+0x72c]
   1af17:	85 c0                	test   eax,eax
   1af19:	75 25                	jne    1af40 <fl_fflush+0x50>
   1af1b:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1af20:	85 c0                	test   eax,eax
   1af22:	74 02                	je     1af26 <fl_fflush+0x36>
   1af24:	ff d0                	call   eax
   1af26:	83 c4 08             	add    esp,0x8
   1af29:	31 c0                	xor    eax,eax
   1af2b:	5b                   	pop    ebx
   1af2c:	c3                   	ret    
   1af2d:	8d 76 00             	lea    esi,[esi+0x0]
   1af30:	e8 8b 87 00 00       	call   236c0 <fl_init>
   1af35:	eb cb                	jmp    1af02 <fl_fflush+0x12>
   1af37:	89 f6                	mov    esi,esi
   1af39:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1af40:	83 ec 0c             	sub    esp,0xc
   1af43:	8b 93 28 07 00 00    	mov    edx,DWORD PTR [ebx+0x728]
   1af49:	8d 8b 28 05 00 00    	lea    ecx,[ebx+0x528]
   1af4f:	6a 01                	push   0x1
   1af51:	89 d8                	mov    eax,ebx
   1af53:	e8 c8 f5 ff ff       	call   1a520 <_write_sectors>
   1af58:	83 c4 10             	add    esp,0x10
   1af5b:	85 c0                	test   eax,eax
   1af5d:	74 bc                	je     1af1b <fl_fflush+0x2b>
   1af5f:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1af66:	00 00 00 
   1af69:	eb b0                	jmp    1af1b <fl_fflush+0x2b>
   1af6b:	90                   	nop
   1af6c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001af70 <fl_fclose>:
fl_fclose():
   1af70:	53                   	push   ebx
   1af71:	83 ec 08             	sub    esp,0x8
   1af74:	8b 15 cc 04 12 00    	mov    edx,DWORD PTR ds:0x1204cc
   1af7a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1af7e:	85 d2                	test   edx,edx
   1af80:	0f 84 82 00 00 00    	je     1b008 <fl_fclose+0x98>
   1af86:	85 db                	test   ebx,ebx
   1af88:	74 76                	je     1b000 <fl_fclose+0x90>
   1af8a:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1af8f:	85 c0                	test   eax,eax
   1af91:	74 02                	je     1af95 <fl_fclose+0x25>
   1af93:	ff d0                	call   eax
   1af95:	83 ec 0c             	sub    esp,0xc
   1af98:	53                   	push   ebx
   1af99:	e8 52 ff ff ff       	call   1aef0 <fl_fflush>
   1af9e:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   1afa1:	83 c4 10             	add    esp,0x10
   1afa4:	85 c0                	test   eax,eax
   1afa6:	75 70                	jne    1b018 <fl_fclose+0xa8>
   1afa8:	89 d8                	mov    eax,ebx
   1afaa:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1afb1:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
   1afb8:	c7 43 04 00 00 00 00 	mov    DWORD PTR [ebx+0x4],0x0
   1afbf:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1afc6:	ff ff ff 
   1afc9:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1afd0:	00 00 00 
   1afd3:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
   1afda:	e8 d1 f8 ff ff       	call   1a8b0 <_free_file>
   1afdf:	83 ec 0c             	sub    esp,0xc
   1afe2:	68 60 00 12 00       	push   0x120060
   1afe7:	e8 54 25 00 00       	call   1d540 <fatfs_fat_purge>
   1afec:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1aff1:	83 c4 10             	add    esp,0x10
   1aff4:	85 c0                	test   eax,eax
   1aff6:	74 08                	je     1b000 <fl_fclose+0x90>
   1aff8:	83 c4 08             	add    esp,0x8
   1affb:	5b                   	pop    ebx
   1affc:	ff e0                	jmp    eax
   1affe:	66 90                	xchg   ax,ax
   1b000:	83 c4 08             	add    esp,0x8
   1b003:	5b                   	pop    ebx
   1b004:	c3                   	ret    
   1b005:	8d 76 00             	lea    esi,[esi+0x0]
   1b008:	e8 b3 86 00 00       	call   236c0 <fl_init>
   1b00d:	e9 74 ff ff ff       	jmp    1af86 <fl_fclose+0x16>
   1b012:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b018:	8d 83 14 01 00 00    	lea    eax,[ebx+0x114]
   1b01e:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
   1b021:	50                   	push   eax
   1b022:	ff 33                	push   DWORD PTR [ebx]
   1b024:	68 60 00 12 00       	push   0x120060
   1b029:	e8 82 ed ff ff       	call   19db0 <fatfs_update_file_length>
   1b02e:	83 c4 10             	add    esp,0x10
   1b031:	e9 72 ff ff ff       	jmp    1afa8 <fl_fclose+0x38>
   1b036:	8d 76 00             	lea    esi,[esi+0x0]
   1b039:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001b040 <fl_fread>:
fl_fread():
   1b040:	55                   	push   ebp
   1b041:	57                   	push   edi
   1b042:	56                   	push   esi
   1b043:	53                   	push   ebx
   1b044:	83 ec 1c             	sub    esp,0x1c
   1b047:	8b 0d cc 04 12 00    	mov    ecx,DWORD PTR ds:0x1204cc
   1b04d:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1b051:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
   1b055:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
   1b05a:	85 c9                	test   ecx,ecx
   1b05c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1b060:	0f 84 8a 01 00 00    	je     1b1f0 <fl_fread+0x1b0>
   1b066:	8b 54 24 30          	mov    edx,DWORD PTR [esp+0x30]
   1b06a:	85 d2                	test   edx,edx
   1b06c:	0f 84 8e 01 00 00    	je     1b200 <fl_fread+0x1c0>
   1b072:	85 db                	test   ebx,ebx
   1b074:	0f 84 86 01 00 00    	je     1b200 <fl_fread+0x1c0>
   1b07a:	f6 83 30 07 00 00 01 	test   BYTE PTR [ebx+0x730],0x1
   1b081:	0f 84 79 01 00 00    	je     1b200 <fl_fread+0x1c0>
   1b087:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
   1b08b:	31 c0                	xor    eax,eax
   1b08d:	85 ed                	test   ebp,ebp
   1b08f:	0f 84 9d 00 00 00    	je     1b132 <fl_fread+0xf2>
   1b095:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
   1b098:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
   1b09b:	39 d7                	cmp    edi,edx
   1b09d:	0f 83 5d 01 00 00    	jae    1b200 <fl_fread+0x1c0>
   1b0a3:	8d 74 3d 00          	lea    esi,[ebp+edi*1+0x0]
   1b0a7:	89 d1                	mov    ecx,edx
   1b0a9:	29 f9                	sub    ecx,edi
   1b0ab:	39 f2                	cmp    edx,esi
   1b0ad:	0f 43 cd             	cmovae ecx,ebp
   1b0b0:	89 fd                	mov    ebp,edi
   1b0b2:	81 e7 ff 01 00 00    	and    edi,0x1ff
   1b0b8:	c1 ed 09             	shr    ebp,0x9
   1b0bb:	85 c9                	test   ecx,ecx
   1b0bd:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
   1b0c1:	7e 6f                	jle    1b132 <fl_fread+0xf2>
   1b0c3:	8d 83 28 05 00 00    	lea    eax,[ebx+0x528]
   1b0c9:	31 f6                	xor    esi,esi
   1b0cb:	85 ff                	test   edi,edi
   1b0cd:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1b0d1:	0f 85 f7 00 00 00    	jne    1b1ce <fl_fread+0x18e>
   1b0d7:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1b0db:	29 f0                	sub    eax,esi
   1b0dd:	3d ff 01 00 00       	cmp    eax,0x1ff
   1b0e2:	0f 8e e6 00 00 00    	jle    1b1ce <fl_fread+0x18e>
   1b0e8:	90                   	nop
   1b0e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b0f0:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
   1b0f4:	c1 f8 09             	sar    eax,0x9
   1b0f7:	83 ec 0c             	sub    esp,0xc
   1b0fa:	50                   	push   eax
   1b0fb:	89 ea                	mov    edx,ebp
   1b0fd:	89 d8                	mov    eax,ebx
   1b0ff:	01 f1                	add    ecx,esi
   1b101:	e8 aa f5 ff ff       	call   1a6b0 <_read_sectors>
   1b106:	83 c4 10             	add    esp,0x10
   1b109:	85 c0                	test   eax,eax
   1b10b:	74 23                	je     1b130 <fl_fread+0xf0>
   1b10d:	89 c1                	mov    ecx,eax
   1b10f:	01 c5                	add    ebp,eax
   1b111:	31 ff                	xor    edi,edi
   1b113:	c1 e1 09             	shl    ecx,0x9
   1b116:	01 4b 08             	add    DWORD PTR [ebx+0x8],ecx
   1b119:	89 ca                	mov    edx,ecx
   1b11b:	01 d6                	add    esi,edx
   1b11d:	39 74 24 04          	cmp    DWORD PTR [esp+0x4],esi
   1b121:	0f 8f 96 00 00 00    	jg     1b1bd <fl_fread+0x17d>
   1b127:	89 f6                	mov    esi,esi
   1b129:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b130:	89 f0                	mov    eax,esi
   1b132:	83 c4 1c             	add    esp,0x1c
   1b135:	5b                   	pop    ebx
   1b136:	5e                   	pop    esi
   1b137:	5f                   	pop    edi
   1b138:	5d                   	pop    ebp
   1b139:	c3                   	ret    
   1b13a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b140:	83 ec 0c             	sub    esp,0xc
   1b143:	53                   	push   ebx
   1b144:	e8 a7 fd ff ff       	call   1aef0 <fl_fflush>
   1b149:	83 c4 10             	add    esp,0x10
   1b14c:	83 ec 0c             	sub    esp,0xc
   1b14f:	89 ea                	mov    edx,ebp
   1b151:	89 d8                	mov    eax,ebx
   1b153:	6a 01                	push   0x1
   1b155:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
   1b159:	e8 52 f5 ff ff       	call   1a6b0 <_read_sectors>
   1b15e:	83 c4 10             	add    esp,0x10
   1b161:	85 c0                	test   eax,eax
   1b163:	74 cb                	je     1b130 <fl_fread+0xf0>
   1b165:	89 ab 28 07 00 00    	mov    DWORD PTR [ebx+0x728],ebp
   1b16b:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1b172:	00 00 00 
   1b175:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1b179:	ba 00 02 00 00       	mov    edx,0x200
   1b17e:	29 fa                	sub    edx,edi
   1b180:	29 f0                	sub    eax,esi
   1b182:	39 c2                	cmp    edx,eax
   1b184:	0f 4f d0             	cmovg  edx,eax
   1b187:	83 ec 04             	sub    esp,0x4
   1b18a:	83 c5 01             	add    ebp,0x1
   1b18d:	52                   	push   edx
   1b18e:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
   1b192:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
   1b196:	57                   	push   edi
   1b197:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
   1b19b:	31 ff                	xor    edi,edi
   1b19d:	01 f0                	add    eax,esi
   1b19f:	50                   	push   eax
   1b1a0:	e8 bb 64 00 00       	call   21660 <memcpy>
   1b1a5:	83 c4 10             	add    esp,0x10
   1b1a8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1b1ac:	89 d1                	mov    ecx,edx
   1b1ae:	01 d6                	add    esi,edx
   1b1b0:	01 4b 08             	add    DWORD PTR [ebx+0x8],ecx
   1b1b3:	39 74 24 04          	cmp    DWORD PTR [esp+0x4],esi
   1b1b7:	0f 8e 73 ff ff ff    	jle    1b130 <fl_fread+0xf0>
   1b1bd:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1b1c1:	29 f0                	sub    eax,esi
   1b1c3:	3d ff 01 00 00       	cmp    eax,0x1ff
   1b1c8:	0f 8f 22 ff ff ff    	jg     1b0f0 <fl_fread+0xb0>
   1b1ce:	39 ab 28 07 00 00    	cmp    DWORD PTR [ebx+0x728],ebp
   1b1d4:	74 9f                	je     1b175 <fl_fread+0x135>
   1b1d6:	8b 83 2c 07 00 00    	mov    eax,DWORD PTR [ebx+0x72c]
   1b1dc:	85 c0                	test   eax,eax
   1b1de:	0f 84 68 ff ff ff    	je     1b14c <fl_fread+0x10c>
   1b1e4:	e9 57 ff ff ff       	jmp    1b140 <fl_fread+0x100>
   1b1e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b1f0:	e8 cb 84 00 00       	call   236c0 <fl_init>
   1b1f5:	e9 6c fe ff ff       	jmp    1b066 <fl_fread+0x26>
   1b1fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b200:	83 c4 1c             	add    esp,0x1c
   1b203:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1b208:	5b                   	pop    ebx
   1b209:	5e                   	pop    esi
   1b20a:	5f                   	pop    edi
   1b20b:	5d                   	pop    ebp
   1b20c:	c3                   	ret    
   1b20d:	8d 76 00             	lea    esi,[esi+0x0]

0001b210 <fl_fgetc>:
fl_fgetc():
   1b210:	83 ec 1c             	sub    esp,0x1c
   1b213:	c6 44 24 0f 00       	mov    BYTE PTR [esp+0xf],0x0
   1b218:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   1b21c:	6a 01                	push   0x1
   1b21e:	6a 01                	push   0x1
   1b220:	8d 44 24 1b          	lea    eax,[esp+0x1b]
   1b224:	50                   	push   eax
   1b225:	e8 16 fe ff ff       	call   1b040 <fl_fread>
   1b22a:	0f b6 54 24 1f       	movzx  edx,BYTE PTR [esp+0x1f]
   1b22f:	83 f8 01             	cmp    eax,0x1
   1b232:	0f 44 c2             	cmove  eax,edx
   1b235:	83 c4 2c             	add    esp,0x2c
   1b238:	c3                   	ret    
   1b239:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001b240 <fl_fgets>:
fl_fgets():
   1b240:	55                   	push   ebp
   1b241:	57                   	push   edi
   1b242:	56                   	push   esi
   1b243:	53                   	push   ebx
   1b244:	83 ec 1c             	sub    esp,0x1c
   1b247:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
   1b24b:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
   1b24f:	85 db                	test   ebx,ebx
   1b251:	7e 6d                	jle    1b2c0 <fl_fgets+0x80>
   1b253:	83 eb 01             	sub    ebx,0x1
   1b256:	31 ff                	xor    edi,edi
   1b258:	8d 6c 24 0f          	lea    ebp,[esp+0xf]
   1b25c:	eb 12                	jmp    1b270 <fl_fgets+0x30>
   1b25e:	66 90                	xchg   ax,ax
   1b260:	85 c0                	test   eax,eax
   1b262:	78 44                	js     1b2a8 <fl_fgets+0x68>
   1b264:	83 c7 01             	add    edi,0x1
   1b267:	83 f8 0a             	cmp    eax,0xa
   1b26a:	88 44 3e ff          	mov    BYTE PTR [esi+edi*1-0x1],al
   1b26e:	74 30                	je     1b2a0 <fl_fgets+0x60>
   1b270:	39 df                	cmp    edi,ebx
   1b272:	74 36                	je     1b2aa <fl_fgets+0x6a>
   1b274:	c6 44 24 0f 00       	mov    BYTE PTR [esp+0xf],0x0
   1b279:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
   1b27d:	6a 01                	push   0x1
   1b27f:	6a 01                	push   0x1
   1b281:	55                   	push   ebp
   1b282:	e8 b9 fd ff ff       	call   1b040 <fl_fread>
   1b287:	83 c4 10             	add    esp,0x10
   1b28a:	83 f8 01             	cmp    eax,0x1
   1b28d:	75 d1                	jne    1b260 <fl_fgets+0x20>
   1b28f:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [esp+0xf]
   1b294:	83 c7 01             	add    edi,0x1
   1b297:	83 f8 0a             	cmp    eax,0xa
   1b29a:	88 44 3e ff          	mov    BYTE PTR [esi+edi*1-0x1],al
   1b29e:	75 d0                	jne    1b270 <fl_fgets+0x30>
   1b2a0:	89 fb                	mov    ebx,edi
   1b2a2:	eb 0a                	jmp    1b2ae <fl_fgets+0x6e>
   1b2a4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b2a8:	89 fb                	mov    ebx,edi
   1b2aa:	85 db                	test   ebx,ebx
   1b2ac:	74 12                	je     1b2c0 <fl_fgets+0x80>
   1b2ae:	c6 04 1e 00          	mov    BYTE PTR [esi+ebx*1],0x0
   1b2b2:	83 c4 1c             	add    esp,0x1c
   1b2b5:	89 f0                	mov    eax,esi
   1b2b7:	5b                   	pop    ebx
   1b2b8:	5e                   	pop    esi
   1b2b9:	5f                   	pop    edi
   1b2ba:	5d                   	pop    ebp
   1b2bb:	c3                   	ret    
   1b2bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b2c0:	83 c4 1c             	add    esp,0x1c
   1b2c3:	31 c0                	xor    eax,eax
   1b2c5:	5b                   	pop    ebx
   1b2c6:	5e                   	pop    esi
   1b2c7:	5f                   	pop    edi
   1b2c8:	5d                   	pop    ebp
   1b2c9:	c3                   	ret    
   1b2ca:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001b2d0 <fl_fseek>:
fl_fseek():
   1b2d0:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   1b2d5:	57                   	push   edi
   1b2d6:	56                   	push   esi
   1b2d7:	53                   	push   ebx
   1b2d8:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1b2dc:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   1b2e0:	85 c0                	test   eax,eax
   1b2e2:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
   1b2e6:	0f 84 94 00 00 00    	je     1b380 <fl_fseek+0xb0>
   1b2ec:	85 db                	test   ebx,ebx
   1b2ee:	0f 84 9c 00 00 00    	je     1b390 <fl_fseek+0xc0>
   1b2f4:	83 fe 02             	cmp    esi,0x2
   1b2f7:	75 08                	jne    1b301 <fl_fseek+0x31>
   1b2f9:	85 ff                	test   edi,edi
   1b2fb:	0f 85 8f 00 00 00    	jne    1b390 <fl_fseek+0xc0>
   1b301:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b306:	85 c0                	test   eax,eax
   1b308:	74 02                	je     1b30c <fl_fseek+0x3c>
   1b30a:	ff d0                	call   eax
   1b30c:	85 f6                	test   esi,esi
   1b30e:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1b315:	ff ff ff 
   1b318:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1b31f:	00 00 00 
   1b322:	74 4c                	je     1b370 <fl_fseek+0xa0>
   1b324:	83 fe 01             	cmp    esi,0x1
   1b327:	74 37                	je     1b360 <fl_fseek+0x90>
   1b329:	83 fe 02             	cmp    esi,0x2
   1b32c:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1b331:	75 0f                	jne    1b342 <fl_fseek+0x72>
   1b333:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   1b336:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
   1b339:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b340:	31 c0                	xor    eax,eax
   1b342:	8b 15 a0 00 12 00    	mov    edx,DWORD PTR ds:0x1200a0
   1b348:	89 c3                	mov    ebx,eax
   1b34a:	85 d2                	test   edx,edx
   1b34c:	74 02                	je     1b350 <fl_fseek+0x80>
   1b34e:	ff d2                	call   edx
   1b350:	89 d8                	mov    eax,ebx
   1b352:	5b                   	pop    ebx
   1b353:	5e                   	pop    esi
   1b354:	5f                   	pop    edi
   1b355:	c3                   	ret    
   1b356:	8d 76 00             	lea    esi,[esi+0x0]
   1b359:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b360:	85 ff                	test   edi,edi
   1b362:	78 3c                	js     1b3a0 <fl_fseek+0xd0>
   1b364:	03 7b 08             	add    edi,DWORD PTR [ebx+0x8]
   1b367:	89 f6                	mov    esi,esi
   1b369:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b370:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   1b373:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
   1b376:	39 c7                	cmp    edi,eax
   1b378:	76 c6                	jbe    1b340 <fl_fseek+0x70>
   1b37a:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
   1b37d:	eb c1                	jmp    1b340 <fl_fseek+0x70>
   1b37f:	90                   	nop
   1b380:	e8 3b 83 00 00       	call   236c0 <fl_init>
   1b385:	e9 62 ff ff ff       	jmp    1b2ec <fl_fseek+0x1c>
   1b38a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b390:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1b395:	eb b9                	jmp    1b350 <fl_fseek+0x80>
   1b397:	89 f6                	mov    esi,esi
   1b399:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b3a0:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
   1b3a3:	89 fa                	mov    edx,edi
   1b3a5:	f7 da                	neg    edx
   1b3a7:	39 d0                	cmp    eax,edx
   1b3a9:	73 15                	jae    1b3c0 <fl_fseek+0xf0>
   1b3ab:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1b3b2:	31 c0                	xor    eax,eax
   1b3b4:	eb 8c                	jmp    1b342 <fl_fseek+0x72>
   1b3b6:	8d 76 00             	lea    esi,[esi+0x0]
   1b3b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b3c0:	01 c7                	add    edi,eax
   1b3c2:	31 c0                	xor    eax,eax
   1b3c4:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
   1b3c7:	e9 76 ff ff ff       	jmp    1b342 <fl_fseek+0x72>
   1b3cc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001b3d0 <fl_fgetpos>:
fl_fgetpos():
   1b3d0:	53                   	push   ebx
   1b3d1:	83 ec 08             	sub    esp,0x8
   1b3d4:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1b3d8:	85 db                	test   ebx,ebx
   1b3da:	74 29                	je     1b405 <fl_fgetpos+0x35>
   1b3dc:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b3e1:	85 c0                	test   eax,eax
   1b3e3:	74 02                	je     1b3e7 <fl_fgetpos+0x17>
   1b3e5:	ff d0                	call   eax
   1b3e7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
   1b3ea:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   1b3ee:	31 db                	xor    ebx,ebx
   1b3f0:	89 10                	mov    DWORD PTR [eax],edx
   1b3f2:	8b 15 a0 00 12 00    	mov    edx,DWORD PTR ds:0x1200a0
   1b3f8:	85 d2                	test   edx,edx
   1b3fa:	74 02                	je     1b3fe <fl_fgetpos+0x2e>
   1b3fc:	ff d2                	call   edx
   1b3fe:	83 c4 08             	add    esp,0x8
   1b401:	89 d8                	mov    eax,ebx
   1b403:	5b                   	pop    ebx
   1b404:	c3                   	ret    
   1b405:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1b40a:	eb f2                	jmp    1b3fe <fl_fgetpos+0x2e>
   1b40c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001b410 <fl_ftell>:
fl_ftell():
   1b410:	53                   	push   ebx
   1b411:	83 ec 08             	sub    esp,0x8
   1b414:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1b418:	85 db                	test   ebx,ebx
   1b41a:	74 24                	je     1b440 <fl_ftell+0x30>
   1b41c:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b421:	85 c0                	test   eax,eax
   1b423:	74 02                	je     1b427 <fl_ftell+0x17>
   1b425:	ff d0                	call   eax
   1b427:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1b42c:	8b 5b 08             	mov    ebx,DWORD PTR [ebx+0x8]
   1b42f:	85 c0                	test   eax,eax
   1b431:	74 02                	je     1b435 <fl_ftell+0x25>
   1b433:	ff d0                	call   eax
   1b435:	83 c4 08             	add    esp,0x8
   1b438:	89 d8                	mov    eax,ebx
   1b43a:	5b                   	pop    ebx
   1b43b:	c3                   	ret    
   1b43c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b440:	83 c4 08             	add    esp,0x8
   1b443:	31 c0                	xor    eax,eax
   1b445:	5b                   	pop    ebx
   1b446:	c3                   	ret    
   1b447:	89 f6                	mov    esi,esi
   1b449:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001b450 <fl_feof>:
fl_feof():
   1b450:	53                   	push   ebx
   1b451:	83 ec 08             	sub    esp,0x8
   1b454:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1b458:	85 db                	test   ebx,ebx
   1b45a:	74 2b                	je     1b487 <fl_feof+0x37>
   1b45c:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b461:	85 c0                	test   eax,eax
   1b463:	74 02                	je     1b467 <fl_feof+0x17>
   1b465:	ff d0                	call   eax
   1b467:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   1b46a:	39 43 08             	cmp    DWORD PTR [ebx+0x8],eax
   1b46d:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1b472:	0f 94 c3             	sete   bl
   1b475:	0f b6 db             	movzx  ebx,bl
   1b478:	f7 db                	neg    ebx
   1b47a:	85 c0                	test   eax,eax
   1b47c:	74 02                	je     1b480 <fl_feof+0x30>
   1b47e:	ff d0                	call   eax
   1b480:	83 c4 08             	add    esp,0x8
   1b483:	89 d8                	mov    eax,ebx
   1b485:	5b                   	pop    ebx
   1b486:	c3                   	ret    
   1b487:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1b48c:	eb f2                	jmp    1b480 <fl_feof+0x30>
   1b48e:	66 90                	xchg   ax,ax

0001b490 <fl_fwrite>:
fl_fwrite():
   1b490:	55                   	push   ebp
   1b491:	57                   	push   edi
   1b492:	56                   	push   esi
   1b493:	53                   	push   ebx
   1b494:	83 ec 1c             	sub    esp,0x1c
   1b497:	8b 35 cc 04 12 00    	mov    esi,DWORD PTR ds:0x1204cc
   1b49d:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
   1b4a1:	85 f6                	test   esi,esi
   1b4a3:	0f 84 37 02 00 00    	je     1b6e0 <fl_fwrite+0x250>
   1b4a9:	85 db                	test   ebx,ebx
   1b4ab:	0f 84 ba 01 00 00    	je     1b66b <fl_fwrite+0x1db>
   1b4b1:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b4b6:	85 c0                	test   eax,eax
   1b4b8:	74 02                	je     1b4bc <fl_fwrite+0x2c>
   1b4ba:	ff d0                	call   eax
   1b4bc:	0f b6 83 30 07 00 00 	movzx  eax,BYTE PTR [ebx+0x730]
   1b4c3:	a8 02                	test   al,0x2
   1b4c5:	0f 84 95 01 00 00    	je     1b660 <fl_fwrite+0x1d0>
   1b4cb:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
   1b4cf:	0f af 54 24 38       	imul   edx,DWORD PTR [esp+0x38]
   1b4d4:	a8 04                	test   al,0x4
   1b4d6:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
   1b4da:	0f 84 10 02 00 00    	je     1b6f0 <fl_fwrite+0x260>
   1b4e0:	8b 6b 0c             	mov    ebp,DWORD PTR [ebx+0xc]
   1b4e3:	89 e8                	mov    eax,ebp
   1b4e5:	89 6b 08             	mov    DWORD PTR [ebx+0x8],ebp
   1b4e8:	81 e5 ff 01 00 00    	and    ebp,0x1ff
   1b4ee:	c1 e8 09             	shr    eax,0x9
   1b4f1:	85 d2                	test   edx,edx
   1b4f3:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1b4f7:	0f 84 3e 01 00 00    	je     1b63b <fl_fwrite+0x1ab>
   1b4fd:	8d 83 28 05 00 00    	lea    eax,[ebx+0x528]
   1b503:	31 ff                	xor    edi,edi
   1b505:	85 ed                	test   ebp,ebp
   1b507:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1b50b:	0f 85 6f 01 00 00    	jne    1b680 <fl_fwrite+0x1f0>
   1b511:	eb 76                	jmp    1b589 <fl_fwrite+0xf9>
   1b513:	90                   	nop
   1b514:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b518:	83 bb 28 07 00 00 ff 	cmp    DWORD PTR [ebx+0x728],0xffffffff
   1b51f:	74 22                	je     1b543 <fl_fwrite+0xb3>
   1b521:	8b 93 2c 07 00 00    	mov    edx,DWORD PTR [ebx+0x72c]
   1b527:	85 d2                	test   edx,edx
   1b529:	0f 85 99 01 00 00    	jne    1b6c8 <fl_fwrite+0x238>
   1b52f:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1b536:	ff ff ff 
   1b539:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1b540:	00 00 00 
   1b543:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
   1b547:	c1 ee 09             	shr    esi,0x9
   1b54a:	83 ec 0c             	sub    esp,0xc
   1b54d:	56                   	push   esi
   1b54e:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   1b552:	89 d8                	mov    eax,ebx
   1b554:	01 f9                	add    ecx,edi
   1b556:	89 f2                	mov    edx,esi
   1b558:	e8 c3 ef ff ff       	call   1a520 <_write_sectors>
   1b55d:	89 c2                	mov    edx,eax
   1b55f:	89 f1                	mov    ecx,esi
   1b561:	c1 e2 09             	shl    edx,0x9
   1b564:	01 c1                	add    ecx,eax
   1b566:	01 d7                	add    edi,edx
   1b568:	03 53 08             	add    edx,DWORD PTR [ebx+0x8]
   1b56b:	89 4c 24 14          	mov    DWORD PTR [esp+0x14],ecx
   1b56f:	83 c4 10             	add    esp,0x10
   1b572:	85 c0                	test   eax,eax
   1b574:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
   1b577:	0f 84 b6 00 00 00    	je     1b633 <fl_fwrite+0x1a3>
   1b57d:	31 ed                	xor    ebp,ebp
   1b57f:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
   1b583:	0f 83 a7 00 00 00    	jae    1b630 <fl_fwrite+0x1a0>
   1b589:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
   1b58d:	29 fe                	sub    esi,edi
   1b58f:	81 fe ff 01 00 00    	cmp    esi,0x1ff
   1b595:	77 81                	ja     1b518 <fl_fwrite+0x88>
   1b597:	b8 00 02 00 00       	mov    eax,0x200
   1b59c:	29 e8                	sub    eax,ebp
   1b59e:	39 c6                	cmp    esi,eax
   1b5a0:	0f 47 f0             	cmova  esi,eax
   1b5a3:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1b5a7:	39 83 28 07 00 00    	cmp    DWORD PTR [ebx+0x728],eax
   1b5ad:	74 49                	je     1b5f8 <fl_fwrite+0x168>
   1b5af:	8b 83 2c 07 00 00    	mov    eax,DWORD PTR [ebx+0x72c]
   1b5b5:	85 c0                	test   eax,eax
   1b5b7:	0f 85 d3 00 00 00    	jne    1b690 <fl_fwrite+0x200>
   1b5bd:	81 fe 00 02 00 00    	cmp    esi,0x200
   1b5c3:	74 1f                	je     1b5e4 <fl_fwrite+0x154>
   1b5c5:	83 ec 0c             	sub    esp,0xc
   1b5c8:	89 d8                	mov    eax,ebx
   1b5ca:	6a 01                	push   0x1
   1b5cc:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
   1b5d0:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
   1b5d4:	e8 d7 f0 ff ff       	call   1a6b0 <_read_sectors>
   1b5d9:	83 c4 10             	add    esp,0x10
   1b5dc:	85 c0                	test   eax,eax
   1b5de:	0f 84 c4 00 00 00    	je     1b6a8 <fl_fwrite+0x218>
   1b5e4:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1b5e8:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1b5ef:	00 00 00 
   1b5f2:	89 83 28 07 00 00    	mov    DWORD PTR [ebx+0x728],eax
   1b5f8:	83 ec 04             	sub    esp,0x4
   1b5fb:	56                   	push   esi
   1b5fc:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1b600:	01 f8                	add    eax,edi
   1b602:	01 f7                	add    edi,esi
   1b604:	50                   	push   eax
   1b605:	03 6c 24 18          	add    ebp,DWORD PTR [esp+0x18]
   1b609:	55                   	push   ebp
   1b60a:	31 ed                	xor    ebp,ebp
   1b60c:	e8 4f 60 00 00       	call   21660 <memcpy>
   1b611:	83 44 24 14 01       	add    DWORD PTR [esp+0x14],0x1
   1b616:	83 c4 10             	add    esp,0x10
   1b619:	01 73 08             	add    DWORD PTR [ebx+0x8],esi
   1b61c:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
   1b620:	c7 83 2c 07 00 00 01 	mov    DWORD PTR [ebx+0x72c],0x1
   1b627:	00 00 00 
   1b62a:	0f 82 59 ff ff ff    	jb     1b589 <fl_fwrite+0xf9>
   1b630:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
   1b633:	3b 53 0c             	cmp    edx,DWORD PTR [ebx+0xc]
   1b636:	76 03                	jbe    1b63b <fl_fwrite+0x1ab>
   1b638:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
   1b63b:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1b640:	c7 43 10 01 00 00 00 	mov    DWORD PTR [ebx+0x10],0x1
   1b647:	85 c0                	test   eax,eax
   1b649:	74 28                	je     1b673 <fl_fwrite+0x1e3>
   1b64b:	ff d0                	call   eax
   1b64d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1b651:	83 c4 1c             	add    esp,0x1c
   1b654:	5b                   	pop    ebx
   1b655:	5e                   	pop    esi
   1b656:	5f                   	pop    edi
   1b657:	5d                   	pop    ebp
   1b658:	c3                   	ret    
   1b659:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b660:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1b665:	85 c0                	test   eax,eax
   1b667:	74 02                	je     1b66b <fl_fwrite+0x1db>
   1b669:	ff d0                	call   eax
   1b66b:	c7 44 24 08 ff ff ff 	mov    DWORD PTR [esp+0x8],0xffffffff
   1b672:	ff 
   1b673:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1b677:	83 c4 1c             	add    esp,0x1c
   1b67a:	5b                   	pop    ebx
   1b67b:	5e                   	pop    esi
   1b67c:	5f                   	pop    edi
   1b67d:	5d                   	pop    ebp
   1b67e:	c3                   	ret    
   1b67f:	90                   	nop
   1b680:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
   1b684:	e9 0e ff ff ff       	jmp    1b597 <fl_fwrite+0x107>
   1b689:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b690:	83 ec 0c             	sub    esp,0xc
   1b693:	53                   	push   ebx
   1b694:	e8 57 f8 ff ff       	call   1aef0 <fl_fflush>
   1b699:	83 c4 10             	add    esp,0x10
   1b69c:	e9 1c ff ff ff       	jmp    1b5bd <fl_fwrite+0x12d>
   1b6a1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b6a8:	83 ec 04             	sub    esp,0x4
   1b6ab:	68 00 02 00 00       	push   0x200
   1b6b0:	6a 00                	push   0x0
   1b6b2:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1b6b6:	e8 c5 56 00 00       	call   20d80 <memset>
   1b6bb:	83 c4 10             	add    esp,0x10
   1b6be:	e9 21 ff ff ff       	jmp    1b5e4 <fl_fwrite+0x154>
   1b6c3:	90                   	nop
   1b6c4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b6c8:	83 ec 0c             	sub    esp,0xc
   1b6cb:	53                   	push   ebx
   1b6cc:	e8 1f f8 ff ff       	call   1aef0 <fl_fflush>
   1b6d1:	83 c4 10             	add    esp,0x10
   1b6d4:	e9 56 fe ff ff       	jmp    1b52f <fl_fwrite+0x9f>
   1b6d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b6e0:	e8 db 7f 00 00       	call   236c0 <fl_init>
   1b6e5:	e9 bf fd ff ff       	jmp    1b4a9 <fl_fwrite+0x19>
   1b6ea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b6f0:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
   1b6f3:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   1b6f7:	89 d0                	mov    eax,edx
   1b6f9:	89 d5                	mov    ebp,edx
   1b6fb:	c1 e8 09             	shr    eax,0x9
   1b6fe:	81 e5 ff 01 00 00    	and    ebp,0x1ff
   1b704:	85 c9                	test   ecx,ecx
   1b706:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1b70a:	0f 85 ed fd ff ff    	jne    1b4fd <fl_fwrite+0x6d>
   1b710:	e9 1e ff ff ff       	jmp    1b633 <fl_fwrite+0x1a3>
   1b715:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1b719:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001b720 <fl_fputc>:
fl_fputc():
   1b720:	53                   	push   ebx
   1b721:	83 ec 18             	sub    esp,0x18
   1b724:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   1b728:	88 5c 24 0f          	mov    BYTE PTR [esp+0xf],bl
   1b72c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   1b730:	6a 01                	push   0x1
   1b732:	6a 01                	push   0x1
   1b734:	8d 44 24 1b          	lea    eax,[esp+0x1b]
   1b738:	50                   	push   eax
   1b739:	e8 52 fd ff ff       	call   1b490 <fl_fwrite>
   1b73e:	83 f8 01             	cmp    eax,0x1
   1b741:	0f 44 c3             	cmove  eax,ebx
   1b744:	83 c4 28             	add    esp,0x28
   1b747:	5b                   	pop    ebx
   1b748:	c3                   	ret    
   1b749:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001b750 <fl_fputs>:
fl_fputs():
   1b750:	53                   	push   ebx
   1b751:	83 ec 14             	sub    esp,0x14
   1b754:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   1b758:	53                   	push   ebx
   1b759:	e8 a2 70 00 00       	call   22800 <strlen>
   1b75e:	83 c4 10             	add    esp,0x10
   1b761:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   1b765:	50                   	push   eax
   1b766:	6a 01                	push   0x1
   1b768:	53                   	push   ebx
   1b769:	e8 22 fd ff ff       	call   1b490 <fl_fwrite>
   1b76e:	83 c4 18             	add    esp,0x18
   1b771:	5b                   	pop    ebx
   1b772:	c3                   	ret    
   1b773:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b779:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001b780 <fl_remove>:
fl_remove():
   1b780:	53                   	push   ebx
   1b781:	83 ec 08             	sub    esp,0x8
   1b784:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b789:	85 c0                	test   eax,eax
   1b78b:	74 02                	je     1b78f <fl_remove+0xf>
   1b78d:	ff d0                	call   eax
   1b78f:	83 ec 08             	sub    esp,0x8
   1b792:	68 7d a0 05 00       	push   0x5a07d
   1b797:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1b79b:	e8 80 f3 ff ff       	call   1ab20 <fl_fopen>
   1b7a0:	83 c4 10             	add    esp,0x10
   1b7a3:	85 c0                	test   eax,eax
   1b7a5:	89 c3                	mov    ebx,eax
   1b7a7:	74 57                	je     1b800 <fl_remove+0x80>
   1b7a9:	83 ec 08             	sub    esp,0x8
   1b7ac:	ff 70 04             	push   DWORD PTR [eax+0x4]
   1b7af:	68 60 00 12 00       	push   0x120060
   1b7b4:	e8 37 21 00 00       	call   1d8f0 <fatfs_free_cluster_chain>
   1b7b9:	83 c4 10             	add    esp,0x10
   1b7bc:	85 c0                	test   eax,eax
   1b7be:	74 40                	je     1b800 <fl_remove+0x80>
   1b7c0:	8d 83 14 01 00 00    	lea    eax,[ebx+0x114]
   1b7c6:	83 ec 04             	sub    esp,0x4
   1b7c9:	50                   	push   eax
   1b7ca:	ff 33                	push   DWORD PTR [ebx]
   1b7cc:	68 60 00 12 00       	push   0x120060
   1b7d1:	e8 fa e6 ff ff       	call   19ed0 <fatfs_mark_file_deleted>
   1b7d6:	83 c4 10             	add    esp,0x10
   1b7d9:	85 c0                	test   eax,eax
   1b7db:	74 23                	je     1b800 <fl_remove+0x80>
   1b7dd:	83 ec 0c             	sub    esp,0xc
   1b7e0:	53                   	push   ebx
   1b7e1:	31 db                	xor    ebx,ebx
   1b7e3:	e8 88 f7 ff ff       	call   1af70 <fl_fclose>
   1b7e8:	83 c4 10             	add    esp,0x10
   1b7eb:	8b 15 a0 00 12 00    	mov    edx,DWORD PTR ds:0x1200a0
   1b7f1:	85 d2                	test   edx,edx
   1b7f3:	74 02                	je     1b7f7 <fl_remove+0x77>
   1b7f5:	ff d2                	call   edx
   1b7f7:	83 c4 08             	add    esp,0x8
   1b7fa:	89 d8                	mov    eax,ebx
   1b7fc:	5b                   	pop    ebx
   1b7fd:	c3                   	ret    
   1b7fe:	66 90                	xchg   ax,ax
   1b800:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1b805:	eb e4                	jmp    1b7eb <fl_remove+0x6b>
   1b807:	89 f6                	mov    esi,esi
   1b809:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001b810 <fl_createdirectory>:
fl_createdirectory():
   1b810:	55                   	push   ebp
   1b811:	57                   	push   edi
   1b812:	56                   	push   esi
   1b813:	53                   	push   ebx
   1b814:	83 ec 4c             	sub    esp,0x4c
   1b817:	8b 15 cc 04 12 00    	mov    edx,DWORD PTR ds:0x1204cc
   1b81d:	85 d2                	test   edx,edx
   1b81f:	0f 84 4b 01 00 00    	je     1b970 <fl_createdirectory+0x160>
   1b825:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1b82a:	85 c0                	test   eax,eax
   1b82c:	74 02                	je     1b830 <fl_createdirectory+0x20>
   1b82e:	ff d0                	call   eax
   1b830:	e8 1b f0 ff ff       	call   1a850 <_allocate_file>
   1b835:	31 ed                	xor    ebp,ebp
   1b837:	85 c0                	test   eax,eax
   1b839:	89 c3                	mov    ebx,eax
   1b83b:	0f 84 17 01 00 00    	je     1b958 <fl_createdirectory+0x148>
   1b841:	8d 70 14             	lea    esi,[eax+0x14]
   1b844:	83 ec 04             	sub    esp,0x4
   1b847:	8d bb 94 00 00 00    	lea    edi,[ebx+0x94]
   1b84d:	68 80 00 00 00       	push   0x80
   1b852:	6a 00                	push   0x0
   1b854:	56                   	push   esi
   1b855:	e8 26 55 00 00       	call   20d80 <memset>
   1b85a:	83 c4 0c             	add    esp,0xc
   1b85d:	68 80 00 00 00       	push   0x80
   1b862:	6a 00                	push   0x0
   1b864:	57                   	push   edi
   1b865:	e8 16 55 00 00       	call   20d80 <memset>
   1b86a:	c7 04 24 80 00 00 00 	mov    DWORD PTR [esp],0x80
   1b871:	57                   	push   edi
   1b872:	68 80 00 00 00       	push   0x80
   1b877:	56                   	push   esi
   1b878:	ff 74 24 7c          	push   DWORD PTR [esp+0x7c]
   1b87c:	e8 3f 16 00 00       	call   1cec0 <fatfs_split_path>
   1b881:	83 c4 20             	add    esp,0x20
   1b884:	83 f8 ff             	cmp    eax,0xffffffff
   1b887:	89 d8                	mov    eax,ebx
   1b889:	0f 84 c4 00 00 00    	je     1b953 <fl_createdirectory+0x143>
   1b88f:	e8 4c eb ff ff       	call   1a3e0 <_check_file_open>
   1b894:	85 c0                	test   eax,eax
   1b896:	0f 85 b5 00 00 00    	jne    1b951 <fl_createdirectory+0x141>
   1b89c:	80 7b 14 00          	cmp    BYTE PTR [ebx+0x14],0x0
   1b8a0:	0f 85 da 00 00 00    	jne    1b980 <fl_createdirectory+0x170>
   1b8a6:	83 ec 0c             	sub    esp,0xc
   1b8a9:	68 60 00 12 00       	push   0x120060
   1b8ae:	e8 bd e1 ff ff       	call   19a70 <fatfs_get_root_cluster>
   1b8b3:	83 c4 10             	add    esp,0x10
   1b8b6:	89 03                	mov    DWORD PTR [ebx],eax
   1b8b8:	8d 54 24 20          	lea    edx,[esp+0x20]
   1b8bc:	52                   	push   edx
   1b8bd:	57                   	push   edi
   1b8be:	50                   	push   eax
   1b8bf:	68 60 00 12 00       	push   0x120060
   1b8c4:	e8 b7 e1 ff ff       	call   19a80 <fatfs_get_file_entry>
   1b8c9:	83 c4 10             	add    esp,0x10
   1b8cc:	83 f8 01             	cmp    eax,0x1
   1b8cf:	0f 84 ab 01 00 00    	je     1ba80 <fl_createdirectory+0x270>
   1b8d5:	8d 43 04             	lea    eax,[ebx+0x4]
   1b8d8:	c7 43 04 00 00 00 00 	mov    DWORD PTR [ebx+0x4],0x0
   1b8df:	6a 01                	push   0x1
   1b8e1:	50                   	push   eax
   1b8e2:	6a 01                	push   0x1
   1b8e4:	68 60 00 12 00       	push   0x120060
   1b8e9:	e8 22 22 00 00       	call   1db10 <fatfs_allocate_free_space>
   1b8ee:	83 c4 10             	add    esp,0x10
   1b8f1:	85 c0                	test   eax,eax
   1b8f3:	89 c5                	mov    ebp,eax
   1b8f5:	74 5a                	je     1b951 <fl_createdirectory+0x141>
   1b8f7:	8d 83 28 05 00 00    	lea    eax,[ebx+0x528]
   1b8fd:	83 ec 04             	sub    esp,0x4
   1b900:	31 f6                	xor    esi,esi
   1b902:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1b906:	68 00 02 00 00       	push   0x200
   1b90b:	6a 00                	push   0x0
   1b90d:	50                   	push   eax
   1b90e:	e8 6d 54 00 00       	call   20d80 <memset>
   1b913:	83 c4 10             	add    esp,0x10
   1b916:	80 3d 60 00 12 00 00 	cmp    BYTE PTR ds:0x120060,0x0
   1b91d:	75 17                	jne    1b936 <fl_createdirectory+0x126>
   1b91f:	eb 7f                	jmp    1b9a0 <fl_createdirectory+0x190>
   1b921:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1b928:	0f b6 05 60 00 12 00 	movzx  eax,BYTE PTR ds:0x120060
   1b92f:	83 c6 01             	add    esi,0x1
   1b932:	39 c6                	cmp    esi,eax
   1b934:	7d 6a                	jge    1b9a0 <fl_createdirectory+0x190>
   1b936:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   1b93a:	56                   	push   esi
   1b93b:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1b93e:	68 60 00 12 00       	push   0x120060
   1b943:	e8 98 df ff ff       	call   198e0 <fatfs_write_sector>
   1b948:	83 c4 10             	add    esp,0x10
   1b94b:	85 c0                	test   eax,eax
   1b94d:	89 c5                	mov    ebp,eax
   1b94f:	75 d7                	jne    1b928 <fl_createdirectory+0x118>
   1b951:	89 d8                	mov    eax,ebx
   1b953:	e8 58 ef ff ff       	call   1a8b0 <_free_file>
   1b958:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1b95d:	85 c0                	test   eax,eax
   1b95f:	74 02                	je     1b963 <fl_createdirectory+0x153>
   1b961:	ff d0                	call   eax
   1b963:	83 c4 4c             	add    esp,0x4c
   1b966:	89 e8                	mov    eax,ebp
   1b968:	5b                   	pop    ebx
   1b969:	5e                   	pop    esi
   1b96a:	5f                   	pop    edi
   1b96b:	5d                   	pop    ebp
   1b96c:	c3                   	ret    
   1b96d:	8d 76 00             	lea    esi,[esi+0x0]
   1b970:	e8 4b 7d 00 00       	call   236c0 <fl_init>
   1b975:	e9 ab fe ff ff       	jmp    1b825 <fl_createdirectory+0x15>
   1b97a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1b980:	89 da                	mov    edx,ebx
   1b982:	89 f0                	mov    eax,esi
   1b984:	e8 d7 ea ff ff       	call   1a460 <_open_directory>
   1b989:	85 c0                	test   eax,eax
   1b98b:	89 c5                	mov    ebp,eax
   1b98d:	74 c2                	je     1b951 <fl_createdirectory+0x141>
   1b98f:	8b 03                	mov    eax,DWORD PTR [ebx]
   1b991:	e9 22 ff ff ff       	jmp    1b8b8 <fl_createdirectory+0xa8>
   1b996:	8d 76 00             	lea    esi,[esi+0x0]
   1b999:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1b9a0:	8d ab 14 01 00 00    	lea    ebp,[ebx+0x114]
   1b9a6:	be 01 00 00 00       	mov    esi,0x1
   1b9ab:	eb 12                	jmp    1b9bf <fl_createdirectory+0x1af>
   1b9ad:	8d 76 00             	lea    esi,[esi+0x0]
   1b9b0:	81 fe 0f 27 00 00    	cmp    esi,0x270f
   1b9b6:	0f 84 f3 00 00 00    	je     1baaf <fl_createdirectory+0x29f>
   1b9bc:	83 c6 01             	add    esi,0x1
   1b9bf:	83 ec 08             	sub    esp,0x8
   1b9c2:	57                   	push   edi
   1b9c3:	8d 44 24 21          	lea    eax,[esp+0x21]
   1b9c7:	50                   	push   eax
   1b9c8:	e8 03 10 00 00       	call   1c9d0 <fatfs_lfn_create_sfn>
   1b9cd:	89 f0                	mov    eax,esi
   1b9cf:	83 c4 10             	add    esp,0x10
   1b9d2:	83 e8 01             	sub    eax,0x1
   1b9d5:	0f 84 f5 00 00 00    	je     1bad0 <fl_createdirectory+0x2c0>
   1b9db:	83 ec 04             	sub    esp,0x4
   1b9de:	50                   	push   eax
   1b9df:	8d 44 24 1d          	lea    eax,[esp+0x1d]
   1b9e3:	50                   	push   eax
   1b9e4:	55                   	push   ebp
   1b9e5:	e8 16 11 00 00       	call   1cb00 <fatfs_lfn_generate_tail>
   1b9ea:	83 c4 0c             	add    esp,0xc
   1b9ed:	55                   	push   ebp
   1b9ee:	ff 33                	push   DWORD PTR [ebx]
   1b9f0:	68 60 00 12 00       	push   0x120060
   1b9f5:	e8 56 e2 ff ff       	call   19c50 <fatfs_sfn_exists>
   1b9fa:	83 c4 10             	add    esp,0x10
   1b9fd:	85 c0                	test   eax,eax
   1b9ff:	75 af                	jne    1b9b0 <fl_createdirectory+0x1a0>
   1ba01:	83 ec 04             	sub    esp,0x4
   1ba04:	6a 01                	push   0x1
   1ba06:	6a 00                	push   0x0
   1ba08:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1ba0b:	55                   	push   ebp
   1ba0c:	57                   	push   edi
   1ba0d:	ff 33                	push   DWORD PTR [ebx]
   1ba0f:	68 60 00 12 00       	push   0x120060
   1ba14:	e8 c7 21 00 00       	call   1dbe0 <fatfs_add_file_entry>
   1ba19:	83 c4 20             	add    esp,0x20
   1ba1c:	85 c0                	test   eax,eax
   1ba1e:	89 c5                	mov    ebp,eax
   1ba20:	74 6e                	je     1ba90 <fl_createdirectory+0x280>
   1ba22:	83 ec 0c             	sub    esp,0xc
   1ba25:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
   1ba2c:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1ba33:	c7 83 28 07 00 00 ff 	mov    DWORD PTR [ebx+0x728],0xffffffff
   1ba3a:	ff ff ff 
   1ba3d:	c7 83 2c 07 00 00 00 	mov    DWORD PTR [ebx+0x72c],0x0
   1ba44:	00 00 00 
   1ba47:	bd 01 00 00 00       	mov    ebp,0x1
   1ba4c:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
   1ba53:	c7 83 20 05 00 00 ff 	mov    DWORD PTR [ebx+0x520],0xffffffff
   1ba5a:	ff ff ff 
   1ba5d:	c7 83 24 05 00 00 ff 	mov    DWORD PTR [ebx+0x524],0xffffffff
   1ba64:	ff ff ff 
   1ba67:	68 60 00 12 00       	push   0x120060
   1ba6c:	e8 cf 1a 00 00       	call   1d540 <fatfs_fat_purge>
   1ba71:	89 d8                	mov    eax,ebx
   1ba73:	e8 38 ee ff ff       	call   1a8b0 <_free_file>
   1ba78:	83 c4 10             	add    esp,0x10
   1ba7b:	e9 d8 fe ff ff       	jmp    1b958 <fl_createdirectory+0x148>
   1ba80:	89 d8                	mov    eax,ebx
   1ba82:	31 ed                	xor    ebp,ebp
   1ba84:	e8 27 ee ff ff       	call   1a8b0 <_free_file>
   1ba89:	e9 ca fe ff ff       	jmp    1b958 <fl_createdirectory+0x148>
   1ba8e:	66 90                	xchg   ax,ax
   1ba90:	83 ec 08             	sub    esp,0x8
   1ba93:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1ba96:	68 60 00 12 00       	push   0x120060
   1ba9b:	e8 50 1e 00 00       	call   1d8f0 <fatfs_free_cluster_chain>
   1baa0:	89 d8                	mov    eax,ebx
   1baa2:	e8 09 ee ff ff       	call   1a8b0 <_free_file>
   1baa7:	83 c4 10             	add    esp,0x10
   1baaa:	e9 a9 fe ff ff       	jmp    1b958 <fl_createdirectory+0x148>
   1baaf:	83 ec 08             	sub    esp,0x8
   1bab2:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1bab5:	31 ed                	xor    ebp,ebp
   1bab7:	68 60 00 12 00       	push   0x120060
   1babc:	e8 2f 1e 00 00       	call   1d8f0 <fatfs_free_cluster_chain>
   1bac1:	89 d8                	mov    eax,ebx
   1bac3:	e8 e8 ed ff ff       	call   1a8b0 <_free_file>
   1bac8:	83 c4 10             	add    esp,0x10
   1bacb:	e9 88 fe ff ff       	jmp    1b958 <fl_createdirectory+0x148>
   1bad0:	50                   	push   eax
   1bad1:	6a 0b                	push   0xb
   1bad3:	8d 44 24 1d          	lea    eax,[esp+0x1d]
   1bad7:	50                   	push   eax
   1bad8:	55                   	push   ebp
   1bad9:	e8 82 5b 00 00       	call   21660 <memcpy>
   1bade:	83 c4 0c             	add    esp,0xc
   1bae1:	55                   	push   ebp
   1bae2:	ff 33                	push   DWORD PTR [ebx]
   1bae4:	68 60 00 12 00       	push   0x120060
   1bae9:	e8 62 e1 ff ff       	call   19c50 <fatfs_sfn_exists>
   1baee:	83 c4 10             	add    esp,0x10
   1baf1:	85 c0                	test   eax,eax
   1baf3:	0f 85 c3 fe ff ff    	jne    1b9bc <fl_createdirectory+0x1ac>
   1baf9:	e9 03 ff ff ff       	jmp    1ba01 <fl_createdirectory+0x1f1>
   1bafe:	66 90                	xchg   ax,ax

0001bb00 <fl_opendir>:
fl_opendir():
   1bb00:	56                   	push   esi
   1bb01:	53                   	push   ebx
   1bb02:	83 ec 14             	sub    esp,0x14
   1bb05:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   1bb0a:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   1bb0e:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
   1bb12:	c7 44 24 0c ff ff ff 	mov    DWORD PTR [esp+0xc],0xffffffff
   1bb19:	ff 
   1bb1a:	85 c0                	test   eax,eax
   1bb1c:	74 52                	je     1bb70 <fl_opendir+0x70>
   1bb1e:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1bb23:	85 c0                	test   eax,eax
   1bb25:	74 02                	je     1bb29 <fl_opendir+0x29>
   1bb27:	ff d0                	call   eax
   1bb29:	83 ec 0c             	sub    esp,0xc
   1bb2c:	56                   	push   esi
   1bb2d:	e8 3e 12 00 00       	call   1cd70 <fatfs_total_path_levels>
   1bb32:	83 c4 10             	add    esp,0x10
   1bb35:	83 f8 ff             	cmp    eax,0xffffffff
   1bb38:	74 46                	je     1bb80 <fl_opendir+0x80>
   1bb3a:	8d 54 24 0c          	lea    edx,[esp+0xc]
   1bb3e:	89 f0                	mov    eax,esi
   1bb40:	e8 1b e9 ff ff       	call   1a460 <_open_directory>
   1bb45:	85 c0                	test   eax,eax
   1bb47:	75 5f                	jne    1bba8 <fl_opendir+0xa8>
   1bb49:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1bb4e:	85 c0                	test   eax,eax
   1bb50:	74 02                	je     1bb54 <fl_opendir+0x54>
   1bb52:	ff d0                	call   eax
   1bb54:	83 7c 24 0c ff       	cmp    DWORD PTR [esp+0xc],0xffffffff
   1bb59:	b8 00 00 00 00       	mov    eax,0x0
   1bb5e:	0f 45 c3             	cmovne eax,ebx
   1bb61:	83 c4 14             	add    esp,0x14
   1bb64:	5b                   	pop    ebx
   1bb65:	5e                   	pop    esi
   1bb66:	c3                   	ret    
   1bb67:	89 f6                	mov    esi,esi
   1bb69:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1bb70:	e8 4b 7b 00 00       	call   236c0 <fl_init>
   1bb75:	eb a7                	jmp    1bb1e <fl_opendir+0x1e>
   1bb77:	89 f6                	mov    esi,esi
   1bb79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1bb80:	83 ec 0c             	sub    esp,0xc
   1bb83:	68 60 00 12 00       	push   0x120060
   1bb88:	e8 e3 de ff ff       	call   19a70 <fatfs_get_root_cluster>
   1bb8d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
   1bb91:	83 c4 10             	add    esp,0x10
   1bb94:	83 ec 04             	sub    esp,0x4
   1bb97:	50                   	push   eax
   1bb98:	53                   	push   ebx
   1bb99:	68 60 00 12 00       	push   0x120060
   1bb9e:	e8 3d e4 ff ff       	call   19fe0 <fatfs_list_directory_start>
   1bba3:	83 c4 10             	add    esp,0x10
   1bba6:	eb a1                	jmp    1bb49 <fl_opendir+0x49>
   1bba8:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1bbac:	eb e6                	jmp    1bb94 <fl_opendir+0x94>
   1bbae:	66 90                	xchg   ax,ax

0001bbb0 <fl_readdir>:
fl_readdir():
   1bbb0:	53                   	push   ebx
   1bbb1:	83 ec 08             	sub    esp,0x8
   1bbb4:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   1bbb9:	85 c0                	test   eax,eax
   1bbbb:	74 43                	je     1bc00 <fl_readdir+0x50>
   1bbbd:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1bbc2:	85 c0                	test   eax,eax
   1bbc4:	74 02                	je     1bbc8 <fl_readdir+0x18>
   1bbc6:	ff d0                	call   eax
   1bbc8:	83 ec 04             	sub    esp,0x4
   1bbcb:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1bbcf:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1bbd3:	68 60 00 12 00       	push   0x120060
   1bbd8:	e8 23 e4 ff ff       	call   1a000 <fatfs_list_directory_next>
   1bbdd:	8b 15 a0 00 12 00    	mov    edx,DWORD PTR ds:0x1200a0
   1bbe3:	83 c4 10             	add    esp,0x10
   1bbe6:	89 c3                	mov    ebx,eax
   1bbe8:	85 d2                	test   edx,edx
   1bbea:	74 02                	je     1bbee <fl_readdir+0x3e>
   1bbec:	ff d2                	call   edx
   1bbee:	31 c0                	xor    eax,eax
   1bbf0:	85 db                	test   ebx,ebx
   1bbf2:	0f 94 c0             	sete   al
   1bbf5:	83 c4 08             	add    esp,0x8
   1bbf8:	f7 d8                	neg    eax
   1bbfa:	5b                   	pop    ebx
   1bbfb:	c3                   	ret    
   1bbfc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1bc00:	e8 bb 7a 00 00       	call   236c0 <fl_init>
   1bc05:	eb b6                	jmp    1bbbd <fl_readdir+0xd>
   1bc07:	89 f6                	mov    esi,esi
   1bc09:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001bc10 <fl_listdirectory>:
fl_listdirectory():
   1bc10:	55                   	push   ebp
   1bc11:	57                   	push   edi
   1bc12:	56                   	push   esi
   1bc13:	53                   	push   ebx
   1bc14:	81 ec cc 00 00 00    	sub    esp,0xcc
   1bc1a:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   1bc1f:	8b 9c 24 e0 00 00 00 	mov    ebx,DWORD PTR [esp+0xe0]
   1bc26:	85 c0                	test   eax,eax
   1bc28:	0f 84 12 01 00 00    	je     1bd40 <fl_listdirectory+0x130>
   1bc2e:	83 ec 08             	sub    esp,0x8
   1bc31:	53                   	push   ebx
   1bc32:	68 34 3a 06 00       	push   0x63a34
   1bc37:	e8 24 6a 00 00       	call   22660 <printk>
   1bc3c:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   1bc41:	83 c4 10             	add    esp,0x10
   1bc44:	85 c0                	test   eax,eax
   1bc46:	74 02                	je     1bc4a <fl_listdirectory+0x3a>
   1bc48:	ff d0                	call   eax
   1bc4a:	83 ec 08             	sub    esp,0x8
   1bc4d:	8d 74 24 24          	lea    esi,[esp+0x24]
   1bc51:	56                   	push   esi
   1bc52:	53                   	push   ebx
   1bc53:	e8 a8 fe ff ff       	call   1bb00 <fl_opendir>
   1bc58:	83 c4 10             	add    esp,0x10
   1bc5b:	85 c0                	test   eax,eax
   1bc5d:	8d 5c 24 28          	lea    ebx,[esp+0x28]
   1bc61:	8d 6c 24 18          	lea    ebp,[esp+0x18]
   1bc65:	8d 7c 24 08          	lea    edi,[esp+0x8]
   1bc69:	0f 84 b1 00 00 00    	je     1bd20 <fl_listdirectory+0x110>
   1bc6f:	90                   	nop
   1bc70:	83 ec 08             	sub    esp,0x8
   1bc73:	53                   	push   ebx
   1bc74:	56                   	push   esi
   1bc75:	e8 36 ff ff ff       	call   1bbb0 <fl_readdir>
   1bc7a:	83 c4 10             	add    esp,0x10
   1bc7d:	85 c0                	test   eax,eax
   1bc7f:	0f 85 9b 00 00 00    	jne    1bd20 <fl_listdirectory+0x110>
   1bc85:	55                   	push   ebp
   1bc86:	57                   	push   edi
   1bc87:	8d 44 24 18          	lea    eax,[esp+0x18]
   1bc8b:	50                   	push   eax
   1bc8c:	0f b7 84 24 c2 00 00 	movzx  eax,WORD PTR [esp+0xc2]
   1bc93:	00 
   1bc94:	50                   	push   eax
   1bc95:	e8 86 0f 00 00       	call   1cc20 <fatfs_convert_from_fat_time>
   1bc9a:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   1bc9e:	50                   	push   eax
   1bc9f:	8d 44 24 28          	lea    eax,[esp+0x28]
   1bca3:	50                   	push   eax
   1bca4:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   1bca8:	50                   	push   eax
   1bca9:	0f b7 84 24 d4 00 00 	movzx  eax,WORD PTR [esp+0xd4]
   1bcb0:	00 
   1bcb1:	50                   	push   eax
   1bcb2:	e8 99 0f 00 00       	call   1cc50 <fatfs_convert_from_fat_date>
   1bcb7:	83 c4 18             	add    esp,0x18
   1bcba:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1bcbe:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1bcc2:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1bcc6:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1bcca:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   1bcce:	68 30 4f 08 00       	push   0x84f30
   1bcd3:	e8 88 69 00 00       	call   22660 <printk>
   1bcd8:	83 c4 20             	add    esp,0x20
   1bcdb:	80 bc 24 a8 00 00 00 	cmp    BYTE PTR [esp+0xa8],0x0
   1bce2:	00 
   1bce3:	74 1b                	je     1bd00 <fl_listdirectory+0xf0>
   1bce5:	83 ec 08             	sub    esp,0x8
   1bce8:	53                   	push   ebx
   1bce9:	68 45 3a 06 00       	push   0x63a45
   1bcee:	e8 6d 69 00 00       	call   22660 <printk>
   1bcf3:	83 c4 10             	add    esp,0x10
   1bcf6:	e9 75 ff ff ff       	jmp    1bc70 <fl_listdirectory+0x60>
   1bcfb:	90                   	nop
   1bcfc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1bd00:	83 ec 04             	sub    esp,0x4
   1bd03:	ff b4 24 b4 00 00 00 	push   DWORD PTR [esp+0xb4]
   1bd0a:	53                   	push   ebx
   1bd0b:	68 50 3a 06 00       	push   0x63a50
   1bd10:	e8 4b 69 00 00       	call   22660 <printk>
   1bd15:	83 c4 10             	add    esp,0x10
   1bd18:	e9 53 ff ff ff       	jmp    1bc70 <fl_listdirectory+0x60>
   1bd1d:	8d 76 00             	lea    esi,[esi+0x0]
   1bd20:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   1bd25:	85 c0                	test   eax,eax
   1bd27:	74 02                	je     1bd2b <fl_listdirectory+0x11b>
   1bd29:	ff d0                	call   eax
   1bd2b:	81 c4 cc 00 00 00    	add    esp,0xcc
   1bd31:	5b                   	pop    ebx
   1bd32:	5e                   	pop    esi
   1bd33:	5f                   	pop    edi
   1bd34:	5d                   	pop    ebp
   1bd35:	c3                   	ret    
   1bd36:	8d 76 00             	lea    esi,[esi+0x0]
   1bd39:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1bd40:	e8 7b 79 00 00       	call   236c0 <fl_init>
   1bd45:	e9 e4 fe ff ff       	jmp    1bc2e <fl_listdirectory+0x1e>
   1bd4a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001bd50 <fl_closedir>:
fl_closedir():
   1bd50:	31 c0                	xor    eax,eax
   1bd52:	c3                   	ret    
   1bd53:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1bd59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001bd60 <fl_is_dir>:
fl_is_dir():
   1bd60:	83 ec 24             	sub    esp,0x24
   1bd63:	8d 44 24 0c          	lea    eax,[esp+0xc]
   1bd67:	50                   	push   eax
   1bd68:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
   1bd6c:	e8 8f fd ff ff       	call   1bb00 <fl_opendir>
   1bd71:	85 c0                	test   eax,eax
   1bd73:	0f 95 c0             	setne  al
   1bd76:	83 c4 2c             	add    esp,0x2c
   1bd79:	0f b6 c0             	movzx  eax,al
   1bd7c:	c3                   	ret    
   1bd7d:	8d 76 00             	lea    esi,[esi+0x0]

0001bd80 <fl_format>:
fl_format():
   1bd80:	83 ec 10             	sub    esp,0x10
   1bd83:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1bd87:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   1bd8b:	68 60 00 12 00       	push   0x120060
   1bd90:	e8 9b 07 00 00       	call   1c530 <fatfs_format>
   1bd95:	83 c4 1c             	add    esp,0x1c
   1bd98:	c3                   	ret    
   1bd99:	66 90                	xchg   ax,ax
   1bd9b:	66 90                	xchg   ax,ax
   1bd9d:	66 90                	xchg   ax,ax
   1bd9f:	90                   	nop

0001bda0 <fatfs_erase_fat>:
fatfs_erase_fat():
   1bda0:	57                   	push   edi
   1bda1:	56                   	push   esi
   1bda2:	8d 78 44             	lea    edi,[eax+0x44]
   1bda5:	53                   	push   ebx
   1bda6:	89 d6                	mov    esi,edx
   1bda8:	89 c3                	mov    ebx,eax
   1bdaa:	83 ec 04             	sub    esp,0x4
   1bdad:	68 00 02 00 00       	push   0x200
   1bdb2:	6a 00                	push   0x0
   1bdb4:	57                   	push   edi
   1bdb5:	e8 c6 4f 00 00       	call   20d80 <memset>
   1bdba:	83 c4 10             	add    esp,0x10
   1bdbd:	85 f6                	test   esi,esi
   1bdbf:	c6 43 44 f8          	mov    BYTE PTR [ebx+0x44],0xf8
   1bdc3:	c6 43 45 ff          	mov    BYTE PTR [ebx+0x45],0xff
   1bdc7:	c6 43 46 ff          	mov    BYTE PTR [ebx+0x46],0xff
   1bdcb:	75 23                	jne    1bdf0 <fatfs_erase_fat+0x50>
   1bdcd:	c6 43 47 ff          	mov    BYTE PTR [ebx+0x47],0xff
   1bdd1:	83 ec 04             	sub    esp,0x4
   1bdd4:	6a 01                	push   0x1
   1bdd6:	57                   	push   edi
   1bdd7:	ff 73 14             	push   DWORD PTR [ebx+0x14]
   1bdda:	ff 53 38             	call   DWORD PTR [ebx+0x38]
   1bddd:	83 c4 10             	add    esp,0x10
   1bde0:	85 c0                	test   eax,eax
   1bde2:	75 3c                	jne    1be20 <fatfs_erase_fat+0x80>
   1bde4:	5b                   	pop    ebx
   1bde5:	31 c0                	xor    eax,eax
   1bde7:	5e                   	pop    esi
   1bde8:	5f                   	pop    edi
   1bde9:	c3                   	ret    
   1bdea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1bdf0:	c6 43 47 0f          	mov    BYTE PTR [ebx+0x47],0xf
   1bdf4:	c6 43 48 ff          	mov    BYTE PTR [ebx+0x48],0xff
   1bdf8:	c6 43 49 ff          	mov    BYTE PTR [ebx+0x49],0xff
   1bdfc:	c6 43 4a ff          	mov    BYTE PTR [ebx+0x4a],0xff
   1be00:	c6 43 4b ff          	mov    BYTE PTR [ebx+0x4b],0xff
   1be04:	c6 43 4c ff          	mov    BYTE PTR [ebx+0x4c],0xff
   1be08:	c6 43 4d ff          	mov    BYTE PTR [ebx+0x4d],0xff
   1be0c:	c6 43 4e ff          	mov    BYTE PTR [ebx+0x4e],0xff
   1be10:	c6 43 4f 0f          	mov    BYTE PTR [ebx+0x4f],0xf
   1be14:	eb bb                	jmp    1bdd1 <fatfs_erase_fat+0x31>
   1be16:	8d 76 00             	lea    esi,[esi+0x0]
   1be19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1be20:	83 ec 04             	sub    esp,0x4
   1be23:	be 01 00 00 00       	mov    esi,0x1
   1be28:	68 00 02 00 00       	push   0x200
   1be2d:	6a 00                	push   0x0
   1be2f:	57                   	push   edi
   1be30:	e8 4b 4f 00 00       	call   20d80 <memset>
   1be35:	0f b6 43 2c          	movzx  eax,BYTE PTR [ebx+0x2c]
   1be39:	83 c4 10             	add    esp,0x10
   1be3c:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
   1be40:	83 f8 01             	cmp    eax,0x1
   1be43:	77 1a                	ja     1be5f <fatfs_erase_fat+0xbf>
   1be45:	eb 39                	jmp    1be80 <fatfs_erase_fat+0xe0>
   1be47:	89 f6                	mov    esi,esi
   1be49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1be50:	0f b6 43 2c          	movzx  eax,BYTE PTR [ebx+0x2c]
   1be54:	83 c6 01             	add    esi,0x1
   1be57:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
   1be5b:	39 f0                	cmp    eax,esi
   1be5d:	76 21                	jbe    1be80 <fatfs_erase_fat+0xe0>
   1be5f:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
   1be62:	83 ec 04             	sub    esp,0x4
   1be65:	6a 01                	push   0x1
   1be67:	57                   	push   edi
   1be68:	01 f0                	add    eax,esi
   1be6a:	50                   	push   eax
   1be6b:	ff 53 38             	call   DWORD PTR [ebx+0x38]
   1be6e:	83 c4 10             	add    esp,0x10
   1be71:	85 c0                	test   eax,eax
   1be73:	75 db                	jne    1be50 <fatfs_erase_fat+0xb0>
   1be75:	e9 6a ff ff ff       	jmp    1bde4 <fatfs_erase_fat+0x44>
   1be7a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1be80:	5b                   	pop    ebx
   1be81:	b8 01 00 00 00       	mov    eax,0x1
   1be86:	5e                   	pop    esi
   1be87:	5f                   	pop    edi
   1be88:	c3                   	ret    
   1be89:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001be90 <fatfs_erase_sectors>:
fatfs_erase_sectors():
   1be90:	55                   	push   ebp
   1be91:	57                   	push   edi
   1be92:	89 c7                	mov    edi,eax
   1be94:	56                   	push   esi
   1be95:	53                   	push   ebx
   1be96:	8d 70 44             	lea    esi,[eax+0x44]
   1be99:	89 d3                	mov    ebx,edx
   1be9b:	83 ec 20             	sub    esp,0x20
   1be9e:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
   1bea2:	68 00 02 00 00       	push   0x200
   1bea7:	6a 00                	push   0x0
   1bea9:	56                   	push   esi
   1beaa:	e8 d1 4e 00 00       	call   20d80 <memset>
   1beaf:	83 c4 10             	add    esp,0x10
   1beb2:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1beb6:	85 c9                	test   ecx,ecx
   1beb8:	8d 2c 19             	lea    ebp,[ecx+ebx*1]
   1bebb:	7f 0a                	jg     1bec7 <fatfs_erase_sectors+0x37>
   1bebd:	eb 21                	jmp    1bee0 <fatfs_erase_sectors+0x50>
   1bebf:	90                   	nop
   1bec0:	83 c3 01             	add    ebx,0x1
   1bec3:	39 eb                	cmp    ebx,ebp
   1bec5:	74 19                	je     1bee0 <fatfs_erase_sectors+0x50>
   1bec7:	83 ec 04             	sub    esp,0x4
   1beca:	6a 01                	push   0x1
   1becc:	56                   	push   esi
   1becd:	53                   	push   ebx
   1bece:	ff 57 38             	call   DWORD PTR [edi+0x38]
   1bed1:	83 c4 10             	add    esp,0x10
   1bed4:	85 c0                	test   eax,eax
   1bed6:	75 e8                	jne    1bec0 <fatfs_erase_sectors+0x30>
   1bed8:	83 c4 1c             	add    esp,0x1c
   1bedb:	5b                   	pop    ebx
   1bedc:	5e                   	pop    esi
   1bedd:	5f                   	pop    edi
   1bede:	5d                   	pop    ebp
   1bedf:	c3                   	ret    
   1bee0:	83 c4 1c             	add    esp,0x1c
   1bee3:	b8 01 00 00 00       	mov    eax,0x1
   1bee8:	5b                   	pop    ebx
   1bee9:	5e                   	pop    esi
   1beea:	5f                   	pop    edi
   1beeb:	5d                   	pop    ebp
   1beec:	c3                   	ret    
   1beed:	8d 76 00             	lea    esi,[esi+0x0]

0001bef0 <fatfs_format_fat16>:
fatfs_format_fat16():
   1bef0:	55                   	push   ebp
   1bef1:	57                   	push   edi
   1bef2:	56                   	push   esi
   1bef3:	53                   	push   ebx
   1bef4:	83 ec 18             	sub    esp,0x18
   1bef7:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
   1befb:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   1beff:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   1bf03:	c7 83 44 02 00 00 ff 	mov    DWORD PTR [ebx+0x244],0xffffffff
   1bf0a:	ff ff ff 
   1bf0d:	c7 83 48 02 00 00 00 	mov    DWORD PTR [ebx+0x248],0x0
   1bf14:	00 00 00 
   1bf17:	c7 43 24 00 00 00 00 	mov    DWORD PTR [ebx+0x24],0x0
   1bf1e:	53                   	push   ebx
   1bf1f:	e8 bc 15 00 00       	call   1d4e0 <fatfs_fat_init>
   1bf24:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   1bf27:	83 c4 10             	add    esp,0x10
   1bf2a:	85 c0                	test   eax,eax
   1bf2c:	0f 84 46 02 00 00    	je     1c178 <fatfs_format_fat16+0x288>
   1bf32:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   1bf35:	85 c0                	test   eax,eax
   1bf37:	0f 84 3b 02 00 00    	je     1c178 <fatfs_format_fat16+0x288>
   1bf3d:	31 ff                	xor    edi,edi
   1bf3f:	83 ec 04             	sub    esp,0x4
   1bf42:	c7 43 30 00 00 00 00 	mov    DWORD PTR [ebx+0x30],0x0
   1bf49:	66 89 7b 18          	mov    WORD PTR [ebx+0x18],di
   1bf4d:	8d 7b 44             	lea    edi,[ebx+0x44]
   1bf50:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
   1bf57:	c7 43 1c 00 00 00 00 	mov    DWORD PTR [ebx+0x1c],0x0
   1bf5e:	68 00 02 00 00       	push   0x200
   1bf63:	6a 00                	push   0x0
   1bf65:	57                   	push   edi
   1bf66:	e8 15 4e 00 00       	call   20d80 <memset>
   1bf6b:	0f b6 15 e4 3f 02 00 	movzx  edx,BYTE PTR ds:0x23fe4
   1bf72:	83 c4 10             	add    esp,0x10
   1bf75:	c6 43 44 eb          	mov    BYTE PTR [ebx+0x44],0xeb
   1bf79:	c6 43 45 3c          	mov    BYTE PTR [ebx+0x45],0x3c
   1bf7d:	c6 43 46 90          	mov    BYTE PTR [ebx+0x46],0x90
   1bf81:	c6 43 47 4d          	mov    BYTE PTR [ebx+0x47],0x4d
   1bf85:	c6 43 48 53          	mov    BYTE PTR [ebx+0x48],0x53
   1bf89:	c6 43 49 44          	mov    BYTE PTR [ebx+0x49],0x44
   1bf8d:	c6 43 4a 4f          	mov    BYTE PTR [ebx+0x4a],0x4f
   1bf91:	84 d2                	test   dl,dl
   1bf93:	c6 43 4b 53          	mov    BYTE PTR [ebx+0x4b],0x53
   1bf97:	c6 43 4c 35          	mov    BYTE PTR [ebx+0x4c],0x35
   1bf9b:	c6 43 4d 2e          	mov    BYTE PTR [ebx+0x4d],0x2e
   1bf9f:	c6 43 4e 30          	mov    BYTE PTR [ebx+0x4e],0x30
   1bfa3:	c6 43 4f 00          	mov    BYTE PTR [ebx+0x4f],0x0
   1bfa7:	c6 43 50 02          	mov    BYTE PTR [ebx+0x50],0x2
   1bfab:	74 22                	je     1bfcf <fatfs_format_fat16+0xdf>
   1bfad:	3b 2d e0 3f 02 00    	cmp    ebp,DWORD PTR ds:0x23fe0
   1bfb3:	76 2b                	jbe    1bfe0 <fatfs_format_fat16+0xf0>
   1bfb5:	b8 ec 3f 02 00       	mov    eax,0x23fec
   1bfba:	eb 0c                	jmp    1bfc8 <fatfs_format_fat16+0xd8>
   1bfbc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1bfc0:	83 c0 08             	add    eax,0x8
   1bfc3:	3b 68 f4             	cmp    ebp,DWORD PTR [eax-0xc]
   1bfc6:	76 18                	jbe    1bfe0 <fatfs_format_fat16+0xf0>
   1bfc8:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1bfcb:	84 d2                	test   dl,dl
   1bfcd:	75 f1                	jne    1bfc0 <fatfs_format_fat16+0xd0>
   1bfcf:	c6 03 00             	mov    BYTE PTR [ebx],0x0
   1bfd2:	31 c0                	xor    eax,eax
   1bfd4:	83 c4 0c             	add    esp,0xc
   1bfd7:	5b                   	pop    ebx
   1bfd8:	5e                   	pop    esi
   1bfd9:	5f                   	pop    edi
   1bfda:	5d                   	pop    ebp
   1bfdb:	c3                   	ret    
   1bfdc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1bfe0:	b8 08 00 00 00       	mov    eax,0x8
   1bfe5:	b9 00 02 00 00       	mov    ecx,0x200
   1bfea:	88 13                	mov    BYTE PTR [ebx],dl
   1bfec:	88 53 51             	mov    BYTE PTR [ebx+0x51],dl
   1bfef:	66 89 43 2a          	mov    WORD PTR [ebx+0x2a],ax
   1bff3:	89 e8                	mov    eax,ebp
   1bff5:	66 89 4b 28          	mov    WORD PTR [ebx+0x28],cx
   1bff9:	0f b6 ca             	movzx  ecx,dl
   1bffc:	31 d2                	xor    edx,edx
   1bffe:	f7 f1                	div    ecx
   1c000:	c6 43 52 08          	mov    BYTE PTR [ebx+0x52],0x8
   1c004:	c6 43 53 00          	mov    BYTE PTR [ebx+0x53],0x0
   1c008:	c6 43 2c 02          	mov    BYTE PTR [ebx+0x2c],0x2
   1c00c:	c6 43 54 02          	mov    BYTE PTR [ebx+0x54],0x2
   1c010:	c6 43 55 00          	mov    BYTE PTR [ebx+0x55],0x0
   1c014:	c6 43 56 02          	mov    BYTE PTR [ebx+0x56],0x2
   1c018:	c6 43 57 00          	mov    BYTE PTR [ebx+0x57],0x0
   1c01c:	c6 43 58 00          	mov    BYTE PTR [ebx+0x58],0x0
   1c020:	c6 43 59 f8          	mov    BYTE PTR [ebx+0x59],0xf8
   1c024:	c6 43 5c 00          	mov    BYTE PTR [ebx+0x5c],0x0
   1c028:	83 c0 01             	add    eax,0x1
   1c02b:	c6 43 5d 00          	mov    BYTE PTR [ebx+0x5d],0x0
   1c02f:	c6 43 5e 00          	mov    BYTE PTR [ebx+0x5e],0x0
   1c033:	c1 e8 08             	shr    eax,0x8
   1c036:	c6 43 5f 00          	mov    BYTE PTR [ebx+0x5f],0x0
   1c03a:	c6 43 60 20          	mov    BYTE PTR [ebx+0x60],0x20
   1c03e:	83 c0 01             	add    eax,0x1
   1c041:	c6 43 61 00          	mov    BYTE PTR [ebx+0x61],0x0
   1c045:	c6 43 62 00          	mov    BYTE PTR [ebx+0x62],0x0
   1c049:	89 43 20             	mov    DWORD PTR [ebx+0x20],eax
   1c04c:	88 43 5a             	mov    BYTE PTR [ebx+0x5a],al
   1c04f:	c1 e8 08             	shr    eax,0x8
   1c052:	88 43 5b             	mov    BYTE PTR [ebx+0x5b],al
   1c055:	89 e8                	mov    eax,ebp
   1c057:	c6 43 63 00          	mov    BYTE PTR [ebx+0x63],0x0
   1c05b:	88 43 64             	mov    BYTE PTR [ebx+0x64],al
   1c05e:	89 e8                	mov    eax,ebp
   1c060:	c6 43 68 00          	mov    BYTE PTR [ebx+0x68],0x0
   1c064:	c1 e8 08             	shr    eax,0x8
   1c067:	c6 43 69 00          	mov    BYTE PTR [ebx+0x69],0x0
   1c06b:	c6 43 6a 29          	mov    BYTE PTR [ebx+0x6a],0x29
   1c06f:	88 43 65             	mov    BYTE PTR [ebx+0x65],al
   1c072:	89 e8                	mov    eax,ebp
   1c074:	c6 43 6b 12          	mov    BYTE PTR [ebx+0x6b],0x12
   1c078:	c1 e8 10             	shr    eax,0x10
   1c07b:	88 43 66             	mov    BYTE PTR [ebx+0x66],al
   1c07e:	89 e8                	mov    eax,ebp
   1c080:	31 ed                	xor    ebp,ebp
   1c082:	c1 e8 18             	shr    eax,0x18
   1c085:	88 43 67             	mov    BYTE PTR [ebx+0x67],al
   1c088:	c6 43 6c 34          	mov    BYTE PTR [ebx+0x6c],0x34
   1c08c:	c6 43 6d 56          	mov    BYTE PTR [ebx+0x6d],0x56
   1c090:	c6 43 6e 78          	mov    BYTE PTR [ebx+0x6e],0x78
   1c094:	eb 1a                	jmp    1c0b0 <fatfs_format_fat16+0x1c0>
   1c096:	8d 76 00             	lea    esi,[esi+0x0]
   1c099:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1c0a0:	0f b6 04 2e          	movzx  eax,BYTE PTR [esi+ebp*1]
   1c0a4:	88 44 2b 6f          	mov    BYTE PTR [ebx+ebp*1+0x6f],al
   1c0a8:	83 c5 01             	add    ebp,0x1
   1c0ab:	83 fd 0b             	cmp    ebp,0xb
   1c0ae:	74 1d                	je     1c0cd <fatfs_format_fat16+0x1dd>
   1c0b0:	83 ec 0c             	sub    esp,0xc
   1c0b3:	56                   	push   esi
   1c0b4:	e8 47 67 00 00       	call   22800 <strlen>
   1c0b9:	83 c4 10             	add    esp,0x10
   1c0bc:	39 e8                	cmp    eax,ebp
   1c0be:	7f e0                	jg     1c0a0 <fatfs_format_fat16+0x1b0>
   1c0c0:	c6 44 2b 6f 20       	mov    BYTE PTR [ebx+ebp*1+0x6f],0x20
   1c0c5:	83 c5 01             	add    ebp,0x1
   1c0c8:	83 fd 0b             	cmp    ebp,0xb
   1c0cb:	75 e3                	jne    1c0b0 <fatfs_format_fat16+0x1c0>
   1c0cd:	83 ec 04             	sub    esp,0x4
   1c0d0:	c6 43 7a 46          	mov    BYTE PTR [ebx+0x7a],0x46
   1c0d4:	c6 43 7b 41          	mov    BYTE PTR [ebx+0x7b],0x41
   1c0d8:	c6 43 7c 54          	mov    BYTE PTR [ebx+0x7c],0x54
   1c0dc:	c6 43 7d 31          	mov    BYTE PTR [ebx+0x7d],0x31
   1c0e0:	c6 43 7e 36          	mov    BYTE PTR [ebx+0x7e],0x36
   1c0e4:	c6 43 7f 20          	mov    BYTE PTR [ebx+0x7f],0x20
   1c0e8:	c6 83 80 00 00 00 20 	mov    BYTE PTR [ebx+0x80],0x20
   1c0ef:	c6 83 81 00 00 00 20 	mov    BYTE PTR [ebx+0x81],0x20
   1c0f6:	c6 83 42 02 00 00 55 	mov    BYTE PTR [ebx+0x242],0x55
   1c0fd:	c6 83 43 02 00 00 aa 	mov    BYTE PTR [ebx+0x243],0xaa
   1c104:	6a 01                	push   0x1
   1c106:	57                   	push   edi
   1c107:	6a 00                	push   0x0
   1c109:	ff 53 38             	call   DWORD PTR [ebx+0x38]
   1c10c:	83 c4 10             	add    esp,0x10
   1c10f:	85 c0                	test   eax,eax
   1c111:	0f 84 bb fe ff ff    	je     1bfd2 <fatfs_format_fat16+0xe2>
   1c117:	0f b6 4b 2c          	movzx  ecx,BYTE PTR [ebx+0x2c]
   1c11b:	0f b7 43 2a          	movzx  eax,WORD PTR [ebx+0x2a]
   1c11f:	0f af 4b 20          	imul   ecx,DWORD PTR [ebx+0x20]
   1c123:	8d 14 08             	lea    edx,[eax+ecx*1]
   1c126:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
   1c129:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
   1c12c:	0f b7 53 28          	movzx  edx,WORD PTR [ebx+0x28]
   1c130:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
   1c133:	01 c8                	add    eax,ecx
   1c135:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
   1c138:	89 d8                	mov    eax,ebx
   1c13a:	c1 e2 05             	shl    edx,0x5
   1c13d:	81 c2 ff 01 00 00    	add    edx,0x1ff
   1c143:	c1 fa 09             	sar    edx,0x9
   1c146:	89 53 10             	mov    DWORD PTR [ebx+0x10],edx
   1c149:	31 d2                	xor    edx,edx
   1c14b:	e8 50 fc ff ff       	call   1bda0 <fatfs_erase_fat>
   1c150:	85 c0                	test   eax,eax
   1c152:	0f 84 7a fe ff ff    	je     1bfd2 <fatfs_format_fat16+0xe2>
   1c158:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
   1c15b:	03 53 1c             	add    edx,DWORD PTR [ebx+0x1c]
   1c15e:	89 d8                	mov    eax,ebx
   1c160:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
   1c163:	e8 28 fd ff ff       	call   1be90 <fatfs_erase_sectors>
   1c168:	85 c0                	test   eax,eax
   1c16a:	0f 95 c0             	setne  al
   1c16d:	83 c4 0c             	add    esp,0xc
   1c170:	5b                   	pop    ebx
   1c171:	0f b6 c0             	movzx  eax,al
   1c174:	5e                   	pop    esi
   1c175:	5f                   	pop    edi
   1c176:	5d                   	pop    ebp
   1c177:	c3                   	ret    
   1c178:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1c17d:	e9 52 fe ff ff       	jmp    1bfd4 <fatfs_format_fat16+0xe4>
   1c182:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1c189:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001c190 <fatfs_format_fat32>:
fatfs_format_fat32():
   1c190:	55                   	push   ebp
   1c191:	57                   	push   edi
   1c192:	56                   	push   esi
   1c193:	53                   	push   ebx
   1c194:	83 ec 18             	sub    esp,0x18
   1c197:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
   1c19b:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   1c19f:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   1c1a3:	c7 83 44 02 00 00 ff 	mov    DWORD PTR [ebx+0x244],0xffffffff
   1c1aa:	ff ff ff 
   1c1ad:	c7 83 48 02 00 00 00 	mov    DWORD PTR [ebx+0x248],0x0
   1c1b4:	00 00 00 
   1c1b7:	c7 43 24 00 00 00 00 	mov    DWORD PTR [ebx+0x24],0x0
   1c1be:	53                   	push   ebx
   1c1bf:	e8 1c 13 00 00       	call   1d4e0 <fatfs_fat_init>
   1c1c4:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
   1c1c7:	83 c4 10             	add    esp,0x10
   1c1ca:	85 c0                	test   eax,eax
   1c1cc:	0f 84 4d 03 00 00    	je     1c51f <fatfs_format_fat32+0x38f>
   1c1d2:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   1c1d5:	85 c0                	test   eax,eax
   1c1d7:	0f 84 42 03 00 00    	je     1c51f <fatfs_format_fat32+0x38f>
   1c1dd:	bf 01 00 00 00       	mov    edi,0x1
   1c1e2:	83 ec 04             	sub    esp,0x4
   1c1e5:	c7 43 30 01 00 00 00 	mov    DWORD PTR [ebx+0x30],0x1
   1c1ec:	66 89 7b 18          	mov    WORD PTR [ebx+0x18],di
   1c1f0:	8d 7b 44             	lea    edi,[ebx+0x44]
   1c1f3:	c7 43 08 02 00 00 00 	mov    DWORD PTR [ebx+0x8],0x2
   1c1fa:	c7 43 1c 00 00 00 00 	mov    DWORD PTR [ebx+0x1c],0x0
   1c201:	68 00 02 00 00       	push   0x200
   1c206:	6a 00                	push   0x0
   1c208:	57                   	push   edi
   1c209:	e8 72 4b 00 00       	call   20d80 <memset>
   1c20e:	0f b6 15 a4 3f 02 00 	movzx  edx,BYTE PTR ds:0x23fa4
   1c215:	83 c4 10             	add    esp,0x10
   1c218:	c6 43 44 eb          	mov    BYTE PTR [ebx+0x44],0xeb
   1c21c:	c6 43 45 3c          	mov    BYTE PTR [ebx+0x45],0x3c
   1c220:	c6 43 46 90          	mov    BYTE PTR [ebx+0x46],0x90
   1c224:	c6 43 47 4d          	mov    BYTE PTR [ebx+0x47],0x4d
   1c228:	c6 43 48 53          	mov    BYTE PTR [ebx+0x48],0x53
   1c22c:	c6 43 49 44          	mov    BYTE PTR [ebx+0x49],0x44
   1c230:	c6 43 4a 4f          	mov    BYTE PTR [ebx+0x4a],0x4f
   1c234:	84 d2                	test   dl,dl
   1c236:	c6 43 4b 53          	mov    BYTE PTR [ebx+0x4b],0x53
   1c23a:	c6 43 4c 35          	mov    BYTE PTR [ebx+0x4c],0x35
   1c23e:	c6 43 4d 2e          	mov    BYTE PTR [ebx+0x4d],0x2e
   1c242:	c6 43 4e 30          	mov    BYTE PTR [ebx+0x4e],0x30
   1c246:	c6 43 4f 00          	mov    BYTE PTR [ebx+0x4f],0x0
   1c24a:	c6 43 50 02          	mov    BYTE PTR [ebx+0x50],0x2
   1c24e:	74 1f                	je     1c26f <fatfs_format_fat32+0xdf>
   1c250:	3b 2d a0 3f 02 00    	cmp    ebp,DWORD PTR ds:0x23fa0
   1c256:	76 28                	jbe    1c280 <fatfs_format_fat32+0xf0>
   1c258:	b9 a0 3f 02 00       	mov    ecx,0x23fa0
   1c25d:	eb 08                	jmp    1c267 <fatfs_format_fat32+0xd7>
   1c25f:	90                   	nop
   1c260:	83 c1 08             	add    ecx,0x8
   1c263:	3b 29                	cmp    ebp,DWORD PTR [ecx]
   1c265:	76 19                	jbe    1c280 <fatfs_format_fat32+0xf0>
   1c267:	0f b6 51 0c          	movzx  edx,BYTE PTR [ecx+0xc]
   1c26b:	84 d2                	test   dl,dl
   1c26d:	75 f1                	jne    1c260 <fatfs_format_fat32+0xd0>
   1c26f:	c6 03 00             	mov    BYTE PTR [ebx],0x0
   1c272:	31 c0                	xor    eax,eax
   1c274:	83 c4 0c             	add    esp,0xc
   1c277:	5b                   	pop    ebx
   1c278:	5e                   	pop    esi
   1c279:	5f                   	pop    edi
   1c27a:	5d                   	pop    ebp
   1c27b:	c3                   	ret    
   1c27c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1c280:	b8 20 00 00 00       	mov    eax,0x20
   1c285:	31 c9                	xor    ecx,ecx
   1c287:	88 13                	mov    BYTE PTR [ebx],dl
   1c289:	66 89 43 2a          	mov    WORD PTR [ebx+0x2a],ax
   1c28d:	89 e8                	mov    eax,ebp
   1c28f:	88 53 51             	mov    BYTE PTR [ebx+0x51],dl
   1c292:	88 43 64             	mov    BYTE PTR [ebx+0x64],al
   1c295:	89 e8                	mov    eax,ebp
   1c297:	66 89 4b 28          	mov    WORD PTR [ebx+0x28],cx
   1c29b:	c1 e8 08             	shr    eax,0x8
   1c29e:	0f b6 ca             	movzx  ecx,dl
   1c2a1:	31 d2                	xor    edx,edx
   1c2a3:	88 43 65             	mov    BYTE PTR [ebx+0x65],al
   1c2a6:	89 e8                	mov    eax,ebp
   1c2a8:	c6 43 52 20          	mov    BYTE PTR [ebx+0x52],0x20
   1c2ac:	c1 e8 10             	shr    eax,0x10
   1c2af:	c6 43 53 00          	mov    BYTE PTR [ebx+0x53],0x0
   1c2b3:	c6 43 2c 02          	mov    BYTE PTR [ebx+0x2c],0x2
   1c2b7:	88 43 66             	mov    BYTE PTR [ebx+0x66],al
   1c2ba:	89 e8                	mov    eax,ebp
   1c2bc:	c6 43 54 02          	mov    BYTE PTR [ebx+0x54],0x2
   1c2c0:	c1 e8 18             	shr    eax,0x18
   1c2c3:	c6 43 55 00          	mov    BYTE PTR [ebx+0x55],0x0
   1c2c7:	c6 43 56 00          	mov    BYTE PTR [ebx+0x56],0x0
   1c2cb:	88 43 67             	mov    BYTE PTR [ebx+0x67],al
   1c2ce:	89 e8                	mov    eax,ebp
   1c2d0:	c6 43 57 00          	mov    BYTE PTR [ebx+0x57],0x0
   1c2d4:	f7 f1                	div    ecx
   1c2d6:	c6 43 58 00          	mov    BYTE PTR [ebx+0x58],0x0
   1c2da:	c6 43 59 f8          	mov    BYTE PTR [ebx+0x59],0xf8
   1c2de:	31 ed                	xor    ebp,ebp
   1c2e0:	c6 43 5a 00          	mov    BYTE PTR [ebx+0x5a],0x0
   1c2e4:	c6 43 5b 00          	mov    BYTE PTR [ebx+0x5b],0x0
   1c2e8:	c6 43 5c 3f          	mov    BYTE PTR [ebx+0x5c],0x3f
   1c2ec:	c6 43 5d 00          	mov    BYTE PTR [ebx+0x5d],0x0
   1c2f0:	c6 43 5e ff          	mov    BYTE PTR [ebx+0x5e],0xff
   1c2f4:	c6 43 5f 00          	mov    BYTE PTR [ebx+0x5f],0x0
   1c2f8:	c6 43 60 00          	mov    BYTE PTR [ebx+0x60],0x0
   1c2fc:	c6 43 61 00          	mov    BYTE PTR [ebx+0x61],0x0
   1c300:	83 c0 01             	add    eax,0x1
   1c303:	c6 43 62 00          	mov    BYTE PTR [ebx+0x62],0x0
   1c307:	c6 43 63 00          	mov    BYTE PTR [ebx+0x63],0x0
   1c30b:	c1 e8 07             	shr    eax,0x7
   1c30e:	83 c0 01             	add    eax,0x1
   1c311:	89 c2                	mov    edx,eax
   1c313:	89 43 20             	mov    DWORD PTR [ebx+0x20],eax
   1c316:	88 43 68             	mov    BYTE PTR [ebx+0x68],al
   1c319:	c1 ea 08             	shr    edx,0x8
   1c31c:	88 53 69             	mov    BYTE PTR [ebx+0x69],dl
   1c31f:	89 c2                	mov    edx,eax
   1c321:	c1 e8 18             	shr    eax,0x18
   1c324:	c1 ea 10             	shr    edx,0x10
   1c327:	88 43 6b             	mov    BYTE PTR [ebx+0x6b],al
   1c32a:	88 53 6a             	mov    BYTE PTR [ebx+0x6a],dl
   1c32d:	c6 43 6c 00          	mov    BYTE PTR [ebx+0x6c],0x0
   1c331:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
   1c334:	c6 43 6d 00          	mov    BYTE PTR [ebx+0x6d],0x0
   1c338:	c6 43 6e 00          	mov    BYTE PTR [ebx+0x6e],0x0
   1c33c:	c6 43 6f 00          	mov    BYTE PTR [ebx+0x6f],0x0
   1c340:	c6 43 76 06          	mov    BYTE PTR [ebx+0x76],0x6
   1c344:	c6 43 77 00          	mov    BYTE PTR [ebx+0x77],0x0
   1c348:	89 c2                	mov    edx,eax
   1c34a:	88 43 70             	mov    BYTE PTR [ebx+0x70],al
   1c34d:	c6 83 84 00 00 00 00 	mov    BYTE PTR [ebx+0x84],0x0
   1c354:	c1 ea 08             	shr    edx,0x8
   1c357:	c6 83 86 00 00 00 29 	mov    BYTE PTR [ebx+0x86],0x29
   1c35e:	c6 83 87 00 00 00 12 	mov    BYTE PTR [ebx+0x87],0x12
   1c365:	88 53 71             	mov    BYTE PTR [ebx+0x71],dl
   1c368:	89 c2                	mov    edx,eax
   1c36a:	c1 e8 18             	shr    eax,0x18
   1c36d:	88 43 73             	mov    BYTE PTR [ebx+0x73],al
   1c370:	0f b7 43 18          	movzx  eax,WORD PTR [ebx+0x18]
   1c374:	c1 ea 10             	shr    edx,0x10
   1c377:	88 53 72             	mov    BYTE PTR [ebx+0x72],dl
   1c37a:	c6 83 88 00 00 00 34 	mov    BYTE PTR [ebx+0x88],0x34
   1c381:	c6 83 89 00 00 00 56 	mov    BYTE PTR [ebx+0x89],0x56
   1c388:	c6 83 8a 00 00 00 78 	mov    BYTE PTR [ebx+0x8a],0x78
   1c38f:	88 43 74             	mov    BYTE PTR [ebx+0x74],al
   1c392:	66 c1 e8 08          	shr    ax,0x8
   1c396:	88 43 75             	mov    BYTE PTR [ebx+0x75],al
   1c399:	eb 18                	jmp    1c3b3 <fatfs_format_fat32+0x223>
   1c39b:	90                   	nop
   1c39c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1c3a0:	0f b6 04 2e          	movzx  eax,BYTE PTR [esi+ebp*1]
   1c3a4:	88 84 2b 8b 00 00 00 	mov    BYTE PTR [ebx+ebp*1+0x8b],al
   1c3ab:	83 c5 01             	add    ebp,0x1
   1c3ae:	83 fd 0b             	cmp    ebp,0xb
   1c3b1:	74 20                	je     1c3d3 <fatfs_format_fat32+0x243>
   1c3b3:	83 ec 0c             	sub    esp,0xc
   1c3b6:	56                   	push   esi
   1c3b7:	e8 44 64 00 00       	call   22800 <strlen>
   1c3bc:	83 c4 10             	add    esp,0x10
   1c3bf:	39 e8                	cmp    eax,ebp
   1c3c1:	7f dd                	jg     1c3a0 <fatfs_format_fat32+0x210>
   1c3c3:	c6 84 2b 8b 00 00 00 	mov    BYTE PTR [ebx+ebp*1+0x8b],0x20
   1c3ca:	20 
   1c3cb:	83 c5 01             	add    ebp,0x1
   1c3ce:	83 fd 0b             	cmp    ebp,0xb
   1c3d1:	75 e0                	jne    1c3b3 <fatfs_format_fat32+0x223>
   1c3d3:	83 ec 04             	sub    esp,0x4
   1c3d6:	c6 83 96 00 00 00 46 	mov    BYTE PTR [ebx+0x96],0x46
   1c3dd:	c6 83 97 00 00 00 41 	mov    BYTE PTR [ebx+0x97],0x41
   1c3e4:	c6 83 98 00 00 00 54 	mov    BYTE PTR [ebx+0x98],0x54
   1c3eb:	c6 83 99 00 00 00 33 	mov    BYTE PTR [ebx+0x99],0x33
   1c3f2:	c6 83 9a 00 00 00 32 	mov    BYTE PTR [ebx+0x9a],0x32
   1c3f9:	c6 83 9b 00 00 00 20 	mov    BYTE PTR [ebx+0x9b],0x20
   1c400:	c6 83 9c 00 00 00 20 	mov    BYTE PTR [ebx+0x9c],0x20
   1c407:	c6 83 9d 00 00 00 20 	mov    BYTE PTR [ebx+0x9d],0x20
   1c40e:	c6 83 42 02 00 00 55 	mov    BYTE PTR [ebx+0x242],0x55
   1c415:	c6 83 43 02 00 00 aa 	mov    BYTE PTR [ebx+0x243],0xaa
   1c41c:	6a 01                	push   0x1
   1c41e:	57                   	push   edi
   1c41f:	6a 00                	push   0x0
   1c421:	ff 53 38             	call   DWORD PTR [ebx+0x38]
   1c424:	83 c4 10             	add    esp,0x10
   1c427:	85 c0                	test   eax,eax
   1c429:	0f 84 43 fe ff ff    	je     1c272 <fatfs_format_fat32+0xe2>
   1c42f:	0f b6 53 2c          	movzx  edx,BYTE PTR [ebx+0x2c]
   1c433:	0f b7 43 2a          	movzx  eax,WORD PTR [ebx+0x2a]
   1c437:	83 ec 04             	sub    esp,0x4
   1c43a:	0f af 53 20          	imul   edx,DWORD PTR [ebx+0x20]
   1c43e:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
   1c441:	0f b7 73 18          	movzx  esi,WORD PTR [ebx+0x18]
   1c445:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
   1c448:	01 d0                	add    eax,edx
   1c44a:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
   1c44d:	68 00 02 00 00       	push   0x200
   1c452:	6a 00                	push   0x0
   1c454:	57                   	push   edi
   1c455:	e8 26 49 00 00       	call   20d80 <memset>
   1c45a:	83 c4 0c             	add    esp,0xc
   1c45d:	c6 43 44 52          	mov    BYTE PTR [ebx+0x44],0x52
   1c461:	c6 43 45 52          	mov    BYTE PTR [ebx+0x45],0x52
   1c465:	c6 43 46 61          	mov    BYTE PTR [ebx+0x46],0x61
   1c469:	c6 43 47 41          	mov    BYTE PTR [ebx+0x47],0x41
   1c46d:	c6 83 28 02 00 00 72 	mov    BYTE PTR [ebx+0x228],0x72
   1c474:	c6 83 29 02 00 00 72 	mov    BYTE PTR [ebx+0x229],0x72
   1c47b:	c6 83 2a 02 00 00 41 	mov    BYTE PTR [ebx+0x22a],0x41
   1c482:	c6 83 2b 02 00 00 61 	mov    BYTE PTR [ebx+0x22b],0x61
   1c489:	c6 83 2c 02 00 00 ff 	mov    BYTE PTR [ebx+0x22c],0xff
   1c490:	c6 83 2d 02 00 00 ff 	mov    BYTE PTR [ebx+0x22d],0xff
   1c497:	c6 83 2e 02 00 00 ff 	mov    BYTE PTR [ebx+0x22e],0xff
   1c49e:	c6 83 2f 02 00 00 ff 	mov    BYTE PTR [ebx+0x22f],0xff
   1c4a5:	c6 83 30 02 00 00 ff 	mov    BYTE PTR [ebx+0x230],0xff
   1c4ac:	c6 83 31 02 00 00 ff 	mov    BYTE PTR [ebx+0x231],0xff
   1c4b3:	c6 83 32 02 00 00 ff 	mov    BYTE PTR [ebx+0x232],0xff
   1c4ba:	c6 83 33 02 00 00 ff 	mov    BYTE PTR [ebx+0x233],0xff
   1c4c1:	c6 83 42 02 00 00 55 	mov    BYTE PTR [ebx+0x242],0x55
   1c4c8:	c6 83 43 02 00 00 aa 	mov    BYTE PTR [ebx+0x243],0xaa
   1c4cf:	6a 01                	push   0x1
   1c4d1:	57                   	push   edi
   1c4d2:	56                   	push   esi
   1c4d3:	ff 53 38             	call   DWORD PTR [ebx+0x38]
   1c4d6:	83 c4 10             	add    esp,0x10
   1c4d9:	85 c0                	test   eax,eax
   1c4db:	0f 84 91 fd ff ff    	je     1c272 <fatfs_format_fat32+0xe2>
   1c4e1:	ba 01 00 00 00       	mov    edx,0x1
   1c4e6:	89 d8                	mov    eax,ebx
   1c4e8:	e8 b3 f8 ff ff       	call   1bda0 <fatfs_erase_fat>
   1c4ed:	85 c0                	test   eax,eax
   1c4ef:	0f 84 7d fd ff ff    	je     1c272 <fatfs_format_fat32+0xe2>
   1c4f5:	0f b6 33             	movzx  esi,BYTE PTR [ebx]
   1c4f8:	83 ec 08             	sub    esp,0x8
   1c4fb:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   1c4fe:	53                   	push   ebx
   1c4ff:	e8 2c d1 ff ff       	call   19630 <fatfs_lba_of_cluster>
   1c504:	89 f1                	mov    ecx,esi
   1c506:	89 c2                	mov    edx,eax
   1c508:	89 d8                	mov    eax,ebx
   1c50a:	e8 81 f9 ff ff       	call   1be90 <fatfs_erase_sectors>
   1c50f:	83 c4 10             	add    esp,0x10
   1c512:	85 c0                	test   eax,eax
   1c514:	0f 95 c0             	setne  al
   1c517:	0f b6 c0             	movzx  eax,al
   1c51a:	e9 55 fd ff ff       	jmp    1c274 <fatfs_format_fat32+0xe4>
   1c51f:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1c524:	e9 4b fd ff ff       	jmp    1c274 <fatfs_format_fat32+0xe4>
   1c529:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001c530 <fatfs_format>:
fatfs_format():
   1c530:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1c534:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   1c538:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1c53c:	3d 00 00 40 00       	cmp    eax,0x400000
   1c541:	76 15                	jbe    1c558 <fatfs_format+0x28>
   1c543:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1c547:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1c54b:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
   1c54f:	e9 3c fc ff ff       	jmp    1c190 <fatfs_format_fat32>
   1c554:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1c558:	e9 93 f9 ff ff       	jmp    1bef0 <fatfs_format_fat16>
   1c55d:	66 90                	xchg   ax,ax
   1c55f:	90                   	nop

0001c560 <fatfs_lfn_cache_init>:
fatfs_lfn_cache_init():
   1c560:	56                   	push   esi
   1c561:	53                   	push   ebx
   1c562:	83 ec 04             	sub    esp,0x4
   1c565:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   1c569:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1c56d:	85 c0                	test   eax,eax
   1c56f:	c6 83 05 01 00 00 00 	mov    BYTE PTR [ebx+0x105],0x0
   1c576:	74 1f                	je     1c597 <fatfs_lfn_cache_init+0x37>
   1c578:	8d b3 04 01 00 00    	lea    esi,[ebx+0x104]
   1c57e:	66 90                	xchg   ax,ax
   1c580:	83 ec 04             	sub    esp,0x4
   1c583:	6a 0d                	push   0xd
   1c585:	6a 00                	push   0x0
   1c587:	53                   	push   ebx
   1c588:	83 c3 0d             	add    ebx,0xd
   1c58b:	e8 f0 47 00 00       	call   20d80 <memset>
   1c590:	83 c4 10             	add    esp,0x10
   1c593:	39 f3                	cmp    ebx,esi
   1c595:	75 e9                	jne    1c580 <fatfs_lfn_cache_init+0x20>
   1c597:	83 c4 04             	add    esp,0x4
   1c59a:	5b                   	pop    ebx
   1c59b:	5e                   	pop    esi
   1c59c:	c3                   	ret    
   1c59d:	8d 76 00             	lea    esi,[esi+0x0]

0001c5a0 <fatfs_lfn_cache_entry>:
fatfs_lfn_cache_entry():
   1c5a0:	56                   	push   esi
   1c5a1:	53                   	push   ebx
   1c5a2:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   1c5a6:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1c5aa:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1c5ad:	83 e0 1f             	and    eax,0x1f
   1c5b0:	8d 58 ff             	lea    ebx,[eax-0x1]
   1c5b3:	80 fb 13             	cmp    bl,0x13
   1c5b6:	0f 87 9a 00 00 00    	ja     1c656 <fatfs_lfn_cache_entry+0xb6>
   1c5bc:	80 b9 05 01 00 00 00 	cmp    BYTE PTR [ecx+0x105],0x0
   1c5c3:	0f 84 97 00 00 00    	je     1c660 <fatfs_lfn_cache_entry+0xc0>
   1c5c9:	0f b6 c0             	movzx  eax,al
   1c5cc:	83 e8 01             	sub    eax,0x1
   1c5cf:	8d 1c 40             	lea    ebx,[eax+eax*2]
   1c5d2:	8d 34 98             	lea    esi,[eax+ebx*4]
   1c5d5:	0f b6 5a 01          	movzx  ebx,BYTE PTR [edx+0x1]
   1c5d9:	8d 04 31             	lea    eax,[ecx+esi*1]
   1c5dc:	88 18                	mov    BYTE PTR [eax],bl
   1c5de:	0f b6 5a 03          	movzx  ebx,BYTE PTR [edx+0x3]
   1c5e2:	88 58 01             	mov    BYTE PTR [eax+0x1],bl
   1c5e5:	0f b6 5a 05          	movzx  ebx,BYTE PTR [edx+0x5]
   1c5e9:	88 58 02             	mov    BYTE PTR [eax+0x2],bl
   1c5ec:	0f b6 5a 07          	movzx  ebx,BYTE PTR [edx+0x7]
   1c5f0:	88 58 03             	mov    BYTE PTR [eax+0x3],bl
   1c5f3:	0f b6 5a 09          	movzx  ebx,BYTE PTR [edx+0x9]
   1c5f7:	88 58 04             	mov    BYTE PTR [eax+0x4],bl
   1c5fa:	0f b6 5a 0e          	movzx  ebx,BYTE PTR [edx+0xe]
   1c5fe:	88 58 05             	mov    BYTE PTR [eax+0x5],bl
   1c601:	0f b6 5a 10          	movzx  ebx,BYTE PTR [edx+0x10]
   1c605:	88 58 06             	mov    BYTE PTR [eax+0x6],bl
   1c608:	0f b6 5a 12          	movzx  ebx,BYTE PTR [edx+0x12]
   1c60c:	88 58 07             	mov    BYTE PTR [eax+0x7],bl
   1c60f:	0f b6 5a 14          	movzx  ebx,BYTE PTR [edx+0x14]
   1c613:	88 58 08             	mov    BYTE PTR [eax+0x8],bl
   1c616:	0f b6 5a 16          	movzx  ebx,BYTE PTR [edx+0x16]
   1c61a:	88 58 09             	mov    BYTE PTR [eax+0x9],bl
   1c61d:	0f b6 5a 18          	movzx  ebx,BYTE PTR [edx+0x18]
   1c621:	88 58 0a             	mov    BYTE PTR [eax+0xa],bl
   1c624:	0f b6 5a 1c          	movzx  ebx,BYTE PTR [edx+0x1c]
   1c628:	88 58 0b             	mov    BYTE PTR [eax+0xb],bl
   1c62b:	0f b6 52 1e          	movzx  edx,BYTE PTR [edx+0x1e]
   1c62f:	88 50 0c             	mov    BYTE PTR [eax+0xc],dl
   1c632:	8d 54 31 0d          	lea    edx,[ecx+esi*1+0xd]
   1c636:	eb 0f                	jmp    1c647 <fatfs_lfn_cache_entry+0xa7>
   1c638:	90                   	nop
   1c639:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1c640:	83 c0 01             	add    eax,0x1
   1c643:	39 d0                	cmp    eax,edx
   1c645:	74 0f                	je     1c656 <fatfs_lfn_cache_entry+0xb6>
   1c647:	80 38 ff             	cmp    BYTE PTR [eax],0xff
   1c64a:	75 f4                	jne    1c640 <fatfs_lfn_cache_entry+0xa0>
   1c64c:	c6 00 20             	mov    BYTE PTR [eax],0x20
   1c64f:	83 c0 01             	add    eax,0x1
   1c652:	39 d0                	cmp    eax,edx
   1c654:	75 f1                	jne    1c647 <fatfs_lfn_cache_entry+0xa7>
   1c656:	5b                   	pop    ebx
   1c657:	5e                   	pop    esi
   1c658:	c3                   	ret    
   1c659:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1c660:	88 81 05 01 00 00    	mov    BYTE PTR [ecx+0x105],al
   1c666:	e9 5e ff ff ff       	jmp    1c5c9 <fatfs_lfn_cache_entry+0x29>
   1c66b:	90                   	nop
   1c66c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001c670 <fatfs_lfn_cache_get>:
fatfs_lfn_cache_get():
   1c670:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c674:	0f b6 90 05 01 00 00 	movzx  edx,BYTE PTR [eax+0x105]
   1c67b:	80 fa 14             	cmp    dl,0x14
   1c67e:	74 20                	je     1c6a0 <fatfs_lfn_cache_get+0x30>
   1c680:	84 d2                	test   dl,dl
   1c682:	75 0c                	jne    1c690 <fatfs_lfn_cache_get+0x20>
   1c684:	c6 00 00             	mov    BYTE PTR [eax],0x0
   1c687:	c3                   	ret    
   1c688:	90                   	nop
   1c689:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1c690:	8d 0c 52             	lea    ecx,[edx+edx*2]
   1c693:	8d 14 8a             	lea    edx,[edx+ecx*4]
   1c696:	c6 04 10 00          	mov    BYTE PTR [eax+edx*1],0x0
   1c69a:	c3                   	ret    
   1c69b:	90                   	nop
   1c69c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1c6a0:	c6 80 04 01 00 00 00 	mov    BYTE PTR [eax+0x104],0x0
   1c6a7:	c3                   	ret    
   1c6a8:	90                   	nop
   1c6a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001c6b0 <fatfs_entry_lfn_text>:
fatfs_entry_lfn_text():
   1c6b0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c6b4:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
   1c6b8:	83 e0 0f             	and    eax,0xf
   1c6bb:	3c 0f                	cmp    al,0xf
   1c6bd:	0f 94 c0             	sete   al
   1c6c0:	0f b6 c0             	movzx  eax,al
   1c6c3:	c3                   	ret    
   1c6c4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1c6ca:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001c6d0 <fatfs_entry_lfn_invalid>:
fatfs_entry_lfn_invalid():
   1c6d0:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   1c6d4:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1c6d7:	84 c0                	test   al,al
   1c6d9:	74 15                	je     1c6f0 <fatfs_entry_lfn_invalid+0x20>
   1c6db:	3c e5                	cmp    al,0xe5
   1c6dd:	74 11                	je     1c6f0 <fatfs_entry_lfn_invalid+0x20>
   1c6df:	0f b6 42 0b          	movzx  eax,BYTE PTR [edx+0xb]
   1c6e3:	3c 08                	cmp    al,0x8
   1c6e5:	74 09                	je     1c6f0 <fatfs_entry_lfn_invalid+0x20>
   1c6e7:	a8 06                	test   al,0x6
   1c6e9:	0f 95 c0             	setne  al
   1c6ec:	0f b6 c0             	movzx  eax,al
   1c6ef:	c3                   	ret    
   1c6f0:	b8 01 00 00 00       	mov    eax,0x1
   1c6f5:	c3                   	ret    
   1c6f6:	8d 76 00             	lea    esi,[esi+0x0]
   1c6f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001c700 <fatfs_entry_lfn_exists>:
fatfs_entry_lfn_exists():
   1c700:	53                   	push   ebx
   1c701:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1c705:	31 c0                	xor    eax,eax
   1c707:	0f b6 51 0b          	movzx  edx,BYTE PTR [ecx+0xb]
   1c70b:	80 fa 0f             	cmp    dl,0xf
   1c70e:	74 2d                	je     1c73d <fatfs_entry_lfn_exists+0x3d>
   1c710:	0f b6 09             	movzx  ecx,BYTE PTR [ecx]
   1c713:	80 f9 e5             	cmp    cl,0xe5
   1c716:	0f 95 c3             	setne  bl
   1c719:	84 c9                	test   cl,cl
   1c71b:	0f 95 c1             	setne  cl
   1c71e:	84 cb                	test   bl,cl
   1c720:	74 1e                	je     1c740 <fatfs_entry_lfn_exists+0x40>
   1c722:	80 fa 08             	cmp    dl,0x8
   1c725:	74 19                	je     1c740 <fatfs_entry_lfn_exists+0x40>
   1c727:	83 e2 06             	and    edx,0x6
   1c72a:	75 11                	jne    1c73d <fatfs_entry_lfn_exists+0x3d>
   1c72c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1c730:	80 b8 05 01 00 00 00 	cmp    BYTE PTR [eax+0x105],0x0
   1c737:	0f 95 c0             	setne  al
   1c73a:	0f b6 c0             	movzx  eax,al
   1c73d:	5b                   	pop    ebx
   1c73e:	c3                   	ret    
   1c73f:	90                   	nop
   1c740:	31 c0                	xor    eax,eax
   1c742:	5b                   	pop    ebx
   1c743:	c3                   	ret    
   1c744:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1c74a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001c750 <fatfs_entry_sfn_only>:
fatfs_entry_sfn_only():
   1c750:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   1c754:	31 c0                	xor    eax,eax
   1c756:	0f b6 51 0b          	movzx  edx,BYTE PTR [ecx+0xb]
   1c75a:	80 fa 0f             	cmp    dl,0xf
   1c75d:	74 23                	je     1c782 <fatfs_entry_sfn_only+0x32>
   1c75f:	0f b6 01             	movzx  eax,BYTE PTR [ecx]
   1c762:	3c e5                	cmp    al,0xe5
   1c764:	0f 95 c1             	setne  cl
   1c767:	84 c0                	test   al,al
   1c769:	0f 95 c0             	setne  al
   1c76c:	84 c1                	test   cl,al
   1c76e:	74 10                	je     1c780 <fatfs_entry_sfn_only+0x30>
   1c770:	80 fa 08             	cmp    dl,0x8
   1c773:	74 0b                	je     1c780 <fatfs_entry_sfn_only+0x30>
   1c775:	31 c0                	xor    eax,eax
   1c777:	83 e2 06             	and    edx,0x6
   1c77a:	0f 94 c0             	sete   al
   1c77d:	c3                   	ret    
   1c77e:	66 90                	xchg   ax,ax
   1c780:	31 c0                	xor    eax,eax
   1c782:	f3 c3                	repz ret 
   1c784:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1c78a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001c790 <fatfs_entry_is_dir>:
fatfs_entry_is_dir():
   1c790:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c794:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
   1c798:	c0 e8 04             	shr    al,0x4
   1c79b:	83 e0 01             	and    eax,0x1
   1c79e:	c3                   	ret    
   1c79f:	90                   	nop

0001c7a0 <fatfs_entry_is_file>:
fatfs_entry_is_file():
   1c7a0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c7a4:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
   1c7a8:	c0 e8 05             	shr    al,0x5
   1c7ab:	83 e0 01             	and    eax,0x1
   1c7ae:	c3                   	ret    
   1c7af:	90                   	nop

0001c7b0 <fatfs_lfn_entries_required>:
fatfs_lfn_entries_required():
   1c7b0:	83 ec 18             	sub    esp,0x18
   1c7b3:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1c7b7:	e8 44 60 00 00       	call   22800 <strlen>
   1c7bc:	83 c4 10             	add    esp,0x10
   1c7bf:	31 d2                	xor    edx,edx
   1c7c1:	85 c0                	test   eax,eax
   1c7c3:	74 16                	je     1c7db <fatfs_lfn_entries_required+0x2b>
   1c7c5:	8d 48 0c             	lea    ecx,[eax+0xc]
   1c7c8:	ba 4f ec c4 4e       	mov    edx,0x4ec4ec4f
   1c7cd:	89 c8                	mov    eax,ecx
   1c7cf:	f7 ea                	imul   edx
   1c7d1:	89 c8                	mov    eax,ecx
   1c7d3:	c1 f8 1f             	sar    eax,0x1f
   1c7d6:	c1 fa 02             	sar    edx,0x2
   1c7d9:	29 c2                	sub    edx,eax
   1c7db:	89 d0                	mov    eax,edx
   1c7dd:	83 c4 0c             	add    esp,0xc
   1c7e0:	c3                   	ret    
   1c7e1:	eb 0d                	jmp    1c7f0 <fatfs_filename_to_lfn>
   1c7e3:	90                   	nop
   1c7e4:	90                   	nop
   1c7e5:	90                   	nop
   1c7e6:	90                   	nop
   1c7e7:	90                   	nop
   1c7e8:	90                   	nop
   1c7e9:	90                   	nop
   1c7ea:	90                   	nop
   1c7eb:	90                   	nop
   1c7ec:	90                   	nop
   1c7ed:	90                   	nop
   1c7ee:	90                   	nop
   1c7ef:	90                   	nop

0001c7f0 <fatfs_filename_to_lfn>:
fatfs_filename_to_lfn():
   1c7f0:	55                   	push   ebp
   1c7f1:	57                   	push   edi
   1c7f2:	56                   	push   esi
   1c7f3:	53                   	push   ebx
   1c7f4:	83 ec 68             	sub    esp,0x68
   1c7f7:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
   1c7fe:	8b 7c 24 7c          	mov    edi,DWORD PTR [esp+0x7c]
   1c802:	c7 44 24 28 01 00 00 	mov    DWORD PTR [esp+0x28],0x1
   1c809:	00 
   1c80a:	c7 44 24 2c 03 00 00 	mov    DWORD PTR [esp+0x2c],0x3
   1c811:	00 
   1c812:	c7 44 24 30 05 00 00 	mov    DWORD PTR [esp+0x30],0x5
   1c819:	00 
   1c81a:	c7 44 24 34 07 00 00 	mov    DWORD PTR [esp+0x34],0x7
   1c821:	00 
   1c822:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1c826:	c7 44 24 38 09 00 00 	mov    DWORD PTR [esp+0x38],0x9
   1c82d:	00 
   1c82e:	c7 44 24 3c 0e 00 00 	mov    DWORD PTR [esp+0x3c],0xe
   1c835:	00 
   1c836:	c7 44 24 40 10 00 00 	mov    DWORD PTR [esp+0x40],0x10
   1c83d:	00 
   1c83e:	c7 44 24 44 12 00 00 	mov    DWORD PTR [esp+0x44],0x12
   1c845:	00 
   1c846:	c7 44 24 48 14 00 00 	mov    DWORD PTR [esp+0x48],0x14
   1c84d:	00 
   1c84e:	c7 44 24 4c 16 00 00 	mov    DWORD PTR [esp+0x4c],0x16
   1c855:	00 
   1c856:	c7 44 24 50 18 00 00 	mov    DWORD PTR [esp+0x50],0x18
   1c85d:	00 
   1c85e:	c7 44 24 54 1c 00 00 	mov    DWORD PTR [esp+0x54],0x1c
   1c865:	00 
   1c866:	c7 44 24 58 1e 00 00 	mov    DWORD PTR [esp+0x58],0x1e
   1c86d:	00 
   1c86e:	8b 9c 24 80 00 00 00 	mov    ebx,DWORD PTR [esp+0x80]
   1c875:	8b ac 24 84 00 00 00 	mov    ebp,DWORD PTR [esp+0x84]
   1c87c:	57                   	push   edi
   1c87d:	e8 7e 5f 00 00       	call   22800 <strlen>
   1c882:	83 c4 10             	add    esp,0x10
   1c885:	85 c0                	test   eax,eax
   1c887:	89 c6                	mov    esi,eax
   1c889:	ba ff ff ff ff       	mov    edx,0xffffffff
   1c88e:	74 17                	je     1c8a7 <fatfs_filename_to_lfn+0xb7>
   1c890:	8d 48 0c             	lea    ecx,[eax+0xc]
   1c893:	ba 4f ec c4 4e       	mov    edx,0x4ec4ec4f
   1c898:	89 c8                	mov    eax,ecx
   1c89a:	c1 f9 1f             	sar    ecx,0x1f
   1c89d:	f7 ea                	imul   edx
   1c89f:	c1 fa 02             	sar    edx,0x2
   1c8a2:	29 ca                	sub    edx,ecx
   1c8a4:	83 ea 01             	sub    edx,0x1
   1c8a7:	8d 44 6d 00          	lea    eax,[ebp+ebp*2+0x0]
   1c8ab:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
   1c8af:	83 ec 04             	sub    esp,0x4
   1c8b2:	8d 44 85 00          	lea    eax,[ebp+eax*4+0x0]
   1c8b6:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1c8ba:	6a 20                	push   0x20
   1c8bc:	6a 00                	push   0x0
   1c8be:	53                   	push   ebx
   1c8bf:	e8 bc 44 00 00       	call   20d80 <memset>
   1c8c4:	83 c4 10             	add    esp,0x10
   1c8c7:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1c8cb:	8d 45 01             	lea    eax,[ebp+0x1]
   1c8ce:	39 ea                	cmp    edx,ebp
   1c8d0:	74 6e                	je     1c940 <fatfs_filename_to_lfn+0x150>
   1c8d2:	88 03                	mov    BYTE PTR [ebx],al
   1c8d4:	0f b6 44 24 04       	movzx  eax,BYTE PTR [esp+0x4]
   1c8d9:	8d 6c 24 50          	lea    ebp,[esp+0x50]
   1c8dd:	c6 43 0b 0f          	mov    BYTE PTR [ebx+0xb],0xf
   1c8e1:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1c8e5:	b9 01 00 00 00       	mov    ecx,0x1
   1c8ea:	88 43 0d             	mov    BYTE PTR [ebx+0xd],al
   1c8ed:	8d 44 24 20          	lea    eax,[esp+0x20]
   1c8f1:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1c8f5:	eb 24                	jmp    1c91b <fatfs_filename_to_lfn+0x12b>
   1c8f7:	89 f6                	mov    esi,esi
   1c8f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1c900:	0f b6 04 17          	movzx  eax,BYTE PTR [edi+edx*1]
   1c904:	88 04 0b             	mov    BYTE PTR [ebx+ecx*1],al
   1c907:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c90b:	83 c2 01             	add    edx,0x1
   1c90e:	39 e8                	cmp    eax,ebp
   1c910:	74 23                	je     1c935 <fatfs_filename_to_lfn+0x145>
   1c912:	8b 08                	mov    ecx,DWORD PTR [eax]
   1c914:	83 c0 04             	add    eax,0x4
   1c917:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1c91b:	39 d6                	cmp    esi,edx
   1c91d:	7f e1                	jg     1c900 <fatfs_filename_to_lfn+0x110>
   1c91f:	74 27                	je     1c948 <fatfs_filename_to_lfn+0x158>
   1c921:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1c925:	83 c2 01             	add    edx,0x1
   1c928:	c6 04 0b ff          	mov    BYTE PTR [ebx+ecx*1],0xff
   1c92c:	c6 44 0b 01 ff       	mov    BYTE PTR [ebx+ecx*1+0x1],0xff
   1c931:	39 e8                	cmp    eax,ebp
   1c933:	75 dd                	jne    1c912 <fatfs_filename_to_lfn+0x122>
   1c935:	83 c4 5c             	add    esp,0x5c
   1c938:	5b                   	pop    ebx
   1c939:	5e                   	pop    esi
   1c93a:	5f                   	pop    edi
   1c93b:	5d                   	pop    ebp
   1c93c:	c3                   	ret    
   1c93d:	8d 76 00             	lea    esi,[esi+0x0]
   1c940:	8d 42 01             	lea    eax,[edx+0x1]
   1c943:	83 c8 40             	or     eax,0x40
   1c946:	eb 8a                	jmp    1c8d2 <fatfs_filename_to_lfn+0xe2>
   1c948:	c6 04 0b 00          	mov    BYTE PTR [ebx+ecx*1],0x0
   1c94c:	eb b9                	jmp    1c907 <fatfs_filename_to_lfn+0x117>
   1c94e:	66 90                	xchg   ax,ax

0001c950 <fatfs_sfn_create_entry>:
fatfs_sfn_create_entry():
   1c950:	56                   	push   esi
   1c951:	53                   	push   ebx
   1c952:	31 c0                	xor    eax,eax
   1c954:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
   1c958:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   1c95c:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   1c960:	0f b6 0c 03          	movzx  ecx,BYTE PTR [ebx+eax*1]
   1c964:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
   1c967:	83 c0 01             	add    eax,0x1
   1c96a:	83 f8 0b             	cmp    eax,0xb
   1c96d:	75 f1                	jne    1c960 <fatfs_sfn_create_entry+0x10>
   1c96f:	83 7c 24 1c 01       	cmp    DWORD PTR [esp+0x1c],0x1
   1c974:	c6 42 0d 00          	mov    BYTE PTR [edx+0xd],0x0
   1c978:	c6 42 0e 00          	mov    BYTE PTR [edx+0xe],0x0
   1c97c:	c6 42 0f 00          	mov    BYTE PTR [edx+0xf],0x0
   1c980:	c6 42 11 00          	mov    BYTE PTR [edx+0x11],0x0
   1c984:	c6 42 10 20          	mov    BYTE PTR [edx+0x10],0x20
   1c988:	c6 42 13 00          	mov    BYTE PTR [edx+0x13],0x0
   1c98c:	c6 42 12 20          	mov    BYTE PTR [edx+0x12],0x20
   1c990:	19 c0                	sbb    eax,eax
   1c992:	c6 42 16 00          	mov    BYTE PTR [edx+0x16],0x0
   1c996:	c6 42 17 00          	mov    BYTE PTR [edx+0x17],0x0
   1c99a:	83 e0 10             	and    eax,0x10
   1c99d:	c6 42 19 00          	mov    BYTE PTR [edx+0x19],0x0
   1c9a1:	c6 42 18 20          	mov    BYTE PTR [edx+0x18],0x20
   1c9a5:	83 c0 10             	add    eax,0x10
   1c9a8:	c6 42 0c 00          	mov    BYTE PTR [edx+0xc],0x0
   1c9ac:	66 89 72 1a          	mov    WORD PTR [edx+0x1a],si
   1c9b0:	88 42 0b             	mov    BYTE PTR [edx+0xb],al
   1c9b3:	89 f0                	mov    eax,esi
   1c9b5:	c1 e8 10             	shr    eax,0x10
   1c9b8:	66 89 42 14          	mov    WORD PTR [edx+0x14],ax
   1c9bc:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1c9c0:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
   1c9c3:	5b                   	pop    ebx
   1c9c4:	5e                   	pop    esi
   1c9c5:	c3                   	ret    
   1c9c6:	8d 76 00             	lea    esi,[esi+0x0]
   1c9c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001c9d0 <fatfs_lfn_create_sfn>:
fatfs_lfn_create_sfn():
   1c9d0:	55                   	push   ebp
   1c9d1:	57                   	push   edi
   1c9d2:	56                   	push   esi
   1c9d3:	53                   	push   ebx
   1c9d4:	83 ec 38             	sub    esp,0x38
   1c9d7:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
   1c9db:	8b 7c 24 4c          	mov    edi,DWORD PTR [esp+0x4c]
   1c9df:	53                   	push   ebx
   1c9e0:	e8 1b 5e 00 00       	call   22800 <strlen>
   1c9e5:	83 c4 10             	add    esp,0x10
   1c9e8:	80 3b 2e             	cmp    BYTE PTR [ebx],0x2e
   1c9eb:	0f 84 f7 00 00 00    	je     1cae8 <fatfs_lfn_create_sfn+0x118>
   1c9f1:	83 ec 04             	sub    esp,0x4
   1c9f4:	89 c6                	mov    esi,eax
   1c9f6:	6a 0b                	push   0xb
   1c9f8:	6a 20                	push   0x20
   1c9fa:	57                   	push   edi
   1c9fb:	e8 80 43 00 00       	call   20d80 <memset>
   1ca00:	83 c4 0c             	add    esp,0xc
   1ca03:	6a 03                	push   0x3
   1ca05:	6a 20                	push   0x20
   1ca07:	8d 6c 24 29          	lea    ebp,[esp+0x29]
   1ca0b:	55                   	push   ebp
   1ca0c:	e8 6f 43 00 00       	call   20d80 <memset>
   1ca11:	83 c4 10             	add    esp,0x10
   1ca14:	85 f6                	test   esi,esi
   1ca16:	0f 8e 94 00 00 00    	jle    1cab0 <fatfs_lfn_create_sfn+0xe0>
   1ca1c:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1ca21:	31 d2                	xor    edx,edx
   1ca23:	90                   	nop
   1ca24:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1ca28:	80 3c 13 2e          	cmp    BYTE PTR [ebx+edx*1],0x2e
   1ca2c:	0f 44 c2             	cmove  eax,edx
   1ca2f:	83 c2 01             	add    edx,0x1
   1ca32:	39 d6                	cmp    esi,edx
   1ca34:	75 f2                	jne    1ca28 <fatfs_lfn_create_sfn+0x58>
   1ca36:	29 c5                	sub    ebp,eax
   1ca38:	83 f8 ff             	cmp    eax,0xffffffff
   1ca3b:	8d 50 01             	lea    edx,[eax+0x1]
   1ca3e:	8d 48 04             	lea    ecx,[eax+0x4]
   1ca41:	0f 84 b1 00 00 00    	je     1caf8 <fatfs_lfn_create_sfn+0x128>
   1ca47:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1ca4b:	39 d6                	cmp    esi,edx
   1ca4d:	7e 08                	jle    1ca57 <fatfs_lfn_create_sfn+0x87>
   1ca4f:	0f b6 04 13          	movzx  eax,BYTE PTR [ebx+edx*1]
   1ca53:	88 44 15 ff          	mov    BYTE PTR [ebp+edx*1-0x1],al
   1ca57:	83 c2 01             	add    edx,0x1
   1ca5a:	39 ca                	cmp    edx,ecx
   1ca5c:	75 ed                	jne    1ca4b <fatfs_lfn_create_sfn+0x7b>
   1ca5e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1ca62:	85 c0                	test   eax,eax
   1ca64:	7e 4a                	jle    1cab0 <fatfs_lfn_create_sfn+0xe0>
   1ca66:	31 f6                	xor    esi,esi
   1ca68:	31 c9                	xor    ecx,ecx
   1ca6a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1ca6e:	eb 17                	jmp    1ca87 <fatfs_lfn_create_sfn+0xb7>
   1ca70:	83 ea 20             	sub    edx,0x20
   1ca73:	88 14 37             	mov    BYTE PTR [edi+esi*1],dl
   1ca76:	83 c6 01             	add    esi,0x1
   1ca79:	83 fe 08             	cmp    esi,0x8
   1ca7c:	74 32                	je     1cab0 <fatfs_lfn_create_sfn+0xe0>
   1ca7e:	83 c1 01             	add    ecx,0x1
   1ca81:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
   1ca85:	7e 29                	jle    1cab0 <fatfs_lfn_create_sfn+0xe0>
   1ca87:	0f b6 14 0b          	movzx  edx,BYTE PTR [ebx+ecx*1]
   1ca8b:	80 fa 20             	cmp    dl,0x20
   1ca8e:	74 e9                	je     1ca79 <fatfs_lfn_create_sfn+0xa9>
   1ca90:	80 fa 2e             	cmp    dl,0x2e
   1ca93:	74 e4                	je     1ca79 <fatfs_lfn_create_sfn+0xa9>
   1ca95:	8d 6a 9f             	lea    ebp,[edx-0x61]
   1ca98:	89 e8                	mov    eax,ebp
   1ca9a:	3c 19                	cmp    al,0x19
   1ca9c:	76 d2                	jbe    1ca70 <fatfs_lfn_create_sfn+0xa0>
   1ca9e:	88 14 37             	mov    BYTE PTR [edi+esi*1],dl
   1caa1:	83 c6 01             	add    esi,0x1
   1caa4:	83 fe 08             	cmp    esi,0x8
   1caa7:	75 d5                	jne    1ca7e <fatfs_lfn_create_sfn+0xae>
   1caa9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cab0:	b8 08 00 00 00       	mov    eax,0x8
   1cab5:	0f b6 54 04 15       	movzx  edx,BYTE PTR [esp+eax*1+0x15]
   1caba:	8d 4a 9f             	lea    ecx,[edx-0x61]
   1cabd:	80 f9 19             	cmp    cl,0x19
   1cac0:	77 1e                	ja     1cae0 <fatfs_lfn_create_sfn+0x110>
   1cac2:	83 ea 20             	sub    edx,0x20
   1cac5:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
   1cac8:	83 c0 01             	add    eax,0x1
   1cacb:	83 f8 0b             	cmp    eax,0xb
   1cace:	75 e5                	jne    1cab5 <fatfs_lfn_create_sfn+0xe5>
   1cad0:	83 c4 2c             	add    esp,0x2c
   1cad3:	b8 01 00 00 00       	mov    eax,0x1
   1cad8:	5b                   	pop    ebx
   1cad9:	5e                   	pop    esi
   1cada:	5f                   	pop    edi
   1cadb:	5d                   	pop    ebp
   1cadc:	c3                   	ret    
   1cadd:	8d 76 00             	lea    esi,[esi+0x0]
   1cae0:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
   1cae3:	eb e3                	jmp    1cac8 <fatfs_lfn_create_sfn+0xf8>
   1cae5:	8d 76 00             	lea    esi,[esi+0x0]
   1cae8:	83 c4 2c             	add    esp,0x2c
   1caeb:	31 c0                	xor    eax,eax
   1caed:	5b                   	pop    ebx
   1caee:	5e                   	pop    esi
   1caef:	5f                   	pop    edi
   1caf0:	5d                   	pop    ebp
   1caf1:	c3                   	ret    
   1caf2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1caf8:	89 f0                	mov    eax,esi
   1cafa:	e9 67 ff ff ff       	jmp    1ca66 <fatfs_lfn_create_sfn+0x96>
   1caff:	90                   	nop

0001cb00 <fatfs_lfn_generate_tail>:
fatfs_lfn_generate_tail():
   1cb00:	55                   	push   ebp
   1cb01:	57                   	push   edi
   1cb02:	31 c0                	xor    eax,eax
   1cb04:	56                   	push   esi
   1cb05:	53                   	push   ebx
   1cb06:	83 ec 3c             	sub    esp,0x3c
   1cb09:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
   1cb0d:	81 fb 9f 86 01 00    	cmp    ebx,0x1869f
   1cb13:	76 0b                	jbe    1cb20 <fatfs_lfn_generate_tail+0x20>
   1cb15:	83 c4 3c             	add    esp,0x3c
   1cb18:	5b                   	pop    ebx
   1cb19:	5e                   	pop    esi
   1cb1a:	5f                   	pop    edi
   1cb1b:	5d                   	pop    ebp
   1cb1c:	c3                   	ret    
   1cb1d:	8d 76 00             	lea    esi,[esi+0x0]
   1cb20:	83 ec 04             	sub    esp,0x4
   1cb23:	bd cd cc cc cc       	mov    ebp,0xcccccccd
   1cb28:	6a 0c                	push   0xc
   1cb2a:	6a 00                	push   0x0
   1cb2c:	8d 7c 24 13          	lea    edi,[esp+0x13]
   1cb30:	57                   	push   edi
   1cb31:	e8 4a 42 00 00       	call   20d80 <memset>
   1cb36:	c6 44 24 17 7e       	mov    BYTE PTR [esp+0x17],0x7e
   1cb3b:	c7 44 24 2f 30 31 32 	mov    DWORD PTR [esp+0x2f],0x33323130
   1cb42:	33 
   1cb43:	c7 44 24 33 34 35 36 	mov    DWORD PTR [esp+0x33],0x37363534
   1cb4a:	37 
   1cb4b:	c7 44 24 37 38 39 41 	mov    DWORD PTR [esp+0x37],0x42413938
   1cb52:	42 
   1cb53:	c7 44 24 3b 43 44 45 	mov    DWORD PTR [esp+0x3b],0x46454443
   1cb5a:	46 
   1cb5b:	c6 44 24 3f 00       	mov    BYTE PTR [esp+0x3f],0x0
   1cb60:	83 c4 10             	add    esp,0x10
   1cb63:	8d 74 24 13          	lea    esi,[esp+0x13]
   1cb67:	eb 09                	jmp    1cb72 <fatfs_lfn_generate_tail+0x72>
   1cb69:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cb70:	89 ce                	mov    esi,ecx
   1cb72:	89 d8                	mov    eax,ebx
   1cb74:	8d 4e 01             	lea    ecx,[esi+0x1]
   1cb77:	f7 e5                	mul    ebp
   1cb79:	c1 ea 03             	shr    edx,0x3
   1cb7c:	8d 04 92             	lea    eax,[edx+edx*4]
   1cb7f:	01 c0                	add    eax,eax
   1cb81:	29 c3                	sub    ebx,eax
   1cb83:	85 d2                	test   edx,edx
   1cb85:	0f b6 44 1c 1f       	movzx  eax,BYTE PTR [esp+ebx*1+0x1f]
   1cb8a:	89 d3                	mov    ebx,edx
   1cb8c:	88 41 ff             	mov    BYTE PTR [ecx-0x1],al
   1cb8f:	75 df                	jne    1cb70 <fatfs_lfn_generate_tail+0x70>
   1cb91:	8d 4c 24 13          	lea    ecx,[esp+0x13]
   1cb95:	c6 46 01 00          	mov    BYTE PTR [esi+0x1],0x0
   1cb99:	39 ce                	cmp    esi,ecx
   1cb9b:	72 70                	jb     1cc0d <fatfs_lfn_generate_tail+0x10d>
   1cb9d:	89 f2                	mov    edx,esi
   1cb9f:	8d 4c 24 08          	lea    ecx,[esp+0x8]
   1cba3:	8d 5c 24 12          	lea    ebx,[esp+0x12]
   1cba7:	eb 0a                	jmp    1cbb3 <fatfs_lfn_generate_tail+0xb3>
   1cba9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cbb0:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1cbb3:	83 ea 01             	sub    edx,0x1
   1cbb6:	83 c1 01             	add    ecx,0x1
   1cbb9:	88 41 ff             	mov    BYTE PTR [ecx-0x1],al
   1cbbc:	39 da                	cmp    edx,ebx
   1cbbe:	75 f0                	jne    1cbb0 <fatfs_lfn_generate_tail+0xb0>
   1cbc0:	8d 44 24 13          	lea    eax,[esp+0x13]
   1cbc4:	29 c6                	sub    esi,eax
   1cbc6:	8d 44 34 09          	lea    eax,[esp+esi*1+0x9]
   1cbca:	83 ec 04             	sub    esp,0x4
   1cbcd:	c6 00 00             	mov    BYTE PTR [eax],0x0
   1cbd0:	6a 0b                	push   0xb
   1cbd2:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
   1cbd6:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
   1cbda:	e8 81 4a 00 00       	call   21660 <memcpy>
   1cbdf:	89 3c 24             	mov    DWORD PTR [esp],edi
   1cbe2:	e8 19 5c 00 00       	call   22800 <strlen>
   1cbe7:	83 c4 0c             	add    esp,0xc
   1cbea:	50                   	push   eax
   1cbeb:	57                   	push   edi
   1cbec:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
   1cbf0:	29 c7                	sub    edi,eax
   1cbf2:	89 f8                	mov    eax,edi
   1cbf4:	83 c0 08             	add    eax,0x8
   1cbf7:	50                   	push   eax
   1cbf8:	e8 63 4a 00 00       	call   21660 <memcpy>
   1cbfd:	83 c4 10             	add    esp,0x10
   1cc00:	b8 01 00 00 00       	mov    eax,0x1
   1cc05:	83 c4 3c             	add    esp,0x3c
   1cc08:	5b                   	pop    ebx
   1cc09:	5e                   	pop    esi
   1cc0a:	5f                   	pop    edi
   1cc0b:	5d                   	pop    ebp
   1cc0c:	c3                   	ret    
   1cc0d:	8d 44 24 08          	lea    eax,[esp+0x8]
   1cc11:	eb b7                	jmp    1cbca <fatfs_lfn_generate_tail+0xca>
   1cc13:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1cc19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001cc20 <fatfs_convert_from_fat_time>:
fatfs_convert_from_fat_time():
   1cc20:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1cc24:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   1cc28:	89 c2                	mov    edx,eax
   1cc2a:	66 c1 ea 0b          	shr    dx,0xb
   1cc2e:	0f b7 d2             	movzx  edx,dx
   1cc31:	89 11                	mov    DWORD PTR [ecx],edx
   1cc33:	89 c2                	mov    edx,eax
   1cc35:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1cc39:	66 c1 ea 05          	shr    dx,0x5
   1cc3d:	83 e0 1f             	and    eax,0x1f
   1cc40:	83 e2 3f             	and    edx,0x3f
   1cc43:	01 c0                	add    eax,eax
   1cc45:	89 11                	mov    DWORD PTR [ecx],edx
   1cc47:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   1cc4b:	89 02                	mov    DWORD PTR [edx],eax
   1cc4d:	c3                   	ret    
   1cc4e:	66 90                	xchg   ax,ax

0001cc50 <fatfs_convert_from_fat_date>:
fatfs_convert_from_fat_date():
   1cc50:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1cc54:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1cc58:	89 c1                	mov    ecx,eax
   1cc5a:	83 e1 1f             	and    ecx,0x1f
   1cc5d:	89 0a                	mov    DWORD PTR [edx],ecx
   1cc5f:	89 c2                	mov    edx,eax
   1cc61:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1cc65:	66 c1 ea 05          	shr    dx,0x5
   1cc69:	66 c1 e8 09          	shr    ax,0x9
   1cc6d:	83 e2 0f             	and    edx,0xf
   1cc70:	0f b7 c0             	movzx  eax,ax
   1cc73:	89 11                	mov    DWORD PTR [ecx],edx
   1cc75:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   1cc79:	05 bc 07 00 00       	add    eax,0x7bc
   1cc7e:	89 02                	mov    DWORD PTR [edx],eax
   1cc80:	c3                   	ret    
   1cc81:	eb 0d                	jmp    1cc90 <fatfs_convert_to_fat_time>
   1cc83:	90                   	nop
   1cc84:	90                   	nop
   1cc85:	90                   	nop
   1cc86:	90                   	nop
   1cc87:	90                   	nop
   1cc88:	90                   	nop
   1cc89:	90                   	nop
   1cc8a:	90                   	nop
   1cc8b:	90                   	nop
   1cc8c:	90                   	nop
   1cc8d:	90                   	nop
   1cc8e:	90                   	nop
   1cc8f:	90                   	nop

0001cc90 <fatfs_convert_to_fat_time>:
fatfs_convert_to_fat_time():
   1cc90:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1cc94:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   1cc98:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1cc9c:	83 e0 3f             	and    eax,0x3f
   1cc9f:	c1 e1 0b             	shl    ecx,0xb
   1cca2:	c1 e0 05             	shl    eax,0x5
   1cca5:	09 c8                	or     eax,ecx
   1cca7:	89 d1                	mov    ecx,edx
   1cca9:	c1 e9 1f             	shr    ecx,0x1f
   1ccac:	01 ca                	add    edx,ecx
   1ccae:	d1 fa                	sar    edx,1
   1ccb0:	83 e2 1f             	and    edx,0x1f
   1ccb3:	09 d0                	or     eax,edx
   1ccb5:	c3                   	ret    
   1ccb6:	8d 76 00             	lea    esi,[esi+0x0]
   1ccb9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001ccc0 <fatfs_convert_to_fat_date>:
fatfs_convert_to_fat_date():
   1ccc0:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1ccc4:	0f b7 4c 24 04       	movzx  ecx,WORD PTR [esp+0x4]
   1ccc9:	8d 82 44 f8 ff ff    	lea    eax,[edx-0x7bc]
   1cccf:	81 fa bc 07 00 00    	cmp    edx,0x7bc
   1ccd5:	0f 4d d0             	cmovge edx,eax
   1ccd8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1ccdc:	83 e1 1f             	and    ecx,0x1f
   1ccdf:	c1 e2 09             	shl    edx,0x9
   1cce2:	83 e0 0f             	and    eax,0xf
   1cce5:	c1 e0 05             	shl    eax,0x5
   1cce8:	09 c8                	or     eax,ecx
   1ccea:	09 d0                	or     eax,edx
   1ccec:	c3                   	ret    
   1cced:	66 90                	xchg   ax,ax
   1ccef:	90                   	nop

0001ccf0 <FileString_StrCmpNoCase>:
FileString_StrCmpNoCase():
   1ccf0:	55                   	push   ebp
   1ccf1:	57                   	push   edi
   1ccf2:	56                   	push   esi
   1ccf3:	53                   	push   ebx
   1ccf4:	83 ec 0c             	sub    esp,0xc
   1ccf7:	85 c9                	test   ecx,ecx
   1ccf9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1ccfd:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
   1cd01:	74 5d                	je     1cd60 <FileString_StrCmpNoCase+0x70>
   1cd03:	89 d7                	mov    edi,edx
   1cd05:	31 f6                	xor    esi,esi
   1cd07:	eb 18                	jmp    1cd21 <FileString_StrCmpNoCase+0x31>
   1cd09:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cd10:	84 c9                	test   cl,cl
   1cd12:	74 4c                	je     1cd60 <FileString_StrCmpNoCase+0x70>
   1cd14:	84 db                	test   bl,bl
   1cd16:	74 48                	je     1cd60 <FileString_StrCmpNoCase+0x70>
   1cd18:	83 c6 01             	add    esi,0x1
   1cd1b:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
   1cd1f:	74 3f                	je     1cd60 <FileString_StrCmpNoCase+0x70>
   1cd21:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1cd25:	0f b6 1c 37          	movzx  ebx,BYTE PTR [edi+esi*1]
   1cd29:	0f b6 0c 30          	movzx  ecx,BYTE PTR [eax+esi*1]
   1cd2d:	8d 6b bf             	lea    ebp,[ebx-0x41]
   1cd30:	8d 51 bf             	lea    edx,[ecx-0x41]
   1cd33:	8d 41 20             	lea    eax,[ecx+0x20]
   1cd36:	80 fa 19             	cmp    dl,0x19
   1cd39:	8d 53 20             	lea    edx,[ebx+0x20]
   1cd3c:	0f 47 c1             	cmova  eax,ecx
   1cd3f:	88 44 24 03          	mov    BYTE PTR [esp+0x3],al
   1cd43:	89 e8                	mov    eax,ebp
   1cd45:	3c 19                	cmp    al,0x19
   1cd47:	0f be 44 24 03       	movsx  eax,BYTE PTR [esp+0x3]
   1cd4c:	0f 47 d3             	cmova  edx,ebx
   1cd4f:	0f be d2             	movsx  edx,dl
   1cd52:	29 d0                	sub    eax,edx
   1cd54:	74 ba                	je     1cd10 <FileString_StrCmpNoCase+0x20>
   1cd56:	83 c4 0c             	add    esp,0xc
   1cd59:	5b                   	pop    ebx
   1cd5a:	5e                   	pop    esi
   1cd5b:	5f                   	pop    edi
   1cd5c:	5d                   	pop    ebp
   1cd5d:	c3                   	ret    
   1cd5e:	66 90                	xchg   ax,ax
   1cd60:	83 c4 0c             	add    esp,0xc
   1cd63:	31 c0                	xor    eax,eax
   1cd65:	5b                   	pop    ebx
   1cd66:	5e                   	pop    esi
   1cd67:	5f                   	pop    edi
   1cd68:	5d                   	pop    ebp
   1cd69:	c3                   	ret    
   1cd6a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001cd70 <fatfs_total_path_levels>:
fatfs_total_path_levels():
   1cd70:	56                   	push   esi
   1cd71:	53                   	push   ebx
   1cd72:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1cd76:	85 d2                	test   edx,edx
   1cd78:	74 46                	je     1cdc0 <fatfs_total_path_levels+0x50>
   1cd7a:	80 3a 2f             	cmp    BYTE PTR [edx],0x2f
   1cd7d:	74 49                	je     1cdc8 <fatfs_total_path_levels+0x58>
   1cd7f:	80 7a 01 3a          	cmp    BYTE PTR [edx+0x1],0x3a
   1cd83:	74 06                	je     1cd8b <fatfs_total_path_levels+0x1b>
   1cd85:	80 7a 02 5c          	cmp    BYTE PTR [edx+0x2],0x5c
   1cd89:	75 35                	jne    1cdc0 <fatfs_total_path_levels+0x50>
   1cd8b:	83 c2 03             	add    edx,0x3
   1cd8e:	bb 5c 00 00 00       	mov    ebx,0x5c
   1cd93:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
   1cd96:	84 c9                	test   cl,cl
   1cd98:	74 26                	je     1cdc0 <fatfs_total_path_levels+0x50>
   1cd9a:	31 c0                	xor    eax,eax
   1cd9c:	eb 0c                	jmp    1cdaa <fatfs_total_path_levels+0x3a>
   1cd9e:	66 90                	xchg   ax,ax
   1cda0:	83 c2 01             	add    edx,0x1
   1cda3:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
   1cda6:	84 c9                	test   cl,cl
   1cda8:	74 1b                	je     1cdc5 <fatfs_total_path_levels+0x55>
   1cdaa:	38 cb                	cmp    bl,cl
   1cdac:	75 f2                	jne    1cda0 <fatfs_total_path_levels+0x30>
   1cdae:	0f b6 4a 01          	movzx  ecx,BYTE PTR [edx+0x1]
   1cdb2:	83 c0 01             	add    eax,0x1
   1cdb5:	8d 72 01             	lea    esi,[edx+0x1]
   1cdb8:	84 c9                	test   cl,cl
   1cdba:	74 16                	je     1cdd2 <fatfs_total_path_levels+0x62>
   1cdbc:	89 f2                	mov    edx,esi
   1cdbe:	eb ea                	jmp    1cdaa <fatfs_total_path_levels+0x3a>
   1cdc0:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1cdc5:	5b                   	pop    ebx
   1cdc6:	5e                   	pop    esi
   1cdc7:	c3                   	ret    
   1cdc8:	83 c2 01             	add    edx,0x1
   1cdcb:	bb 2f 00 00 00       	mov    ebx,0x2f
   1cdd0:	eb c1                	jmp    1cd93 <fatfs_total_path_levels+0x23>
   1cdd2:	83 e8 01             	sub    eax,0x1
   1cdd5:	eb ee                	jmp    1cdc5 <fatfs_total_path_levels+0x55>
   1cdd7:	89 f6                	mov    esi,esi
   1cdd9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001cde0 <fatfs_get_substring>:
fatfs_get_substring():
   1cde0:	55                   	push   ebp
   1cde1:	57                   	push   edi
   1cde2:	56                   	push   esi
   1cde3:	53                   	push   ebx
   1cde4:	83 ec 1c             	sub    esp,0x1c
   1cde7:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
   1cdeb:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   1cdef:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
   1cdf3:	85 db                	test   ebx,ebx
   1cdf5:	0f 84 ba 00 00 00    	je     1ceb5 <fatfs_get_substring+0xd5>
   1cdfb:	85 f6                	test   esi,esi
   1cdfd:	0f 8e b2 00 00 00    	jle    1ceb5 <fatfs_get_substring+0xd5>
   1ce03:	80 3b 2f             	cmp    BYTE PTR [ebx],0x2f
   1ce06:	0f 84 9c 00 00 00    	je     1cea8 <fatfs_get_substring+0xc8>
   1ce0c:	80 7b 01 3a          	cmp    BYTE PTR [ebx+0x1],0x3a
   1ce10:	74 0a                	je     1ce1c <fatfs_get_substring+0x3c>
   1ce12:	80 7b 02 5c          	cmp    BYTE PTR [ebx+0x2],0x5c
   1ce16:	0f 85 99 00 00 00    	jne    1ceb5 <fatfs_get_substring+0xd5>
   1ce1c:	83 c3 03             	add    ebx,0x3
   1ce1f:	c6 44 24 0f 5c       	mov    BYTE PTR [esp+0xf],0x5c
   1ce24:	83 ec 0c             	sub    esp,0xc
   1ce27:	53                   	push   ebx
   1ce28:	e8 d3 59 00 00       	call   22800 <strlen>
   1ce2d:	83 c4 10             	add    esp,0x10
   1ce30:	85 c0                	test   eax,eax
   1ce32:	0f 8e 84 00 00 00    	jle    1cebc <fatfs_get_substring+0xdc>
   1ce38:	01 d8                	add    eax,ebx
   1ce3a:	83 ee 01             	sub    esi,0x1
   1ce3d:	31 ed                	xor    ebp,ebp
   1ce3f:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
   1ce43:	31 d2                	xor    edx,edx
   1ce45:	89 c6                	mov    esi,eax
   1ce47:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
   1ce4b:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [esp+0xf]
   1ce50:	eb 23                	jmp    1ce75 <fatfs_get_substring+0x95>
   1ce52:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1ce58:	39 54 24 34          	cmp    DWORD PTR [esp+0x34],edx
   1ce5c:	75 10                	jne    1ce6e <fatfs_get_substring+0x8e>
   1ce5e:	39 6c 24 08          	cmp    DWORD PTR [esp+0x8],ebp
   1ce62:	7e 0a                	jle    1ce6e <fatfs_get_substring+0x8e>
   1ce64:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
   1ce68:	88 0c 2f             	mov    BYTE PTR [edi+ebp*1],cl
   1ce6b:	83 c5 01             	add    ebp,0x1
   1ce6e:	83 c3 01             	add    ebx,0x1
   1ce71:	39 f3                	cmp    ebx,esi
   1ce73:	74 11                	je     1ce86 <fatfs_get_substring+0xa6>
   1ce75:	0f b6 0b             	movzx  ecx,BYTE PTR [ebx]
   1ce78:	38 c8                	cmp    al,cl
   1ce7a:	75 dc                	jne    1ce58 <fatfs_get_substring+0x78>
   1ce7c:	83 c3 01             	add    ebx,0x1
   1ce7f:	83 c2 01             	add    edx,0x1
   1ce82:	39 f3                	cmp    ebx,esi
   1ce84:	75 ef                	jne    1ce75 <fatfs_get_substring+0x95>
   1ce86:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1ce8a:	c6 04 28 00          	mov    BYTE PTR [eax+ebp*1],0x0
   1ce8e:	80 38 00             	cmp    BYTE PTR [eax],0x0
   1ce91:	0f 94 c0             	sete   al
   1ce94:	0f b6 c0             	movzx  eax,al
   1ce97:	f7 d8                	neg    eax
   1ce99:	83 c4 1c             	add    esp,0x1c
   1ce9c:	5b                   	pop    ebx
   1ce9d:	5e                   	pop    esi
   1ce9e:	5f                   	pop    edi
   1ce9f:	5d                   	pop    ebp
   1cea0:	c3                   	ret    
   1cea1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cea8:	83 c3 01             	add    ebx,0x1
   1ceab:	c6 44 24 0f 2f       	mov    BYTE PTR [esp+0xf],0x2f
   1ceb0:	e9 6f ff ff ff       	jmp    1ce24 <fatfs_get_substring+0x44>
   1ceb5:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1ceba:	eb dd                	jmp    1ce99 <fatfs_get_substring+0xb9>
   1cebc:	31 ed                	xor    ebp,ebp
   1cebe:	eb c6                	jmp    1ce86 <fatfs_get_substring+0xa6>

0001cec0 <fatfs_split_path>:
fatfs_split_path():
   1cec0:	55                   	push   ebp
   1cec1:	57                   	push   edi
   1cec2:	56                   	push   esi
   1cec3:	53                   	push   ebx
   1cec4:	83 ec 0c             	sub    esp,0xc
   1cec7:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   1cecb:	8b 6c 24 2c          	mov    ebp,DWORD PTR [esp+0x2c]
   1cecf:	56                   	push   esi
   1ced0:	e8 9b fe ff ff       	call   1cd70 <fatfs_total_path_levels>
   1ced5:	83 f8 ff             	cmp    eax,0xffffffff
   1ced8:	5a                   	pop    edx
   1ced9:	74 7d                	je     1cf58 <fatfs_split_path+0x98>
   1cedb:	ff 74 24 30          	push   DWORD PTR [esp+0x30]
   1cedf:	55                   	push   ebp
   1cee0:	89 c3                	mov    ebx,eax
   1cee2:	50                   	push   eax
   1cee3:	56                   	push   esi
   1cee4:	e8 f7 fe ff ff       	call   1cde0 <fatfs_get_substring>
   1cee9:	83 c4 10             	add    esp,0x10
   1ceec:	85 c0                	test   eax,eax
   1ceee:	89 c7                	mov    edi,eax
   1cef0:	75 66                	jne    1cf58 <fatfs_split_path+0x98>
   1cef2:	85 db                	test   ebx,ebx
   1cef4:	74 4a                	je     1cf40 <fatfs_split_path+0x80>
   1cef6:	83 ec 0c             	sub    esp,0xc
   1cef9:	56                   	push   esi
   1cefa:	e8 01 59 00 00       	call   22800 <strlen>
   1ceff:	89 2c 24             	mov    DWORD PTR [esp],ebp
   1cf02:	89 c3                	mov    ebx,eax
   1cf04:	e8 f7 58 00 00       	call   22800 <strlen>
   1cf09:	83 c4 0c             	add    esp,0xc
   1cf0c:	29 c3                	sub    ebx,eax
   1cf0e:	3b 5c 24 2c          	cmp    ebx,DWORD PTR [esp+0x2c]
   1cf12:	0f 4f 5c 24 2c       	cmovg  ebx,DWORD PTR [esp+0x2c]
   1cf17:	53                   	push   ebx
   1cf18:	56                   	push   esi
   1cf19:	ff 74 24 30          	push   DWORD PTR [esp+0x30]
   1cf1d:	e8 3e 47 00 00       	call   21660 <memcpy>
   1cf22:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   1cf26:	83 c4 10             	add    esp,0x10
   1cf29:	c6 44 18 ff 00       	mov    BYTE PTR [eax+ebx*1-0x1],0x0
   1cf2e:	83 c4 0c             	add    esp,0xc
   1cf31:	89 f8                	mov    eax,edi
   1cf33:	5b                   	pop    ebx
   1cf34:	5e                   	pop    esi
   1cf35:	5f                   	pop    edi
   1cf36:	5d                   	pop    ebp
   1cf37:	c3                   	ret    
   1cf38:	90                   	nop
   1cf39:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cf40:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
   1cf44:	c6 00 00             	mov    BYTE PTR [eax],0x0
   1cf47:	83 c4 0c             	add    esp,0xc
   1cf4a:	89 f8                	mov    eax,edi
   1cf4c:	5b                   	pop    ebx
   1cf4d:	5e                   	pop    esi
   1cf4e:	5f                   	pop    edi
   1cf4f:	5d                   	pop    ebp
   1cf50:	c3                   	ret    
   1cf51:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1cf58:	bf ff ff ff ff       	mov    edi,0xffffffff
   1cf5d:	eb cf                	jmp    1cf2e <fatfs_split_path+0x6e>
   1cf5f:	90                   	nop

0001cf60 <fatfs_compare_names>:
fatfs_compare_names():
   1cf60:	55                   	push   ebp
   1cf61:	57                   	push   edi
   1cf62:	56                   	push   esi
   1cf63:	53                   	push   ebx
   1cf64:	83 ec 1c             	sub    esp,0x1c
   1cf67:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   1cf6b:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   1cf6f:	0f b6 55 00          	movzx  edx,BYTE PTR [ebp+0x0]
   1cf73:	84 d2                	test   dl,dl
   1cf75:	0f 84 61 01 00 00    	je     1d0dc <fatfs_compare_names+0x17c>
   1cf7b:	89 e8                	mov    eax,ebp
   1cf7d:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1cf82:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1cf88:	89 c1                	mov    ecx,eax
   1cf8a:	29 e9                	sub    ecx,ebp
   1cf8c:	80 fa 2e             	cmp    dl,0x2e
   1cf8f:	0f 44 d9             	cmove  ebx,ecx
   1cf92:	83 c0 01             	add    eax,0x1
   1cf95:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1cf98:	84 d2                	test   dl,dl
   1cf9a:	75 ec                	jne    1cf88 <fatfs_compare_names+0x28>
   1cf9c:	0f b6 17             	movzx  edx,BYTE PTR [edi]
   1cf9f:	84 d2                	test   dl,dl
   1cfa1:	0f 84 66 01 00 00    	je     1d10d <fatfs_compare_names+0x1ad>
   1cfa7:	89 f8                	mov    eax,edi
   1cfa9:	be ff ff ff ff       	mov    esi,0xffffffff
   1cfae:	66 90                	xchg   ax,ax
   1cfb0:	89 c1                	mov    ecx,eax
   1cfb2:	29 f9                	sub    ecx,edi
   1cfb4:	80 fa 2e             	cmp    dl,0x2e
   1cfb7:	0f 44 f1             	cmove  esi,ecx
   1cfba:	83 c0 01             	add    eax,0x1
   1cfbd:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1cfc0:	84 d2                	test   dl,dl
   1cfc2:	75 ec                	jne    1cfb0 <fatfs_compare_names+0x50>
   1cfc4:	83 fb ff             	cmp    ebx,0xffffffff
   1cfc7:	75 1f                	jne    1cfe8 <fatfs_compare_names+0x88>
   1cfc9:	83 fe ff             	cmp    esi,0xffffffff
   1cfcc:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1cfd3:	00 
   1cfd4:	74 12                	je     1cfe8 <fatfs_compare_names+0x88>
   1cfd6:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1cfda:	83 c4 1c             	add    esp,0x1c
   1cfdd:	5b                   	pop    ebx
   1cfde:	5e                   	pop    esi
   1cfdf:	5f                   	pop    edi
   1cfe0:	5d                   	pop    ebp
   1cfe1:	c3                   	ret    
   1cfe2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1cfe8:	83 fe ff             	cmp    esi,0xffffffff
   1cfeb:	0f 94 c0             	sete   al
   1cfee:	83 fb ff             	cmp    ebx,0xffffffff
   1cff1:	74 0c                	je     1cfff <fatfs_compare_names+0x9f>
   1cff3:	84 c0                	test   al,al
   1cff5:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1cffc:	00 
   1cffd:	75 d7                	jne    1cfd6 <fatfs_compare_names+0x76>
   1cfff:	83 fb ff             	cmp    ebx,0xffffffff
   1d002:	0f 84 e8 00 00 00    	je     1d0f0 <fatfs_compare_names+0x190>
   1d008:	8d 44 1d 01          	lea    eax,[ebp+ebx*1+0x1]
   1d00c:	8d 54 37 01          	lea    edx,[edi+esi*1+0x1]
   1d010:	83 ec 0c             	sub    esp,0xc
   1d013:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1d017:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
   1d01b:	50                   	push   eax
   1d01c:	e8 df 57 00 00       	call   22800 <strlen>
   1d021:	5a                   	pop    edx
   1d022:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   1d026:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1d02a:	e8 d1 57 00 00       	call   22800 <strlen>
   1d02f:	83 c4 10             	add    esp,0x10
   1d032:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   1d036:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1d03d:	00 
   1d03e:	39 c1                	cmp    ecx,eax
   1d040:	75 94                	jne    1cfd6 <fatfs_compare_names+0x76>
   1d042:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1d046:	8d 54 37 01          	lea    edx,[edi+esi*1+0x1]
   1d04a:	e8 a1 fc ff ff       	call   1ccf0 <FileString_StrCmpNoCase>
   1d04f:	85 c0                	test   eax,eax
   1d051:	75 83                	jne    1cfd6 <fatfs_compare_names+0x76>
   1d053:	85 db                	test   ebx,ebx
   1d055:	8d 44 1d ff          	lea    eax,[ebp+ebx*1-0x1]
   1d059:	0f 84 bd 00 00 00    	je     1d11c <fatfs_compare_names+0x1bc>
   1d05f:	80 38 20             	cmp    BYTE PTR [eax],0x20
   1d062:	0f 85 d8 00 00 00    	jne    1d140 <fatfs_compare_names+0x1e0>
   1d068:	89 c2                	mov    edx,eax
   1d06a:	29 da                	sub    edx,ebx
   1d06c:	83 c2 01             	add    edx,0x1
   1d06f:	eb 0f                	jmp    1d080 <fatfs_compare_names+0x120>
   1d071:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1d078:	83 e8 01             	sub    eax,0x1
   1d07b:	80 38 20             	cmp    BYTE PTR [eax],0x20
   1d07e:	75 08                	jne    1d088 <fatfs_compare_names+0x128>
   1d080:	89 c3                	mov    ebx,eax
   1d082:	29 eb                	sub    ebx,ebp
   1d084:	39 c2                	cmp    edx,eax
   1d086:	75 f0                	jne    1d078 <fatfs_compare_names+0x118>
   1d088:	85 f6                	test   esi,esi
   1d08a:	8d 44 37 ff          	lea    eax,[edi+esi*1-0x1]
   1d08e:	74 20                	je     1d0b0 <fatfs_compare_names+0x150>
   1d090:	80 38 20             	cmp    BYTE PTR [eax],0x20
   1d093:	75 1b                	jne    1d0b0 <fatfs_compare_names+0x150>
   1d095:	89 c2                	mov    edx,eax
   1d097:	29 f2                	sub    edx,esi
   1d099:	83 c2 01             	add    edx,0x1
   1d09c:	eb 0a                	jmp    1d0a8 <fatfs_compare_names+0x148>
   1d09e:	66 90                	xchg   ax,ax
   1d0a0:	83 e8 01             	sub    eax,0x1
   1d0a3:	80 38 20             	cmp    BYTE PTR [eax],0x20
   1d0a6:	75 08                	jne    1d0b0 <fatfs_compare_names+0x150>
   1d0a8:	89 c6                	mov    esi,eax
   1d0aa:	29 fe                	sub    esi,edi
   1d0ac:	39 c2                	cmp    edx,eax
   1d0ae:	75 f0                	jne    1d0a0 <fatfs_compare_names+0x140>
   1d0b0:	39 de                	cmp    esi,ebx
   1d0b2:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1d0b9:	00 
   1d0ba:	0f 85 16 ff ff ff    	jne    1cfd6 <fatfs_compare_names+0x76>
   1d0c0:	89 d9                	mov    ecx,ebx
   1d0c2:	89 fa                	mov    edx,edi
   1d0c4:	89 e8                	mov    eax,ebp
   1d0c6:	e8 25 fc ff ff       	call   1ccf0 <FileString_StrCmpNoCase>
   1d0cb:	85 c0                	test   eax,eax
   1d0cd:	0f 94 c0             	sete   al
   1d0d0:	0f b6 c0             	movzx  eax,al
   1d0d3:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1d0d7:	e9 fa fe ff ff       	jmp    1cfd6 <fatfs_compare_names+0x76>
   1d0dc:	0f b6 17             	movzx  edx,BYTE PTR [edi]
   1d0df:	bb ff ff ff ff       	mov    ebx,0xffffffff
   1d0e4:	84 d2                	test   dl,dl
   1d0e6:	0f 85 bb fe ff ff    	jne    1cfa7 <fatfs_compare_names+0x47>
   1d0ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d0f0:	83 ec 0c             	sub    esp,0xc
   1d0f3:	55                   	push   ebp
   1d0f4:	e8 07 57 00 00       	call   22800 <strlen>
   1d0f9:	89 3c 24             	mov    DWORD PTR [esp],edi
   1d0fc:	89 c3                	mov    ebx,eax
   1d0fe:	e8 fd 56 00 00       	call   22800 <strlen>
   1d103:	83 c4 10             	add    esp,0x10
   1d106:	89 c6                	mov    esi,eax
   1d108:	e9 46 ff ff ff       	jmp    1d053 <fatfs_compare_names+0xf3>
   1d10d:	b8 01 00 00 00       	mov    eax,0x1
   1d112:	be ff ff ff ff       	mov    esi,0xffffffff
   1d117:	e9 d2 fe ff ff       	jmp    1cfee <fatfs_compare_names+0x8e>
   1d11c:	85 f6                	test   esi,esi
   1d11e:	8d 44 37 ff          	lea    eax,[edi+esi*1-0x1]
   1d122:	74 9c                	je     1d0c0 <fatfs_compare_names+0x160>
   1d124:	80 38 20             	cmp    BYTE PTR [eax],0x20
   1d127:	0f 84 68 ff ff ff    	je     1d095 <fatfs_compare_names+0x135>
   1d12d:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1d134:	00 
   1d135:	e9 9c fe ff ff       	jmp    1cfd6 <fatfs_compare_names+0x76>
   1d13a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d140:	85 f6                	test   esi,esi
   1d142:	8d 44 37 ff          	lea    eax,[edi+esi*1-0x1]
   1d146:	0f 85 44 ff ff ff    	jne    1d090 <fatfs_compare_names+0x130>
   1d14c:	eb df                	jmp    1d12d <fatfs_compare_names+0x1cd>
   1d14e:	66 90                	xchg   ax,ax

0001d150 <fatfs_string_ends_with_slash>:
fatfs_string_ends_with_slash():
   1d150:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   1d154:	85 d2                	test   edx,edx
   1d156:	74 38                	je     1d190 <fatfs_string_ends_with_slash+0x40>
   1d158:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
   1d15b:	84 c9                	test   cl,cl
   1d15d:	74 31                	je     1d190 <fatfs_string_ends_with_slash+0x40>
   1d15f:	90                   	nop
   1d160:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
   1d164:	84 c0                	test   al,al
   1d166:	75 18                	jne    1d180 <fatfs_string_ends_with_slash+0x30>
   1d168:	80 f9 5c             	cmp    cl,0x5c
   1d16b:	0f 94 c2             	sete   dl
   1d16e:	80 f9 2f             	cmp    cl,0x2f
   1d171:	0f 94 c0             	sete   al
   1d174:	09 d0                	or     eax,edx
   1d176:	0f b6 c0             	movzx  eax,al
   1d179:	c3                   	ret    
   1d17a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d180:	83 c2 01             	add    edx,0x1
   1d183:	89 c1                	mov    ecx,eax
   1d185:	eb d9                	jmp    1d160 <fatfs_string_ends_with_slash+0x10>
   1d187:	89 f6                	mov    esi,esi
   1d189:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1d190:	31 c0                	xor    eax,eax
   1d192:	c3                   	ret    
   1d193:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d199:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d1a0 <fatfs_get_sfn_display_name>:
fatfs_get_sfn_display_name():
   1d1a0:	55                   	push   ebp
   1d1a1:	57                   	push   edi
   1d1a2:	31 c9                	xor    ecx,ecx
   1d1a4:	56                   	push   esi
   1d1a5:	53                   	push   ebx
   1d1a6:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
   1d1aa:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   1d1ae:	83 f9 0b             	cmp    ecx,0xb
   1d1b1:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1d1b4:	7f 2a                	jg     1d1e0 <fatfs_get_sfn_display_name+0x40>
   1d1b6:	84 c0                	test   al,al
   1d1b8:	74 26                	je     1d1e0 <fatfs_get_sfn_display_name+0x40>
   1d1ba:	83 c2 01             	add    edx,0x1
   1d1bd:	3c 20                	cmp    al,0x20
   1d1bf:	74 ed                	je     1d1ae <fatfs_get_sfn_display_name+0xe>
   1d1c1:	8d 78 bf             	lea    edi,[eax-0x41]
   1d1c4:	8d 70 20             	lea    esi,[eax+0x20]
   1d1c7:	89 fb                	mov    ebx,edi
   1d1c9:	80 fb 19             	cmp    bl,0x19
   1d1cc:	0f 46 c6             	cmovbe eax,esi
   1d1cf:	83 c1 01             	add    ecx,0x1
   1d1d2:	83 c5 01             	add    ebp,0x1
   1d1d5:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
   1d1d8:	83 f9 0b             	cmp    ecx,0xb
   1d1db:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1d1de:	7e d6                	jle    1d1b6 <fatfs_get_sfn_display_name+0x16>
   1d1e0:	c6 45 00 00          	mov    BYTE PTR [ebp+0x0],0x0
   1d1e4:	b8 01 00 00 00       	mov    eax,0x1
   1d1e9:	5b                   	pop    ebx
   1d1ea:	5e                   	pop    esi
   1d1eb:	5f                   	pop    edi
   1d1ec:	5d                   	pop    ebp
   1d1ed:	c3                   	ret    
   1d1ee:	66 90                	xchg   ax,ax

0001d1f0 <fatfs_get_extension>:
fatfs_get_extension():
   1d1f0:	55                   	push   ebp
   1d1f1:	57                   	push   edi
   1d1f2:	56                   	push   esi
   1d1f3:	53                   	push   ebx
   1d1f4:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
   1d1f8:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
   1d1fc:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
   1d200:	0f b6 55 00          	movzx  edx,BYTE PTR [ebp+0x0]
   1d204:	84 d2                	test   dl,dl
   1d206:	74 78                	je     1d280 <fatfs_get_extension+0x90>
   1d208:	89 e8                	mov    eax,ebp
   1d20a:	b9 ff ff ff ff       	mov    ecx,0xffffffff
   1d20f:	90                   	nop
   1d210:	89 c3                	mov    ebx,eax
   1d212:	29 eb                	sub    ebx,ebp
   1d214:	80 fa 2e             	cmp    dl,0x2e
   1d217:	0f 44 cb             	cmove  ecx,ebx
   1d21a:	83 c0 01             	add    eax,0x1
   1d21d:	0f b6 10             	movzx  edx,BYTE PTR [eax]
   1d220:	84 d2                	test   dl,dl
   1d222:	75 ec                	jne    1d210 <fatfs_get_extension+0x20>
   1d224:	85 f6                	test   esi,esi
   1d226:	0f 95 c2             	setne  dl
   1d229:	85 ff                	test   edi,edi
   1d22b:	0f 95 c0             	setne  al
   1d22e:	84 c2                	test   dl,al
   1d230:	74 4e                	je     1d280 <fatfs_get_extension+0x90>
   1d232:	85 c9                	test   ecx,ecx
   1d234:	7e 4a                	jle    1d280 <fatfs_get_extension+0x90>
   1d236:	8d 54 0d 01          	lea    edx,[ebp+ecx*1+0x1]
   1d23a:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1d23d:	84 c0                	test   al,al
   1d23f:	74 2f                	je     1d270 <fatfs_get_extension+0x80>
   1d241:	83 ff 01             	cmp    edi,0x1
   1d244:	7e 2a                	jle    1d270 <fatfs_get_extension+0x80>
   1d246:	8d 7c 3e ff          	lea    edi,[esi+edi*1-0x1]
   1d24a:	eb 08                	jmp    1d254 <fatfs_get_extension+0x64>
   1d24c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d250:	39 fe                	cmp    esi,edi
   1d252:	74 1c                	je     1d270 <fatfs_get_extension+0x80>
   1d254:	8d 58 bf             	lea    ebx,[eax-0x41]
   1d257:	8d 48 20             	lea    ecx,[eax+0x20]
   1d25a:	83 c2 01             	add    edx,0x1
   1d25d:	80 fb 19             	cmp    bl,0x19
   1d260:	0f 46 c1             	cmovbe eax,ecx
   1d263:	83 c6 01             	add    esi,0x1
   1d266:	88 46 ff             	mov    BYTE PTR [esi-0x1],al
   1d269:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   1d26c:	84 c0                	test   al,al
   1d26e:	75 e0                	jne    1d250 <fatfs_get_extension+0x60>
   1d270:	c6 06 00             	mov    BYTE PTR [esi],0x0
   1d273:	b8 01 00 00 00       	mov    eax,0x1
   1d278:	5b                   	pop    ebx
   1d279:	5e                   	pop    esi
   1d27a:	5f                   	pop    edi
   1d27b:	5d                   	pop    ebp
   1d27c:	c3                   	ret    
   1d27d:	8d 76 00             	lea    esi,[esi+0x0]
   1d280:	5b                   	pop    ebx
   1d281:	31 c0                	xor    eax,eax
   1d283:	5e                   	pop    esi
   1d284:	5f                   	pop    edi
   1d285:	5d                   	pop    ebp
   1d286:	c3                   	ret    
   1d287:	89 f6                	mov    esi,esi
   1d289:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d290 <fatfs_create_path_string>:
fatfs_create_path_string():
   1d290:	55                   	push   ebp
   1d291:	57                   	push   edi
   1d292:	56                   	push   esi
   1d293:	53                   	push   ebx
   1d294:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
   1d298:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
   1d29c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
   1d2a0:	85 ed                	test   ebp,ebp
   1d2a2:	0f 84 c8 00 00 00    	je     1d370 <fatfs_create_path_string+0xe0>
   1d2a8:	85 c9                	test   ecx,ecx
   1d2aa:	0f 84 c0 00 00 00    	je     1d370 <fatfs_create_path_string+0xe0>
   1d2b0:	85 c0                	test   eax,eax
   1d2b2:	0f 84 b8 00 00 00    	je     1d370 <fatfs_create_path_string+0xe0>
   1d2b8:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
   1d2bc:	85 d2                	test   edx,edx
   1d2be:	0f 8e ac 00 00 00    	jle    1d370 <fatfs_create_path_string+0xe0>
   1d2c4:	0f b6 5d 00          	movzx  ebx,BYTE PTR [ebp+0x0]
   1d2c8:	84 db                	test   bl,bl
   1d2ca:	0f 84 a7 00 00 00    	je     1d377 <fatfs_create_path_string+0xe7>
   1d2d0:	83 7c 24 20 02       	cmp    DWORD PTR [esp+0x20],0x2
   1d2d5:	0f 8e 9c 00 00 00    	jle    1d377 <fatfs_create_path_string+0xe7>
   1d2db:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
   1d2df:	31 d2                	xor    edx,edx
   1d2e1:	83 ef 02             	sub    edi,0x2
   1d2e4:	89 fe                	mov    esi,edi
   1d2e6:	bf 2f 00 00 00       	mov    edi,0x2f
   1d2eb:	eb 09                	jmp    1d2f6 <fatfs_create_path_string+0x66>
   1d2ed:	8d 76 00             	lea    esi,[esi+0x0]
   1d2f0:	39 d6                	cmp    esi,edx
   1d2f2:	74 1f                	je     1d313 <fatfs_create_path_string+0x83>
   1d2f4:	89 cb                	mov    ebx,ecx
   1d2f6:	80 fb 5c             	cmp    bl,0x5c
   1d2f9:	b9 5c 00 00 00       	mov    ecx,0x5c
   1d2fe:	0f 44 f9             	cmove  edi,ecx
   1d301:	83 c0 01             	add    eax,0x1
   1d304:	83 c2 01             	add    edx,0x1
   1d307:	88 58 ff             	mov    BYTE PTR [eax-0x1],bl
   1d30a:	0f b6 4c 15 00       	movzx  ecx,BYTE PTR [ebp+edx*1+0x0]
   1d30f:	84 c9                	test   cl,cl
   1d311:	75 dd                	jne    1d2f0 <fatfs_create_path_string+0x60>
   1d313:	80 fb 5c             	cmp    bl,0x5c
   1d316:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
   1d31a:	74 0d                	je     1d329 <fatfs_create_path_string+0x99>
   1d31c:	80 fb 2f             	cmp    bl,0x2f
   1d31f:	74 08                	je     1d329 <fatfs_create_path_string+0x99>
   1d321:	89 fb                	mov    ebx,edi
   1d323:	83 c0 01             	add    eax,0x1
   1d326:	88 58 ff             	mov    BYTE PTR [eax-0x1],bl
   1d329:	0f b6 19             	movzx  ebx,BYTE PTR [ecx]
   1d32c:	84 db                	test   bl,bl
   1d32e:	74 2c                	je     1d35c <fatfs_create_path_string+0xcc>
   1d330:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   1d334:	83 ee 01             	sub    esi,0x1
   1d337:	39 d6                	cmp    esi,edx
   1d339:	7e 21                	jle    1d35c <fatfs_create_path_string+0xcc>
   1d33b:	29 d6                	sub    esi,edx
   1d33d:	8d 14 30             	lea    edx,[eax+esi*1]
   1d340:	eb 0a                	jmp    1d34c <fatfs_create_path_string+0xbc>
   1d342:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d348:	39 c2                	cmp    edx,eax
   1d34a:	74 10                	je     1d35c <fatfs_create_path_string+0xcc>
   1d34c:	83 c0 01             	add    eax,0x1
   1d34f:	83 c1 01             	add    ecx,0x1
   1d352:	88 58 ff             	mov    BYTE PTR [eax-0x1],bl
   1d355:	0f b6 19             	movzx  ebx,BYTE PTR [ecx]
   1d358:	84 db                	test   bl,bl
   1d35a:	75 ec                	jne    1d348 <fatfs_create_path_string+0xb8>
   1d35c:	c6 00 00             	mov    BYTE PTR [eax],0x0
   1d35f:	b8 01 00 00 00       	mov    eax,0x1
   1d364:	5b                   	pop    ebx
   1d365:	5e                   	pop    esi
   1d366:	5f                   	pop    edi
   1d367:	5d                   	pop    ebp
   1d368:	c3                   	ret    
   1d369:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1d370:	5b                   	pop    ebx
   1d371:	31 c0                	xor    eax,eax
   1d373:	5e                   	pop    esi
   1d374:	5f                   	pop    edi
   1d375:	5d                   	pop    ebp
   1d376:	c3                   	ret    
   1d377:	bf 2f 00 00 00       	mov    edi,0x2f
   1d37c:	31 d2                	xor    edx,edx
   1d37e:	eb a1                	jmp    1d321 <fatfs_create_path_string+0x91>

0001d380 <fatfs_fat_writeback.part.0>:
fatfs_fat_writeback.part.0():
   1d380:	55                   	push   ebp
   1d381:	57                   	push   edi
   1d382:	56                   	push   esi
   1d383:	53                   	push   ebx
   1d384:	89 d3                	mov    ebx,edx
   1d386:	83 ec 0c             	sub    esp,0xc
   1d389:	8b 50 38             	mov    edx,DWORD PTR [eax+0x38]
   1d38c:	85 d2                	test   edx,edx
   1d38e:	74 2e                	je     1d3be <fatfs_fat_writeback.part.0+0x3e>
   1d390:	8b 8b 00 02 00 00    	mov    ecx,DWORD PTR [ebx+0x200]
   1d396:	8b 70 20             	mov    esi,DWORD PTR [eax+0x20]
   1d399:	89 cf                	mov    edi,ecx
   1d39b:	2b 78 14             	sub    edi,DWORD PTR [eax+0x14]
   1d39e:	89 f0                	mov    eax,esi
   1d3a0:	8d 6f 01             	lea    ebp,[edi+0x1]
   1d3a3:	29 f8                	sub    eax,edi
   1d3a5:	39 f5                	cmp    ebp,esi
   1d3a7:	be 01 00 00 00       	mov    esi,0x1
   1d3ac:	0f 46 c6             	cmovbe eax,esi
   1d3af:	83 ec 04             	sub    esp,0x4
   1d3b2:	50                   	push   eax
   1d3b3:	53                   	push   ebx
   1d3b4:	51                   	push   ecx
   1d3b5:	ff d2                	call   edx
   1d3b7:	83 c4 10             	add    esp,0x10
   1d3ba:	85 c0                	test   eax,eax
   1d3bc:	74 0f                	je     1d3cd <fatfs_fat_writeback.part.0+0x4d>
   1d3be:	c7 83 04 02 00 00 00 	mov    DWORD PTR [ebx+0x204],0x0
   1d3c5:	00 00 00 
   1d3c8:	b8 01 00 00 00       	mov    eax,0x1
   1d3cd:	83 c4 0c             	add    esp,0xc
   1d3d0:	5b                   	pop    ebx
   1d3d1:	5e                   	pop    esi
   1d3d2:	5f                   	pop    edi
   1d3d3:	5d                   	pop    ebp
   1d3d4:	c3                   	ret    
   1d3d5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d3d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d3e0 <fatfs_fat_read_sector>:
fatfs_fat_read_sector():
   1d3e0:	55                   	push   ebp
   1d3e1:	57                   	push   edi
   1d3e2:	56                   	push   esi
   1d3e3:	53                   	push   ebx
   1d3e4:	83 ec 0c             	sub    esp,0xc
   1d3e7:	8b b8 54 02 00 00    	mov    edi,DWORD PTR [eax+0x254]
   1d3ed:	85 ff                	test   edi,edi
   1d3ef:	0f 84 93 00 00 00    	je     1d488 <fatfs_fat_read_sector+0xa8>
   1d3f5:	89 fb                	mov    ebx,edi
   1d3f7:	31 f6                	xor    esi,esi
   1d3f9:	eb 09                	jmp    1d404 <fatfs_fat_read_sector+0x24>
   1d3fb:	90                   	nop
   1d3fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d400:	89 de                	mov    esi,ebx
   1d402:	89 cb                	mov    ebx,ecx
   1d404:	8b 8b 00 02 00 00    	mov    ecx,DWORD PTR [ebx+0x200]
   1d40a:	39 d1                	cmp    ecx,edx
   1d40c:	77 07                	ja     1d415 <fatfs_fat_read_sector+0x35>
   1d40e:	8d 69 01             	lea    ebp,[ecx+0x1]
   1d411:	39 ea                	cmp    edx,ebp
   1d413:	72 5b                	jb     1d470 <fatfs_fat_read_sector+0x90>
   1d415:	8b 8b 0c 02 00 00    	mov    ecx,DWORD PTR [ebx+0x20c]
   1d41b:	85 c9                	test   ecx,ecx
   1d41d:	75 e1                	jne    1d400 <fatfs_fat_read_sector+0x20>
   1d41f:	85 f6                	test   esi,esi
   1d421:	0f 84 99 00 00 00    	je     1d4c0 <fatfs_fat_read_sector+0xe0>
   1d427:	c7 86 0c 02 00 00 00 	mov    DWORD PTR [esi+0x20c],0x0
   1d42e:	00 00 00 
   1d431:	8b 8b 0c 02 00 00    	mov    ecx,DWORD PTR [ebx+0x20c]
   1d437:	85 c9                	test   ecx,ecx
   1d439:	75 c5                	jne    1d400 <fatfs_fat_read_sector+0x20>
   1d43b:	89 c6                	mov    esi,eax
   1d43d:	89 bb 0c 02 00 00    	mov    DWORD PTR [ebx+0x20c],edi
   1d443:	89 98 54 02 00 00    	mov    DWORD PTR [eax+0x254],ebx
   1d449:	8b 83 04 02 00 00    	mov    eax,DWORD PTR [ebx+0x204]
   1d44f:	89 d5                	mov    ebp,edx
   1d451:	85 c0                	test   eax,eax
   1d453:	74 43                	je     1d498 <fatfs_fat_read_sector+0xb8>
   1d455:	89 da                	mov    edx,ebx
   1d457:	89 f0                	mov    eax,esi
   1d459:	e8 22 ff ff ff       	call   1d380 <fatfs_fat_writeback.part.0>
   1d45e:	85 c0                	test   eax,eax
   1d460:	75 36                	jne    1d498 <fatfs_fat_read_sector+0xb8>
   1d462:	31 c0                	xor    eax,eax
   1d464:	eb 1a                	jmp    1d480 <fatfs_fat_read_sector+0xa0>
   1d466:	8d 76 00             	lea    esi,[esi+0x0]
   1d469:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1d470:	29 ca                	sub    edx,ecx
   1d472:	c1 e2 09             	shl    edx,0x9
   1d475:	8d 04 13             	lea    eax,[ebx+edx*1]
   1d478:	89 83 08 02 00 00    	mov    DWORD PTR [ebx+0x208],eax
   1d47e:	89 d8                	mov    eax,ebx
   1d480:	83 c4 0c             	add    esp,0xc
   1d483:	5b                   	pop    ebx
   1d484:	5e                   	pop    esi
   1d485:	5f                   	pop    edi
   1d486:	5d                   	pop    ebp
   1d487:	c3                   	ret    
   1d488:	c7 05 0c 02 00 00 00 	mov    DWORD PTR ds:0x20c,0x0
   1d48f:	00 00 00 
   1d492:	0f 0b                	ud2    
   1d494:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d498:	83 ec 04             	sub    esp,0x4
   1d49b:	89 ab 00 02 00 00    	mov    DWORD PTR [ebx+0x200],ebp
   1d4a1:	6a 01                	push   0x1
   1d4a3:	53                   	push   ebx
   1d4a4:	55                   	push   ebp
   1d4a5:	ff 56 34             	call   DWORD PTR [esi+0x34]
   1d4a8:	83 c4 10             	add    esp,0x10
   1d4ab:	85 c0                	test   eax,eax
   1d4ad:	74 18                	je     1d4c7 <fatfs_fat_read_sector+0xe7>
   1d4af:	89 9b 08 02 00 00    	mov    DWORD PTR [ebx+0x208],ebx
   1d4b5:	83 c4 0c             	add    esp,0xc
   1d4b8:	89 d8                	mov    eax,ebx
   1d4ba:	5b                   	pop    ebx
   1d4bb:	5e                   	pop    esi
   1d4bc:	5f                   	pop    edi
   1d4bd:	5d                   	pop    ebp
   1d4be:	c3                   	ret    
   1d4bf:	90                   	nop
   1d4c0:	31 ff                	xor    edi,edi
   1d4c2:	e9 74 ff ff ff       	jmp    1d43b <fatfs_fat_read_sector+0x5b>
   1d4c7:	c7 83 00 02 00 00 ff 	mov    DWORD PTR [ebx+0x200],0xffffffff
   1d4ce:	ff ff ff 
   1d4d1:	eb ad                	jmp    1d480 <fatfs_fat_read_sector+0xa0>
   1d4d3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d4d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d4e0 <fatfs_fat_init>:
fatfs_fat_init():
   1d4e0:	56                   	push   esi
   1d4e1:	53                   	push   ebx
   1d4e2:	83 ec 08             	sub    esp,0x8
   1d4e5:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1d4e9:	8d b3 58 02 00 00    	lea    esi,[ebx+0x258]
   1d4ef:	c7 83 54 02 00 00 00 	mov    DWORD PTR [ebx+0x254],0x0
   1d4f6:	00 00 00 
   1d4f9:	c7 83 58 04 00 00 ff 	mov    DWORD PTR [ebx+0x458],0xffffffff
   1d500:	ff ff ff 
   1d503:	c7 83 5c 04 00 00 00 	mov    DWORD PTR [ebx+0x45c],0x0
   1d50a:	00 00 00 
   1d50d:	68 00 02 00 00       	push   0x200
   1d512:	6a 00                	push   0x0
   1d514:	56                   	push   esi
   1d515:	e8 66 38 00 00       	call   20d80 <memset>
   1d51a:	8b 83 54 02 00 00    	mov    eax,DWORD PTR [ebx+0x254]
   1d520:	c7 83 60 04 00 00 00 	mov    DWORD PTR [ebx+0x460],0x0
   1d527:	00 00 00 
   1d52a:	89 b3 54 02 00 00    	mov    DWORD PTR [ebx+0x254],esi
   1d530:	89 83 64 04 00 00    	mov    DWORD PTR [ebx+0x464],eax
   1d536:	83 c4 14             	add    esp,0x14
   1d539:	5b                   	pop    ebx
   1d53a:	5e                   	pop    esi
   1d53b:	c3                   	ret    
   1d53c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001d540 <fatfs_fat_purge>:
fatfs_fat_purge():
   1d540:	56                   	push   esi
   1d541:	53                   	push   ebx
   1d542:	83 ec 04             	sub    esp,0x4
   1d545:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1d549:	8b 9e 54 02 00 00    	mov    ebx,DWORD PTR [esi+0x254]
   1d54f:	85 db                	test   ebx,ebx
   1d551:	74 26                	je     1d579 <fatfs_fat_purge+0x39>
   1d553:	90                   	nop
   1d554:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d558:	8b 83 04 02 00 00    	mov    eax,DWORD PTR [ebx+0x204]
   1d55e:	85 c0                	test   eax,eax
   1d560:	74 0d                	je     1d56f <fatfs_fat_purge+0x2f>
   1d562:	89 da                	mov    edx,ebx
   1d564:	89 f0                	mov    eax,esi
   1d566:	e8 15 fe ff ff       	call   1d380 <fatfs_fat_writeback.part.0>
   1d56b:	85 c0                	test   eax,eax
   1d56d:	74 0f                	je     1d57e <fatfs_fat_purge+0x3e>
   1d56f:	8b 9b 0c 02 00 00    	mov    ebx,DWORD PTR [ebx+0x20c]
   1d575:	85 db                	test   ebx,ebx
   1d577:	75 df                	jne    1d558 <fatfs_fat_purge+0x18>
   1d579:	b8 01 00 00 00       	mov    eax,0x1
   1d57e:	83 c4 04             	add    esp,0x4
   1d581:	5b                   	pop    ebx
   1d582:	5e                   	pop    esi
   1d583:	c3                   	ret    
   1d584:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d58a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001d590 <fatfs_find_next_cluster>:
fatfs_find_next_cluster():
   1d590:	57                   	push   edi
   1d591:	56                   	push   esi
   1d592:	b8 02 00 00 00       	mov    eax,0x2
   1d597:	53                   	push   ebx
   1d598:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
   1d59c:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1d5a0:	8b 57 30             	mov    edx,DWORD PTR [edi+0x30]
   1d5a3:	85 db                	test   ebx,ebx
   1d5a5:	0f 44 d8             	cmove  ebx,eax
   1d5a8:	89 d8                	mov    eax,ebx
   1d5aa:	89 de                	mov    esi,ebx
   1d5ac:	c1 e8 08             	shr    eax,0x8
   1d5af:	c1 ee 07             	shr    esi,0x7
   1d5b2:	85 d2                	test   edx,edx
   1d5b4:	8b 57 14             	mov    edx,DWORD PTR [edi+0x14]
   1d5b7:	0f 44 f0             	cmove  esi,eax
   1d5ba:	89 f8                	mov    eax,edi
   1d5bc:	01 f2                	add    edx,esi
   1d5be:	e8 1d fe ff ff       	call   1d3e0 <fatfs_fat_read_sector>
   1d5c3:	85 c0                	test   eax,eax
   1d5c5:	ba ff ff ff ff       	mov    edx,0xffffffff
   1d5ca:	74 31                	je     1d5fd <fatfs_find_next_cluster+0x6d>
   1d5cc:	8b 4f 30             	mov    ecx,DWORD PTR [edi+0x30]
   1d5cf:	85 c9                	test   ecx,ecx
   1d5d1:	75 35                	jne    1d608 <fatfs_find_next_cluster+0x78>
   1d5d3:	c1 e6 08             	shl    esi,0x8
   1d5d6:	8b 88 08 02 00 00    	mov    ecx,DWORD PTR [eax+0x208]
   1d5dc:	29 f3                	sub    ebx,esi
   1d5de:	01 db                	add    ebx,ebx
   1d5e0:	0f b7 db             	movzx  ebx,bx
   1d5e3:	0f b6 44 19 01       	movzx  eax,BYTE PTR [ecx+ebx*1+0x1]
   1d5e8:	0f b6 0c 19          	movzx  ecx,BYTE PTR [ecx+ebx*1]
   1d5ec:	c1 e0 08             	shl    eax,0x8
   1d5ef:	01 c8                	add    eax,ecx
   1d5f1:	8d 88 08 00 ff ff    	lea    ecx,[eax-0xfff8]
   1d5f7:	83 f9 07             	cmp    ecx,0x7
   1d5fa:	0f 47 d0             	cmova  edx,eax
   1d5fd:	5b                   	pop    ebx
   1d5fe:	89 d0                	mov    eax,edx
   1d600:	5e                   	pop    esi
   1d601:	5f                   	pop    edi
   1d602:	c3                   	ret    
   1d603:	90                   	nop
   1d604:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d608:	c1 e6 07             	shl    esi,0x7
   1d60b:	8b 80 08 02 00 00    	mov    eax,DWORD PTR [eax+0x208]
   1d611:	29 f3                	sub    ebx,esi
   1d613:	c1 e3 02             	shl    ebx,0x2
   1d616:	0f b7 db             	movzx  ebx,bx
   1d619:	0f b6 4c 18 03       	movzx  ecx,BYTE PTR [eax+ebx*1+0x3]
   1d61e:	c1 e1 18             	shl    ecx,0x18
   1d621:	89 ce                	mov    esi,ecx
   1d623:	0f b6 4c 18 02       	movzx  ecx,BYTE PTR [eax+ebx*1+0x2]
   1d628:	c1 e1 10             	shl    ecx,0x10
   1d62b:	01 f1                	add    ecx,esi
   1d62d:	0f b6 34 18          	movzx  esi,BYTE PTR [eax+ebx*1]
   1d631:	0f b6 44 18 01       	movzx  eax,BYTE PTR [eax+ebx*1+0x1]
   1d636:	5b                   	pop    ebx
   1d637:	01 f1                	add    ecx,esi
   1d639:	c1 e0 08             	shl    eax,0x8
   1d63c:	01 c8                	add    eax,ecx
   1d63e:	25 ff ff ff 0f       	and    eax,0xfffffff
   1d643:	8d 88 08 00 00 f0    	lea    ecx,[eax-0xffffff8]
   1d649:	5e                   	pop    esi
   1d64a:	83 f9 07             	cmp    ecx,0x7
   1d64d:	0f 47 d0             	cmova  edx,eax
   1d650:	89 d0                	mov    eax,edx
   1d652:	5f                   	pop    edi
   1d653:	c3                   	ret    
   1d654:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d65a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001d660 <fatfs_set_fs_info_next_free_cluster>:
fatfs_set_fs_info_next_free_cluster():
   1d660:	57                   	push   edi
   1d661:	56                   	push   esi
   1d662:	53                   	push   ebx
   1d663:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1d667:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   1d66b:	8b 43 30             	mov    eax,DWORD PTR [ebx+0x30]
   1d66e:	85 c0                	test   eax,eax
   1d670:	75 0e                	jne    1d680 <fatfs_set_fs_info_next_free_cluster+0x20>
   1d672:	5b                   	pop    ebx
   1d673:	5e                   	pop    esi
   1d674:	5f                   	pop    edi
   1d675:	c3                   	ret    
   1d676:	8d 76 00             	lea    esi,[esi+0x0]
   1d679:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1d680:	0f b7 53 18          	movzx  edx,WORD PTR [ebx+0x18]
   1d684:	89 d8                	mov    eax,ebx
   1d686:	03 53 1c             	add    edx,DWORD PTR [ebx+0x1c]
   1d689:	e8 52 fd ff ff       	call   1d3e0 <fatfs_fat_read_sector>
   1d68e:	85 c0                	test   eax,eax
   1d690:	89 c6                	mov    esi,eax
   1d692:	74 de                	je     1d672 <fatfs_set_fs_info_next_free_cluster+0x12>
   1d694:	8b 80 08 02 00 00    	mov    eax,DWORD PTR [eax+0x208]
   1d69a:	89 f9                	mov    ecx,edi
   1d69c:	89 fa                	mov    edx,edi
   1d69e:	c1 ea 08             	shr    edx,0x8
   1d6a1:	88 88 ec 01 00 00    	mov    BYTE PTR [eax+0x1ec],cl
   1d6a7:	8b 86 08 02 00 00    	mov    eax,DWORD PTR [esi+0x208]
   1d6ad:	88 90 ed 01 00 00    	mov    BYTE PTR [eax+0x1ed],dl
   1d6b3:	8b 86 08 02 00 00    	mov    eax,DWORD PTR [esi+0x208]
   1d6b9:	89 fa                	mov    edx,edi
   1d6bb:	c1 ea 10             	shr    edx,0x10
   1d6be:	88 90 ee 01 00 00    	mov    BYTE PTR [eax+0x1ee],dl
   1d6c4:	8b 86 08 02 00 00    	mov    eax,DWORD PTR [esi+0x208]
   1d6ca:	89 fa                	mov    edx,edi
   1d6cc:	c1 ea 18             	shr    edx,0x18
   1d6cf:	88 90 ef 01 00 00    	mov    BYTE PTR [eax+0x1ef],dl
   1d6d5:	8b 43 38             	mov    eax,DWORD PTR [ebx+0x38]
   1d6d8:	c7 86 04 02 00 00 01 	mov    DWORD PTR [esi+0x204],0x1
   1d6df:	00 00 00 
   1d6e2:	89 7b 24             	mov    DWORD PTR [ebx+0x24],edi
   1d6e5:	85 c0                	test   eax,eax
   1d6e7:	74 11                	je     1d6fa <fatfs_set_fs_info_next_free_cluster+0x9a>
   1d6e9:	83 ec 04             	sub    esp,0x4
   1d6ec:	6a 01                	push   0x1
   1d6ee:	56                   	push   esi
   1d6ef:	ff b6 00 02 00 00    	push   DWORD PTR [esi+0x200]
   1d6f5:	ff d0                	call   eax
   1d6f7:	83 c4 10             	add    esp,0x10
   1d6fa:	c7 86 00 02 00 00 ff 	mov    DWORD PTR [esi+0x200],0xffffffff
   1d701:	ff ff ff 
   1d704:	c7 86 04 02 00 00 00 	mov    DWORD PTR [esi+0x204],0x0
   1d70b:	00 00 00 
   1d70e:	5b                   	pop    ebx
   1d70f:	5e                   	pop    esi
   1d710:	5f                   	pop    edi
   1d711:	c3                   	ret    
   1d712:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1d719:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d720 <fatfs_find_blank_cluster>:
fatfs_find_blank_cluster():
   1d720:	55                   	push   ebp
   1d721:	57                   	push   edi
   1d722:	56                   	push   esi
   1d723:	53                   	push   ebx
   1d724:	83 ec 0c             	sub    esp,0xc
   1d727:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
   1d72b:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   1d72f:	8b 57 30             	mov    edx,DWORD PTR [edi+0x30]
   1d732:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d738:	89 f0                	mov    eax,esi
   1d73a:	89 f3                	mov    ebx,esi
   1d73c:	c1 e8 08             	shr    eax,0x8
   1d73f:	c1 eb 07             	shr    ebx,0x7
   1d742:	85 d2                	test   edx,edx
   1d744:	0f 44 d8             	cmove  ebx,eax
   1d747:	3b 5f 20             	cmp    ebx,DWORD PTR [edi+0x20]
   1d74a:	0f 83 a0 00 00 00    	jae    1d7f0 <fatfs_find_blank_cluster+0xd0>
   1d750:	8b 57 14             	mov    edx,DWORD PTR [edi+0x14]
   1d753:	89 f8                	mov    eax,edi
   1d755:	01 da                	add    edx,ebx
   1d757:	e8 84 fc ff ff       	call   1d3e0 <fatfs_fat_read_sector>
   1d75c:	85 c0                	test   eax,eax
   1d75e:	0f 84 8c 00 00 00    	je     1d7f0 <fatfs_find_blank_cluster+0xd0>
   1d764:	8b 57 30             	mov    edx,DWORD PTR [edi+0x30]
   1d767:	85 d2                	test   edx,edx
   1d769:	75 45                	jne    1d7b0 <fatfs_find_blank_cluster+0x90>
   1d76b:	c1 e3 08             	shl    ebx,0x8
   1d76e:	89 f1                	mov    ecx,esi
   1d770:	8b a8 08 02 00 00    	mov    ebp,DWORD PTR [eax+0x208]
   1d776:	29 d9                	sub    ecx,ebx
   1d778:	01 c9                	add    ecx,ecx
   1d77a:	0f b7 c9             	movzx  ecx,cx
   1d77d:	0f b6 44 0d 01       	movzx  eax,BYTE PTR [ebp+ecx*1+0x1]
   1d782:	0f b6 4c 0d 00       	movzx  ecx,BYTE PTR [ebp+ecx*1+0x0]
   1d787:	c1 e0 08             	shl    eax,0x8
   1d78a:	01 c8                	add    eax,ecx
   1d78c:	85 c0                	test   eax,eax
   1d78e:	74 08                	je     1d798 <fatfs_find_blank_cluster+0x78>
   1d790:	83 c6 01             	add    esi,0x1
   1d793:	eb a3                	jmp    1d738 <fatfs_find_blank_cluster+0x18>
   1d795:	8d 76 00             	lea    esi,[esi+0x0]
   1d798:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
   1d79c:	89 30                	mov    DWORD PTR [eax],esi
   1d79e:	83 c4 0c             	add    esp,0xc
   1d7a1:	b8 01 00 00 00       	mov    eax,0x1
   1d7a6:	5b                   	pop    ebx
   1d7a7:	5e                   	pop    esi
   1d7a8:	5f                   	pop    edi
   1d7a9:	5d                   	pop    ebp
   1d7aa:	c3                   	ret    
   1d7ab:	90                   	nop
   1d7ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d7b0:	c1 e3 07             	shl    ebx,0x7
   1d7b3:	89 f5                	mov    ebp,esi
   1d7b5:	8b 88 08 02 00 00    	mov    ecx,DWORD PTR [eax+0x208]
   1d7bb:	29 dd                	sub    ebp,ebx
   1d7bd:	c1 e5 02             	shl    ebp,0x2
   1d7c0:	0f b7 ed             	movzx  ebp,bp
   1d7c3:	0f b6 5c 29 03       	movzx  ebx,BYTE PTR [ecx+ebp*1+0x3]
   1d7c8:	0f b6 44 29 02       	movzx  eax,BYTE PTR [ecx+ebp*1+0x2]
   1d7cd:	c1 e3 18             	shl    ebx,0x18
   1d7d0:	c1 e0 10             	shl    eax,0x10
   1d7d3:	01 d8                	add    eax,ebx
   1d7d5:	0f b6 1c 29          	movzx  ebx,BYTE PTR [ecx+ebp*1]
   1d7d9:	01 c3                	add    ebx,eax
   1d7db:	0f b6 44 29 01       	movzx  eax,BYTE PTR [ecx+ebp*1+0x1]
   1d7e0:	c1 e0 08             	shl    eax,0x8
   1d7e3:	01 d8                	add    eax,ebx
   1d7e5:	25 ff ff ff 0f       	and    eax,0xfffffff
   1d7ea:	eb a0                	jmp    1d78c <fatfs_find_blank_cluster+0x6c>
   1d7ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d7f0:	83 c4 0c             	add    esp,0xc
   1d7f3:	31 c0                	xor    eax,eax
   1d7f5:	5b                   	pop    ebx
   1d7f6:	5e                   	pop    esi
   1d7f7:	5f                   	pop    edi
   1d7f8:	5d                   	pop    ebp
   1d7f9:	c3                   	ret    
   1d7fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001d800 <fatfs_fat_set_cluster>:
fatfs_fat_set_cluster():
   1d800:	55                   	push   ebp
   1d801:	57                   	push   edi
   1d802:	56                   	push   esi
   1d803:	53                   	push   ebx
   1d804:	83 ec 0c             	sub    esp,0xc
   1d807:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
   1d80b:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
   1d80f:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
   1d813:	8b 4d 30             	mov    ecx,DWORD PTR [ebp+0x30]
   1d816:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
   1d819:	89 d8                	mov    eax,ebx
   1d81b:	89 df                	mov    edi,ebx
   1d81d:	c1 e8 08             	shr    eax,0x8
   1d820:	c1 ef 07             	shr    edi,0x7
   1d823:	85 c9                	test   ecx,ecx
   1d825:	0f 44 f8             	cmove  edi,eax
   1d828:	89 e8                	mov    eax,ebp
   1d82a:	01 fa                	add    edx,edi
   1d82c:	e8 af fb ff ff       	call   1d3e0 <fatfs_fat_read_sector>
   1d831:	85 c0                	test   eax,eax
   1d833:	0f 84 a7 00 00 00    	je     1d8e0 <fatfs_fat_set_cluster+0xe0>
   1d839:	8b 55 30             	mov    edx,DWORD PTR [ebp+0x30]
   1d83c:	85 d2                	test   edx,edx
   1d83e:	74 60                	je     1d8a0 <fatfs_fat_set_cluster+0xa0>
   1d840:	c1 e7 07             	shl    edi,0x7
   1d843:	8b 90 08 02 00 00    	mov    edx,DWORD PTR [eax+0x208]
   1d849:	89 f1                	mov    ecx,esi
   1d84b:	29 fb                	sub    ebx,edi
   1d84d:	c1 e3 02             	shl    ebx,0x2
   1d850:	0f b7 db             	movzx  ebx,bx
   1d853:	88 0c 1a             	mov    BYTE PTR [edx+ebx*1],cl
   1d856:	8b 90 08 02 00 00    	mov    edx,DWORD PTR [eax+0x208]
   1d85c:	89 f1                	mov    ecx,esi
   1d85e:	c1 e9 08             	shr    ecx,0x8
   1d861:	88 4c 1a 01          	mov    BYTE PTR [edx+ebx*1+0x1],cl
   1d865:	8b 90 08 02 00 00    	mov    edx,DWORD PTR [eax+0x208]
   1d86b:	89 f1                	mov    ecx,esi
   1d86d:	c1 e9 10             	shr    ecx,0x10
   1d870:	c1 ee 18             	shr    esi,0x18
   1d873:	88 4c 1a 02          	mov    BYTE PTR [edx+ebx*1+0x2],cl
   1d877:	8b 88 08 02 00 00    	mov    ecx,DWORD PTR [eax+0x208]
   1d87d:	89 f2                	mov    edx,esi
   1d87f:	88 54 19 03          	mov    BYTE PTR [ecx+ebx*1+0x3],dl
   1d883:	c7 80 04 02 00 00 01 	mov    DWORD PTR [eax+0x204],0x1
   1d88a:	00 00 00 
   1d88d:	83 c4 0c             	add    esp,0xc
   1d890:	5b                   	pop    ebx
   1d891:	b8 01 00 00 00       	mov    eax,0x1
   1d896:	5e                   	pop    esi
   1d897:	5f                   	pop    edi
   1d898:	5d                   	pop    ebp
   1d899:	c3                   	ret    
   1d89a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1d8a0:	c1 e7 08             	shl    edi,0x8
   1d8a3:	8b 90 08 02 00 00    	mov    edx,DWORD PTR [eax+0x208]
   1d8a9:	89 f1                	mov    ecx,esi
   1d8ab:	29 fb                	sub    ebx,edi
   1d8ad:	01 db                	add    ebx,ebx
   1d8af:	0f b7 db             	movzx  ebx,bx
   1d8b2:	88 0c 1a             	mov    BYTE PTR [edx+ebx*1],cl
   1d8b5:	8b 90 08 02 00 00    	mov    edx,DWORD PTR [eax+0x208]
   1d8bb:	89 f1                	mov    ecx,esi
   1d8bd:	0f b6 cd             	movzx  ecx,ch
   1d8c0:	88 4c 1a 01          	mov    BYTE PTR [edx+ebx*1+0x1],cl
   1d8c4:	c7 80 04 02 00 00 01 	mov    DWORD PTR [eax+0x204],0x1
   1d8cb:	00 00 00 
   1d8ce:	83 c4 0c             	add    esp,0xc
   1d8d1:	5b                   	pop    ebx
   1d8d2:	b8 01 00 00 00       	mov    eax,0x1
   1d8d7:	5e                   	pop    esi
   1d8d8:	5f                   	pop    edi
   1d8d9:	5d                   	pop    ebp
   1d8da:	c3                   	ret    
   1d8db:	90                   	nop
   1d8dc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d8e0:	83 c4 0c             	add    esp,0xc
   1d8e3:	31 c0                	xor    eax,eax
   1d8e5:	5b                   	pop    ebx
   1d8e6:	5e                   	pop    esi
   1d8e7:	5f                   	pop    edi
   1d8e8:	5d                   	pop    ebp
   1d8e9:	c3                   	ret    
   1d8ea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001d8f0 <fatfs_free_cluster_chain>:
fatfs_free_cluster_chain():
   1d8f0:	57                   	push   edi
   1d8f1:	56                   	push   esi
   1d8f2:	53                   	push   ebx
   1d8f3:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1d8f7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1d8fb:	8d 43 ff             	lea    eax,[ebx-0x1]
   1d8fe:	83 f8 fd             	cmp    eax,0xfffffffd
   1d901:	77 2a                	ja     1d92d <fatfs_free_cluster_chain+0x3d>
   1d903:	90                   	nop
   1d904:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d908:	83 ec 08             	sub    esp,0x8
   1d90b:	53                   	push   ebx
   1d90c:	56                   	push   esi
   1d90d:	e8 7e fc ff ff       	call   1d590 <fatfs_find_next_cluster>
   1d912:	83 c4 0c             	add    esp,0xc
   1d915:	89 c7                	mov    edi,eax
   1d917:	6a 00                	push   0x0
   1d919:	53                   	push   ebx
   1d91a:	89 fb                	mov    ebx,edi
   1d91c:	56                   	push   esi
   1d91d:	e8 de fe ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1d922:	8d 47 ff             	lea    eax,[edi-0x1]
   1d925:	83 c4 10             	add    esp,0x10
   1d928:	83 f8 fd             	cmp    eax,0xfffffffd
   1d92b:	76 db                	jbe    1d908 <fatfs_free_cluster_chain+0x18>
   1d92d:	5b                   	pop    ebx
   1d92e:	b8 01 00 00 00       	mov    eax,0x1
   1d933:	5e                   	pop    esi
   1d934:	5f                   	pop    edi
   1d935:	c3                   	ret    
   1d936:	8d 76 00             	lea    esi,[esi+0x0]
   1d939:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001d940 <fatfs_fat_add_cluster_to_chain>:
fatfs_fat_add_cluster_to_chain():
   1d940:	56                   	push   esi
   1d941:	53                   	push   ebx
   1d942:	83 ec 04             	sub    esp,0x4
   1d945:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1d949:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1d94d:	83 fb ff             	cmp    ebx,0xffffffff
   1d950:	75 08                	jne    1d95a <fatfs_fat_add_cluster_to_chain+0x1a>
   1d952:	eb 4c                	jmp    1d9a0 <fatfs_fat_add_cluster_to_chain+0x60>
   1d954:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d958:	89 c3                	mov    ebx,eax
   1d95a:	83 ec 08             	sub    esp,0x8
   1d95d:	53                   	push   ebx
   1d95e:	56                   	push   esi
   1d95f:	e8 2c fc ff ff       	call   1d590 <fatfs_find_next_cluster>
   1d964:	83 c4 10             	add    esp,0x10
   1d967:	85 c0                	test   eax,eax
   1d969:	74 35                	je     1d9a0 <fatfs_fat_add_cluster_to_chain+0x60>
   1d96b:	83 f8 ff             	cmp    eax,0xffffffff
   1d96e:	75 e8                	jne    1d958 <fatfs_fat_add_cluster_to_chain+0x18>
   1d970:	83 ec 04             	sub    esp,0x4
   1d973:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1d977:	53                   	push   ebx
   1d978:	56                   	push   esi
   1d979:	e8 82 fe ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1d97e:	83 c4 0c             	add    esp,0xc
   1d981:	6a ff                	push   0xffffffff
   1d983:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
   1d987:	56                   	push   esi
   1d988:	e8 73 fe ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1d98d:	83 c4 10             	add    esp,0x10
   1d990:	b8 01 00 00 00       	mov    eax,0x1
   1d995:	83 c4 04             	add    esp,0x4
   1d998:	5b                   	pop    ebx
   1d999:	5e                   	pop    esi
   1d99a:	c3                   	ret    
   1d99b:	90                   	nop
   1d99c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1d9a0:	83 c4 04             	add    esp,0x4
   1d9a3:	31 c0                	xor    eax,eax
   1d9a5:	5b                   	pop    ebx
   1d9a6:	5e                   	pop    esi
   1d9a7:	c3                   	ret    
   1d9a8:	90                   	nop
   1d9a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001d9b0 <fatfs_count_free_clusters>:
fatfs_count_free_clusters():
   1d9b0:	55                   	push   ebp
   1d9b1:	57                   	push   edi
   1d9b2:	56                   	push   esi
   1d9b3:	53                   	push   ebx
   1d9b4:	31 db                	xor    ebx,ebx
   1d9b6:	83 ec 1c             	sub    esp,0x1c
   1d9b9:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
   1d9bd:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
   1d9c0:	85 c0                	test   eax,eax
   1d9c2:	0f 84 90 00 00 00    	je     1da58 <fatfs_count_free_clusters+0xa8>
   1d9c8:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   1d9cf:	00 
   1d9d0:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   1d9d4:	03 56 14             	add    edx,DWORD PTR [esi+0x14]
   1d9d7:	89 f0                	mov    eax,esi
   1d9d9:	e8 02 fa ff ff       	call   1d3e0 <fatfs_fat_read_sector>
   1d9de:	85 c0                	test   eax,eax
   1d9e0:	74 76                	je     1da58 <fatfs_count_free_clusters+0xa8>
   1d9e2:	8b 6e 30             	mov    ebp,DWORD PTR [esi+0x30]
   1d9e5:	31 d2                	xor    edx,edx
   1d9e7:	8b b8 08 02 00 00    	mov    edi,DWORD PTR [eax+0x208]
   1d9ed:	eb 20                	jmp    1da0f <fatfs_count_free_clusters+0x5f>
   1d9ef:	90                   	nop
   1d9f0:	0f b6 44 17 01       	movzx  eax,BYTE PTR [edi+edx*1+0x1]
   1d9f5:	0f b6 0c 17          	movzx  ecx,BYTE PTR [edi+edx*1]
   1d9f9:	c1 e0 08             	shl    eax,0x8
   1d9fc:	01 c8                	add    eax,ecx
   1d9fe:	83 f8 01             	cmp    eax,0x1
   1da01:	83 d3 00             	adc    ebx,0x0
   1da04:	83 c2 02             	add    edx,0x2
   1da07:	81 fa ff 01 00 00    	cmp    edx,0x1ff
   1da0d:	77 37                	ja     1da46 <fatfs_count_free_clusters+0x96>
   1da0f:	85 ed                	test   ebp,ebp
   1da11:	74 dd                	je     1d9f0 <fatfs_count_free_clusters+0x40>
   1da13:	0f b6 4c 17 03       	movzx  ecx,BYTE PTR [edi+edx*1+0x3]
   1da18:	0f b6 44 17 02       	movzx  eax,BYTE PTR [edi+edx*1+0x2]
   1da1d:	c1 e1 18             	shl    ecx,0x18
   1da20:	c1 e0 10             	shl    eax,0x10
   1da23:	01 c8                	add    eax,ecx
   1da25:	0f b6 0c 17          	movzx  ecx,BYTE PTR [edi+edx*1]
   1da29:	01 c1                	add    ecx,eax
   1da2b:	0f b6 44 17 01       	movzx  eax,BYTE PTR [edi+edx*1+0x1]
   1da30:	c1 e0 08             	shl    eax,0x8
   1da33:	01 c8                	add    eax,ecx
   1da35:	83 f8 01             	cmp    eax,0x1
   1da38:	83 d3 00             	adc    ebx,0x0
   1da3b:	83 c2 04             	add    edx,0x4
   1da3e:	81 fa ff 01 00 00    	cmp    edx,0x1ff
   1da44:	76 c9                	jbe    1da0f <fatfs_count_free_clusters+0x5f>
   1da46:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   1da4b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   1da4f:	39 46 20             	cmp    DWORD PTR [esi+0x20],eax
   1da52:	0f 87 78 ff ff ff    	ja     1d9d0 <fatfs_count_free_clusters+0x20>
   1da58:	83 c4 1c             	add    esp,0x1c
   1da5b:	89 d8                	mov    eax,ebx
   1da5d:	5b                   	pop    ebx
   1da5e:	5e                   	pop    esi
   1da5f:	5f                   	pop    edi
   1da60:	5d                   	pop    ebp
   1da61:	c3                   	ret    
   1da62:	66 90                	xchg   ax,ax
   1da64:	66 90                	xchg   ax,ax
   1da66:	66 90                	xchg   ax,ax
   1da68:	66 90                	xchg   ax,ax
   1da6a:	66 90                	xchg   ax,ax
   1da6c:	66 90                	xchg   ax,ax
   1da6e:	66 90                	xchg   ax,ax

0001da70 <fatfs_add_free_space>:
fatfs_add_free_space():
   1da70:	55                   	push   ebp
   1da71:	57                   	push   edi
   1da72:	56                   	push   esi
   1da73:	53                   	push   ebx
   1da74:	83 ec 1c             	sub    esp,0x1c
   1da77:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
   1da7b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   1da7f:	83 7b 24 ff          	cmp    DWORD PTR [ebx+0x24],0xffffffff
   1da83:	8b 38                	mov    edi,DWORD PTR [eax]
   1da85:	74 0e                	je     1da95 <fatfs_add_free_space+0x25>
   1da87:	83 ec 08             	sub    esp,0x8
   1da8a:	6a ff                	push   0xffffffff
   1da8c:	53                   	push   ebx
   1da8d:	e8 ce fb ff ff       	call   1d660 <fatfs_set_fs_info_next_free_cluster>
   1da92:	83 c4 10             	add    esp,0x10
   1da95:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1da99:	31 f6                	xor    esi,esi
   1da9b:	8d 6c 24 0c          	lea    ebp,[esp+0xc]
   1da9f:	85 c0                	test   eax,eax
   1daa1:	75 36                	jne    1dad9 <fatfs_add_free_space+0x69>
   1daa3:	eb 53                	jmp    1daf8 <fatfs_add_free_space+0x88>
   1daa5:	8d 76 00             	lea    esi,[esi+0x0]
   1daa8:	83 ec 04             	sub    esp,0x4
   1daab:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1daaf:	57                   	push   edi
   1dab0:	53                   	push   ebx
   1dab1:	e8 4a fd ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1dab6:	83 c4 0c             	add    esp,0xc
   1dab9:	6a ff                	push   0xffffffff
   1dabb:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   1dabf:	53                   	push   ebx
   1dac0:	e8 3b fd ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1dac5:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
   1dac9:	83 c4 10             	add    esp,0x10
   1dacc:	85 f6                	test   esi,esi
   1dace:	74 35                	je     1db05 <fatfs_add_free_space+0x95>
   1dad0:	83 c6 01             	add    esi,0x1
   1dad3:	39 74 24 38          	cmp    DWORD PTR [esp+0x38],esi
   1dad7:	74 1f                	je     1daf8 <fatfs_add_free_space+0x88>
   1dad9:	83 ec 04             	sub    esp,0x4
   1dadc:	55                   	push   ebp
   1dadd:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   1dae0:	53                   	push   ebx
   1dae1:	e8 3a fc ff ff       	call   1d720 <fatfs_find_blank_cluster>
   1dae6:	83 c4 10             	add    esp,0x10
   1dae9:	85 c0                	test   eax,eax
   1daeb:	75 bb                	jne    1daa8 <fatfs_add_free_space+0x38>
   1daed:	83 c4 1c             	add    esp,0x1c
   1daf0:	5b                   	pop    ebx
   1daf1:	5e                   	pop    esi
   1daf2:	5f                   	pop    edi
   1daf3:	5d                   	pop    ebp
   1daf4:	c3                   	ret    
   1daf5:	8d 76 00             	lea    esi,[esi+0x0]
   1daf8:	83 c4 1c             	add    esp,0x1c
   1dafb:	b8 01 00 00 00       	mov    eax,0x1
   1db00:	5b                   	pop    ebx
   1db01:	5e                   	pop    esi
   1db02:	5f                   	pop    edi
   1db03:	5d                   	pop    ebp
   1db04:	c3                   	ret    
   1db05:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   1db09:	89 38                	mov    DWORD PTR [eax],edi
   1db0b:	eb c3                	jmp    1dad0 <fatfs_add_free_space+0x60>
   1db0d:	8d 76 00             	lea    esi,[esi+0x0]

0001db10 <fatfs_allocate_free_space>:
fatfs_allocate_free_space():
   1db10:	57                   	push   edi
   1db11:	56                   	push   esi
   1db12:	53                   	push   ebx
   1db13:	83 ec 10             	sub    esp,0x10
   1db16:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
   1db1a:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   1db1e:	85 db                	test   ebx,ebx
   1db20:	74 66                	je     1db88 <fatfs_allocate_free_space+0x78>
   1db22:	83 7e 24 ff          	cmp    DWORD PTR [esi+0x24],0xffffffff
   1db26:	74 0e                	je     1db36 <fatfs_allocate_free_space+0x26>
   1db28:	83 ec 08             	sub    esp,0x8
   1db2b:	6a ff                	push   0xffffffff
   1db2d:	56                   	push   esi
   1db2e:	e8 2d fb ff ff       	call   1d660 <fatfs_set_fs_info_next_free_cluster>
   1db33:	83 c4 10             	add    esp,0x10
   1db36:	0f b6 0e             	movzx  ecx,BYTE PTR [esi]
   1db39:	89 d8                	mov    eax,ebx
   1db3b:	31 d2                	xor    edx,edx
   1db3d:	c1 e1 09             	shl    ecx,0x9
   1db40:	f7 f1                	div    ecx
   1db42:	0f af c8             	imul   ecx,eax
   1db45:	8d 50 01             	lea    edx,[eax+0x1]
   1db48:	39 cb                	cmp    ebx,ecx
   1db4a:	0f 45 c2             	cmovne eax,edx
   1db4d:	89 c3                	mov    ebx,eax
   1db4f:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
   1db53:	85 c0                	test   eax,eax
   1db55:	75 41                	jne    1db98 <fatfs_allocate_free_space+0x88>
   1db57:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
   1db5b:	8d 7c 24 0c          	lea    edi,[esp+0xc]
   1db5f:	8b 00                	mov    eax,DWORD PTR [eax]
   1db61:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1db65:	83 ec 04             	sub    esp,0x4
   1db68:	53                   	push   ebx
   1db69:	57                   	push   edi
   1db6a:	56                   	push   esi
   1db6b:	e8 00 ff ff ff       	call   1da70 <fatfs_add_free_space>
   1db70:	83 c4 10             	add    esp,0x10
   1db73:	85 c0                	test   eax,eax
   1db75:	0f 95 c0             	setne  al
   1db78:	0f b6 c0             	movzx  eax,al
   1db7b:	83 c4 10             	add    esp,0x10
   1db7e:	5b                   	pop    ebx
   1db7f:	5e                   	pop    esi
   1db80:	5f                   	pop    edi
   1db81:	c3                   	ret    
   1db82:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1db88:	83 c4 10             	add    esp,0x10
   1db8b:	31 c0                	xor    eax,eax
   1db8d:	5b                   	pop    ebx
   1db8e:	5e                   	pop    esi
   1db8f:	5f                   	pop    edi
   1db90:	c3                   	ret    
   1db91:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1db98:	83 ec 04             	sub    esp,0x4
   1db9b:	8d 7c 24 10          	lea    edi,[esp+0x10]
   1db9f:	57                   	push   edi
   1dba0:	ff 76 08             	push   DWORD PTR [esi+0x8]
   1dba3:	56                   	push   esi
   1dba4:	e8 77 fb ff ff       	call   1d720 <fatfs_find_blank_cluster>
   1dba9:	83 c4 10             	add    esp,0x10
   1dbac:	85 c0                	test   eax,eax
   1dbae:	74 d8                	je     1db88 <fatfs_allocate_free_space+0x78>
   1dbb0:	83 fb 01             	cmp    ebx,0x1
   1dbb3:	75 b0                	jne    1db65 <fatfs_allocate_free_space+0x55>
   1dbb5:	83 ec 04             	sub    esp,0x4
   1dbb8:	6a ff                	push   0xffffffff
   1dbba:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   1dbbe:	56                   	push   esi
   1dbbf:	e8 3c fc ff ff       	call   1d800 <fatfs_fat_set_cluster>
   1dbc4:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
   1dbc8:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
   1dbcc:	83 c4 10             	add    esp,0x10
   1dbcf:	89 07                	mov    DWORD PTR [edi],eax
   1dbd1:	b8 01 00 00 00       	mov    eax,0x1
   1dbd6:	eb a3                	jmp    1db7b <fatfs_allocate_free_space+0x6b>
   1dbd8:	90                   	nop
   1dbd9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001dbe0 <fatfs_add_file_entry>:
fatfs_add_file_entry():
   1dbe0:	55                   	push   ebp
   1dbe1:	57                   	push   edi
   1dbe2:	56                   	push   esi
   1dbe3:	53                   	push   ebx
   1dbe4:	83 ec 4c             	sub    esp,0x4c
   1dbe7:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
   1dbeb:	8b 40 38             	mov    eax,DWORD PTR [eax+0x38]
   1dbee:	85 c0                	test   eax,eax
   1dbf0:	74 17                	je     1dc09 <fatfs_add_file_entry+0x29>
   1dbf2:	83 ec 0c             	sub    esp,0xc
   1dbf5:	ff 74 24 74          	push   DWORD PTR [esp+0x74]
   1dbf9:	e8 b2 eb ff ff       	call   1c7b0 <fatfs_lfn_entries_required>
   1dbfe:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
   1dc02:	83 c4 10             	add    esp,0x10
   1dc05:	85 c0                	test   eax,eax
   1dc07:	75 0f                	jne    1dc18 <fatfs_add_file_entry+0x38>
   1dc09:	31 f6                	xor    esi,esi
   1dc0b:	83 c4 4c             	add    esp,0x4c
   1dc0e:	89 f0                	mov    eax,esi
   1dc10:	5b                   	pop    ebx
   1dc11:	5e                   	pop    esi
   1dc12:	5f                   	pop    edi
   1dc13:	5d                   	pop    ebp
   1dc14:	c3                   	ret    
   1dc15:	8d 76 00             	lea    esi,[esi+0x0]
   1dc18:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
   1dc1c:	83 c0 01             	add    eax,0x1
   1dc1f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1dc23:	74 e4                	je     1dc09 <fatfs_add_file_entry+0x29>
   1dc25:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
   1dc29:	31 ed                	xor    ebp,ebp
   1dc2b:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   1dc32:	00 
   1dc33:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1dc3a:	00 
   1dc3b:	31 db                	xor    ebx,ebx
   1dc3d:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   1dc44:	00 
   1dc45:	83 c0 44             	add    eax,0x44
   1dc48:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1dc4c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1dc50:	6a 00                	push   0x0
   1dc52:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1dc56:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1dc5a:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1dc5e:	e8 5d ba ff ff       	call   196c0 <fatfs_sector_reader>
   1dc63:	83 c4 10             	add    esp,0x10
   1dc66:	85 c0                	test   eax,eax
   1dc68:	0f 84 5a 02 00 00    	je     1dec8 <fatfs_add_file_entry+0x2e8>
   1dc6e:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   1dc72:	89 e9                	mov    ecx,ebp
   1dc74:	31 f6                	xor    esi,esi
   1dc76:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
   1dc7a:	89 d7                	mov    edi,edx
   1dc7c:	89 d5                	mov    ebp,edx
   1dc7e:	eb 32                	jmp    1dcb2 <fatfs_add_file_entry+0xd2>
   1dc80:	85 db                	test   ebx,ebx
   1dc82:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1dc86:	0f 44 44 24 0c       	cmove  eax,DWORD PTR [esp+0xc]
   1dc8b:	0f 44 ce             	cmove  ecx,esi
   1dc8e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1dc92:	b8 01 00 00 00       	mov    eax,0x1
   1dc97:	0f 45 44 24 04       	cmovne eax,DWORD PTR [esp+0x4]
   1dc9c:	83 c3 01             	add    ebx,0x1
   1dc9f:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1dca3:	83 c6 01             	add    esi,0x1
   1dca6:	83 c7 20             	add    edi,0x20
   1dca9:	83 c5 20             	add    ebp,0x20
   1dcac:	89 f0                	mov    eax,esi
   1dcae:	3c 10                	cmp    al,0x10
   1dcb0:	74 3e                	je     1dcf0 <fatfs_add_file_entry+0x110>
   1dcb2:	88 0c 24             	mov    BYTE PTR [esp],cl
   1dcb5:	83 ec 0c             	sub    esp,0xc
   1dcb8:	57                   	push   edi
   1dcb9:	e8 f2 e9 ff ff       	call   1c6b0 <fatfs_entry_lfn_text>
   1dcbe:	83 c4 10             	add    esp,0x10
   1dcc1:	85 c0                	test   eax,eax
   1dcc3:	0f b6 0c 24          	movzx  ecx,BYTE PTR [esp]
   1dcc7:	75 b7                	jne    1dc80 <fatfs_add_file_entry+0xa0>
   1dcc9:	0f b6 45 00          	movzx  eax,BYTE PTR [ebp+0x0]
   1dccd:	3c e5                	cmp    al,0xe5
   1dccf:	74 2f                	je     1dd00 <fatfs_add_file_entry+0x120>
   1dcd1:	84 c0                	test   al,al
   1dcd3:	74 2b                	je     1dd00 <fatfs_add_file_entry+0x120>
   1dcd5:	83 c6 01             	add    esi,0x1
   1dcd8:	31 db                	xor    ebx,ebx
   1dcda:	83 c7 20             	add    edi,0x20
   1dcdd:	89 f0                	mov    eax,esi
   1dcdf:	83 c5 20             	add    ebp,0x20
   1dce2:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1dce9:	00 
   1dcea:	3c 10                	cmp    al,0x10
   1dcec:	75 c4                	jne    1dcb2 <fatfs_add_file_entry+0xd2>
   1dcee:	66 90                	xchg   ax,ax
   1dcf0:	89 cd                	mov    ebp,ecx
   1dcf2:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   1dcf7:	e9 54 ff ff ff       	jmp    1dc50 <fatfs_add_file_entry+0x70>
   1dcfc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1dd00:	85 db                	test   ebx,ebx
   1dd02:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1dd06:	0f 44 44 24 0c       	cmove  eax,DWORD PTR [esp+0xc]
   1dd0b:	0f 44 ce             	cmove  ecx,esi
   1dd0e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1dd12:	b8 01 00 00 00       	mov    eax,0x1
   1dd17:	0f 45 44 24 04       	cmovne eax,DWORD PTR [esp+0x4]
   1dd1c:	83 c3 01             	add    ebx,0x1
   1dd1f:	39 5c 24 10          	cmp    DWORD PTR [esp+0x10],ebx
   1dd23:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1dd27:	0f 8f 76 ff ff ff    	jg     1dca3 <fatfs_add_file_entry+0xc3>
   1dd2d:	89 cd                	mov    ebp,ecx
   1dd2f:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
   1dd33:	31 c9                	xor    ecx,ecx
   1dd35:	be 80 ff ff ff       	mov    esi,0xffffff80
   1dd3a:	8d 58 0b             	lea    ebx,[eax+0xb]
   1dd3d:	89 c2                	mov    edx,eax
   1dd3f:	31 c0                	xor    eax,eax
   1dd41:	eb 0d                	jmp    1dd50 <fatfs_add_file_entry+0x170>
   1dd43:	90                   	nop
   1dd44:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1dd48:	89 c1                	mov    ecx,eax
   1dd4a:	83 e1 01             	and    ecx,0x1
   1dd4d:	0f 45 ce             	cmovne ecx,esi
   1dd50:	83 c2 01             	add    edx,0x1
   1dd53:	d0 e8                	shr    al,1
   1dd55:	02 42 ff             	add    al,BYTE PTR [edx-0x1]
   1dd58:	01 c8                	add    eax,ecx
   1dd5a:	39 da                	cmp    edx,ebx
   1dd5c:	75 ea                	jne    1dd48 <fatfs_add_file_entry+0x168>
   1dd5e:	31 f6                	xor    esi,esi
   1dd60:	0f b6 c0             	movzx  eax,al
   1dd63:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
   1dd67:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1dd6b:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
   1dd6f:	89 e8                	mov    eax,ebp
   1dd71:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
   1dd75:	8b 6c 24 68          	mov    ebp,DWORD PTR [esp+0x68]
   1dd79:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
   1dd7d:	88 44 24 18          	mov    BYTE PTR [esp+0x18],al
   1dd81:	6a 00                	push   0x0
   1dd83:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1dd87:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1dd8b:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1dd8f:	e8 2c b9 ff ff       	call   196c0 <fatfs_sector_reader>
   1dd94:	83 c4 10             	add    esp,0x10
   1dd97:	85 c0                	test   eax,eax
   1dd99:	0f 84 6a fe ff ff    	je     1dc09 <fatfs_add_file_entry+0x29>
   1dd9f:	31 c0                	xor    eax,eax
   1dda1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   1dda5:	31 db                	xor    ebx,ebx
   1dda7:	89 04 24             	mov    DWORD PTR [esp],eax
   1ddaa:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   1ddae:	eb 1b                	jmp    1ddcb <fatfs_add_file_entry+0x1eb>
   1ddb0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1ddb4:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
   1ddb8:	75 06                	jne    1ddc0 <fatfs_add_file_entry+0x1e0>
   1ddba:	38 5c 24 18          	cmp    BYTE PTR [esp+0x18],bl
   1ddbe:	74 0f                	je     1ddcf <fatfs_add_file_entry+0x1ef>
   1ddc0:	83 c3 01             	add    ebx,0x1
   1ddc3:	83 c7 20             	add    edi,0x20
   1ddc6:	83 fb 10             	cmp    ebx,0x10
   1ddc9:	74 36                	je     1de01 <fatfs_add_file_entry+0x221>
   1ddcb:	85 c9                	test   ecx,ecx
   1ddcd:	74 e1                	je     1ddb0 <fatfs_add_file_entry+0x1d0>
   1ddcf:	89 d8                	mov    eax,ebx
   1ddd1:	c1 e0 05             	shl    eax,0x5
   1ddd4:	85 f6                	test   esi,esi
   1ddd6:	74 48                	je     1de20 <fatfs_add_file_entry+0x240>
   1ddd8:	83 ee 01             	sub    esi,0x1
   1dddb:	ff 74 24 04          	push   DWORD PTR [esp+0x4]
   1dddf:	83 c3 01             	add    ebx,0x1
   1dde2:	56                   	push   esi
   1dde3:	57                   	push   edi
   1dde4:	83 c7 20             	add    edi,0x20
   1dde7:	55                   	push   ebp
   1dde8:	e8 03 ea ff ff       	call   1c7f0 <fatfs_filename_to_lfn>
   1dded:	83 c4 10             	add    esp,0x10
   1ddf0:	83 fb 10             	cmp    ebx,0x10
   1ddf3:	b9 01 00 00 00       	mov    ecx,0x1
   1ddf8:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
   1ddff:	75 ca                	jne    1ddcb <fatfs_add_file_entry+0x1eb>
   1de01:	8b 04 24             	mov    eax,DWORD PTR [esp]
   1de04:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
   1de08:	85 c0                	test   eax,eax
   1de0a:	0f 85 88 00 00 00    	jne    1de98 <fatfs_add_file_entry+0x2b8>
   1de10:	83 44 24 0c 01       	add    DWORD PTR [esp+0xc],0x1
   1de15:	e9 67 ff ff ff       	jmp    1dd81 <fatfs_add_file_entry+0x1a1>
   1de1a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1de20:	83 ec 0c             	sub    esp,0xc
   1de23:	0f b7 f0             	movzx  esi,ax
   1de26:	ff b4 24 84 00 00 00 	push   DWORD PTR [esp+0x84]
   1de2d:	8d 5c 24 30          	lea    ebx,[esp+0x30]
   1de31:	53                   	push   ebx
   1de32:	ff b4 24 84 00 00 00 	push   DWORD PTR [esp+0x84]
   1de39:	ff b4 24 8c 00 00 00 	push   DWORD PTR [esp+0x8c]
   1de40:	ff b4 24 88 00 00 00 	push   DWORD PTR [esp+0x88]
   1de47:	e8 04 eb ff ff       	call   1c950 <fatfs_sfn_create_entry>
   1de4c:	83 c4 20             	add    esp,0x20
   1de4f:	6a 01                	push   0x1
   1de51:	6a 01                	push   0x1
   1de53:	6a 01                	push   0x1
   1de55:	53                   	push   ebx
   1de56:	e8 95 be ff ff       	call   19cf0 <fatfs_update_timestamps>
   1de5b:	83 c4 0c             	add    esp,0xc
   1de5e:	6a 20                	push   0x20
   1de60:	53                   	push   ebx
   1de61:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
   1de65:	8d 44 30 44          	lea    eax,[eax+esi*1+0x44]
   1de69:	50                   	push   eax
   1de6a:	e8 f1 37 00 00       	call   21660 <memcpy>
   1de6f:	83 c4 0c             	add    esp,0xc
   1de72:	6a 01                	push   0x1
   1de74:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1de78:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
   1de7c:	ff b0 44 02 00 00    	push   DWORD PTR [eax+0x244]
   1de82:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
   1de86:	ff 50 38             	call   DWORD PTR [eax+0x38]
   1de89:	83 c4 10             	add    esp,0x10
   1de8c:	89 c6                	mov    esi,eax
   1de8e:	83 c4 4c             	add    esp,0x4c
   1de91:	89 f0                	mov    eax,esi
   1de93:	5b                   	pop    ebx
   1de94:	5e                   	pop    esi
   1de95:	5f                   	pop    edi
   1de96:	5d                   	pop    ebp
   1de97:	c3                   	ret    
   1de98:	83 ec 04             	sub    esp,0x4
   1de9b:	6a 01                	push   0x1
   1de9d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   1dea1:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
   1dea5:	ff b0 44 02 00 00    	push   DWORD PTR [eax+0x244]
   1deab:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
   1deaf:	ff 50 38             	call   DWORD PTR [eax+0x38]
   1deb2:	83 c4 10             	add    esp,0x10
   1deb5:	85 c0                	test   eax,eax
   1deb7:	0f 85 53 ff ff ff    	jne    1de10 <fatfs_add_file_entry+0x230>
   1debd:	e9 47 fd ff ff       	jmp    1dc09 <fatfs_add_file_entry+0x29>
   1dec2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1dec8:	83 ec 04             	sub    esp,0x4
   1decb:	89 c6                	mov    esi,eax
   1decd:	8d 44 24 24          	lea    eax,[esp+0x24]
   1ded1:	50                   	push   eax
   1ded2:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
   1ded6:	ff 70 08             	push   DWORD PTR [eax+0x8]
   1ded9:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1dedd:	e8 3e f8 ff ff       	call   1d720 <fatfs_find_blank_cluster>
   1dee2:	83 c4 10             	add    esp,0x10
   1dee5:	85 c0                	test   eax,eax
   1dee7:	0f 84 1e fd ff ff    	je     1dc0b <fatfs_add_file_entry+0x2b>
   1deed:	83 ec 04             	sub    esp,0x4
   1def0:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   1def4:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1def8:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
   1defc:	e8 3f fa ff ff       	call   1d940 <fatfs_fat_add_cluster_to_chain>
   1df01:	83 c4 10             	add    esp,0x10
   1df04:	85 c0                	test   eax,eax
   1df06:	0f 84 ff fc ff ff    	je     1dc0b <fatfs_add_file_entry+0x2b>
   1df0c:	83 ec 04             	sub    esp,0x4
   1df0f:	31 db                	xor    ebx,ebx
   1df11:	68 00 02 00 00       	push   0x200
   1df16:	6a 00                	push   0x0
   1df18:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
   1df1c:	83 c0 44             	add    eax,0x44
   1df1f:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   1df23:	50                   	push   eax
   1df24:	e8 57 2e 00 00       	call   20d80 <memset>
   1df29:	83 c4 10             	add    esp,0x10
   1df2c:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
   1df30:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
   1df34:	80 38 00             	cmp    BYTE PTR [eax],0x0
   1df37:	74 22                	je     1df5b <fatfs_add_file_entry+0x37b>
   1df39:	0f b6 c3             	movzx  eax,bl
   1df3c:	6a 00                	push   0x0
   1df3e:	50                   	push   eax
   1df3f:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
   1df43:	57                   	push   edi
   1df44:	e8 97 b9 ff ff       	call   198e0 <fatfs_write_sector>
   1df49:	83 c4 10             	add    esp,0x10
   1df4c:	85 c0                	test   eax,eax
   1df4e:	0f 84 b7 fc ff ff    	je     1dc0b <fatfs_add_file_entry+0x2b>
   1df54:	83 c3 01             	add    ebx,0x1
   1df57:	3a 1f                	cmp    bl,BYTE PTR [edi]
   1df59:	72 de                	jb     1df39 <fatfs_add_file_entry+0x359>
   1df5b:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   1df5f:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
   1df63:	85 c0                	test   eax,eax
   1df65:	0f 44 7c 24 0c       	cmove  edi,DWORD PTR [esp+0xc]
   1df6a:	b8 00 00 00 00       	mov    eax,0x0
   1df6f:	0f 44 e8             	cmove  ebp,eax
   1df72:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
   1df76:	e9 b4 fd ff ff       	jmp    1dd2f <fatfs_add_file_entry+0x14f>
   1df7b:	66 90                	xchg   ax,ax
   1df7d:	66 90                	xchg   ax,ax
   1df7f:	90                   	nop

0001df80 <printMBR>:
printMBR():
   1df80:	55                   	push   ebp
   1df81:	57                   	push   edi
   1df82:	56                   	push   esi
   1df83:	53                   	push   ebx
   1df84:	83 ec 18             	sub    esp,0x18
   1df87:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
   1df8b:	68 50 4f 08 00       	push   0x84f50
   1df90:	e8 cb 46 00 00       	call   22660 <printk>
   1df95:	8b 87 00 04 00 00    	mov    eax,DWORD PTR [edi+0x400]
   1df9b:	83 c4 10             	add    esp,0x10
   1df9e:	85 c0                	test   eax,eax
   1dfa0:	7e 4c                	jle    1dfee <printMBR+0x6e>
   1dfa2:	89 fb                	mov    ebx,edi
   1dfa4:	31 f6                	xor    esi,esi
   1dfa6:	bd 7b 00 04 00       	mov    ebp,0x4007b
   1dfab:	90                   	nop
   1dfac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1dfb0:	8b 03                	mov    eax,DWORD PTR [ebx]
   1dfb2:	85 c0                	test   eax,eax
   1dfb4:	74 2a                	je     1dfe0 <printMBR+0x60>
   1dfb6:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
   1dfba:	b9 1c 8d 04 00       	mov    ecx,0x48d1c
   1dfbf:	0f 45 cd             	cmovne ecx,ebp
   1dfc2:	83 ec 04             	sub    esp,0x4
   1dfc5:	51                   	push   ecx
   1dfc6:	0f b6 4b 0d          	movzx  ecx,BYTE PTR [ebx+0xd]
   1dfca:	51                   	push   ecx
   1dfcb:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   1dfce:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   1dfd1:	50                   	push   eax
   1dfd2:	56                   	push   esi
   1dfd3:	68 60 3a 06 00       	push   0x63a60
   1dfd8:	e8 83 46 00 00       	call   22660 <printk>
   1dfdd:	83 c4 20             	add    esp,0x20
   1dfe0:	83 c6 01             	add    esi,0x1
   1dfe3:	83 c3 10             	add    ebx,0x10
   1dfe6:	39 b7 00 04 00 00    	cmp    DWORD PTR [edi+0x400],esi
   1dfec:	7f c2                	jg     1dfb0 <printMBR+0x30>
   1dfee:	c7 44 24 20 d8 39 06 	mov    DWORD PTR [esp+0x20],0x639d8
   1dff5:	00 
   1dff6:	83 c4 0c             	add    esp,0xc
   1dff9:	5b                   	pop    ebx
   1dffa:	5e                   	pop    esi
   1dffb:	5f                   	pop    edi
   1dffc:	5d                   	pop    ebp
   1dffd:	e9 5e 46 00 00       	jmp    22660 <printk>
   1e002:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e009:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001e010 <parseGPT>:
parseGPT():
   1e010:	55                   	push   ebp
   1e011:	57                   	push   edi
   1e012:	56                   	push   esi
   1e013:	53                   	push   ebx
   1e014:	31 f6                	xor    esi,esi
   1e016:	83 ec 0c             	sub    esp,0xc
   1e019:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
   1e01d:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   1e021:	6a 01                	push   0x1
   1e023:	68 a0 5d 09 00       	push   0x95da0
   1e028:	ff 37                	push   DWORD PTR [edi]
   1e02a:	53                   	push   ebx
   1e02b:	89 fd                	mov    ebp,edi
   1e02d:	e8 6e 6a ff ff       	call   14aa0 <ahciRead>
   1e032:	58                   	pop    eax
   1e033:	5a                   	pop    edx
   1e034:	ff 35 d0 5d 09 00    	push   DWORD PTR ds:0x95dd0
   1e03a:	ff 35 f4 5d 09 00    	push   DWORD PTR ds:0x95df4
   1e040:	ff 35 f0 5d 09 00    	push   DWORD PTR ds:0x95df0
   1e046:	ff 35 e8 5d 09 00    	push   DWORD PTR ds:0x95de8
   1e04c:	68 78 4f 08 00       	push   0x84f78
   1e051:	6a 08                	push   0x8
   1e053:	c7 05 84 5d 09 00 a0 	mov    DWORD PTR ds:0x95d84,0x95da0
   1e05a:	5d 09 00 
   1e05d:	e8 1e 46 00 00       	call   22680 <printd>
   1e062:	8b 15 84 5d 09 00    	mov    edx,DWORD PTR ds:0x95d84
   1e068:	83 c4 20             	add    esp,0x20
   1e06b:	8b 42 50             	mov    eax,DWORD PTR [edx+0x50]
   1e06e:	0f af 42 54          	imul   eax,DWORD PTR [edx+0x54]
   1e072:	c1 e8 09             	shr    eax,0x9
   1e075:	83 c0 01             	add    eax,0x1
   1e078:	50                   	push   eax
   1e079:	ff 72 48             	push   DWORD PTR [edx+0x48]
   1e07c:	68 c4 4f 08 00       	push   0x84fc4
   1e081:	6a 08                	push   0x8
   1e083:	e8 f8 45 00 00       	call   22680 <printd>
   1e088:	a1 84 5d 09 00       	mov    eax,ds:0x95d84
   1e08d:	6a 0a                	push   0xa
   1e08f:	68 80 35 09 00       	push   0x93580
   1e094:	ff 70 48             	push   DWORD PTR [eax+0x48]
   1e097:	53                   	push   ebx
   1e098:	e8 03 6a ff ff       	call   14aa0 <ahciRead>
   1e09d:	c7 05 80 5d 09 00 80 	mov    DWORD PTR ds:0x95d80,0x93580
   1e0a4:	35 09 00 
   1e0a7:	c7 87 00 04 00 00 00 	mov    DWORD PTR [edi+0x400],0x0
   1e0ae:	00 00 00 
   1e0b1:	83 c4 20             	add    esp,0x20
   1e0b4:	b8 80 35 09 00       	mov    eax,0x93580
   1e0b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e0c0:	89 f3                	mov    ebx,esi
   1e0c2:	c1 e3 07             	shl    ebx,0x7
   1e0c5:	ff 74 18 20          	push   DWORD PTR [eax+ebx*1+0x20]
   1e0c9:	56                   	push   esi
   1e0ca:	68 77 3a 06 00       	push   0x63a77
   1e0cf:	6a 08                	push   0x8
   1e0d1:	e8 aa 45 00 00       	call   22680 <printd>
   1e0d6:	a1 80 5d 09 00       	mov    eax,ds:0x95d80
   1e0db:	83 c4 10             	add    esp,0x10
   1e0de:	01 c3                	add    ebx,eax
   1e0e0:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
   1e0e3:	85 d2                	test   edx,edx
   1e0e5:	74 15                	je     1e0fc <parseGPT+0xec>
   1e0e7:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
   1e0ea:	8b 4b 28             	mov    ecx,DWORD PTR [ebx+0x28]
   1e0ed:	89 4d 04             	mov    DWORD PTR [ebp+0x4],ecx
   1e0f0:	29 d1                	sub    ecx,edx
   1e0f2:	89 4d 08             	mov    DWORD PTR [ebp+0x8],ecx
   1e0f5:	83 87 00 04 00 00 01 	add    DWORD PTR [edi+0x400],0x1
   1e0fc:	83 c6 01             	add    esi,0x1
   1e0ff:	83 c5 10             	add    ebp,0x10
   1e102:	83 fe 14             	cmp    esi,0x14
   1e105:	75 b9                	jne    1e0c0 <parseGPT+0xb0>
   1e107:	83 c4 0c             	add    esp,0xc
   1e10a:	b8 01 00 00 00       	mov    eax,0x1
   1e10f:	5b                   	pop    ebx
   1e110:	5e                   	pop    esi
   1e111:	5f                   	pop    edi
   1e112:	5d                   	pop    ebp
   1e113:	c3                   	ret    
   1e114:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e11a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001e120 <parseMBR>:
parseMBR():
   1e120:	57                   	push   edi
   1e121:	56                   	push   esi
   1e122:	53                   	push   ebx
   1e123:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1e127:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   1e12b:	83 ec 04             	sub    esp,0x4
   1e12e:	8b be 69 02 00 00    	mov    edi,DWORD PTR [esi+0x269]
   1e134:	68 17 04 00 00       	push   0x417
   1e139:	6a 00                	push   0x0
   1e13b:	53                   	push   ebx
   1e13c:	e8 3f 2c 00 00       	call   20d80 <memset>
   1e141:	83 c4 0c             	add    esp,0xc
   1e144:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
   1e14a:	ff b6 6f 02 00 00    	push   DWORD PTR [esi+0x26f]
   1e150:	68 8a 3a 06 00       	push   0x63a8a
   1e155:	6a 08                	push   0x8
   1e157:	e8 24 45 00 00       	call   22680 <printd>
   1e15c:	8b 86 6f 02 00 00    	mov    eax,DWORD PTR [esi+0x26f]
   1e162:	83 c4 10             	add    esp,0x10
   1e165:	85 c0                	test   eax,eax
   1e167:	0f 84 63 01 00 00    	je     1e2d0 <parseMBR+0x1b0>
   1e16d:	83 ec 08             	sub    esp,0x8
   1e170:	68 a0 3a 06 00       	push   0x63aa0
   1e175:	6a 08                	push   0x8
   1e177:	e8 04 45 00 00       	call   22680 <printd>
   1e17c:	89 3c 24             	mov    DWORD PTR [esp],edi
   1e17f:	e8 9c 66 ff ff       	call   14820 <ahciSetCurrentDisk>
   1e184:	6a 01                	push   0x1
   1e186:	68 a0 5d 09 00       	push   0x95da0
   1e18b:	6a 00                	push   0x0
   1e18d:	57                   	push   edi
   1e18e:	e8 0d 69 ff ff       	call   14aa0 <ahciRead>
   1e193:	83 c4 20             	add    esp,0x20
   1e196:	85 c0                	test   eax,eax
   1e198:	0f 84 12 01 00 00    	je     1e2b0 <parseMBR+0x190>
   1e19e:	8d 83 04 04 00 00    	lea    eax,[ebx+0x404]
   1e1a4:	83 ec 04             	sub    esp,0x4
   1e1a7:	6a 0a                	push   0xa
   1e1a9:	68 54 5f 09 00       	push   0x95f54
   1e1ae:	50                   	push   eax
   1e1af:	e8 ac 34 00 00       	call   21660 <memcpy>
   1e1b4:	83 c4 10             	add    esp,0x10
   1e1b7:	31 c0                	xor    eax,eax
   1e1b9:	80 3d 9e 5f 09 00 55 	cmp    BYTE PTR ds:0x95f9e,0x55
   1e1c0:	0f 84 da 00 00 00    	je     1e2a0 <parseMBR+0x180>
   1e1c6:	80 3d 5e 5f 09 00 80 	cmp    BYTE PTR ds:0x95f5e,0x80
   1e1cd:	88 83 0e 04 00 00    	mov    BYTE PTR [ebx+0x40e],al
   1e1d3:	0f 94 43 0c          	sete   BYTE PTR [ebx+0xc]
   1e1d7:	a1 66 5f 09 00       	mov    eax,ds:0x95f66
   1e1dc:	89 03                	mov    DWORD PTR [ebx],eax
   1e1de:	8b 15 6a 5f 09 00    	mov    edx,DWORD PTR ds:0x95f6a
   1e1e4:	01 d0                	add    eax,edx
   1e1e6:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
   1e1e9:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
   1e1ec:	80 3d 6e 5f 09 00 80 	cmp    BYTE PTR ds:0x95f6e,0x80
   1e1f3:	0f 94 43 1c          	sete   BYTE PTR [ebx+0x1c]
   1e1f7:	0f b6 05 72 5f 09 00 	movzx  eax,BYTE PTR ds:0x95f72
   1e1fe:	88 43 1d             	mov    BYTE PTR [ebx+0x1d],al
   1e201:	a1 76 5f 09 00       	mov    eax,ds:0x95f76
   1e206:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
   1e209:	8b 15 7a 5f 09 00    	mov    edx,DWORD PTR ds:0x95f7a
   1e20f:	01 d0                	add    eax,edx
   1e211:	89 53 18             	mov    DWORD PTR [ebx+0x18],edx
   1e214:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
   1e217:	80 3d 7e 5f 09 00 80 	cmp    BYTE PTR ds:0x95f7e,0x80
   1e21e:	0f 94 43 2c          	sete   BYTE PTR [ebx+0x2c]
   1e222:	0f b6 05 82 5f 09 00 	movzx  eax,BYTE PTR ds:0x95f82
   1e229:	88 43 2d             	mov    BYTE PTR [ebx+0x2d],al
   1e22c:	a1 86 5f 09 00       	mov    eax,ds:0x95f86
   1e231:	89 43 20             	mov    DWORD PTR [ebx+0x20],eax
   1e234:	8b 15 8a 5f 09 00    	mov    edx,DWORD PTR ds:0x95f8a
   1e23a:	01 d0                	add    eax,edx
   1e23c:	89 53 28             	mov    DWORD PTR [ebx+0x28],edx
   1e23f:	89 43 24             	mov    DWORD PTR [ebx+0x24],eax
   1e242:	80 3d 8e 5f 09 00 80 	cmp    BYTE PTR ds:0x95f8e,0x80
   1e249:	0f 94 43 3c          	sete   BYTE PTR [ebx+0x3c]
   1e24d:	0f b6 05 92 5f 09 00 	movzx  eax,BYTE PTR ds:0x95f92
   1e254:	83 ec 08             	sub    esp,0x8
   1e257:	88 43 3d             	mov    BYTE PTR [ebx+0x3d],al
   1e25a:	a1 96 5f 09 00       	mov    eax,ds:0x95f96
   1e25f:	89 43 30             	mov    DWORD PTR [ebx+0x30],eax
   1e262:	8b 15 9a 5f 09 00    	mov    edx,DWORD PTR ds:0x95f9a
   1e268:	c7 83 00 04 00 00 04 	mov    DWORD PTR [ebx+0x400],0x4
   1e26f:	00 00 00 
   1e272:	c6 43 0d ee          	mov    BYTE PTR [ebx+0xd],0xee
   1e276:	01 d0                	add    eax,edx
   1e278:	89 53 38             	mov    DWORD PTR [ebx+0x38],edx
   1e27b:	89 43 34             	mov    DWORD PTR [ebx+0x34],eax
   1e27e:	68 bb 3a 06 00       	push   0x63abb
   1e283:	6a 08                	push   0x8
   1e285:	e8 f6 43 00 00       	call   22680 <printd>
   1e28a:	83 c4 10             	add    esp,0x10
   1e28d:	89 5c 24 14          	mov    DWORD PTR [esp+0x14],ebx
   1e291:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
   1e295:	5b                   	pop    ebx
   1e296:	5e                   	pop    esi
   1e297:	5f                   	pop    edi
   1e298:	e9 73 fd ff ff       	jmp    1e010 <parseGPT>
   1e29d:	8d 76 00             	lea    esi,[esi+0x0]
   1e2a0:	80 3d 9f 5f 09 00 aa 	cmp    BYTE PTR ds:0x95f9f,0xaa
   1e2a7:	0f 94 c0             	sete   al
   1e2aa:	e9 17 ff ff ff       	jmp    1e1c6 <parseMBR+0xa6>
   1e2af:	90                   	nop
   1e2b0:	83 ec 08             	sub    esp,0x8
   1e2b3:	6a 00                	push   0x0
   1e2b5:	68 fc 4f 08 00       	push   0x84ffc
   1e2ba:	e8 a1 43 00 00       	call   22660 <printk>
   1e2bf:	83 c4 10             	add    esp,0x10
   1e2c2:	5b                   	pop    ebx
   1e2c3:	31 c0                	xor    eax,eax
   1e2c5:	5e                   	pop    esi
   1e2c6:	5f                   	pop    edi
   1e2c7:	c3                   	ret    
   1e2c8:	90                   	nop
   1e2c9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e2d0:	83 ec 08             	sub    esp,0x8
   1e2d3:	68 ae 3a 06 00       	push   0x63aae
   1e2d8:	6a 08                	push   0x8
   1e2da:	e8 a1 43 00 00       	call   22680 <printd>
   1e2df:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
   1e2e6:	68 a0 5d 09 00       	push   0x95da0
   1e2eb:	6a 00                	push   0x0
   1e2ed:	53                   	push   ebx
   1e2ee:	56                   	push   esi
   1e2ef:	e8 5c 0c 00 00       	call   1ef50 <ataReadDisk>
   1e2f4:	83 c4 20             	add    esp,0x20
   1e2f7:	3d 00 02 00 00       	cmp    eax,0x200
   1e2fc:	0f 84 9c fe ff ff    	je     1e19e <parseMBR+0x7e>
   1e302:	83 ec 08             	sub    esp,0x8
   1e305:	50                   	push   eax
   1e306:	68 fc 4f 08 00       	push   0x84ffc
   1e30b:	e8 50 43 00 00       	call   22660 <printk>
   1e310:	83 c4 10             	add    esp,0x10
   1e313:	eb ad                	jmp    1e2c2 <parseMBR+0x1a2>
   1e315:	66 90                	xchg   ax,ax
   1e317:	66 90                	xchg   ax,ax
   1e319:	66 90                	xchg   ax,ax
   1e31b:	66 90                	xchg   ax,ax
   1e31d:	66 90                	xchg   ax,ax
   1e31f:	90                   	nop

0001e320 <ataWaitForDRQ>:
ataWaitForDRQ():
   1e320:	57                   	push   edi
   1e321:	56                   	push   esi
   1e322:	53                   	push   ebx
   1e323:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   1e327:	0f af 1d c4 97 12 00 	imul   ebx,DWORD PTR ds:0x1297c4
   1e32e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1e332:	0f b6 74 24 14       	movzx  esi,BYTE PTR [esp+0x14]
   1e337:	85 db                	test   ebx,ebx
   1e339:	7e 36                	jle    1e371 <ataWaitForDRQ+0x51>
   1e33b:	8b 90 69 02 00 00    	mov    edx,DWORD PTR [eax+0x269]
   1e341:	89 d7                	mov    edi,edx
   1e343:	83 c2 07             	add    edx,0x7
   1e346:	eb 12                	jmp    1e35a <ataWaitForDRQ+0x3a>
   1e348:	90                   	nop
   1e349:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e350:	f6 c1 08             	test   cl,0x8
   1e353:	75 16                	jne    1e36b <ataWaitForDRQ+0x4b>
   1e355:	83 eb 01             	sub    ebx,0x1
   1e358:	74 26                	je     1e380 <ataWaitForDRQ+0x60>
   1e35a:	fb                   	sti    
   1e35b:	fb                   	sti    
   1e35c:	f4                   	hlt    
   1e35d:	ec                   	in     al,dx
   1e35e:	89 c1                	mov    ecx,eax
   1e360:	89 f0                	mov    eax,esi
   1e362:	84 c0                	test   al,al
   1e364:	75 ea                	jne    1e350 <ataWaitForDRQ+0x30>
   1e366:	f6 c1 08             	test   cl,0x8
   1e369:	75 ea                	jne    1e355 <ataWaitForDRQ+0x35>
   1e36b:	5b                   	pop    ebx
   1e36c:	31 c0                	xor    eax,eax
   1e36e:	5e                   	pop    esi
   1e36f:	5f                   	pop    edi
   1e370:	c3                   	ret    
   1e371:	0f b7 b8 69 02 00 00 	movzx  edi,WORD PTR [eax+0x269]
   1e378:	31 c9                	xor    ecx,ecx
   1e37a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e380:	8d 57 01             	lea    edx,[edi+0x1]
   1e383:	ec                   	in     al,dx
   1e384:	0f b6 d0             	movzx  edx,al
   1e387:	a8 04                	test   al,0x4
   1e389:	89 15 dc 75 09 00    	mov    DWORD PTR ds:0x975dc,edx
   1e38f:	75 da                	jne    1e36b <ataWaitForDRQ+0x4b>
   1e391:	5b                   	pop    ebx
   1e392:	89 c8                	mov    eax,ecx
   1e394:	5e                   	pop    esi
   1e395:	5f                   	pop    edi
   1e396:	c3                   	ret    
   1e397:	89 f6                	mov    esi,esi
   1e399:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001e3a0 <ataWaitForIdle>:
ataWaitForIdle():
   1e3a0:	53                   	push   ebx
   1e3a1:	83 ec 08             	sub    esp,0x8
   1e3a4:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   1e3a8:	8b 98 69 02 00 00    	mov    ebx,DWORD PTR [eax+0x269]
   1e3ae:	8d 53 07             	lea    edx,[ebx+0x7]
   1e3b1:	ec                   	in     al,dx
   1e3b2:	89 c1                	mov    ecx,eax
   1e3b4:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1e3b9:	d9 e8                	fld1   
   1e3bb:	d9 15 d0 75 09 00    	fst    DWORD PTR ds:0x975d0
   1e3c1:	8d 04 80             	lea    eax,[eax+eax*4]
   1e3c4:	01 c0                	add    eax,eax
   1e3c6:	89 04 24             	mov    DWORD PTR [esp],eax
   1e3c9:	db 04 24             	fild   DWORD PTR [esp]
   1e3cc:	d9 5c 24 04          	fstp   DWORD PTR [esp+0x4]
   1e3d0:	d9 44 24 04          	fld    DWORD PTR [esp+0x4]
   1e3d4:	d9 ee                	fldz   
   1e3d6:	d9 c9                	fxch   st(1)
   1e3d8:	db e9                	fucomi st,st(1)
   1e3da:	dd d9                	fstp   st(1)
   1e3dc:	72 53                	jb     1e431 <ataWaitForIdle+0x91>
   1e3de:	fb                   	sti    
   1e3df:	f4                   	hlt    
   1e3e0:	ec                   	in     al,dx
   1e3e1:	a8 88                	test   al,0x88
   1e3e3:	89 c1                	mov    ecx,eax
   1e3e5:	d9 e8                	fld1   
   1e3e7:	75 1c                	jne    1e405 <ataWaitForIdle+0x65>
   1e3e9:	dd d8                	fstp   st(0)
   1e3eb:	dd d8                	fstp   st(0)
   1e3ed:	dd d8                	fstp   st(0)
   1e3ef:	eb 69                	jmp    1e45a <ataWaitForIdle+0xba>
   1e3f1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e3f8:	fb                   	sti    
   1e3f9:	f4                   	hlt    
   1e3fa:	ec                   	in     al,dx
   1e3fb:	a8 88                	test   al,0x88
   1e3fd:	89 c1                	mov    ecx,eax
   1e3ff:	74 4f                	je     1e450 <ataWaitForIdle+0xb0>
   1e401:	d9 c9                	fxch   st(1)
   1e403:	d9 ca                	fxch   st(2)
   1e405:	dc c2                	fadd   st(2),st
   1e407:	d9 ca                	fxch   st(2)
   1e409:	d9 5c 24 04          	fstp   DWORD PTR [esp+0x4]
   1e40d:	d9 44 24 04          	fld    DWORD PTR [esp+0x4]
   1e411:	d9 c2                	fld    st(2)
   1e413:	d8 c1                	fadd   st,st(1)
   1e415:	d9 5c 24 04          	fstp   DWORD PTR [esp+0x4]
   1e419:	d9 44 24 04          	fld    DWORD PTR [esp+0x4]
   1e41d:	d9 ca                	fxch   st(2)
   1e41f:	db e9                	fucomi st,st(1)
   1e421:	dd d9                	fstp   st(1)
   1e423:	73 d3                	jae    1e3f8 <ataWaitForIdle+0x58>
   1e425:	dd d8                	fstp   st(0)
   1e427:	dd d9                	fstp   st(1)
   1e429:	d9 1d d0 75 09 00    	fstp   DWORD PTR ds:0x975d0
   1e42f:	eb 04                	jmp    1e435 <ataWaitForIdle+0x95>
   1e431:	dd d8                	fstp   st(0)
   1e433:	dd d8                	fstp   st(0)
   1e435:	8d 53 01             	lea    edx,[ebx+0x1]
   1e438:	ec                   	in     al,dx
   1e439:	0f b6 c0             	movzx  eax,al
   1e43c:	a3 dc 75 09 00       	mov    ds:0x975dc,eax
   1e441:	83 c4 08             	add    esp,0x8
   1e444:	89 c8                	mov    eax,ecx
   1e446:	5b                   	pop    ebx
   1e447:	c3                   	ret    
   1e448:	90                   	nop
   1e449:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e450:	dd d8                	fstp   st(0)
   1e452:	dd d9                	fstp   st(1)
   1e454:	d9 1d d0 75 09 00    	fstp   DWORD PTR ds:0x975d0
   1e45a:	83 c4 08             	add    esp,0x8
   1e45d:	31 c0                	xor    eax,eax
   1e45f:	5b                   	pop    ebx
   1e460:	c3                   	ret    
   1e461:	eb 0d                	jmp    1e470 <ataControllerIsReady>
   1e463:	90                   	nop
   1e464:	90                   	nop
   1e465:	90                   	nop
   1e466:	90                   	nop
   1e467:	90                   	nop
   1e468:	90                   	nop
   1e469:	90                   	nop
   1e46a:	90                   	nop
   1e46b:	90                   	nop
   1e46c:	90                   	nop
   1e46d:	90                   	nop
   1e46e:	90                   	nop
   1e46f:	90                   	nop

0001e470 <ataControllerIsReady>:
ataControllerIsReady():
   1e470:	55                   	push   ebp
   1e471:	57                   	push   edi
   1e472:	31 ed                	xor    ebp,ebp
   1e474:	56                   	push   esi
   1e475:	53                   	push   ebx
   1e476:	31 ff                	xor    edi,edi
   1e478:	83 ec 0c             	sub    esp,0xc
   1e47b:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   1e47f:	eb 31                	jmp    1e4b2 <ataControllerIsReady+0x42>
   1e481:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1e488:	0f b7 86 69 02 00 00 	movzx  eax,WORD PTR [esi+0x269]
   1e48f:	8d 50 07             	lea    edx,[eax+0x7]
   1e492:	ec                   	in     al,dx
   1e493:	83 ec 0c             	sub    esp,0xc
   1e496:	89 c3                	mov    ebx,eax
   1e498:	83 c7 02             	add    edi,0x2
   1e49b:	6a 01                	push   0x1
   1e49d:	89 dd                	mov    ebp,ebx
   1e49f:	81 e5 d0 00 00 00    	and    ebp,0xd0
   1e4a5:	e8 e6 4f 00 00       	call   23490 <wait>
   1e4aa:	83 c4 10             	add    esp,0x10
   1e4ad:	83 e3 40             	and    ebx,0x40
   1e4b0:	75 33                	jne    1e4e5 <ataControllerIsReady+0x75>
   1e4b2:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1e4b7:	8d 04 80             	lea    eax,[eax+eax*4]
   1e4ba:	01 c0                	add    eax,eax
   1e4bc:	39 c7                	cmp    edi,eax
   1e4be:	7e c8                	jle    1e488 <ataControllerIsReady+0x18>
   1e4c0:	81 fd 80 00 00 00    	cmp    ebp,0x80
   1e4c6:	74 30                	je     1e4f8 <ataControllerIsReady+0x88>
   1e4c8:	a1 78 98 12 00       	mov    eax,ds:0x129878
   1e4cd:	83 e0 08             	and    eax,0x8
   1e4d0:	85 c0                	test   eax,eax
   1e4d2:	74 11                	je     1e4e5 <ataControllerIsReady+0x75>
   1e4d4:	83 ec 08             	sub    esp,0x8
   1e4d7:	55                   	push   ebp
   1e4d8:	68 5c 50 08 00       	push   0x8505c
   1e4dd:	e8 7e 41 00 00       	call   22660 <printk>
   1e4e2:	83 c4 10             	add    esp,0x10
   1e4e5:	83 c4 0c             	add    esp,0xc
   1e4e8:	b8 01 00 00 00       	mov    eax,0x1
   1e4ed:	5b                   	pop    ebx
   1e4ee:	5e                   	pop    esi
   1e4ef:	5f                   	pop    edi
   1e4f0:	5d                   	pop    ebp
   1e4f1:	c3                   	ret    
   1e4f2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e4f8:	ba f1 01 00 00       	mov    edx,0x1f1
   1e4fd:	ec                   	in     al,dx
   1e4fe:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e505:	89 c3                	mov    ebx,eax
   1e507:	74 dc                	je     1e4e5 <ataControllerIsReady+0x75>
   1e509:	0f b6 c0             	movzx  eax,al
   1e50c:	50                   	push   eax
   1e50d:	68 80 00 00 00       	push   0x80
   1e512:	68 1c 50 08 00       	push   0x8501c
   1e517:	6a 08                	push   0x8
   1e519:	e8 62 41 00 00       	call   22680 <printd>
   1e51e:	a1 78 98 12 00       	mov    eax,ds:0x129878
   1e523:	83 c4 10             	add    esp,0x10
   1e526:	83 e0 08             	and    eax,0x8
   1e529:	80 fb 04             	cmp    bl,0x4
   1e52c:	75 a2                	jne    1e4d0 <ataControllerIsReady+0x60>
   1e52e:	bd 40 00 00 00       	mov    ebp,0x40
   1e533:	eb 9b                	jmp    1e4d0 <ataControllerIsReady+0x60>
   1e535:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1e539:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001e540 <ataSelectDrive>:
ataSelectDrive():
   1e540:	57                   	push   edi
   1e541:	56                   	push   esi
   1e542:	53                   	push   ebx
   1e543:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1e547:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
   1e54b:	53                   	push   ebx
   1e54c:	e8 4f fe ff ff       	call   1e3a0 <ataWaitForIdle>
   1e551:	8b 8b 69 02 00 00    	mov    ecx,DWORD PTR [ebx+0x269]
   1e557:	89 f0                	mov    eax,esi
   1e559:	83 e0 0f             	and    eax,0xf
   1e55c:	0a 83 6e 02 00 00    	or     al,BYTE PTR [ebx+0x26e]
   1e562:	8d 51 06             	lea    edx,[ecx+0x6]
   1e565:	ee                   	out    dx,al
   1e566:	8d 51 07             	lea    edx,[ecx+0x7]
   1e569:	ec                   	in     al,dx
   1e56a:	84 c0                	test   al,al
   1e56c:	59                   	pop    ecx
   1e56d:	78 11                	js     1e580 <ataSelectDrive+0x40>
   1e56f:	31 c0                	xor    eax,eax
   1e571:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e578:	75 1e                	jne    1e598 <ataSelectDrive+0x58>
   1e57a:	5b                   	pop    ebx
   1e57b:	5e                   	pop    esi
   1e57c:	5f                   	pop    edi
   1e57d:	c3                   	ret    
   1e57e:	66 90                	xchg   ax,ax
   1e580:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e587:	75 67                	jne    1e5f0 <ataSelectDrive+0xb0>
   1e589:	ec                   	in     al,dx
   1e58a:	84 c0                	test   al,al
   1e58c:	5b                   	pop    ebx
   1e58d:	0f 95 c0             	setne  al
   1e590:	5e                   	pop    esi
   1e591:	5f                   	pop    edi
   1e592:	c3                   	ret    
   1e593:	90                   	nop
   1e594:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1e598:	83 ec 0c             	sub    esp,0xc
   1e59b:	6a 0a                	push   0xa
   1e59d:	e8 ee 4e 00 00       	call   23490 <wait>
   1e5a2:	8b 8b 69 02 00 00    	mov    ecx,DWORD PTR [ebx+0x269]
   1e5a8:	8d 51 06             	lea    edx,[ecx+0x6]
   1e5ab:	ec                   	in     al,dx
   1e5ac:	89 c6                	mov    esi,eax
   1e5ae:	0f b6 f8             	movzx  edi,al
   1e5b1:	8d 51 01             	lea    edx,[ecx+0x1]
   1e5b4:	ec                   	in     al,dx
   1e5b5:	b9 d6 3a 06 00       	mov    ecx,0x63ad6
   1e5ba:	83 e6 10             	and    esi,0x10
   1e5bd:	ba 0e b2 05 00       	mov    edx,0x5b20e
   1e5c2:	0f 45 d1             	cmovne edx,ecx
   1e5c5:	0f b6 c0             	movzx  eax,al
   1e5c8:	89 04 24             	mov    DWORD PTR [esp],eax
   1e5cb:	57                   	push   edi
   1e5cc:	ff b3 65 02 00 00    	push   DWORD PTR [ebx+0x265]
   1e5d2:	52                   	push   edx
   1e5d3:	68 d0 50 08 00       	push   0x850d0
   1e5d8:	e8 83 40 00 00       	call   22660 <printk>
   1e5dd:	83 c4 20             	add    esp,0x20
   1e5e0:	31 c0                	xor    eax,eax
   1e5e2:	5b                   	pop    ebx
   1e5e3:	5e                   	pop    esi
   1e5e4:	5f                   	pop    edi
   1e5e5:	c3                   	ret    
   1e5e6:	8d 76 00             	lea    esi,[esi+0x0]
   1e5e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1e5f0:	ec                   	in     al,dx
   1e5f1:	0f b6 c0             	movzx  eax,al
   1e5f4:	50                   	push   eax
   1e5f5:	ff b3 61 02 00 00    	push   DWORD PTR [ebx+0x261]
   1e5fb:	ff b3 65 02 00 00    	push   DWORD PTR [ebx+0x265]
   1e601:	68 84 50 08 00       	push   0x85084
   1e606:	e8 55 40 00 00       	call   22660 <printk>
   1e60b:	8b 93 69 02 00 00    	mov    edx,DWORD PTR [ebx+0x269]
   1e611:	83 c4 10             	add    esp,0x10
   1e614:	83 c2 07             	add    edx,0x7
   1e617:	e9 6d ff ff ff       	jmp    1e589 <ataSelectDrive+0x49>
   1e61c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001e620 <ataInit>:
ataInit():
   1e620:	57                   	push   edi
   1e621:	56                   	push   esi
   1e622:	53                   	push   ebx
   1e623:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   1e627:	bb 04 00 00 00       	mov    ebx,0x4
   1e62c:	0f b7 86 69 02 00 00 	movzx  eax,WORD PTR [esi+0x269]
   1e633:	8d 50 07             	lea    edx,[eax+0x7]
   1e636:	89 d8                	mov    eax,ebx
   1e638:	ee                   	out    dx,al
   1e639:	8b 0d c0 97 12 00    	mov    ecx,DWORD PTR ds:0x1297c0
   1e63f:	ba 67 66 66 66       	mov    edx,0x66666667
   1e644:	83 ec 0c             	sub    esp,0xc
   1e647:	89 c8                	mov    eax,ecx
   1e649:	c1 f9 1f             	sar    ecx,0x1f
   1e64c:	f7 ea                	imul   edx
   1e64e:	c1 fa 02             	sar    edx,0x2
   1e651:	29 ca                	sub    edx,ecx
   1e653:	52                   	push   edx
   1e654:	e8 17 4e 00 00       	call   23470 <waitTicks>
   1e659:	0f b7 86 69 02 00 00 	movzx  eax,WORD PTR [esi+0x269]
   1e660:	8d 90 f6 03 00 00    	lea    edx,[eax+0x3f6]
   1e666:	89 d8                	mov    eax,ebx
   1e668:	ee                   	out    dx,al
   1e669:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [esp],0xa
   1e670:	e8 1b 4e 00 00       	call   23490 <wait>
   1e675:	0f b7 86 69 02 00 00 	movzx  eax,WORD PTR [esi+0x269]
   1e67c:	8d 90 f6 03 00 00    	lea    edx,[eax+0x3f6]
   1e682:	31 c0                	xor    eax,eax
   1e684:	ee                   	out    dx,al
   1e685:	89 34 24             	mov    DWORD PTR [esp],esi
   1e688:	e8 e3 fd ff ff       	call   1e470 <ataControllerIsReady>
   1e68d:	83 c4 10             	add    esp,0x10
   1e690:	84 c0                	test   al,al
   1e692:	75 0d                	jne    1e6a1 <ataInit+0x81>
   1e694:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e69b:	0f 85 cf 01 00 00    	jne    1e870 <ataInit+0x250>
   1e6a1:	0f b7 86 69 02 00 00 	movzx  eax,WORD PTR [esi+0x269]
   1e6a8:	8d 50 01             	lea    edx,[eax+0x1]
   1e6ab:	ec                   	in     al,dx
   1e6ac:	84 c0                	test   al,al
   1e6ae:	0f 85 1c 01 00 00    	jne    1e7d0 <ataInit+0x1b0>
   1e6b4:	c7 05 dc 75 09 00 00 	mov    DWORD PTR ds:0x975dc,0x0
   1e6bb:	00 00 00 
   1e6be:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e6c5:	74 10                	je     1e6d7 <ataInit+0xb7>
   1e6c7:	83 ec 0c             	sub    esp,0xc
   1e6ca:	68 3c 51 08 00       	push   0x8513c
   1e6cf:	e8 8c 3f 00 00       	call   22660 <printk>
   1e6d4:	83 c4 10             	add    esp,0x10
   1e6d7:	83 ec 08             	sub    esp,0x8
   1e6da:	bf 55 00 00 00       	mov    edi,0x55
   1e6df:	6a 00                	push   0x0
   1e6e1:	56                   	push   esi
   1e6e2:	e8 59 fe ff ff       	call   1e540 <ataSelectDrive>
   1e6e7:	8b 8e 69 02 00 00    	mov    ecx,DWORD PTR [esi+0x269]
   1e6ed:	89 f8                	mov    eax,edi
   1e6ef:	8d 51 02             	lea    edx,[ecx+0x2]
   1e6f2:	ee                   	out    dx,al
   1e6f3:	bb aa ff ff ff       	mov    ebx,0xffffffaa
   1e6f8:	8d 51 03             	lea    edx,[ecx+0x3]
   1e6fb:	89 d8                	mov    eax,ebx
   1e6fd:	ee                   	out    dx,al
   1e6fe:	8d 51 04             	lea    edx,[ecx+0x4]
   1e701:	89 f8                	mov    eax,edi
   1e703:	ee                   	out    dx,al
   1e704:	8d 51 05             	lea    edx,[ecx+0x5]
   1e707:	89 d8                	mov    eax,ebx
   1e709:	ee                   	out    dx,al
   1e70a:	b8 ec ff ff ff       	mov    eax,0xffffffec
   1e70f:	8d 51 07             	lea    edx,[ecx+0x7]
   1e712:	ee                   	out    dx,al
   1e713:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1e718:	8d 04 80             	lea    eax,[eax+eax*4]
   1e71b:	01 c0                	add    eax,eax
   1e71d:	89 04 24             	mov    DWORD PTR [esp],eax
   1e720:	e8 6b 4d 00 00       	call   23490 <wait>
   1e725:	8b 8e 69 02 00 00    	mov    ecx,DWORD PTR [esi+0x269]
   1e72b:	8d 51 07             	lea    edx,[ecx+0x7]
   1e72e:	ec                   	in     al,dx
   1e72f:	0f b6 d8             	movzx  ebx,al
   1e732:	83 c4 10             	add    esp,0x10
   1e735:	85 db                	test   ebx,ebx
   1e737:	75 17                	jne    1e750 <ataInit+0x130>
   1e739:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e740:	0f 85 0a 01 00 00    	jne    1e850 <ataInit+0x230>
   1e746:	31 c0                	xor    eax,eax
   1e748:	5b                   	pop    ebx
   1e749:	5e                   	pop    esi
   1e74a:	5f                   	pop    edi
   1e74b:	c3                   	ret    
   1e74c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1e750:	a8 01                	test   al,0x1
   1e752:	0f 85 b8 00 00 00    	jne    1e810 <ataInit+0x1f0>
   1e758:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1e75d:	c1 eb 07             	shr    ebx,0x7
   1e760:	8d 3c 80             	lea    edi,[eax+eax*4]
   1e763:	01 ff                	add    edi,edi
   1e765:	84 db                	test   bl,bl
   1e767:	74 2b                	je     1e794 <ataInit+0x174>
   1e769:	85 ff                	test   edi,edi
   1e76b:	7f 0d                	jg     1e77a <ataInit+0x15a>
   1e76d:	eb 25                	jmp    1e794 <ataInit+0x174>
   1e76f:	90                   	nop
   1e770:	85 ff                	test   edi,edi
   1e772:	7e 20                	jle    1e794 <ataInit+0x174>
   1e774:	8b 8e 69 02 00 00    	mov    ecx,DWORD PTR [esi+0x269]
   1e77a:	8d 51 07             	lea    edx,[ecx+0x7]
   1e77d:	ec                   	in     al,dx
   1e77e:	83 ec 0c             	sub    esp,0xc
   1e781:	89 c3                	mov    ebx,eax
   1e783:	83 ef 01             	sub    edi,0x1
   1e786:	6a 01                	push   0x1
   1e788:	e8 03 4d 00 00       	call   23490 <wait>
   1e78d:	83 c4 10             	add    esp,0x10
   1e790:	84 db                	test   bl,bl
   1e792:	78 dc                	js     1e770 <ataInit+0x150>
   1e794:	83 ec 0c             	sub    esp,0xc
   1e797:	56                   	push   esi
   1e798:	e8 d3 fc ff ff       	call   1e470 <ataControllerIsReady>
   1e79d:	83 c4 10             	add    esp,0x10
   1e7a0:	84 c0                	test   al,al
   1e7a2:	74 a2                	je     1e746 <ataInit+0x126>
   1e7a4:	8b 8e 69 02 00 00    	mov    ecx,DWORD PTR [esi+0x269]
   1e7aa:	8d 59 04             	lea    ebx,[ecx+0x4]
   1e7ad:	89 da                	mov    edx,ebx
   1e7af:	ec                   	in     al,dx
   1e7b0:	3c 55                	cmp    al,0x55
   1e7b2:	0f 84 e8 00 00 00    	je     1e8a0 <ataInit+0x280>
   1e7b8:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e7bf:	0f 85 fb 00 00 00    	jne    1e8c0 <ataInit+0x2a0>
   1e7c5:	5b                   	pop    ebx
   1e7c6:	0f b6 05 e0 75 09 00 	movzx  eax,BYTE PTR ds:0x975e0
   1e7cd:	5e                   	pop    esi
   1e7ce:	5f                   	pop    edi
   1e7cf:	c3                   	ret    
   1e7d0:	ec                   	in     al,dx
   1e7d1:	0f b6 c0             	movzx  eax,al
   1e7d4:	83 f8 04             	cmp    eax,0x4
   1e7d7:	a3 dc 75 09 00       	mov    ds:0x975dc,eax
   1e7dc:	0f 84 dc fe ff ff    	je     1e6be <ataInit+0x9e>
   1e7e2:	8b 96 61 02 00 00    	mov    edx,DWORD PTR [esi+0x261]
   1e7e8:	b9 bb af 04 00       	mov    ecx,0x4afbb
   1e7ed:	85 d2                	test   edx,edx
   1e7ef:	ba dc 3a 06 00       	mov    edx,0x63adc
   1e7f4:	0f 45 d1             	cmovne edx,ecx
   1e7f7:	83 ec 04             	sub    esp,0x4
   1e7fa:	50                   	push   eax
   1e7fb:	52                   	push   edx
   1e7fc:	68 10 51 08 00       	push   0x85110
   1e801:	e8 5a 3e 00 00       	call   22660 <printk>
   1e806:	83 c4 10             	add    esp,0x10
   1e809:	e9 b0 fe ff ff       	jmp    1e6be <ataInit+0x9e>
   1e80e:	66 90                	xchg   ax,ax
   1e810:	8d 51 01             	lea    edx,[ecx+0x1]
   1e813:	ec                   	in     al,dx
   1e814:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1e81b:	0f b6 f8             	movzx  edi,al
   1e81e:	75 68                	jne    1e888 <ataInit+0x268>
   1e820:	83 ff 04             	cmp    edi,0x4
   1e823:	0f 85 1d ff ff ff    	jne    1e746 <ataInit+0x126>
   1e829:	8b 8e 69 02 00 00    	mov    ecx,DWORD PTR [esi+0x269]
   1e82f:	c6 05 e0 75 09 00 01 	mov    BYTE PTR ds:0x975e0,0x1
   1e836:	8d 51 07             	lea    edx,[ecx+0x7]
   1e839:	ec                   	in     al,dx
   1e83a:	0f b6 d8             	movzx  ebx,al
   1e83d:	85 db                	test   ebx,ebx
   1e83f:	0f 85 13 ff ff ff    	jne    1e758 <ataInit+0x138>
   1e845:	e9 ef fe ff ff       	jmp    1e739 <ataInit+0x119>
   1e84a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e850:	83 ec 04             	sub    esp,0x4
   1e853:	6a 00                	push   0x0
   1e855:	ff b6 65 02 00 00    	push   DWORD PTR [esi+0x265]
   1e85b:	68 fe 3a 06 00       	push   0x63afe
   1e860:	e8 fb 3d 00 00       	call   22660 <printk>
   1e865:	83 c4 10             	add    esp,0x10
   1e868:	e9 d9 fe ff ff       	jmp    1e746 <ataInit+0x126>
   1e86d:	8d 76 00             	lea    esi,[esi+0x0]
   1e870:	83 ec 0c             	sub    esp,0xc
   1e873:	68 e4 3a 06 00       	push   0x63ae4
   1e878:	e8 e3 3d 00 00       	call   22660 <printk>
   1e87d:	83 c4 10             	add    esp,0x10
   1e880:	e9 1c fe ff ff       	jmp    1e6a1 <ataInit+0x81>
   1e885:	8d 76 00             	lea    esi,[esi+0x0]
   1e888:	57                   	push   edi
   1e889:	53                   	push   ebx
   1e88a:	ff b6 65 02 00 00    	push   DWORD PTR [esi+0x265]
   1e890:	68 68 51 08 00       	push   0x85168
   1e895:	e8 c6 3d 00 00       	call   22660 <printk>
   1e89a:	83 c4 10             	add    esp,0x10
   1e89d:	eb 81                	jmp    1e820 <ataInit+0x200>
   1e89f:	90                   	nop
   1e8a0:	8d 51 05             	lea    edx,[ecx+0x5]
   1e8a3:	ec                   	in     al,dx
   1e8a4:	3c aa                	cmp    al,0xaa
   1e8a6:	0f 85 0c ff ff ff    	jne    1e7b8 <ataInit+0x198>
   1e8ac:	b8 01 00 00 00       	mov    eax,0x1
   1e8b1:	e9 92 fe ff ff       	jmp    1e748 <ataInit+0x128>
   1e8b6:	8d 76 00             	lea    esi,[esi+0x0]
   1e8b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1e8c0:	8d 51 05             	lea    edx,[ecx+0x5]
   1e8c3:	ec                   	in     al,dx
   1e8c4:	0f b6 c8             	movzx  ecx,al
   1e8c7:	89 da                	mov    edx,ebx
   1e8c9:	ec                   	in     al,dx
   1e8ca:	83 ec 04             	sub    esp,0x4
   1e8cd:	0f b6 c0             	movzx  eax,al
   1e8d0:	51                   	push   ecx
   1e8d1:	50                   	push   eax
   1e8d2:	68 90 51 08 00       	push   0x85190
   1e8d7:	e8 84 3d 00 00       	call   22660 <printk>
   1e8dc:	83 c4 10             	add    esp,0x10
   1e8df:	e9 e1 fe ff ff       	jmp    1e7c5 <ataInit+0x1a5>
   1e8e4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e8ea:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

0001e8f0 <ataGetModelFromIdentify>:
ataGetModelFromIdentify():
   1e8f0:	56                   	push   esi
   1e8f1:	53                   	push   ebx
   1e8f2:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
   1e8f6:	8d 46 36             	lea    eax,[esi+0x36]
   1e8f9:	8d 96 01 02 00 00    	lea    edx,[esi+0x201]
   1e8ff:	8d 5e 5e             	lea    ebx,[esi+0x5e]
   1e902:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1e908:	0f b7 08             	movzx  ecx,WORD PTR [eax]
   1e90b:	83 c0 02             	add    eax,0x2
   1e90e:	83 c2 02             	add    edx,0x2
   1e911:	66 c1 e9 08          	shr    cx,0x8
   1e915:	88 4a fd             	mov    BYTE PTR [edx-0x3],cl
   1e918:	0f b7 48 fe          	movzx  ecx,WORD PTR [eax-0x2]
   1e91c:	88 4a fe             	mov    BYTE PTR [edx-0x2],cl
   1e91f:	39 d8                	cmp    eax,ebx
   1e921:	75 e5                	jne    1e908 <ataGetModelFromIdentify+0x18>
   1e923:	c6 86 4f 02 00 00 00 	mov    BYTE PTR [esi+0x24f],0x0
   1e92a:	5b                   	pop    ebx
   1e92b:	5e                   	pop    esi
   1e92c:	c3                   	ret    
   1e92d:	8d 76 00             	lea    esi,[esi+0x0]

0001e930 <ataIdentify>:
ataIdentify():
   1e930:	56                   	push   esi
   1e931:	53                   	push   ebx
   1e932:	83 ec 04             	sub    esp,0x4
   1e935:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1e939:	80 bb 50 02 00 00 00 	cmp    BYTE PTR [ebx+0x250],0x0
   1e940:	74 52                	je     1e994 <ataIdentify+0x64>
   1e942:	0f b7 83 69 02 00 00 	movzx  eax,WORD PTR [ebx+0x269]
   1e949:	80 3d e0 75 09 00 00 	cmp    BYTE PTR ds:0x975e0,0x0
   1e950:	8d 50 07             	lea    edx,[eax+0x7]
   1e953:	0f 85 09 01 00 00    	jne    1ea62 <ataIdentify+0x132>
   1e959:	b8 ec ff ff ff       	mov    eax,0xffffffec
   1e95e:	ee                   	out    dx,al
   1e95f:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1e964:	83 ec 0c             	sub    esp,0xc
   1e967:	8d b3 00 02 00 00    	lea    esi,[ebx+0x200]
   1e96d:	8d 04 80             	lea    eax,[eax+eax*4]
   1e970:	01 c0                	add    eax,eax
   1e972:	50                   	push   eax
   1e973:	e8 18 4b 00 00       	call   23490 <wait>
   1e978:	0f b7 93 69 02 00 00 	movzx  edx,WORD PTR [ebx+0x269]
   1e97f:	89 d9                	mov    ecx,ebx
   1e981:	83 c4 10             	add    esp,0x10
   1e984:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1e988:	66 ed                	in     ax,dx
   1e98a:	66 89 01             	mov    WORD PTR [ecx],ax
   1e98d:	83 c1 02             	add    ecx,0x2
   1e990:	39 f1                	cmp    ecx,esi
   1e992:	75 f4                	jne    1e988 <ataIdentify+0x58>
   1e994:	8d 43 36             	lea    eax,[ebx+0x36]
   1e997:	8d 93 01 02 00 00    	lea    edx,[ebx+0x201]
   1e99d:	8d 73 5e             	lea    esi,[ebx+0x5e]
   1e9a0:	0f b7 08             	movzx  ecx,WORD PTR [eax]
   1e9a3:	83 c0 02             	add    eax,0x2
   1e9a6:	83 c2 02             	add    edx,0x2
   1e9a9:	66 c1 e9 08          	shr    cx,0x8
   1e9ad:	88 4a fd             	mov    BYTE PTR [edx-0x3],cl
   1e9b0:	0f b7 48 fe          	movzx  ecx,WORD PTR [eax-0x2]
   1e9b4:	88 4a fe             	mov    BYTE PTR [edx-0x2],cl
   1e9b7:	39 f0                	cmp    eax,esi
   1e9b9:	75 e5                	jne    1e9a0 <ataIdentify+0x70>
   1e9bb:	f6 83 d5 00 00 00 10 	test   BYTE PTR [ebx+0xd5],0x10
   1e9c2:	8b 43 78             	mov    eax,DWORD PTR [ebx+0x78]
   1e9c5:	c6 83 4f 02 00 00 00 	mov    BYTE PTR [ebx+0x24f],0x0
   1e9cc:	89 83 56 02 00 00    	mov    DWORD PTR [ebx+0x256],eax
   1e9d2:	b8 00 02 00 00       	mov    eax,0x200
   1e9d7:	74 12                	je     1e9eb <ataIdentify+0xbb>
   1e9d9:	0f b7 43 24          	movzx  eax,WORD PTR [ebx+0x24]
   1e9dd:	c1 e0 10             	shl    eax,0x10
   1e9e0:	89 c2                	mov    edx,eax
   1e9e2:	0f b7 83 ea 00 00 00 	movzx  eax,WORD PTR [ebx+0xea]
   1e9e9:	09 d0                	or     eax,edx
   1e9eb:	89 83 5a 02 00 00    	mov    DWORD PTR [ebx+0x25a],eax
   1e9f1:	0f b7 43 62          	movzx  eax,WORD PTR [ebx+0x62]
   1e9f5:	89 c2                	mov    edx,eax
   1e9f7:	66 c1 e8 09          	shr    ax,0x9
   1e9fb:	88 83 5e 02 00 00    	mov    BYTE PTR [ebx+0x25e],al
   1ea01:	0f b7 83 a6 00 00 00 	movzx  eax,WORD PTR [ebx+0xa6]
   1ea08:	66 c1 ea 08          	shr    dx,0x8
   1ea0c:	88 93 60 02 00 00    	mov    BYTE PTR [ebx+0x260],dl
   1ea12:	80 a3 5e 02 00 00 01 	and    BYTE PTR [ebx+0x25e],0x1
   1ea19:	80 a3 60 02 00 00 01 	and    BYTE PTR [ebx+0x260],0x1
   1ea20:	66 c1 e8 0a          	shr    ax,0xa
   1ea24:	88 83 5f 02 00 00    	mov    BYTE PTR [ebx+0x25f],al
   1ea2a:	80 a3 5f 02 00 00 01 	and    BYTE PTR [ebx+0x25f],0x1
   1ea31:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1ea38:	74 1d                	je     1ea57 <ataIdentify+0x127>
   1ea3a:	8d 83 00 02 00 00    	lea    eax,[ebx+0x200]
   1ea40:	83 ec 04             	sub    esp,0x4
   1ea43:	50                   	push   eax
   1ea44:	ff b3 65 02 00 00    	push   DWORD PTR [ebx+0x265]
   1ea4a:	68 1b 3b 06 00       	push   0x63b1b
   1ea4f:	e8 0c 3c 00 00       	call   22660 <printk>
   1ea54:	83 c4 10             	add    esp,0x10
   1ea57:	83 c4 04             	add    esp,0x4
   1ea5a:	b8 01 00 00 00       	mov    eax,0x1
   1ea5f:	5b                   	pop    ebx
   1ea60:	5e                   	pop    esi
   1ea61:	c3                   	ret    
   1ea62:	b8 a1 ff ff ff       	mov    eax,0xffffffa1
   1ea67:	ee                   	out    dx,al
   1ea68:	e9 f2 fe ff ff       	jmp    1e95f <ataIdentify+0x2f>
   1ea6d:	8d 76 00             	lea    esi,[esi+0x0]

0001ea70 <ataScanForHarddrives>:
ataScanForHarddrives():
   1ea70:	53                   	push   ebx
   1ea71:	83 ec 14             	sub    esp,0x14
   1ea74:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1ea7a:	c7 83 61 02 00 00 00 	mov    DWORD PTR [ebx+0x261],0x0
   1ea81:	00 00 00 
   1ea84:	c7 83 65 02 00 00 00 	mov    DWORD PTR [ebx+0x265],0x0
   1ea8b:	00 00 00 
   1ea8e:	c7 83 69 02 00 00 f0 	mov    DWORD PTR [ebx+0x269],0x1f0
   1ea95:	01 00 00 
   1ea98:	c6 83 6d 02 00 00 14 	mov    BYTE PTR [ebx+0x26d],0x14
   1ea9f:	c6 83 6e 02 00 00 a0 	mov    BYTE PTR [ebx+0x26e],0xa0
   1eaa6:	c6 83 50 02 00 00 01 	mov    BYTE PTR [ebx+0x250],0x1
   1eaad:	53                   	push   ebx
   1eaae:	e8 6d fb ff ff       	call   1e620 <ataInit>
   1eab3:	88 83 51 02 00 00    	mov    BYTE PTR [ebx+0x251],al
   1eab9:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1eabf:	83 c4 10             	add    esp,0x10
   1eac2:	80 bb 51 02 00 00 00 	cmp    BYTE PTR [ebx+0x251],0x0
   1eac9:	0f 85 f1 01 00 00    	jne    1ecc0 <ataScanForHarddrives+0x250>
   1eacf:	8d 83 73 02 00 00    	lea    eax,[ebx+0x273]
   1ead5:	83 ec 0c             	sub    esp,0xc
   1ead8:	c7 83 d4 04 00 00 00 	mov    DWORD PTR [ebx+0x4d4],0x0
   1eadf:	00 00 00 
   1eae2:	c7 83 d8 04 00 00 01 	mov    DWORD PTR [ebx+0x4d8],0x1
   1eae9:	00 00 00 
   1eaec:	c7 83 dc 04 00 00 f0 	mov    DWORD PTR [ebx+0x4dc],0x1f0
   1eaf3:	01 00 00 
   1eaf6:	c6 83 e0 04 00 00 14 	mov    BYTE PTR [ebx+0x4e0],0x14
   1eafd:	c6 83 e1 04 00 00 b0 	mov    BYTE PTR [ebx+0x4e1],0xb0
   1eb04:	c6 83 c3 04 00 00 01 	mov    BYTE PTR [ebx+0x4c3],0x1
   1eb0b:	50                   	push   eax
   1eb0c:	c6 05 e0 75 09 00 00 	mov    BYTE PTR ds:0x975e0,0x0
   1eb13:	e8 08 fb ff ff       	call   1e620 <ataInit>
   1eb18:	88 83 c4 04 00 00    	mov    BYTE PTR [ebx+0x4c4],al
   1eb1e:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1eb24:	83 c4 10             	add    esp,0x10
   1eb27:	80 bb c4 04 00 00 00 	cmp    BYTE PTR [ebx+0x4c4],0x0
   1eb2e:	0f 85 54 01 00 00    	jne    1ec88 <ataScanForHarddrives+0x218>
   1eb34:	8d 83 e6 04 00 00    	lea    eax,[ebx+0x4e6]
   1eb3a:	83 ec 0c             	sub    esp,0xc
   1eb3d:	c7 83 47 07 00 00 01 	mov    DWORD PTR [ebx+0x747],0x1
   1eb44:	00 00 00 
   1eb47:	c7 83 4b 07 00 00 02 	mov    DWORD PTR [ebx+0x74b],0x2
   1eb4e:	00 00 00 
   1eb51:	c7 83 4f 07 00 00 70 	mov    DWORD PTR [ebx+0x74f],0x170
   1eb58:	01 00 00 
   1eb5b:	c6 83 53 07 00 00 15 	mov    BYTE PTR [ebx+0x753],0x15
   1eb62:	c6 83 54 07 00 00 a0 	mov    BYTE PTR [ebx+0x754],0xa0
   1eb69:	c6 83 36 07 00 00 00 	mov    BYTE PTR [ebx+0x736],0x0
   1eb70:	50                   	push   eax
   1eb71:	e8 aa fa ff ff       	call   1e620 <ataInit>
   1eb76:	88 83 37 07 00 00    	mov    BYTE PTR [ebx+0x737],al
   1eb7c:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1eb82:	83 c4 10             	add    esp,0x10
   1eb85:	80 bb 37 07 00 00 00 	cmp    BYTE PTR [ebx+0x737],0x0
   1eb8c:	0f 85 be 00 00 00    	jne    1ec50 <ataScanForHarddrives+0x1e0>
   1eb92:	8d 83 59 07 00 00    	lea    eax,[ebx+0x759]
   1eb98:	83 ec 0c             	sub    esp,0xc
   1eb9b:	c7 83 ba 09 00 00 01 	mov    DWORD PTR [ebx+0x9ba],0x1
   1eba2:	00 00 00 
   1eba5:	c7 83 be 09 00 00 03 	mov    DWORD PTR [ebx+0x9be],0x3
   1ebac:	00 00 00 
   1ebaf:	c7 83 c2 09 00 00 70 	mov    DWORD PTR [ebx+0x9c2],0x170
   1ebb6:	01 00 00 
   1ebb9:	c6 83 c6 09 00 00 15 	mov    BYTE PTR [ebx+0x9c6],0x15
   1ebc0:	c6 83 c7 09 00 00 b0 	mov    BYTE PTR [ebx+0x9c7],0xb0
   1ebc7:	c6 83 a9 09 00 00 01 	mov    BYTE PTR [ebx+0x9a9],0x1
   1ebce:	50                   	push   eax
   1ebcf:	e8 4c fa ff ff       	call   1e620 <ataInit>
   1ebd4:	88 83 aa 09 00 00    	mov    BYTE PTR [ebx+0x9aa],al
   1ebda:	a1 00 98 12 00       	mov    eax,ds:0x129800
   1ebdf:	83 c4 10             	add    esp,0x10
   1ebe2:	80 b8 aa 09 00 00 00 	cmp    BYTE PTR [eax+0x9aa],0x0
   1ebe9:	75 35                	jne    1ec20 <ataScanForHarddrives+0x1b0>
   1ebeb:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1ebf2:	74 1d                	je     1ec11 <ataScanForHarddrives+0x1a1>
   1ebf4:	8d 90 73 04 00 00    	lea    edx,[eax+0x473]
   1ebfa:	83 ec 04             	sub    esp,0x4
   1ebfd:	05 00 02 00 00       	add    eax,0x200
   1ec02:	52                   	push   edx
   1ec03:	50                   	push   eax
   1ec04:	68 2f 3b 06 00       	push   0x63b2f
   1ec09:	e8 52 3a 00 00       	call   22660 <printk>
   1ec0e:	83 c4 10             	add    esp,0x10
   1ec11:	83 c4 08             	add    esp,0x8
   1ec14:	31 c0                	xor    eax,eax
   1ec16:	5b                   	pop    ebx
   1ec17:	c3                   	ret    
   1ec18:	90                   	nop
   1ec19:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1ec20:	83 ec 0c             	sub    esp,0xc
   1ec23:	05 59 07 00 00       	add    eax,0x759
   1ec28:	50                   	push   eax
   1ec29:	e8 02 fd ff ff       	call   1e930 <ataIdentify>
   1ec2e:	83 c4 10             	add    esp,0x10
   1ec31:	80 3d e0 75 09 00 00 	cmp    BYTE PTR ds:0x975e0,0x0
   1ec38:	a1 00 98 12 00       	mov    eax,ds:0x129800
   1ec3d:	0f 84 dd 00 00 00    	je     1ed20 <ataScanForHarddrives+0x2b0>
   1ec43:	c7 80 ab 09 00 00 01 	mov    DWORD PTR [eax+0x9ab],0x1
   1ec4a:	00 00 00 
   1ec4d:	eb 9c                	jmp    1ebeb <ataScanForHarddrives+0x17b>
   1ec4f:	90                   	nop
   1ec50:	83 ec 0c             	sub    esp,0xc
   1ec53:	81 c3 e6 04 00 00    	add    ebx,0x4e6
   1ec59:	53                   	push   ebx
   1ec5a:	e8 d1 fc ff ff       	call   1e930 <ataIdentify>
   1ec5f:	83 c4 10             	add    esp,0x10
   1ec62:	80 3d e0 75 09 00 00 	cmp    BYTE PTR ds:0x975e0,0x0
   1ec69:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1ec6f:	0f 84 9b 00 00 00    	je     1ed10 <ataScanForHarddrives+0x2a0>
   1ec75:	c7 83 38 07 00 00 01 	mov    DWORD PTR [ebx+0x738],0x1
   1ec7c:	00 00 00 
   1ec7f:	e9 0e ff ff ff       	jmp    1eb92 <ataScanForHarddrives+0x122>
   1ec84:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1ec88:	83 ec 0c             	sub    esp,0xc
   1ec8b:	81 c3 73 02 00 00    	add    ebx,0x273
   1ec91:	53                   	push   ebx
   1ec92:	e8 99 fc ff ff       	call   1e930 <ataIdentify>
   1ec97:	83 c4 10             	add    esp,0x10
   1ec9a:	80 3d e0 75 09 00 00 	cmp    BYTE PTR ds:0x975e0,0x0
   1eca1:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1eca7:	74 57                	je     1ed00 <ataScanForHarddrives+0x290>
   1eca9:	c7 83 c5 04 00 00 01 	mov    DWORD PTR [ebx+0x4c5],0x1
   1ecb0:	00 00 00 
   1ecb3:	e9 7c fe ff ff       	jmp    1eb34 <ataScanForHarddrives+0xc4>
   1ecb8:	90                   	nop
   1ecb9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1ecc0:	83 ec 0c             	sub    esp,0xc
   1ecc3:	53                   	push   ebx
   1ecc4:	e8 67 fc ff ff       	call   1e930 <ataIdentify>
   1ecc9:	83 c4 10             	add    esp,0x10
   1eccc:	80 3d e0 75 09 00 00 	cmp    BYTE PTR ds:0x975e0,0x0
   1ecd3:	8b 1d 00 98 12 00    	mov    ebx,DWORD PTR ds:0x129800
   1ecd9:	74 15                	je     1ecf0 <ataScanForHarddrives+0x280>
   1ecdb:	c7 83 52 02 00 00 01 	mov    DWORD PTR [ebx+0x252],0x1
   1ece2:	00 00 00 
   1ece5:	e9 e5 fd ff ff       	jmp    1eacf <ataScanForHarddrives+0x5f>
   1ecea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1ecf0:	c7 83 52 02 00 00 00 	mov    DWORD PTR [ebx+0x252],0x0
   1ecf7:	00 00 00 
   1ecfa:	e9 d0 fd ff ff       	jmp    1eacf <ataScanForHarddrives+0x5f>
   1ecff:	90                   	nop
   1ed00:	c7 83 c5 04 00 00 00 	mov    DWORD PTR [ebx+0x4c5],0x0
   1ed07:	00 00 00 
   1ed0a:	e9 25 fe ff ff       	jmp    1eb34 <ataScanForHarddrives+0xc4>
   1ed0f:	90                   	nop
   1ed10:	c7 83 38 07 00 00 00 	mov    DWORD PTR [ebx+0x738],0x0
   1ed17:	00 00 00 
   1ed1a:	e9 73 fe ff ff       	jmp    1eb92 <ataScanForHarddrives+0x122>
   1ed1f:	90                   	nop
   1ed20:	c7 80 ab 09 00 00 00 	mov    DWORD PTR [eax+0x9ab],0x0
   1ed27:	00 00 00 
   1ed2a:	e9 bc fe ff ff       	jmp    1ebeb <ataScanForHarddrives+0x17b>
   1ed2f:	90                   	nop

0001ed30 <ataBlockingRead28>:
ataBlockingRead28():
   1ed30:	55                   	push   ebp
   1ed31:	57                   	push   edi
   1ed32:	56                   	push   esi
   1ed33:	53                   	push   ebx
   1ed34:	83 ec 1c             	sub    esp,0x1c
   1ed37:	8b 2d d8 75 09 00    	mov    ebp,DWORD PTR ds:0x975d8
   1ed3d:	03 6c 24 30          	add    ebp,DWORD PTR [esp+0x30]
   1ed41:	f6 05 78 98 12 00 08 	test   BYTE PTR ds:0x129878,0x8
   1ed48:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   1ed4c:	0f 85 ad 01 00 00    	jne    1eeff <ataBlockingRead28+0x1cf>
   1ed52:	83 ec 0c             	sub    esp,0xc
   1ed55:	ff 35 a0 5f 09 00    	push   DWORD PTR ds:0x95fa0
   1ed5b:	e8 40 f6 ff ff       	call   1e3a0 <ataWaitForIdle>
   1ed60:	0f b6 c0             	movzx  eax,al
   1ed63:	83 c4 10             	add    esp,0x10
   1ed66:	85 c0                	test   eax,eax
   1ed68:	0f 85 ca 01 00 00    	jne    1ef38 <ataBlockingRead28+0x208>
   1ed6e:	8b 3d a0 5f 09 00    	mov    edi,DWORD PTR ds:0x95fa0
   1ed74:	8b 8f 69 02 00 00    	mov    ecx,DWORD PTR [edi+0x269]
   1ed7a:	8d 51 06             	lea    edx,[ecx+0x6]
   1ed7d:	ec                   	in     al,dx
   1ed7e:	89 eb                	mov    ebx,ebp
   1ed80:	c1 eb 18             	shr    ebx,0x18
   1ed83:	83 e3 0f             	and    ebx,0xf
   1ed86:	83 cb 40             	or     ebx,0x40
   1ed89:	09 d8                	or     eax,ebx
   1ed8b:	ee                   	out    dx,al
   1ed8c:	8d 51 02             	lea    edx,[ecx+0x2]
   1ed8f:	0f b6 44 24 38       	movzx  eax,BYTE PTR [esp+0x38]
   1ed94:	ee                   	out    dx,al
   1ed95:	8d 51 03             	lea    edx,[ecx+0x3]
   1ed98:	89 e8                	mov    eax,ebp
   1ed9a:	ee                   	out    dx,al
   1ed9b:	89 e8                	mov    eax,ebp
   1ed9d:	8d 51 04             	lea    edx,[ecx+0x4]
   1eda0:	c1 e8 08             	shr    eax,0x8
   1eda3:	ee                   	out    dx,al
   1eda4:	89 e8                	mov    eax,ebp
   1eda6:	8d 51 05             	lea    edx,[ecx+0x5]
   1eda9:	c1 e8 10             	shr    eax,0x10
   1edac:	ee                   	out    dx,al
   1edad:	b8 20 00 00 00       	mov    eax,0x20
   1edb2:	8d 51 07             	lea    edx,[ecx+0x7]
   1edb5:	ee                   	out    dx,al
   1edb6:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1edbb:	83 ec 04             	sub    esp,0x4
   1edbe:	8d 04 80             	lea    eax,[eax+eax*4]
   1edc1:	01 c0                	add    eax,eax
   1edc3:	50                   	push   eax
   1edc4:	6a 01                	push   0x1
   1edc6:	57                   	push   edi
   1edc7:	e8 54 f5 ff ff       	call   1e320 <ataWaitForDRQ>
   1edcc:	0f b6 c0             	movzx  eax,al
   1edcf:	83 c4 10             	add    esp,0x10
   1edd2:	85 c0                	test   eax,eax
   1edd4:	0f 85 42 01 00 00    	jne    1ef1c <ataBlockingRead28+0x1ec>
   1edda:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1edde:	85 c0                	test   eax,eax
   1ede0:	0f 84 0a 01 00 00    	je     1eef0 <ataBlockingRead28+0x1c0>
   1ede6:	8b 4c 24 38          	mov    ecx,DWORD PTR [esp+0x38]
   1edea:	a1 78 98 12 00       	mov    eax,ds:0x129878
   1edef:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1edf3:	90                   	nop
   1edf4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1edf8:	8b 15 a0 5f 09 00    	mov    edx,DWORD PTR ds:0x95fa0
   1edfe:	89 f7                	mov    edi,esi
   1ee00:	b9 00 01 00 00       	mov    ecx,0x100
   1ee05:	8b 92 69 02 00 00    	mov    edx,DWORD PTR [edx+0x269]
   1ee0b:	fc                   	cld    
   1ee0c:	f3 66 6d             	rep ins WORD PTR es:[edi],dx
   1ee0f:	a8 08                	test   al,0x8
   1ee11:	0f 85 91 00 00 00    	jne    1eea8 <ataBlockingRead28+0x178>
   1ee17:	83 6c 24 0c 01       	sub    DWORD PTR [esp+0xc],0x1
   1ee1c:	0f 84 ce 00 00 00    	je     1eef0 <ataBlockingRead28+0x1c0>
   1ee22:	83 ec 0c             	sub    esp,0xc
   1ee25:	81 c6 00 02 00 00    	add    esi,0x200
   1ee2b:	83 c5 01             	add    ebp,0x1
   1ee2e:	6a 32                	push   0x32
   1ee30:	e8 5b 46 00 00       	call   23490 <wait>
   1ee35:	a1 c4 97 12 00       	mov    eax,ds:0x1297c4
   1ee3a:	83 c4 0c             	add    esp,0xc
   1ee3d:	8d 04 80             	lea    eax,[eax+eax*4]
   1ee40:	01 c0                	add    eax,eax
   1ee42:	50                   	push   eax
   1ee43:	6a 01                	push   0x1
   1ee45:	ff 35 a0 5f 09 00    	push   DWORD PTR ds:0x95fa0
   1ee4b:	e8 d0 f4 ff ff       	call   1e320 <ataWaitForDRQ>
   1ee50:	0f b6 c0             	movzx  eax,al
   1ee53:	83 c4 10             	add    esp,0x10
   1ee56:	85 c0                	test   eax,eax
   1ee58:	75 2e                	jne    1ee88 <ataBlockingRead28+0x158>
   1ee5a:	a1 78 98 12 00       	mov    eax,ds:0x129878
   1ee5f:	a8 08                	test   al,0x8
   1ee61:	74 95                	je     1edf8 <ataBlockingRead28+0xc8>
   1ee63:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   1ee67:	56                   	push   esi
   1ee68:	55                   	push   ebp
   1ee69:	68 10 53 08 00       	push   0x85310
   1ee6e:	e8 ed 37 00 00       	call   22660 <printk>
   1ee73:	e8 78 29 ff ff       	call   117f0 <waitForKeyboardKey>
   1ee78:	a1 78 98 12 00       	mov    eax,ds:0x129878
   1ee7d:	83 c4 10             	add    esp,0x10
   1ee80:	e9 73 ff ff ff       	jmp    1edf8 <ataBlockingRead28+0xc8>
   1ee85:	8d 76 00             	lea    esi,[esi+0x0]
   1ee88:	83 ec 04             	sub    esp,0x4
   1ee8b:	ff 35 dc 75 09 00    	push   DWORD PTR ds:0x975dc
   1ee91:	50                   	push   eax
   1ee92:	68 b4 52 08 00       	push   0x852b4
   1ee97:	e8 94 32 00 00       	call   22130 <panic>
   1ee9c:	83 c4 10             	add    esp,0x10
   1ee9f:	eb b9                	jmp    1ee5a <ataBlockingRead28+0x12a>
   1eea1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1eea8:	83 ec 0c             	sub    esp,0xc
   1eeab:	8d 7e 14             	lea    edi,[esi+0x14]
   1eeae:	89 f3                	mov    ebx,esi
   1eeb0:	68 94 52 08 00       	push   0x85294
   1eeb5:	e8 a6 37 00 00       	call   22660 <printk>
   1eeba:	83 c4 10             	add    esp,0x10
   1eebd:	8d 76 00             	lea    esi,[esi+0x0]
   1eec0:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   1eec3:	83 ec 08             	sub    esp,0x8
   1eec6:	83 c3 01             	add    ebx,0x1
   1eec9:	50                   	push   eax
   1eeca:	68 8b 01 04 00       	push   0x4018b
   1eecf:	e8 8c 37 00 00       	call   22660 <printk>
   1eed4:	83 c4 10             	add    esp,0x10
   1eed7:	39 df                	cmp    edi,ebx
   1eed9:	75 e5                	jne    1eec0 <ataBlockingRead28+0x190>
   1eedb:	83 ec 0c             	sub    esp,0xc
   1eede:	68 d8 39 06 00       	push   0x639d8
   1eee3:	e8 78 37 00 00       	call   22660 <printk>
   1eee8:	83 c4 10             	add    esp,0x10
   1eeeb:	e9 27 ff ff ff       	jmp    1ee17 <ataBlockingRead28+0xe7>
   1eef0:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
   1eef4:	83 c4 1c             	add    esp,0x1c
   1eef7:	5b                   	pop    ebx
   1eef8:	5e                   	pop    esi
   1eef9:	c1 e0 09             	shl    eax,0x9
   1eefc:	5f                   	pop    edi
   1eefd:	5d                   	pop    ebp
   1eefe:	c3                   	ret    
   1eeff:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
   1ef03:	56                   	push   esi
   1ef04:	55                   	push   ebp
   1ef05:	68 c4 51 08 00       	push   0x851c4
   1ef0a:	e8 51 37 00 00       	call   22660 <printk>
   1ef0f:	e8 dc 28 ff ff       	call   117f0 <waitForKeyboardKey>
   1ef14:	83 c4 10             	add    esp,0x10
   1ef17:	e9 36 fe ff ff       	jmp    1ed52 <ataBlockingRead28+0x22>
   1ef1c:	83 ec 04             	sub    esp,0x4
   1ef1f:	ff 35 dc 75 09 00    	push   DWORD PTR ds:0x975dc
   1ef25:	50                   	push   eax
   1ef26:	68 44 52 08 00       	push   0x85244
   1ef2b:	e8 00 32 00 00       	call   22130 <panic>
   1ef30:	83 c4 10             	add    esp,0x10
   1ef33:	e9 a2 fe ff ff       	jmp    1edda <ataBlockingRead28+0xaa>
   1ef38:	83 ec 08             	sub    esp,0x8
   1ef3b:	50                   	push   eax
   1ef3c:	68 fc 51 08 00       	push   0x851fc
   1ef41:	e8 ea 31 00 00       	call   22130 <panic>
   1ef46:	83 c4 10             	add    esp,0x10
   1ef49:	e9 20 fe ff ff       	jmp    1ed6e <ataBlockingRead28+0x3e>
   1ef4e:	66 90                	xchg   ax,ax

0001ef50 <ataReadDisk>:
ataReadDisk():
   1ef50:	53                   	push   ebx
   1ef51:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   1ef55:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1ef59:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   1ef5d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1ef61:	85 c0                	test   eax,eax
   1ef63:	89 15 a0 5f 09 00    	mov    DWORD PTR ds:0x95fa0,edx
   1ef69:	74 15                	je     1ef80 <ataReadDisk+0x30>
   1ef6b:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1ef6f:	89 5c 24 0c          	mov    DWORD PTR [esp+0xc],ebx
   1ef73:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
   1ef77:	5b                   	pop    ebx
   1ef78:	e9 b3 fd ff ff       	jmp    1ed30 <ataBlockingRead28>
   1ef7d:	8d 76 00             	lea    esi,[esi+0x0]
   1ef80:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1ef85:	5b                   	pop    ebx
   1ef86:	c3                   	ret    
   1ef87:	89 f6                	mov    esi,esi
   1ef89:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001ef90 <ataBlockingWrite28>:
ataBlockingWrite28():
   1ef90:	f3 c3                	repz ret 
   1ef92:	66 90                	xchg   ax,ax
   1ef94:	66 90                	xchg   ax,ax
   1ef96:	66 90                	xchg   ax,ax
   1ef98:	66 90                	xchg   ax,ax
   1ef9a:	66 90                	xchg   ax,ax
   1ef9c:	66 90                	xchg   ax,ax
   1ef9e:	66 90                	xchg   ax,ax

0001efa0 <printregs>:
printregs():
   1efa0:	55                   	push   ebp
   1efa1:	57                   	push   edi
   1efa2:	31 c9                	xor    ecx,ecx
   1efa4:	56                   	push   esi
   1efa5:	53                   	push   ebx
   1efa6:	83 ec 2c             	sub    esp,0x2c
   1efa9:	8d 7c 24 0f          	lea    edi,[esp+0xf]
   1efad:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
   1efb1:	8b 5c 24 44          	mov    ebx,DWORD PTR [esp+0x44]
   1efb5:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
   1efba:	89 f8                	mov    eax,edi
   1efbc:	89 f5                	mov    ebp,esi
   1efbe:	83 c0 01             	add    eax,0x1
   1efc1:	d3 fd                	sar    ebp,cl
   1efc3:	89 ea                	mov    edx,ebp
   1efc5:	89 dd                	mov    ebp,ebx
   1efc7:	d3 fd                	sar    ebp,cl
   1efc9:	88 50 ff             	mov    BYTE PTR [eax-0x1],dl
   1efcc:	89 ea                	mov    edx,ebp
   1efce:	8b 6c 24 48          	mov    ebp,DWORD PTR [esp+0x48]
   1efd2:	88 50 03             	mov    BYTE PTR [eax+0x3],dl
   1efd5:	d3 fd                	sar    ebp,cl
   1efd7:	89 ea                	mov    edx,ebp
   1efd9:	8b 6c 24 4c          	mov    ebp,DWORD PTR [esp+0x4c]
   1efdd:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
   1efe0:	d3 fd                	sar    ebp,cl
   1efe2:	83 c1 08             	add    ecx,0x8
   1efe5:	89 ea                	mov    edx,ebp
   1efe7:	88 50 0b             	mov    BYTE PTR [eax+0xb],dl
   1efea:	83 f9 20             	cmp    ecx,0x20
   1efed:	75 cd                	jne    1efbc <printregs+0x1c>
   1efef:	57                   	push   edi
   1eff0:	68 b2 96 12 00       	push   0x1296b2
   1eff5:	68 49 3b 06 00       	push   0x63b49
   1effa:	68 b2 96 12 00       	push   0x1296b2
   1efff:	e8 bc 36 00 00       	call   226c0 <sprintf>
   1f004:	83 c4 3c             	add    esp,0x3c
   1f007:	5b                   	pop    ebx
   1f008:	5e                   	pop    esi
   1f009:	5f                   	pop    edi
   1f00a:	5d                   	pop    ebp
   1f00b:	c3                   	ret    
   1f00c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

0001f010 <do_intel>:
do_intel():
   1f010:	55                   	push   ebp
   1f011:	57                   	push   edi
   1f012:	56                   	push   esi
   1f013:	53                   	push   ebx
   1f014:	83 ec 24             	sub    esp,0x24
   1f017:	68 7c 34 04 00       	push   0x4347c
   1f01c:	68 b8 95 12 00       	push   0x1295b8
   1f021:	e8 9a 36 00 00       	call   226c0 <sprintf>
   1f026:	9c                   	pushf  
   1f027:	9c                   	pushf  
   1f028:	5a                   	pop    edx
   1f029:	89 d0                	mov    eax,edx
   1f02b:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f031:	52                   	push   edx
   1f032:	9d                   	popf   
   1f033:	9c                   	pushf  
   1f034:	5a                   	pop    edx
   1f035:	9d                   	popf   
   1f036:	31 d0                	xor    eax,edx
   1f038:	83 c4 10             	add    esp,0x10
   1f03b:	a9 00 00 20 00       	test   eax,0x200000
   1f040:	0f 84 9a 00 00 00    	je     1f0e0 <do_intel+0xd0>
   1f046:	31 c0                	xor    eax,eax
   1f048:	0f a2                	cpuid  
   1f04a:	85 c0                	test   eax,eax
   1f04c:	0f 84 8e 00 00 00    	je     1f0e0 <do_intel+0xd0>
   1f052:	b8 01 00 00 00       	mov    eax,0x1
   1f057:	0f a2                	cpuid  
   1f059:	89 c6                	mov    esi,eax
   1f05b:	c1 e8 0c             	shr    eax,0xc
   1f05e:	89 df                	mov    edi,ebx
   1f060:	89 f2                	mov    edx,esi
   1f062:	83 e0 03             	and    eax,0x3
   1f065:	89 f5                	mov    ebp,esi
   1f067:	c1 ea 04             	shr    edx,0x4
   1f06a:	a3 ac 95 12 00       	mov    ds:0x1295ac,eax
   1f06f:	83 e2 0f             	and    edx,0xf
   1f072:	89 15 a4 95 12 00    	mov    DWORD PTR ds:0x1295a4,edx
   1f078:	89 f2                	mov    edx,esi
   1f07a:	c1 ea 08             	shr    edx,0x8
   1f07d:	83 e2 0f             	and    edx,0xf
   1f080:	89 15 a0 95 12 00    	mov    DWORD PTR ds:0x1295a0,edx
   1f086:	0f b6 d3             	movzx  edx,bl
   1f089:	89 15 b0 95 12 00    	mov    DWORD PTR ds:0x1295b0,edx
   1f08f:	89 f2                	mov    edx,esi
   1f091:	83 e2 0f             	and    edx,0xf
   1f094:	83 f8 02             	cmp    eax,0x2
   1f097:	89 15 a8 95 12 00    	mov    DWORD PTR ds:0x1295a8,edx
   1f09d:	0f 84 ad 01 00 00    	je     1f250 <do_intel+0x240>
   1f0a3:	83 f8 03             	cmp    eax,0x3
   1f0a6:	0f 84 1c 02 00 00    	je     1f2c8 <do_intel+0x2b8>
   1f0ac:	83 f8 01             	cmp    eax,0x1
   1f0af:	75 67                	jne    1f118 <do_intel+0x108>
   1f0b1:	83 ec 08             	sub    esp,0x8
   1f0b4:	68 5b 3b 06 00       	push   0x63b5b
   1f0b9:	68 4e 96 12 00       	push   0x12964e
   1f0be:	e8 fd 35 00 00       	call   226c0 <sprintf>
   1f0c3:	83 c4 10             	add    esp,0x10
   1f0c6:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f0cb:	8d 50 fd             	lea    edx,[eax-0x3]
   1f0ce:	83 fa 0c             	cmp    edx,0xc
   1f0d1:	77 7d                	ja     1f150 <do_intel+0x140>
   1f0d3:	ff 24 95 7c fe 03 00 	jmp    DWORD PTR [edx*4+0x3fe7c]
   1f0da:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f0e0:	c7 05 a4 95 12 00 00 	mov    DWORD PTR ds:0x1295a4,0x0
   1f0e7:	00 00 00 
   1f0ea:	c7 05 a0 95 12 00 00 	mov    DWORD PTR ds:0x1295a0,0x0
   1f0f1:	00 00 00 
   1f0f4:	31 ff                	xor    edi,edi
   1f0f6:	c7 05 ac 95 12 00 00 	mov    DWORD PTR ds:0x1295ac,0x0
   1f0fd:	00 00 00 
   1f100:	c7 05 b0 95 12 00 00 	mov    DWORD PTR ds:0x1295b0,0x0
   1f107:	00 00 00 
   1f10a:	31 ed                	xor    ebp,ebp
   1f10c:	c7 05 a8 95 12 00 00 	mov    DWORD PTR ds:0x1295a8,0x0
   1f113:	00 00 00 
   1f116:	31 f6                	xor    esi,esi
   1f118:	83 ec 08             	sub    esp,0x8
   1f11b:	68 4e 3b 06 00       	push   0x63b4e
   1f120:	68 4e 96 12 00       	push   0x12964e
   1f125:	e8 96 35 00 00       	call   226c0 <sprintf>
   1f12a:	83 c4 10             	add    esp,0x10
   1f12d:	eb 97                	jmp    1f0c6 <do_intel+0xb6>
   1f12f:	90                   	nop
   1f130:	83 ec 08             	sub    esp,0x8
   1f133:	68 f5 0b 04 00       	push   0x40bf5
   1f138:	68 80 96 12 00       	push   0x129680
   1f13d:	e8 7e 35 00 00       	call   226c0 <sprintf>
   1f142:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f147:	83 c4 10             	add    esp,0x10
   1f14a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f150:	83 f8 0f             	cmp    eax,0xf
   1f153:	0f 84 37 01 00 00    	je     1f290 <do_intel+0x280>
   1f159:	83 f8 05             	cmp    eax,0x5
   1f15c:	0f 84 a6 00 00 00    	je     1f208 <do_intel+0x1f8>
   1f162:	83 f8 06             	cmp    eax,0x6
   1f165:	0f 84 3d 01 00 00    	je     1f2a8 <do_intel+0x298>
   1f16b:	83 f8 04             	cmp    eax,0x4
   1f16e:	0f 84 fc 00 00 00    	je     1f270 <do_intel+0x260>
   1f174:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1f178:	9c                   	pushf  
   1f179:	9c                   	pushf  
   1f17a:	5a                   	pop    edx
   1f17b:	89 d0                	mov    eax,edx
   1f17d:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f183:	52                   	push   edx
   1f184:	9d                   	popf   
   1f185:	9c                   	pushf  
   1f186:	5a                   	pop    edx
   1f187:	9d                   	popf   
   1f188:	31 d0                	xor    eax,edx
   1f18a:	a9 00 00 20 00       	test   eax,0x200000
   1f18f:	74 20                	je     1f1b1 <do_intel+0x1a1>
   1f191:	b8 00 00 00 80       	mov    eax,0x80000000
   1f196:	0f a2                	cpuid  
   1f198:	3d 00 00 00 80       	cmp    eax,0x80000000
   1f19d:	72 12                	jb     1f1b1 <do_intel+0x1a1>
   1f19f:	b8 00 00 00 80       	mov    eax,0x80000000
   1f1a4:	0f a2                	cpuid  
   1f1a6:	3d 03 00 00 80       	cmp    eax,0x80000003
   1f1ab:	0f 87 0f 02 00 00    	ja     1f3c0 <do_intel+0x3b0>
   1f1b1:	a1 b0 95 12 00       	mov    eax,ds:0x1295b0
   1f1b6:	85 c0                	test   eax,eax
   1f1b8:	7e 3d                	jle    1f1f7 <do_intel+0x1e7>
   1f1ba:	83 f8 17             	cmp    eax,0x17
   1f1bd:	0f 8f ed 02 00 00    	jg     1f4b0 <do_intel+0x4a0>
   1f1c3:	81 fe b1 06 00 00    	cmp    esi,0x6b1
   1f1c9:	0f 84 c9 01 00 00    	je     1f398 <do_intel+0x388>
   1f1cf:	81 fe 13 0f 00 00    	cmp    esi,0xf13
   1f1d5:	0f 84 bd 01 00 00    	je     1f398 <do_intel+0x388>
   1f1db:	83 ec 04             	sub    esp,0x4
   1f1de:	ff 34 85 80 40 02 00 	push   DWORD PTR [eax*4+0x24080]
   1f1e5:	68 73 3a 06 00       	push   0x63a73
   1f1ea:	68 b2 96 12 00       	push   0x1296b2
   1f1ef:	e8 cc 34 00 00       	call   226c0 <sprintf>
   1f1f4:	83 c4 10             	add    esp,0x10
   1f1f7:	83 c4 1c             	add    esp,0x1c
   1f1fa:	31 c0                	xor    eax,eax
   1f1fc:	5b                   	pop    ebx
   1f1fd:	5e                   	pop    esi
   1f1fe:	5f                   	pop    edi
   1f1ff:	5d                   	pop    ebp
   1f200:	c3                   	ret    
   1f201:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f208:	a1 a4 95 12 00       	mov    eax,ds:0x1295a4
   1f20d:	83 f8 02             	cmp    eax,0x2
   1f210:	0f 84 ea 02 00 00    	je     1f500 <do_intel+0x4f0>
   1f216:	0f 8e 54 01 00 00    	jle    1f370 <do_intel+0x360>
   1f21c:	83 f8 03             	cmp    eax,0x3
   1f21f:	0f 84 bb 02 00 00    	je     1f4e0 <do_intel+0x4d0>
   1f225:	83 f8 04             	cmp    eax,0x4
   1f228:	0f 85 4a ff ff ff    	jne    1f178 <do_intel+0x168>
   1f22e:	83 ec 08             	sub    esp,0x8
   1f231:	68 cc 3b 06 00       	push   0x63bcc
   1f236:	68 ea 95 12 00       	push   0x1295ea
   1f23b:	e8 80 34 00 00       	call   226c0 <sprintf>
   1f240:	83 c4 10             	add    esp,0x10
   1f243:	e9 30 ff ff ff       	jmp    1f178 <do_intel+0x168>
   1f248:	90                   	nop
   1f249:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f250:	83 ec 08             	sub    esp,0x8
   1f253:	68 65 3b 06 00       	push   0x63b65
   1f258:	68 4e 96 12 00       	push   0x12964e
   1f25d:	e8 5e 34 00 00       	call   226c0 <sprintf>
   1f262:	83 c4 10             	add    esp,0x10
   1f265:	e9 5c fe ff ff       	jmp    1f0c6 <do_intel+0xb6>
   1f26a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f270:	83 3d a4 95 12 00 08 	cmp    DWORD PTR ds:0x1295a4,0x8
   1f277:	0f 87 fb fe ff ff    	ja     1f178 <do_intel+0x168>
   1f27d:	a1 a4 95 12 00       	mov    eax,ds:0x1295a4
   1f282:	ff 24 85 b0 fe 03 00 	jmp    DWORD PTR [eax*4+0x3feb0]
   1f289:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f290:	89 f0                	mov    eax,esi
   1f292:	c1 e8 14             	shr    eax,0x14
   1f295:	25 ff 00 00 00       	and    eax,0xff
   1f29a:	a3 b4 95 12 00       	mov    ds:0x1295b4,eax
   1f29f:	e9 d4 fe ff ff       	jmp    1f178 <do_intel+0x168>
   1f2a4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1f2a8:	83 3d a4 95 12 00 08 	cmp    DWORD PTR ds:0x1295a4,0x8
   1f2af:	0f 87 c3 fe ff ff    	ja     1f178 <do_intel+0x168>
   1f2b5:	a1 a4 95 12 00       	mov    eax,ds:0x1295a4
   1f2ba:	ff 24 85 d4 fe 03 00 	jmp    DWORD PTR [eax*4+0x3fed4]
   1f2c1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f2c8:	83 ec 08             	sub    esp,0x8
   1f2cb:	68 5a 04 04 00       	push   0x4045a
   1f2d0:	68 4e 96 12 00       	push   0x12964e
   1f2d5:	e8 e6 33 00 00       	call   226c0 <sprintf>
   1f2da:	83 c4 10             	add    esp,0x10
   1f2dd:	e9 e4 fd ff ff       	jmp    1f0c6 <do_intel+0xb6>
   1f2e2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f2e8:	83 ec 08             	sub    esp,0x8
   1f2eb:	68 f0 0b 04 00       	push   0x40bf0
   1f2f0:	68 80 96 12 00       	push   0x129680
   1f2f5:	e8 c6 33 00 00       	call   226c0 <sprintf>
   1f2fa:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f2ff:	83 c4 10             	add    esp,0x10
   1f302:	e9 49 fe ff ff       	jmp    1f150 <do_intel+0x140>
   1f307:	89 f6                	mov    esi,esi
   1f309:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1f310:	83 ec 08             	sub    esp,0x8
   1f313:	68 72 3b 06 00       	push   0x63b72
   1f318:	68 80 96 12 00       	push   0x129680
   1f31d:	e8 9e 33 00 00       	call   226c0 <sprintf>
   1f322:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f327:	83 c4 10             	add    esp,0x10
   1f32a:	e9 21 fe ff ff       	jmp    1f150 <do_intel+0x140>
   1f32f:	90                   	nop
   1f330:	83 ec 08             	sub    esp,0x8
   1f333:	68 7e 3b 06 00       	push   0x63b7e
   1f338:	68 80 96 12 00       	push   0x129680
   1f33d:	e8 7e 33 00 00       	call   226c0 <sprintf>
   1f342:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f347:	83 c4 10             	add    esp,0x10
   1f34a:	e9 01 fe ff ff       	jmp    1f150 <do_intel+0x140>
   1f34f:	90                   	nop
   1f350:	83 ec 08             	sub    esp,0x8
   1f353:	68 eb 0b 04 00       	push   0x40beb
   1f358:	68 80 96 12 00       	push   0x129680
   1f35d:	e8 5e 33 00 00       	call   226c0 <sprintf>
   1f362:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f367:	83 c4 10             	add    esp,0x10
   1f36a:	e9 e1 fd ff ff       	jmp    1f150 <do_intel+0x140>
   1f36f:	90                   	nop
   1f370:	83 f8 01             	cmp    eax,0x1
   1f373:	0f 85 ff fd ff ff    	jne    1f178 <do_intel+0x168>
   1f379:	83 ec 08             	sub    esp,0x8
   1f37c:	68 b0 3b 06 00       	push   0x63bb0
   1f381:	68 ea 95 12 00       	push   0x1295ea
   1f386:	e8 35 33 00 00       	call   226c0 <sprintf>
   1f38b:	83 c4 10             	add    esp,0x10
   1f38e:	e9 e5 fd ff ff       	jmp    1f178 <do_intel+0x168>
   1f393:	90                   	nop
   1f394:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1f398:	83 ec 04             	sub    esp,0x4
   1f39b:	ff 34 85 20 40 02 00 	push   DWORD PTR [eax*4+0x24020]
   1f3a2:	68 73 3a 06 00       	push   0x63a73
   1f3a7:	68 b2 96 12 00       	push   0x1296b2
   1f3ac:	e8 0f 33 00 00       	call   226c0 <sprintf>
   1f3b1:	83 c4 10             	add    esp,0x10
   1f3b4:	31 c0                	xor    eax,eax
   1f3b6:	83 c4 1c             	add    esp,0x1c
   1f3b9:	5b                   	pop    ebx
   1f3ba:	5e                   	pop    esi
   1f3bb:	5f                   	pop    edi
   1f3bc:	5d                   	pop    ebp
   1f3bd:	c3                   	ret    
   1f3be:	66 90                	xchg   ax,ax
   1f3c0:	9c                   	pushf  
   1f3c1:	9c                   	pushf  
   1f3c2:	5a                   	pop    edx
   1f3c3:	89 d0                	mov    eax,edx
   1f3c5:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f3cb:	52                   	push   edx
   1f3cc:	9d                   	popf   
   1f3cd:	9c                   	pushf  
   1f3ce:	5a                   	pop    edx
   1f3cf:	9d                   	popf   
   1f3d0:	31 d0                	xor    eax,edx
   1f3d2:	a9 00 00 20 00       	test   eax,0x200000
   1f3d7:	0f 84 f3 00 00 00    	je     1f4d0 <do_intel+0x4c0>
   1f3dd:	b8 00 00 00 80       	mov    eax,0x80000000
   1f3e2:	0f a2                	cpuid  
   1f3e4:	3d 01 00 00 80       	cmp    eax,0x80000001
   1f3e9:	0f 86 e1 00 00 00    	jbe    1f4d0 <do_intel+0x4c0>
   1f3ef:	b8 02 00 00 80       	mov    eax,0x80000002
   1f3f4:	0f a2                	cpuid  
   1f3f6:	89 d6                	mov    esi,edx
   1f3f8:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1f3fc:	89 df                	mov    edi,ebx
   1f3fe:	89 c5                	mov    ebp,eax
   1f400:	56                   	push   esi
   1f401:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1f405:	57                   	push   edi
   1f406:	55                   	push   ebp
   1f407:	e8 94 fb ff ff       	call   1efa0 <printregs>
   1f40c:	9c                   	pushf  
   1f40d:	9c                   	pushf  
   1f40e:	5a                   	pop    edx
   1f40f:	89 d0                	mov    eax,edx
   1f411:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f417:	52                   	push   edx
   1f418:	9d                   	popf   
   1f419:	9c                   	pushf  
   1f41a:	5a                   	pop    edx
   1f41b:	9d                   	popf   
   1f41c:	31 d0                	xor    eax,edx
   1f41e:	83 c4 10             	add    esp,0x10
   1f421:	a9 00 00 20 00       	test   eax,0x200000
   1f426:	74 1f                	je     1f447 <do_intel+0x437>
   1f428:	b8 00 00 00 80       	mov    eax,0x80000000
   1f42d:	0f a2                	cpuid  
   1f42f:	3d 02 00 00 80       	cmp    eax,0x80000002
   1f434:	76 11                	jbe    1f447 <do_intel+0x437>
   1f436:	b8 03 00 00 80       	mov    eax,0x80000003
   1f43b:	0f a2                	cpuid  
   1f43d:	89 d6                	mov    esi,edx
   1f43f:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1f443:	89 df                	mov    edi,ebx
   1f445:	89 c5                	mov    ebp,eax
   1f447:	56                   	push   esi
   1f448:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1f44c:	57                   	push   edi
   1f44d:	55                   	push   ebp
   1f44e:	e8 4d fb ff ff       	call   1efa0 <printregs>
   1f453:	9c                   	pushf  
   1f454:	9c                   	pushf  
   1f455:	5a                   	pop    edx
   1f456:	89 d0                	mov    eax,edx
   1f458:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f45e:	52                   	push   edx
   1f45f:	9d                   	popf   
   1f460:	9c                   	pushf  
   1f461:	5a                   	pop    edx
   1f462:	9d                   	popf   
   1f463:	31 d0                	xor    eax,edx
   1f465:	83 c4 10             	add    esp,0x10
   1f468:	a9 00 00 20 00       	test   eax,0x200000
   1f46d:	74 1f                	je     1f48e <do_intel+0x47e>
   1f46f:	b8 00 00 00 80       	mov    eax,0x80000000
   1f474:	0f a2                	cpuid  
   1f476:	3d 03 00 00 80       	cmp    eax,0x80000003
   1f47b:	76 11                	jbe    1f48e <do_intel+0x47e>
   1f47d:	b8 04 00 00 80       	mov    eax,0x80000004
   1f482:	0f a2                	cpuid  
   1f484:	89 d6                	mov    esi,edx
   1f486:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   1f48a:	89 df                	mov    edi,ebx
   1f48c:	89 c5                	mov    ebp,eax
   1f48e:	56                   	push   esi
   1f48f:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1f493:	57                   	push   edi
   1f494:	55                   	push   ebp
   1f495:	e8 06 fb ff ff       	call   1efa0 <printregs>
   1f49a:	83 c4 10             	add    esp,0x10
   1f49d:	31 c0                	xor    eax,eax
   1f49f:	83 c4 1c             	add    esp,0x1c
   1f4a2:	5b                   	pop    ebx
   1f4a3:	5e                   	pop    esi
   1f4a4:	5f                   	pop    edi
   1f4a5:	5d                   	pop    ebp
   1f4a6:	c3                   	ret    
   1f4a7:	89 f6                	mov    esi,esi
   1f4a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1f4b0:	83 ec 08             	sub    esp,0x8
   1f4b3:	68 eb 3b 06 00       	push   0x63beb
   1f4b8:	68 b2 96 12 00       	push   0x1296b2
   1f4bd:	e8 fe 31 00 00       	call   226c0 <sprintf>
   1f4c2:	83 c4 10             	add    esp,0x10
   1f4c5:	31 c0                	xor    eax,eax
   1f4c7:	83 c4 1c             	add    esp,0x1c
   1f4ca:	5b                   	pop    ebx
   1f4cb:	5e                   	pop    esi
   1f4cc:	5f                   	pop    edi
   1f4cd:	5d                   	pop    ebp
   1f4ce:	c3                   	ret    
   1f4cf:	90                   	nop
   1f4d0:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   1f4d7:	00 
   1f4d8:	31 f6                	xor    esi,esi
   1f4da:	e9 21 ff ff ff       	jmp    1f400 <do_intel+0x3f0>
   1f4df:	90                   	nop
   1f4e0:	83 ec 08             	sub    esp,0x8
   1f4e3:	68 bd 3b 06 00       	push   0x63bbd
   1f4e8:	68 ea 95 12 00       	push   0x1295ea
   1f4ed:	e8 ce 31 00 00       	call   226c0 <sprintf>
   1f4f2:	83 c4 10             	add    esp,0x10
   1f4f5:	e9 7e fc ff ff       	jmp    1f178 <do_intel+0x168>
   1f4fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f500:	83 ec 08             	sub    esp,0x8
   1f503:	68 b6 3b 06 00       	push   0x63bb6
   1f508:	68 ea 95 12 00       	push   0x1295ea
   1f50d:	e8 ae 31 00 00       	call   226c0 <sprintf>
   1f512:	83 c4 10             	add    esp,0x10
   1f515:	e9 5e fc ff ff       	jmp    1f178 <do_intel+0x168>
   1f51a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f520:	83 ec 08             	sub    esp,0x8
   1f523:	68 a0 53 08 00       	push   0x853a0
   1f528:	68 ea 95 12 00       	push   0x1295ea
   1f52d:	e8 8e 31 00 00       	call   226c0 <sprintf>
   1f532:	83 c4 10             	add    esp,0x10
   1f535:	e9 3e fc ff ff       	jmp    1f178 <do_intel+0x168>
   1f53a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f540:	83 ec 08             	sub    esp,0x8
   1f543:	68 72 3b 06 00       	push   0x63b72
   1f548:	68 ea 95 12 00       	push   0x1295ea
   1f54d:	e8 6e 31 00 00       	call   226c0 <sprintf>
   1f552:	83 c4 10             	add    esp,0x10
   1f555:	e9 1e fc ff ff       	jmp    1f178 <do_intel+0x168>
   1f55a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f560:	83 ec 08             	sub    esp,0x8
   1f563:	68 d0 3b 06 00       	push   0x63bd0
   1f568:	68 ea 95 12 00       	push   0x1295ea
   1f56d:	e8 4e 31 00 00       	call   226c0 <sprintf>
   1f572:	83 c4 10             	add    esp,0x10
   1f575:	e9 fe fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f57a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f580:	83 ec 08             	sub    esp,0x8
   1f583:	68 4c 53 08 00       	push   0x8534c
   1f588:	68 ea 95 12 00       	push   0x1295ea
   1f58d:	e8 2e 31 00 00       	call   226c0 <sprintf>
   1f592:	83 c4 10             	add    esp,0x10
   1f595:	e9 de fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f59a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f5a0:	83 ec 08             	sub    esp,0x8
   1f5a3:	68 e3 3b 06 00       	push   0x63be3
   1f5a8:	68 ea 95 12 00       	push   0x1295ea
   1f5ad:	e8 0e 31 00 00       	call   226c0 <sprintf>
   1f5b2:	83 c4 10             	add    esp,0x10
   1f5b5:	e9 be fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f5ba:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f5c0:	83 ec 08             	sub    esp,0x8
   1f5c3:	68 6c 53 08 00       	push   0x8536c
   1f5c8:	68 ea 95 12 00       	push   0x1295ea
   1f5cd:	e8 ee 30 00 00       	call   226c0 <sprintf>
   1f5d2:	83 c4 10             	add    esp,0x10
   1f5d5:	e9 9e fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f5da:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f5e0:	83 ec 08             	sub    esp,0x8
   1f5e3:	68 ac 3b 06 00       	push   0x63bac
   1f5e8:	68 ea 95 12 00       	push   0x1295ea
   1f5ed:	e8 ce 30 00 00       	call   226c0 <sprintf>
   1f5f2:	83 c4 10             	add    esp,0x10
   1f5f5:	e9 7e fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f5fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f600:	83 ec 08             	sub    esp,0x8
   1f603:	68 90 3b 06 00       	push   0x63b90
   1f608:	68 ea 95 12 00       	push   0x1295ea
   1f60d:	e8 ae 30 00 00       	call   226c0 <sprintf>
   1f612:	83 c4 10             	add    esp,0x10
   1f615:	e9 5e fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f61a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f620:	83 ec 08             	sub    esp,0x8
   1f623:	68 94 3b 06 00       	push   0x63b94
   1f628:	68 ea 95 12 00       	push   0x1295ea
   1f62d:	e8 8e 30 00 00       	call   226c0 <sprintf>
   1f632:	83 c4 10             	add    esp,0x10
   1f635:	e9 3e fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f63a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f640:	83 ec 08             	sub    esp,0x8
   1f643:	68 7a af 05 00       	push   0x5af7a
   1f648:	68 ea 95 12 00       	push   0x1295ea
   1f64d:	e8 6e 30 00 00       	call   226c0 <sprintf>
   1f652:	83 c4 10             	add    esp,0x10
   1f655:	e9 1e fb ff ff       	jmp    1f178 <do_intel+0x168>
   1f65a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f660:	83 ec 08             	sub    esp,0x8
   1f663:	68 ba 24 04 00       	push   0x424ba
   1f668:	68 ea 95 12 00       	push   0x1295ea
   1f66d:	e8 4e 30 00 00       	call   226c0 <sprintf>
   1f672:	83 c4 10             	add    esp,0x10
   1f675:	e9 fe fa ff ff       	jmp    1f178 <do_intel+0x168>
   1f67a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f680:	83 ec 08             	sub    esp,0x8
   1f683:	68 88 3b 06 00       	push   0x63b88
   1f688:	68 ea 95 12 00       	push   0x1295ea
   1f68d:	e8 2e 30 00 00       	call   226c0 <sprintf>
   1f692:	83 c4 10             	add    esp,0x10
   1f695:	e9 de fa ff ff       	jmp    1f178 <do_intel+0x168>
   1f69a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f6a0:	83 ec 08             	sub    esp,0x8
   1f6a3:	68 e4 a4 05 00       	push   0x5a4e4
   1f6a8:	68 ea 95 12 00       	push   0x1295ea
   1f6ad:	e8 0e 30 00 00       	call   226c0 <sprintf>
   1f6b2:	83 c4 10             	add    esp,0x10
   1f6b5:	e9 be fa ff ff       	jmp    1f178 <do_intel+0x168>
   1f6ba:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

0001f6c0 <do_amd>:
do_amd():
   1f6c0:	55                   	push   ebp
   1f6c1:	57                   	push   edi
   1f6c2:	56                   	push   esi
   1f6c3:	53                   	push   ebx
   1f6c4:	9c                   	pushf  
   1f6c5:	9c                   	pushf  
   1f6c6:	5a                   	pop    edx
   1f6c7:	89 d0                	mov    eax,edx
   1f6c9:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f6cf:	52                   	push   edx
   1f6d0:	9d                   	popf   
   1f6d1:	9c                   	pushf  
   1f6d2:	5a                   	pop    edx
   1f6d3:	9d                   	popf   
   1f6d4:	31 d0                	xor    eax,edx
   1f6d6:	83 ec 1c             	sub    esp,0x1c
   1f6d9:	a9 00 00 20 00       	test   eax,0x200000
   1f6de:	0f 84 7c 00 00 00    	je     1f760 <do_amd+0xa0>
   1f6e4:	31 c0                	xor    eax,eax
   1f6e6:	0f a2                	cpuid  
   1f6e8:	85 c0                	test   eax,eax
   1f6ea:	74 74                	je     1f760 <do_amd+0xa0>
   1f6ec:	b8 01 00 00 00       	mov    eax,0x1
   1f6f1:	0f a2                	cpuid  
   1f6f3:	89 c7                	mov    edi,eax
   1f6f5:	89 c2                	mov    edx,eax
   1f6f7:	c1 e8 08             	shr    eax,0x8
   1f6fa:	c1 ea 04             	shr    edx,0x4
   1f6fd:	89 f9                	mov    ecx,edi
   1f6ff:	83 e0 0f             	and    eax,0xf
   1f702:	83 e2 0f             	and    edx,0xf
   1f705:	83 e1 0f             	and    ecx,0xf
   1f708:	83 ec 08             	sub    esp,0x8
   1f70b:	89 15 a4 95 12 00    	mov    DWORD PTR ds:0x1295a4,edx
   1f711:	a3 a0 95 12 00       	mov    ds:0x1295a0,eax
   1f716:	68 e3 b4 04 00       	push   0x4b4e3
   1f71b:	68 b8 95 12 00       	push   0x1295b8
   1f720:	89 0d a8 95 12 00    	mov    DWORD PTR ds:0x1295a8,ecx
   1f726:	e8 95 2f 00 00       	call   226c0 <sprintf>
   1f72b:	a1 a0 95 12 00       	mov    eax,ds:0x1295a0
   1f730:	83 c4 10             	add    esp,0x10
   1f733:	83 f8 05             	cmp    eax,0x5
   1f736:	0f 84 74 01 00 00    	je     1f8b0 <do_amd+0x1f0>
   1f73c:	7e 4a                	jle    1f788 <do_amd+0xc8>
   1f73e:	83 f8 06             	cmp    eax,0x6
   1f741:	74 2d                	je     1f770 <do_amd+0xb0>
   1f743:	83 f8 0f             	cmp    eax,0xf
   1f746:	75 68                	jne    1f7b0 <do_amd+0xf0>
   1f748:	83 3d a4 95 12 00 1e 	cmp    DWORD PTR ds:0x1295a4,0x1e
   1f74f:	77 5f                	ja     1f7b0 <do_amd+0xf0>
   1f751:	a1 a4 95 12 00       	mov    eax,ds:0x1295a4
   1f756:	ff 24 85 f8 fe 03 00 	jmp    DWORD PTR [eax*4+0x3fef8]
   1f75d:	8d 76 00             	lea    esi,[esi+0x0]
   1f760:	31 c9                	xor    ecx,ecx
   1f762:	31 c0                	xor    eax,eax
   1f764:	31 d2                	xor    edx,edx
   1f766:	31 ff                	xor    edi,edi
   1f768:	eb 9e                	jmp    1f708 <do_amd+0x48>
   1f76a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f770:	a1 a4 95 12 00       	mov    eax,ds:0x1295a4
   1f775:	83 f8 07             	cmp    eax,0x7
   1f778:	0f 87 7a 02 00 00    	ja     1f9f8 <do_amd+0x338>
   1f77e:	ff 24 85 74 ff 03 00 	jmp    DWORD PTR [eax*4+0x3ff74]
   1f785:	8d 76 00             	lea    esi,[esi+0x0]
   1f788:	83 f8 04             	cmp    eax,0x4
   1f78b:	75 23                	jne    1f7b0 <do_amd+0xf0>
   1f78d:	83 ec 04             	sub    esp,0x4
   1f790:	ff 35 a4 95 12 00    	push   DWORD PTR ds:0x1295a4
   1f796:	68 f5 3b 06 00       	push   0x63bf5
   1f79b:	68 ea 95 12 00       	push   0x1295ea
   1f7a0:	e8 1b 2f 00 00       	call   226c0 <sprintf>
   1f7a5:	83 c4 10             	add    esp,0x10
   1f7a8:	90                   	nop
   1f7a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f7b0:	9c                   	pushf  
   1f7b1:	9c                   	pushf  
   1f7b2:	5a                   	pop    edx
   1f7b3:	89 d0                	mov    eax,edx
   1f7b5:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f7bb:	52                   	push   edx
   1f7bc:	9d                   	popf   
   1f7bd:	9c                   	pushf  
   1f7be:	5a                   	pop    edx
   1f7bf:	9d                   	popf   
   1f7c0:	31 d0                	xor    eax,edx
   1f7c2:	a9 00 00 20 00       	test   eax,0x200000
   1f7c7:	0f 84 d2 00 00 00    	je     1f89f <do_amd+0x1df>
   1f7cd:	be 00 00 00 80       	mov    esi,0x80000000
   1f7d2:	89 f0                	mov    eax,esi
   1f7d4:	0f a2                	cpuid  
   1f7d6:	3d 00 00 00 80       	cmp    eax,0x80000000
   1f7db:	0f 82 be 00 00 00    	jb     1f89f <do_amd+0x1df>
   1f7e1:	89 f0                	mov    eax,esi
   1f7e3:	0f a2                	cpuid  
   1f7e5:	3d 01 00 00 80       	cmp    eax,0x80000001
   1f7ea:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1f7ee:	0f 86 ab 00 00 00    	jbe    1f89f <do_amd+0x1df>
   1f7f4:	89 f0                	mov    eax,esi
   1f7f6:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   1f7fd:	00 
   1f7fe:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   1f805:	00 
   1f806:	0f a2                	cpuid  
   1f808:	bd 02 00 00 80       	mov    ebp,0x80000002
   1f80d:	89 c6                	mov    esi,eax
   1f80f:	31 db                	xor    ebx,ebx
   1f811:	9c                   	pushf  
   1f812:	9c                   	pushf  
   1f813:	59                   	pop    ecx
   1f814:	89 ca                	mov    edx,ecx
   1f816:	81 f1 00 00 20 00    	xor    ecx,0x200000
   1f81c:	51                   	push   ecx
   1f81d:	9d                   	popf   
   1f81e:	9c                   	pushf  
   1f81f:	59                   	pop    ecx
   1f820:	9d                   	popf   
   1f821:	31 ca                	xor    edx,ecx
   1f823:	81 e2 00 00 20 00    	and    edx,0x200000
   1f829:	74 14                	je     1f83f <do_amd+0x17f>
   1f82b:	39 ee                	cmp    esi,ebp
   1f82d:	72 10                	jb     1f83f <do_amd+0x17f>
   1f82f:	89 e8                	mov    eax,ebp
   1f831:	0f a2                	cpuid  
   1f833:	89 5c 24 08          	mov    DWORD PTR [esp+0x8],ebx
   1f837:	89 c7                	mov    edi,eax
   1f839:	89 cb                	mov    ebx,ecx
   1f83b:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
   1f83f:	ff 74 24 04          	push   DWORD PTR [esp+0x4]
   1f843:	53                   	push   ebx
   1f844:	83 c5 01             	add    ebp,0x1
   1f847:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
   1f84b:	57                   	push   edi
   1f84c:	e8 4f f7 ff ff       	call   1efa0 <printregs>
   1f851:	83 c4 10             	add    esp,0x10
   1f854:	81 fd 05 00 00 80    	cmp    ebp,0x80000005
   1f85a:	75 b5                	jne    1f811 <do_amd+0x151>
   1f85c:	81 7c 24 0c 06 00 00 	cmp    DWORD PTR [esp+0xc],0x80000006
   1f863:	80 
   1f864:	76 39                	jbe    1f89f <do_amd+0x1df>
   1f866:	9c                   	pushf  
   1f867:	9c                   	pushf  
   1f868:	5a                   	pop    edx
   1f869:	89 d0                	mov    eax,edx
   1f86b:	81 f2 00 00 20 00    	xor    edx,0x200000
   1f871:	52                   	push   edx
   1f872:	9d                   	popf   
   1f873:	9c                   	pushf  
   1f874:	5a                   	pop    edx
   1f875:	9d                   	popf   
   1f876:	31 d0                	xor    eax,edx
   1f878:	a9 00 00 20 00       	test   eax,0x200000
   1f87d:	74 19                	je     1f898 <do_amd+0x1d8>
   1f87f:	b8 00 00 00 80       	mov    eax,0x80000000
   1f884:	0f a2                	cpuid  
   1f886:	3d 06 00 00 80       	cmp    eax,0x80000006
   1f88b:	76 0b                	jbe    1f898 <do_amd+0x1d8>
   1f88d:	b8 07 00 00 80       	mov    eax,0x80000007
   1f892:	0f a2                	cpuid  
   1f894:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
   1f898:	f6 44 24 04 01       	test   BYTE PTR [esp+0x4],0x1
   1f89d:	75 61                	jne    1f900 <do_amd+0x240>
   1f89f:	83 c4 1c             	add    esp,0x1c
   1f8a2:	31 c0                	xor    eax,eax
   1f8a4:	5b                   	pop    ebx
   1f8a5:	5e                   	pop    esi
   1f8a6:	5f                   	pop    edi
   1f8a7:	5d                   	pop    ebp
   1f8a8:	c3                   	ret    
   1f8a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1f8b0:	8b 0d a4 95 12 00    	mov    ecx,DWORD PTR ds:0x1295a4
   1f8b6:	83 f9 09             	cmp    ecx,0x9
   1f8b9:	77 21                	ja     1f8dc <do_amd+0x21c>
   1f8bb:	b8 01 00 00 00       	mov    eax,0x1
   1f8c0:	d3 e0                	shl    eax,cl
   1f8c2:	a8 cf                	test   al,0xcf
   1f8c4:	0f 85 6e 01 00 00    	jne    1fa38 <do_amd+0x378>
   1f8ca:	f6 c4 02             	test   ah,0x2
   1f8cd:	0f 85 85 01 00 00    	jne    1fa58 <do_amd+0x398>
   1f8d3:	f6 c4 01             	test   ah,0x1
   1f8d6:	0f 85 3c 01 00 00    	jne    1fa18 <do_amd+0x358>
   1f8dc:	83 ec 04             	sub    esp,0x4
   1f8df:	51                   	push   ecx
   1f8e0:	68 1e 3c 06 00       	push   0x63c1e
   1f8e5:	68 ea 95 12 00       	push   0x1295ea
   1f8ea:	e8 d1 2d 00 00       	call   226c0 <sprintf>
   1f8ef:	83 c4 10             	add    esp,0x10
   1f8f2:	e9 b9 fe ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f8f7:	89 f6                	mov    esi,esi
   1f8f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1f900:	83 ec 0c             	sub    esp,0xc
   1f903:	68 74 54 08 00       	push   0x85474
   1f908:	e8 53 2d 00 00       	call   22660 <printk>
   1f90d:	83 c4 10             	add    esp,0x10
   1f910:	eb 8d                	jmp    1f89f <do_amd+0x1df>
   1f912:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f918:	83 ec 08             	sub    esp,0x8
   1f91b:	68 44 54 08 00       	push   0x85444
   1f920:	68 ea 95 12 00       	push   0x1295ea
   1f925:	e8 96 2d 00 00       	call   226c0 <sprintf>
   1f92a:	83 c4 10             	add    esp,0x10
   1f92d:	e9 7e fe ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f932:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f938:	83 ec 08             	sub    esp,0x8
   1f93b:	68 14 54 08 00       	push   0x85414
   1f940:	68 ea 95 12 00       	push   0x1295ea
   1f945:	e8 76 2d 00 00       	call   226c0 <sprintf>
   1f94a:	83 c4 10             	add    esp,0x10
   1f94d:	e9 5e fe ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f952:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f958:	83 ec 08             	sub    esp,0x8
   1f95b:	68 f4 53 08 00       	push   0x853f4
   1f960:	68 ea 95 12 00       	push   0x1295ea
   1f965:	e8 56 2d 00 00       	call   226c0 <sprintf>
   1f96a:	83 c4 10             	add    esp,0x10
   1f96d:	e9 3e fe ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f972:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f978:	83 ec 08             	sub    esp,0x8
   1f97b:	68 3b 3c 06 00       	push   0x63c3b
   1f980:	68 ea 95 12 00       	push   0x1295ea
   1f985:	e8 36 2d 00 00       	call   226c0 <sprintf>
   1f98a:	83 c4 10             	add    esp,0x10
   1f98d:	e9 1e fe ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f992:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f998:	83 ec 08             	sub    esp,0x8
   1f99b:	68 d4 53 08 00       	push   0x853d4
   1f9a0:	68 ea 95 12 00       	push   0x1295ea
   1f9a5:	e8 16 2d 00 00       	call   226c0 <sprintf>
   1f9aa:	83 c4 10             	add    esp,0x10
   1f9ad:	e9 fe fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f9b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f9b8:	83 ec 08             	sub    esp,0x8
   1f9bb:	68 2d 3c 06 00       	push   0x63c2d
   1f9c0:	68 ea 95 12 00       	push   0x1295ea
   1f9c5:	e8 f6 2c 00 00       	call   226c0 <sprintf>
   1f9ca:	83 c4 10             	add    esp,0x10
   1f9cd:	e9 de fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f9d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1f9d8:	83 ec 04             	sub    esp,0x4
   1f9db:	50                   	push   eax
   1f9dc:	68 56 3c 06 00       	push   0x63c56
   1f9e1:	68 ea 95 12 00       	push   0x1295ea
   1f9e6:	e8 d5 2c 00 00       	call   226c0 <sprintf>
   1f9eb:	83 c4 10             	add    esp,0x10
   1f9ee:	e9 bd fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1f9f3:	90                   	nop
   1f9f4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1f9f8:	83 ec 04             	sub    esp,0x4
   1f9fb:	50                   	push   eax
   1f9fc:	68 50 3c 06 00       	push   0x63c50
   1fa01:	68 ea 95 12 00       	push   0x1295ea
   1fa06:	e8 b5 2c 00 00       	call   226c0 <sprintf>
   1fa0b:	83 c4 10             	add    esp,0x10
   1fa0e:	e9 9d fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1fa13:	90                   	nop
   1fa14:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1fa18:	83 ec 08             	sub    esp,0x8
   1fa1b:	68 02 3c 06 00       	push   0x63c02
   1fa20:	68 ea 95 12 00       	push   0x1295ea
   1fa25:	e8 96 2c 00 00       	call   226c0 <sprintf>
   1fa2a:	83 c4 10             	add    esp,0x10
   1fa2d:	e9 7e fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1fa32:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   1fa38:	83 ec 04             	sub    esp,0x4
   1fa3b:	51                   	push   ecx
   1fa3c:	68 21 3c 06 00       	push   0x63c21
   1fa41:	68 ea 95 12 00       	push   0x1295ea
   1fa46:	e8 75 2c 00 00       	call   226c0 <sprintf>
   1fa4b:	83 c4 10             	add    esp,0x10
   1fa4e:	e9 5d fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1fa53:	90                   	nop
   1fa54:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1fa58:	83 ec 08             	sub    esp,0x8
   1fa5b:	68 0f 3c 06 00       	push   0x63c0f
   1fa60:	68 ea 95 12 00       	push   0x1295ea
   1fa65:	e8 56 2c 00 00       	call   226c0 <sprintf>
   1fa6a:	83 c4 10             	add    esp,0x10
   1fa6d:	e9 3e fd ff ff       	jmp    1f7b0 <do_amd+0xf0>
   1fa72:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1fa79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001fa80 <detect_cpu>:
detect_cpu():
   1fa80:	53                   	push   ebx
   1fa81:	31 c0                	xor    eax,eax
   1fa83:	0f a2                	cpuid  
   1fa85:	83 ec 08             	sub    esp,0x8
   1fa88:	81 fb 41 75 74 68    	cmp    ebx,0x68747541
   1fa8e:	74 40                	je     1fad0 <detect_cpu+0x50>
   1fa90:	81 fb 47 65 6e 75    	cmp    ebx,0x756e6547
   1fa96:	74 28                	je     1fac0 <detect_cpu+0x40>
   1fa98:	83 ec 0c             	sub    esp,0xc
   1fa9b:	68 66 3c 06 00       	push   0x63c66
   1faa0:	e8 bb 2b 00 00       	call   22660 <printk>
   1faa5:	9c                   	pushf  
   1faa6:	58                   	pop    eax
   1faa7:	25 ff ff df ff       	and    eax,0xffdfffff
   1faac:	50                   	push   eax
   1faad:	9d                   	popf   
   1faae:	83 c4 10             	add    esp,0x10
   1fab1:	31 c0                	xor    eax,eax
   1fab3:	83 c4 08             	add    esp,0x8
   1fab6:	5b                   	pop    ebx
   1fab7:	c3                   	ret    
   1fab8:	90                   	nop
   1fab9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1fac0:	e8 4b f5 ff ff       	call   1f010 <do_intel>
   1fac5:	83 c4 08             	add    esp,0x8
   1fac8:	31 c0                	xor    eax,eax
   1faca:	5b                   	pop    ebx
   1facb:	c3                   	ret    
   1facc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   1fad0:	e8 eb fb ff ff       	call   1f6c0 <do_amd>
   1fad5:	83 c4 08             	add    esp,0x8
   1fad8:	31 c0                	xor    eax,eax
   1fada:	5b                   	pop    ebx
   1fadb:	c3                   	ret    
   1fadc:	66 90                	xchg   ax,ax
   1fade:	66 90                	xchg   ax,ax

0001fae0 <print_e820_entry>:
print_e820_entry():
   1fae0:	53                   	push   ebx
   1fae1:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
   1fae5:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   1fae9:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
   1faed:	83 f8 01             	cmp    eax,0x1
   1faf0:	74 3e                	je     1fb30 <print_e820_entry+0x50>
   1faf2:	83 f8 02             	cmp    eax,0x2
   1faf5:	74 49                	je     1fb40 <print_e820_entry+0x60>
   1faf7:	83 f8 03             	cmp    eax,0x3
   1fafa:	74 54                	je     1fb50 <print_e820_entry+0x70>
   1fafc:	83 f8 04             	cmp    eax,0x4
   1faff:	bb 1e 3d 06 00       	mov    ebx,0x63d1e
   1fb04:	b8 c6 4a 05 00       	mov    eax,0x54ac6
   1fb09:	0f 45 c3             	cmovne eax,ebx
   1fb0c:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
   1fb10:	8d 44 0a ff          	lea    eax,[edx+ecx*1-0x1]
   1fb14:	89 4c 24 14          	mov    DWORD PTR [esp+0x14],ecx
   1fb18:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
   1fb1c:	c7 44 24 08 23 3d 06 	mov    DWORD PTR [esp+0x8],0x63d23
   1fb23:	00 
   1fb24:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1fb28:	5b                   	pop    ebx
   1fb29:	e9 32 2b 00 00       	jmp    22660 <printk>
   1fb2e:	66 90                	xchg   ax,ax
   1fb30:	b8 12 3d 06 00       	mov    eax,0x63d12
   1fb35:	eb d5                	jmp    1fb0c <print_e820_entry+0x2c>
   1fb37:	89 f6                	mov    esi,esi
   1fb39:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1fb40:	b8 0a 3d 06 00       	mov    eax,0x63d0a
   1fb45:	eb c5                	jmp    1fb0c <print_e820_entry+0x2c>
   1fb47:	89 f6                	mov    esi,esi
   1fb49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1fb50:	b8 19 3d 06 00       	mov    eax,0x63d19
   1fb55:	eb b5                	jmp    1fb0c <print_e820_entry+0x2c>
   1fb57:	89 f6                	mov    esi,esi
   1fb59:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001fb60 <print_e820_map>:
print_e820_map():
   1fb60:	57                   	push   edi
   1fb61:	56                   	push   esi
   1fb62:	53                   	push   ebx
   1fb63:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
   1fb67:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   1fb6b:	85 ff                	test   edi,edi
   1fb6d:	7e 46                	jle    1fbb5 <print_e820_map+0x55>
   1fb6f:	31 f6                	xor    esi,esi
   1fb71:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   1fb78:	8b 03                	mov    eax,DWORD PTR [ebx]
   1fb7a:	83 ec 20             	sub    esp,0x20
   1fb7d:	83 c6 01             	add    esi,0x1
   1fb80:	83 c3 18             	add    ebx,0x18
   1fb83:	89 04 24             	mov    DWORD PTR [esp],eax
   1fb86:	8b 43 ec             	mov    eax,DWORD PTR [ebx-0x14]
   1fb89:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1fb8d:	8b 43 f0             	mov    eax,DWORD PTR [ebx-0x10]
   1fb90:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1fb94:	8b 43 f4             	mov    eax,DWORD PTR [ebx-0xc]
   1fb97:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1fb9b:	8b 43 f8             	mov    eax,DWORD PTR [ebx-0x8]
   1fb9e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1fba2:	8b 43 fc             	mov    eax,DWORD PTR [ebx-0x4]
   1fba5:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   1fba9:	e8 32 ff ff ff       	call   1fae0 <print_e820_entry>
   1fbae:	83 c4 20             	add    esp,0x20
   1fbb1:	39 f7                	cmp    edi,esi
   1fbb3:	75 c3                	jne    1fb78 <print_e820_map+0x18>
   1fbb5:	5b                   	pop    ebx
   1fbb6:	5e                   	pop    esi
   1fbb7:	5f                   	pop    edi
   1fbb8:	c3                   	ret    
   1fbb9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001fbc0 <printE820Map>:
printE820Map():
   1fbc0:	57                   	push   edi
   1fbc1:	0f bf 3d 90 95 12 00 	movsx  edi,WORD PTR ds:0x129590
   1fbc8:	56                   	push   esi
   1fbc9:	53                   	push   ebx
   1fbca:	8b 1d 80 95 12 00    	mov    ebx,DWORD PTR ds:0x129580
   1fbd0:	83 ec 08             	sub    esp,0x8
   1fbd3:	57                   	push   edi
   1fbd4:	53                   	push   ebx
   1fbd5:	e8 86 ff ff ff       	call   1fb60 <print_e820_map>
   1fbda:	83 c4 10             	add    esp,0x10
   1fbdd:	85 ff                	test   edi,edi
   1fbdf:	0f 8e 8e 00 00 00    	jle    1fc73 <printE820Map+0xb3>
   1fbe5:	83 ef 01             	sub    edi,0x1
   1fbe8:	be 03 00 00 00       	mov    esi,0x3
   1fbed:	83 e7 fe             	and    edi,0xfffffffe
   1fbf0:	83 c7 05             	add    edi,0x5
   1fbf3:	eb 0d                	jmp    1fc02 <printE820Map+0x42>
   1fbf5:	8d 76 00             	lea    esi,[esi+0x0]
   1fbf8:	83 c6 02             	add    esi,0x2
   1fbfb:	83 c3 30             	add    ebx,0x30
   1fbfe:	39 fe                	cmp    esi,edi
   1fc00:	74 71                	je     1fc73 <printE820Map+0xb3>
   1fc02:	8b 03                	mov    eax,DWORD PTR [ebx]
   1fc04:	83 ec 20             	sub    esp,0x20
   1fc07:	89 04 24             	mov    DWORD PTR [esp],eax
   1fc0a:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
   1fc0d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   1fc11:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
   1fc14:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
   1fc18:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
   1fc1b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   1fc1f:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
   1fc22:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1fc26:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
   1fc29:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   1fc2d:	e8 ae fe ff ff       	call   1fae0 <print_e820_entry>
   1fc32:	83 c4 20             	add    esp,0x20
   1fc35:	e8 56 71 ff ff       	call   16d90 <cursorGetMaxY>
   1fc3a:	89 c1                	mov    ecx,eax
   1fc3c:	89 f0                	mov    eax,esi
   1fc3e:	99                   	cdq    
   1fc3f:	f7 f9                	idiv   ecx
   1fc41:	85 d2                	test   edx,edx
   1fc43:	75 b3                	jne    1fbf8 <printE820Map+0x38>
   1fc45:	83 ec 0c             	sub    esp,0xc
   1fc48:	83 c6 02             	add    esi,0x2
   1fc4b:	83 c3 30             	add    ebx,0x30
   1fc4e:	68 7c 4c 08 00       	push   0x84c7c
   1fc53:	e8 e8 71 ff ff       	call   16e40 <puts>
   1fc58:	e8 93 1b ff ff       	call   117f0 <waitForKeyboardKey>
   1fc5d:	e8 5e 71 ff ff       	call   16dc0 <cursorGetPosY>
   1fc62:	5a                   	pop    edx
   1fc63:	59                   	pop    ecx
   1fc64:	50                   	push   eax
   1fc65:	6a 00                	push   0x0
   1fc67:	e8 84 70 ff ff       	call   16cf0 <cursorMoveTo>
   1fc6c:	83 c4 10             	add    esp,0x10
   1fc6f:	39 fe                	cmp    esi,edi
   1fc71:	75 8f                	jne    1fc02 <printE820Map+0x42>
   1fc73:	5b                   	pop    ebx
   1fc74:	5e                   	pop    esi
   1fc75:	5f                   	pop    edi
   1fc76:	c3                   	ret    
   1fc77:	89 f6                	mov    esi,esi
   1fc79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

0001fc80 <sum_e820_usable_memory>:
sum_e820_usable_memory():
   1fc80:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   1fc84:	85 c0                	test   eax,eax
   1fc86:	7e 32                	jle    1fcba <sum_e820_usable_memory+0x3a>
   1fc88:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   1fc8c:	8d 04 40             	lea    eax,[eax+eax*2]
   1fc8f:	8d 0c c2             	lea    ecx,[edx+eax*8]
   1fc92:	31 c0                	xor    eax,eax
   1fc94:	eb 11                	jmp    1fca7 <sum_e820_usable_memory+0x27>
   1fc96:	8d 76 00             	lea    esi,[esi+0x0]
   1fc99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   1fca0:	83 c2 18             	add    edx,0x18
   1fca3:	39 d1                	cmp    ecx,edx
   1fca5:	74 10                	je     1fcb7 <sum_e820_usable_memory+0x37>
   1fca7:	83 7a 10 01          	cmp    DWORD PTR [edx+0x10],0x1
   1fcab:	75 f3                	jne    1fca0 <sum_e820_usable_memory+0x20>
   1fcad:	03 42 08             	add    eax,DWORD PTR [edx+0x8]
   1fcb0:	83 c2 18             	add    edx,0x18
   1fcb3:	39 d1                	cmp    ecx,edx
   1fcb5:	75 f0                	jne    1fca7 <sum_e820_usable_memory+0x27>
   1fcb7:	31 d2                	xor    edx,edx
   1fcb9:	c3                   	ret    
   1fcba:	31 c0                	xor    eax,eax
   1fcbc:	eb f9                	jmp    1fcb7 <sum_e820_usable_memory+0x37>
   1fcbe:	66 90                	xchg   ax,ax

0001fcc0 <gdt_init>:
gdt_init():
   1fcc0:	83 ec 14             	sub    esp,0x14
   1fcc3:	6a 01                	push   0x1
   1fcc5:	6a c0                	push   0xffffffc0
   1fcc7:	6a 88                	push   0xffffff88
   1fcc9:	68 ff ff 0f 00       	push   0xfffff
   1fcce:	6a 00                	push   0x0
   1fcd0:	6a 01                	push   0x1
   1fcd2:	e8 e9 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fcd7:	83 c4 18             	add    esp,0x18
   1fcda:	6a 01                	push   0x1
   1fcdc:	6a c0                	push   0xffffffc0
   1fcde:	6a 82                	push   0xffffff82
   1fce0:	68 ff ff 0f 00       	push   0xfffff
   1fce5:	6a 00                	push   0x0
   1fce7:	6a 02                	push   0x2
   1fce9:	e8 d2 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fcee:	83 c4 18             	add    esp,0x18
   1fcf1:	6a 01                	push   0x1
   1fcf3:	6a c0                	push   0xffffffc0
   1fcf5:	6a 82                	push   0xffffff82
   1fcf7:	6a ff                	push   0xffffffff
   1fcf9:	6a 00                	push   0x0
   1fcfb:	6a 03                	push   0x3
   1fcfd:	e8 be 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd02:	83 c4 18             	add    esp,0x18
   1fd05:	6a 01                	push   0x1
   1fd07:	6a c0                	push   0xffffffc0
   1fd09:	6a 88                	push   0xffffff88
   1fd0b:	68 ff ff 0f 00       	push   0xfffff
   1fd10:	68 00 00 00 c0       	push   0xc0000000
   1fd15:	6a 04                	push   0x4
   1fd17:	e8 a4 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd1c:	83 c4 18             	add    esp,0x18
   1fd1f:	6a 01                	push   0x1
   1fd21:	6a c0                	push   0xffffffc0
   1fd23:	6a 82                	push   0xffffff82
   1fd25:	68 ff ff 0f 00       	push   0xfffff
   1fd2a:	6a 00                	push   0x0
   1fd2c:	6a 05                	push   0x5
   1fd2e:	e8 8d 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd33:	83 c4 18             	add    esp,0x18
   1fd36:	6a 01                	push   0x1
   1fd38:	6a c0                	push   0xffffffc0
   1fd3a:	6a e2                	push   0xffffffe2
   1fd3c:	6a ff                	push   0xffffffff
   1fd3e:	6a 00                	push   0x0
   1fd40:	6a 06                	push   0x6
   1fd42:	e8 79 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd47:	83 c4 18             	add    esp,0x18
   1fd4a:	6a 01                	push   0x1
   1fd4c:	6a c0                	push   0xffffffc0
   1fd4e:	6a e8                	push   0xffffffe8
   1fd50:	68 ff ff 0f 00       	push   0xfffff
   1fd55:	6a 00                	push   0x0
   1fd57:	6a 07                	push   0x7
   1fd59:	e8 62 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd5e:	83 c4 18             	add    esp,0x18
   1fd61:	6a 01                	push   0x1
   1fd63:	6a c0                	push   0xffffffc0
   1fd65:	6a e6                	push   0xffffffe6
   1fd67:	68 ff ff 0f 00       	push   0xfffff
   1fd6c:	6a 00                	push   0x0
   1fd6e:	6a 08                	push   0x8
   1fd70:	e8 4b 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd75:	83 c4 18             	add    esp,0x18
   1fd78:	6a 01                	push   0x1
   1fd7a:	6a c0                	push   0xffffffc0
   1fd7c:	6a 88                	push   0xffffff88
   1fd7e:	68 ff ff 0f 00       	push   0xfffff
   1fd83:	6a 00                	push   0x0
   1fd85:	6a 20                	push   0x20
   1fd87:	e8 34 78 ff ff       	call   175c0 <gdtEntryApplication>
   1fd8c:	83 c4 14             	add    esp,0x14
   1fd8f:	68 80 00 00 00       	push   0x80
   1fd94:	68 88 00 00 00       	push   0x88
   1fd99:	68 ff ff 0f 00       	push   0xfffff
   1fd9e:	6a 00                	push   0x0
   1fda0:	6a 01                	push   0x1
   1fda2:	e8 79 78 ff ff       	call   17620 <gdtEntryRM>
   1fda7:	83 c4 14             	add    esp,0x14
   1fdaa:	68 80 00 00 00       	push   0x80
   1fdaf:	68 82 00 00 00       	push   0x82
   1fdb4:	68 ff ff 0f 00       	push   0xfffff
   1fdb9:	6a 00                	push   0x0
   1fdbb:	6a 02                	push   0x2
   1fdbd:	e8 5e 78 ff ff       	call   17620 <gdtEntryRM>
   1fdc2:	83 c4 14             	add    esp,0x14
   1fdc5:	68 c0 00 00 00       	push   0xc0
   1fdca:	68 8a 00 00 00       	push   0x8a
   1fdcf:	68 ff ff 0f 00       	push   0xfffff
   1fdd4:	6a 00                	push   0x0
   1fdd6:	6a 03                	push   0x3
   1fdd8:	e8 43 78 ff ff       	call   17620 <gdtEntryRM>
   1fddd:	b8 ff 07 00 00       	mov    eax,0x7ff
   1fde2:	83 c4 14             	add    esp,0x14
   1fde5:	ba ff ff ff ff       	mov    edx,0xffffffff
   1fdea:	66 a3 88 99 12 00    	mov    ds:0x129988,ax
   1fdf0:	a1 80 99 12 00       	mov    eax,ds:0x129980
   1fdf5:	68 88 99 12 00       	push   0x129988
   1fdfa:	c7 05 8a 99 12 00 00 	mov    DWORD PTR ds:0x12998a,0x164800
   1fe01:	48 16 00 
   1fe04:	66 89 15 78 99 12 00 	mov    WORD PTR ds:0x129978,dx
   1fe0b:	a3 7a 99 12 00       	mov    ds:0x12997a,eax
   1fe10:	e8 28 13 fe ff       	call   113d <set_gdt>
   1fe15:	83 c4 1c             	add    esp,0x1c
   1fe18:	c3                   	ret    
   1fe19:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

0001fe20 <quietHardware>:
quietHardware():
   1fe20:	b8 7f 00 00 00       	mov    eax,0x7f
   1fe25:	e6 a1                	out    0xa1,al
   1fe27:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1fe2c:	e6 21                	out    0x21,al
   1fe2e:	c3                   	ret    
   1fe2f:	90                   	nop

0001fe30 <doHDSetup>:
doHDSetup():
   1fe30:	55                   	push   ebp
   1fe31:	57                   	push   edi
   1fe32:	56                   	push   esi
   1fe33:	53                   	push   ebx
   1fe34:	81 ec 28 08 00 00    	sub    esp,0x828
   1fe3a:	68 44 56 08 00       	push   0x85644
   1fe3f:	e8 1c 28 00 00       	call   22660 <printk>
   1fe44:	e8 27 ec ff ff       	call   1ea70 <ataScanForHarddrives>
   1fe49:	83 c4 0c             	add    esp,0xc
   1fe4c:	68 00 02 00 00       	push   0x200
   1fe51:	6a 00                	push   0x0
   1fe53:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   1fe57:	50                   	push   eax
   1fe58:	e8 23 0f 00 00       	call   20d80 <memset>
   1fe5d:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   1fe63:	8d 82 00 02 00 00    	lea    eax,[edx+0x200]
   1fe69:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   1fe6d:	83 c4 10             	add    esp,0x10
   1fe70:	80 ba 51 02 00 00 01 	cmp    BYTE PTR [edx+0x251],0x1
   1fe77:	b8 6a 04 04 00       	mov    eax,0x4046a
   1fe7c:	0f 84 06 04 00 00    	je     20288 <doHDSetup+0x458>
   1fe82:	83 ec 08             	sub    esp,0x8
   1fe85:	50                   	push   eax
   1fe86:	68 40 3d 06 00       	push   0x63d40
   1fe8b:	e8 d0 27 00 00       	call   22660 <printk>
   1fe90:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   1fe96:	83 c4 10             	add    esp,0x10
   1fe99:	80 ba 51 02 00 00 00 	cmp    BYTE PTR [edx+0x251],0x0
   1fea0:	74 5d                	je     1feff <doHDSetup+0xcf>
   1fea2:	80 ba 60 02 00 00 00 	cmp    BYTE PTR [edx+0x260],0x0
   1fea9:	b8 df 00 04 00       	mov    eax,0x400df
   1feae:	be 70 04 04 00       	mov    esi,0x40470
   1feb3:	bb 75 04 04 00       	mov    ebx,0x40475
   1feb8:	b9 7c 04 04 00       	mov    ecx,0x4047c
   1febd:	0f 44 f0             	cmove  esi,eax
   1fec0:	80 ba 5f 02 00 00 00 	cmp    BYTE PTR [edx+0x25f],0x0
   1fec7:	0f 44 d8             	cmove  ebx,eax
   1feca:	80 ba 5e 02 00 00 00 	cmp    BYTE PTR [edx+0x25e],0x0
   1fed1:	0f 44 c8             	cmove  ecx,eax
   1fed4:	8b 82 5a 02 00 00    	mov    eax,DWORD PTR [edx+0x25a]
   1feda:	83 ec 08             	sub    esp,0x8
   1fedd:	56                   	push   esi
   1fede:	53                   	push   ebx
   1fedf:	51                   	push   ecx
   1fee0:	50                   	push   eax
   1fee1:	0f af 82 56 02 00 00 	imul   eax,DWORD PTR [edx+0x256]
   1fee8:	c1 e8 14             	shr    eax,0x14
   1feeb:	50                   	push   eax
   1feec:	68 51 3d 06 00       	push   0x63d51
   1fef1:	e8 6a 27 00 00       	call   22660 <printk>
   1fef6:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   1fefc:	83 c4 20             	add    esp,0x20
   1feff:	8d 82 73 04 00 00    	lea    eax,[edx+0x473]
   1ff05:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   1ff09:	80 ba c4 04 00 00 01 	cmp    BYTE PTR [edx+0x4c4],0x1
   1ff10:	b8 6a 04 04 00       	mov    eax,0x4046a
   1ff15:	0f 84 3d 03 00 00    	je     20258 <doHDSetup+0x428>
   1ff1b:	83 ec 08             	sub    esp,0x8
   1ff1e:	50                   	push   eax
   1ff1f:	68 66 3d 06 00       	push   0x63d66
   1ff24:	e8 37 27 00 00       	call   22660 <printk>
   1ff29:	a1 00 98 12 00       	mov    eax,ds:0x129800
   1ff2e:	83 c4 10             	add    esp,0x10
   1ff31:	80 b8 c4 04 00 00 00 	cmp    BYTE PTR [eax+0x4c4],0x0
   1ff38:	74 57                	je     1ff91 <doHDSetup+0x161>
   1ff3a:	80 b8 d3 04 00 00 00 	cmp    BYTE PTR [eax+0x4d3],0x0
   1ff41:	ba df 00 04 00       	mov    edx,0x400df
   1ff46:	be 70 04 04 00       	mov    esi,0x40470
   1ff4b:	bb 75 04 04 00       	mov    ebx,0x40475
   1ff50:	b9 7c 04 04 00       	mov    ecx,0x4047c
   1ff55:	0f 44 f2             	cmove  esi,edx
   1ff58:	80 b8 d2 04 00 00 00 	cmp    BYTE PTR [eax+0x4d2],0x0
   1ff5f:	0f 44 da             	cmove  ebx,edx
   1ff62:	80 b8 d1 04 00 00 00 	cmp    BYTE PTR [eax+0x4d1],0x0
   1ff69:	0f 44 ca             	cmove  ecx,edx
   1ff6c:	8b 90 cd 04 00 00    	mov    edx,DWORD PTR [eax+0x4cd]
   1ff72:	83 ec 08             	sub    esp,0x8
   1ff75:	56                   	push   esi
   1ff76:	53                   	push   ebx
   1ff77:	51                   	push   ecx
   1ff78:	52                   	push   edx
   1ff79:	0f af 90 c9 04 00 00 	imul   edx,DWORD PTR [eax+0x4c9]
   1ff80:	c1 ea 14             	shr    edx,0x14
   1ff83:	52                   	push   edx
   1ff84:	68 77 3d 06 00       	push   0x63d77
   1ff89:	e8 d2 26 00 00       	call   22660 <printk>
   1ff8e:	83 c4 20             	add    esp,0x20
   1ff91:	83 ec 0c             	sub    esp,0xc
   1ff94:	68 78 56 08 00       	push   0x85678
   1ff99:	e8 c2 26 00 00       	call   22660 <printk>
   1ff9e:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   1ffa4:	8d 82 e6 06 00 00    	lea    eax,[edx+0x6e6]
   1ffaa:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
   1ffae:	83 c4 10             	add    esp,0x10
   1ffb1:	80 ba 37 07 00 00 01 	cmp    BYTE PTR [edx+0x737],0x1
   1ffb8:	b8 6a 04 04 00       	mov    eax,0x4046a
   1ffbd:	0f 84 ad 02 00 00    	je     20270 <doHDSetup+0x440>
   1ffc3:	83 ec 08             	sub    esp,0x8
   1ffc6:	50                   	push   eax
   1ffc7:	68 40 3d 06 00       	push   0x63d40
   1ffcc:	e8 8f 26 00 00       	call   22660 <printk>
   1ffd1:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   1ffd7:	83 c4 10             	add    esp,0x10
   1ffda:	80 ba 37 07 00 00 00 	cmp    BYTE PTR [edx+0x737],0x0
   1ffe1:	74 5d                	je     20040 <doHDSetup+0x210>
   1ffe3:	80 ba 46 07 00 00 00 	cmp    BYTE PTR [edx+0x746],0x0
   1ffea:	b8 df 00 04 00       	mov    eax,0x400df
   1ffef:	be 70 04 04 00       	mov    esi,0x40470
   1fff4:	bb 75 04 04 00       	mov    ebx,0x40475
   1fff9:	b9 7c 04 04 00       	mov    ecx,0x4047c
   1fffe:	0f 44 f0             	cmove  esi,eax
   20001:	80 ba 45 07 00 00 00 	cmp    BYTE PTR [edx+0x745],0x0
   20008:	0f 44 d8             	cmove  ebx,eax
   2000b:	80 ba 44 07 00 00 00 	cmp    BYTE PTR [edx+0x744],0x0
   20012:	0f 44 c8             	cmove  ecx,eax
   20015:	8b 82 40 07 00 00    	mov    eax,DWORD PTR [edx+0x740]
   2001b:	83 ec 08             	sub    esp,0x8
   2001e:	56                   	push   esi
   2001f:	53                   	push   ebx
   20020:	51                   	push   ecx
   20021:	50                   	push   eax
   20022:	0f af 82 3c 07 00 00 	imul   eax,DWORD PTR [edx+0x73c]
   20029:	c1 e8 14             	shr    eax,0x14
   2002c:	50                   	push   eax
   2002d:	68 51 3d 06 00       	push   0x63d51
   20032:	e8 29 26 00 00       	call   22660 <printk>
   20037:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   2003d:	83 c4 20             	add    esp,0x20
   20040:	80 ba aa 09 00 00 01 	cmp    BYTE PTR [edx+0x9aa],0x1
   20047:	8d 82 59 09 00 00    	lea    eax,[edx+0x959]
   2004d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   20051:	b8 6a 04 04 00       	mov    eax,0x4046a
   20056:	0f 84 e4 01 00 00    	je     20240 <doHDSetup+0x410>
   2005c:	83 ec 08             	sub    esp,0x8
   2005f:	50                   	push   eax
   20060:	68 66 3d 06 00       	push   0x63d66
   20065:	e8 f6 25 00 00       	call   22660 <printk>
   2006a:	a1 00 98 12 00       	mov    eax,ds:0x129800
   2006f:	83 c4 10             	add    esp,0x10
   20072:	80 b8 aa 09 00 00 00 	cmp    BYTE PTR [eax+0x9aa],0x0
   20079:	74 57                	je     200d2 <doHDSetup+0x2a2>
   2007b:	80 b8 b9 09 00 00 00 	cmp    BYTE PTR [eax+0x9b9],0x0
   20082:	ba df 00 04 00       	mov    edx,0x400df
   20087:	be 70 04 04 00       	mov    esi,0x40470
   2008c:	bb 75 04 04 00       	mov    ebx,0x40475
   20091:	b9 7c 04 04 00       	mov    ecx,0x4047c
   20096:	0f 44 f2             	cmove  esi,edx
   20099:	80 b8 b8 09 00 00 00 	cmp    BYTE PTR [eax+0x9b8],0x0
   200a0:	0f 44 da             	cmove  ebx,edx
   200a3:	80 b8 b7 09 00 00 00 	cmp    BYTE PTR [eax+0x9b7],0x0
   200aa:	0f 44 ca             	cmove  ecx,edx
   200ad:	8b 90 b3 09 00 00    	mov    edx,DWORD PTR [eax+0x9b3]
   200b3:	83 ec 08             	sub    esp,0x8
   200b6:	56                   	push   esi
   200b7:	53                   	push   ebx
   200b8:	51                   	push   ecx
   200b9:	52                   	push   edx
   200ba:	0f af 90 af 09 00 00 	imul   edx,DWORD PTR [eax+0x9af]
   200c1:	c1 ea 14             	shr    edx,0x14
   200c4:	52                   	push   edx
   200c5:	68 77 3d 06 00       	push   0x63d77
   200ca:	e8 91 25 00 00       	call   22660 <printk>
   200cf:	83 c4 20             	add    esp,0x20
   200d2:	8b 3d c8 5f 09 00    	mov    edi,DWORD PTR ds:0x95fc8
   200d8:	85 ff                	test   edi,edi
   200da:	78 4c                	js     20128 <doHDSetup+0x2f8>
   200dc:	bb e0 5f 09 00       	mov    ebx,0x95fe0
   200e1:	31 f6                	xor    esi,esi
   200e3:	eb 10                	jmp    200f5 <doHDSetup+0x2c5>
   200e5:	8d 76 00             	lea    esi,[esi+0x0]
   200e8:	83 c6 01             	add    esi,0x1
   200eb:	81 c3 00 02 00 00    	add    ebx,0x200
   200f1:	39 f7                	cmp    edi,esi
   200f3:	7c 33                	jl     20128 <doHDSetup+0x2f8>
   200f5:	83 ec 08             	sub    esp,0x8
   200f8:	68 8d 3d 06 00       	push   0x63d8d
   200fd:	53                   	push   ebx
   200fe:	e8 5d 26 00 00       	call   22760 <strcmp>
   20103:	83 c4 10             	add    esp,0x10
   20106:	85 c0                	test   eax,eax
   20108:	75 de                	jne    200e8 <doHDSetup+0x2b8>
   2010a:	83 ec 0c             	sub    esp,0xc
   2010d:	68 ac 56 08 00       	push   0x856ac
   20112:	e8 49 25 00 00       	call   22660 <printk>
   20117:	83 c4 10             	add    esp,0x10
   2011a:	81 c4 1c 08 00 00    	add    esp,0x81c
   20120:	5b                   	pop    ebx
   20121:	5e                   	pop    esi
   20122:	5f                   	pop    edi
   20123:	5d                   	pop    ebp
   20124:	c3                   	ret    
   20125:	8d 76 00             	lea    esi,[esi+0x0]
   20128:	83 ec 0c             	sub    esp,0xc
   2012b:	be cc 09 00 00       	mov    esi,0x9cc
   20130:	bb 04 00 00 00       	mov    ebx,0x4
   20135:	68 94 3d 06 00       	push   0x63d94
   2013a:	bd df 00 04 00       	mov    ebp,0x400df
   2013f:	e8 1c 25 00 00       	call   22660 <printk>
   20144:	e8 57 51 ff ff       	call   152a0 <ahciInit>
   20149:	c7 04 24 ac 3d 06 00 	mov    DWORD PTR [esp],0x63dac
   20150:	e8 0b 25 00 00       	call   22660 <printk>
   20155:	c7 04 24 8d 04 04 00 	mov    DWORD PTR [esp],0x4048d
   2015c:	e8 ff 24 00 00       	call   22660 <printk>
   20161:	83 c4 10             	add    esp,0x10
   20164:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   20168:	a1 00 98 12 00       	mov    eax,ds:0x129800
   2016d:	01 f0                	add    eax,esi
   2016f:	0f b6 90 51 02 00 00 	movzx  edx,BYTE PTR [eax+0x251]
   20176:	84 d2                	test   dl,dl
   20178:	0f 84 86 00 00 00    	je     20204 <doHDSetup+0x3d4>
   2017e:	05 00 02 00 00       	add    eax,0x200
   20183:	80 fa 01             	cmp    dl,0x1
   20186:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   2018a:	b8 6a 04 04 00       	mov    eax,0x4046a
   2018f:	0f 84 93 00 00 00    	je     20228 <doHDSetup+0x3f8>
   20195:	83 ec 04             	sub    esp,0x4
   20198:	bf 70 04 04 00       	mov    edi,0x40470
   2019d:	50                   	push   eax
   2019e:	53                   	push   ebx
   2019f:	68 a0 04 04 00       	push   0x404a0
   201a4:	e8 b7 24 00 00       	call   22660 <printk>
   201a9:	8b 15 00 98 12 00    	mov    edx,DWORD PTR ds:0x129800
   201af:	58                   	pop    eax
   201b0:	59                   	pop    ecx
   201b1:	01 f2                	add    edx,esi
   201b3:	b8 75 04 04 00       	mov    eax,0x40475
   201b8:	b9 7c 04 04 00       	mov    ecx,0x4047c
   201bd:	80 ba 60 02 00 00 00 	cmp    BYTE PTR [edx+0x260],0x0
   201c4:	0f 44 fd             	cmove  edi,ebp
   201c7:	80 ba 5f 02 00 00 00 	cmp    BYTE PTR [edx+0x25f],0x0
   201ce:	0f 44 c5             	cmove  eax,ebp
   201d1:	80 ba 5e 02 00 00 00 	cmp    BYTE PTR [edx+0x25e],0x0
   201d8:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
   201dc:	8b 82 5a 02 00 00    	mov    eax,DWORD PTR [edx+0x25a]
   201e2:	57                   	push   edi
   201e3:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   201e7:	0f 44 cd             	cmove  ecx,ebp
   201ea:	51                   	push   ecx
   201eb:	50                   	push   eax
   201ec:	0f af 82 56 02 00 00 	imul   eax,DWORD PTR [edx+0x256]
   201f3:	c1 e8 14             	shr    eax,0x14
   201f6:	50                   	push   eax
   201f7:	68 77 3d 06 00       	push   0x63d77
   201fc:	e8 5f 24 00 00       	call   22660 <printk>
   20201:	83 c4 20             	add    esp,0x20
   20204:	83 c3 01             	add    ebx,0x1
   20207:	81 c6 73 02 00 00    	add    esi,0x273
   2020d:	83 fb 0a             	cmp    ebx,0xa
   20210:	0f 85 52 ff ff ff    	jne    20168 <doHDSetup+0x338>
   20216:	81 c4 1c 08 00 00    	add    esp,0x81c
   2021c:	5b                   	pop    ebx
   2021d:	5e                   	pop    esi
   2021e:	5f                   	pop    edi
   2021f:	5d                   	pop    ebp
   20220:	c3                   	ret    
   20221:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   20228:	83 ec 0c             	sub    esp,0xc
   2022b:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   2022f:	50                   	push   eax
   20230:	e8 7b 29 00 00       	call   22bb0 <strtrim>
   20235:	83 c4 10             	add    esp,0x10
   20238:	e9 58 ff ff ff       	jmp    20195 <doHDSetup+0x365>
   2023d:	8d 76 00             	lea    esi,[esi+0x0]
   20240:	83 ec 0c             	sub    esp,0xc
   20243:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   20247:	50                   	push   eax
   20248:	e8 63 29 00 00       	call   22bb0 <strtrim>
   2024d:	83 c4 10             	add    esp,0x10
   20250:	e9 07 fe ff ff       	jmp    2005c <doHDSetup+0x22c>
   20255:	8d 76 00             	lea    esi,[esi+0x0]
   20258:	83 ec 0c             	sub    esp,0xc
   2025b:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   2025f:	50                   	push   eax
   20260:	e8 4b 29 00 00       	call   22bb0 <strtrim>
   20265:	83 c4 10             	add    esp,0x10
   20268:	e9 ae fc ff ff       	jmp    1ff1b <doHDSetup+0xeb>
   2026d:	8d 76 00             	lea    esi,[esi+0x0]
   20270:	83 ec 0c             	sub    esp,0xc
   20273:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   20277:	50                   	push   eax
   20278:	e8 33 29 00 00       	call   22bb0 <strtrim>
   2027d:	83 c4 10             	add    esp,0x10
   20280:	e9 3e fd ff ff       	jmp    1ffc3 <doHDSetup+0x193>
   20285:	8d 76 00             	lea    esi,[esi+0x0]
   20288:	83 ec 0c             	sub    esp,0xc
   2028b:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   2028f:	50                   	push   eax
   20290:	e8 1b 29 00 00       	call   22bb0 <strtrim>
   20295:	83 c4 10             	add    esp,0x10
   20298:	e9 e5 fb ff ff       	jmp    1fe82 <doHDSetup+0x52>
   2029d:	8d 76 00             	lea    esi,[esi+0x0]

000202a0 <ParamExists>:
ParamExists():
   202a0:	55                   	push   ebp
   202a1:	57                   	push   edi
   202a2:	56                   	push   esi
   202a3:	53                   	push   ebx
   202a4:	31 f6                	xor    esi,esi
   202a6:	83 ec 0c             	sub    esp,0xc
   202a9:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
   202ad:	8b 6c 24 24          	mov    ebp,DWORD PTR [esp+0x24]
   202b1:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
   202b5:	85 ff                	test   edi,edi
   202b7:	79 14                	jns    202cd <ParamExists+0x2d>
   202b9:	eb 35                	jmp    202f0 <ParamExists+0x50>
   202bb:	90                   	nop
   202bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   202c0:	83 c6 01             	add    esi,0x1
   202c3:	81 c3 00 02 00 00    	add    ebx,0x200
   202c9:	39 f7                	cmp    edi,esi
   202cb:	7c 23                	jl     202f0 <ParamExists+0x50>
   202cd:	83 ec 08             	sub    esp,0x8
   202d0:	55                   	push   ebp
   202d1:	53                   	push   ebx
   202d2:	e8 89 24 00 00       	call   22760 <strcmp>
   202d7:	83 c4 10             	add    esp,0x10
   202da:	85 c0                	test   eax,eax
   202dc:	75 e2                	jne    202c0 <ParamExists+0x20>
   202de:	83 c4 0c             	add    esp,0xc
   202e1:	b8 01 00 00 00       	mov    eax,0x1
   202e6:	5b                   	pop    ebx
   202e7:	5e                   	pop    esi
   202e8:	5f                   	pop    edi
   202e9:	5d                   	pop    ebp
   202ea:	c3                   	ret    
   202eb:	90                   	nop
   202ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   202f0:	83 c4 0c             	add    esp,0xc
   202f3:	31 c0                	xor    eax,eax
   202f5:	5b                   	pop    ebx
   202f6:	5e                   	pop    esi
   202f7:	5f                   	pop    edi
   202f8:	5d                   	pop    ebp
   202f9:	c3                   	ret    
   202fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00020300 <testWPBit>:
testWPBit():
   20300:	83 ec 0c             	sub    esp,0xc
   20303:	e8 cb 1e ff ff       	call   121d3 <enableCR0_WP>
   20308:	83 ec 08             	sub    esp,0x8
   2030b:	68 00 00 00 c0       	push   0xc0000000
   20310:	68 d8 56 08 00       	push   0x856d8
   20315:	e8 46 23 00 00       	call   22660 <printk>
   2031a:	c7 04 24 fc 56 08 00 	mov    DWORD PTR [esp],0x856fc
   20321:	e8 3a 23 00 00       	call   22660 <printk>
   20326:	83 c4 0c             	add    esp,0xc
   20329:	6a 01                	push   0x1
   2032b:	68 ff 0f 00 00       	push   0xfff
   20330:	6a 00                	push   0x0
   20332:	e8 19 1c ff ff       	call   11f50 <kSetPhysicalRangeRO>
   20337:	c7 04 24 28 57 08 00 	mov    DWORD PTR [esp],0x85728
   2033e:	e8 1d 23 00 00       	call   22660 <printk>
   20343:	fa                   	cli    
   20344:	a1 00 00 00 00       	mov    eax,ds:0x0
   20349:	a3 20 99 12 00       	mov    ds:0x129920,eax
   2034e:	b8 ef be ad de       	mov    eax,0xdeadbeef
   20353:	a3 00 00 00 00       	mov    ds:0x0,eax
   20358:	0f 20 c0             	mov    eax,cr0
   2035b:	a1 b8 97 12 00       	mov    eax,ds:0x1297b8
   20360:	83 c4 10             	add    esp,0x10
   20363:	83 f8 01             	cmp    eax,0x1
   20366:	74 38                	je     203a0 <testWPBit+0xa0>
   20368:	83 ec 0c             	sub    esp,0xc
   2036b:	68 c2 3d 06 00       	push   0x63dc2
   20370:	e8 eb 22 00 00       	call   22660 <printk>
   20375:	83 c4 10             	add    esp,0x10
   20378:	b8 00 00 00 00       	mov    eax,0x0
   2037d:	a3 00 00 00 00       	mov    ds:0x0,eax
   20382:	83 ec 04             	sub    esp,0x4
   20385:	6a 01                	push   0x1
   20387:	68 ff 0f 00 00       	push   0xfff
   2038c:	6a 00                	push   0x0
   2038e:	e8 bd 1b ff ff       	call   11f50 <kSetPhysicalRangeRO>
   20393:	83 c4 1c             	add    esp,0x1c
   20396:	c3                   	ret    
   20397:	89 f6                	mov    esi,esi
   20399:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   203a0:	83 ec 0c             	sub    esp,0xc
   203a3:	68 b3 3d 06 00       	push   0x63db3
   203a8:	e8 b3 22 00 00       	call   22660 <printk>
   203ad:	83 c4 10             	add    esp,0x10
   203b0:	eb c6                	jmp    20378 <testWPBit+0x78>
   203b2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   203b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000203c0 <kernel_main>:
kernel_main():
   203c0:	57                   	push   edi
   203c1:	56                   	push   esi
   203c2:	b8 88 99 12 00       	mov    eax,0x129988
   203c7:	53                   	push   ebx
   203c8:	81 ec d0 00 00 00    	sub    esp,0xd0
   203ce:	fa                   	cli    
   203cf:	0f 01 00             	sgdtd  [eax]
   203d2:	e8 e9 f8 ff ff       	call   1fcc0 <gdt_init>
   203d7:	c7 05 c0 97 12 00 64 	mov    DWORD PTR ds:0x1297c0,0x64
   203de:	00 00 00 
   203e1:	e8 2a 6a ff ff       	call   16e10 <kTermInit>
   203e6:	b8 e8 03 00 00       	mov    eax,0x3e8
   203eb:	83 ec 04             	sub    esp,0x4
   203ee:	c6 05 e0 97 12 00 00 	mov    BYTE PTR ds:0x1297e0,0x0
   203f5:	99                   	cdq    
   203f6:	68 fc 30 00 00       	push   0x30fc
   203fb:	6a 00                	push   0x0
   203fd:	f7 3d c0 97 12 00    	idiv   DWORD PTR ds:0x1297c0
   20403:	ff 35 00 98 12 00    	push   DWORD PTR ds:0x129800
   20409:	c6 05 e1 97 12 00 00 	mov    BYTE PTR ds:0x1297e1,0x0
   20410:	c6 05 f0 97 12 00 00 	mov    BYTE PTR ds:0x1297f0,0x0
   20417:	a3 c4 97 12 00       	mov    ds:0x1297c4,eax
   2041c:	e8 5f 09 00 00       	call   20d80 <memset>
   20421:	83 c4 0c             	add    esp,0xc
   20424:	68 00 08 00 00       	push   0x800
   20429:	68 ff 00 00 00       	push   0xff
   2042e:	ff 35 2c 99 12 00    	push   DWORD PTR ds:0x12992c
   20434:	e8 47 09 00 00       	call   20d80 <memset>
   20439:	83 c4 0c             	add    esp,0xc
   2043c:	68 00 00 19 00       	push   0x190000
   20441:	68 ff 00 00 00       	push   0xff
   20446:	ff 35 30 99 12 00    	push   DWORD PTR ds:0x129930
   2044c:	e8 2f 09 00 00       	call   20d80 <memset>
   20451:	bc 00 ff 00 00       	mov    esp,0xff00
   20456:	a1 a4 97 12 00       	mov    eax,ds:0x1297a4
   2045b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
   20461:	c7 04 24 98 97 12 00 	mov    DWORD PTR [esp],0x129798
   20468:	e8 d3 08 00 00       	call   20d40 <identify_data_sizes>
   2046d:	e8 5e 65 ff ff       	call   169d0 <terminal_clear>
   20472:	c7 04 24 ec 3d 06 00 	mov    DWORD PTR [esp],0x63dec
   20479:	e8 e2 21 00 00       	call   22660 <printk>
   2047e:	b8 7f 00 00 00       	mov    eax,0x7f
   20483:	e6 a1                	out    0xa1,al
   20485:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2048a:	e6 21                	out    0x21,al
   2048c:	e8 dc 0b fe ff       	call   106d <getInt12Memory>
   20491:	89 c3                	mov    ebx,eax
   20493:	e8 90 0b fe ff       	call   1028 <isE820Available>
   20498:	83 c4 10             	add    esp,0x10
   2049b:	3d 50 41 4d 53       	cmp    eax,0x534d4150
   204a0:	a3 84 95 12 00       	mov    ds:0x129584,eax
   204a5:	0f 84 2d 04 00 00    	je     208d8 <kernel_main+0x518>
   204ab:	0f b7 15 90 95 12 00 	movzx  edx,WORD PTR ds:0x129590
   204b2:	0f bf c2             	movsx  eax,dx
   204b5:	83 ec 04             	sub    esp,0x4
   204b8:	8d 04 40             	lea    eax,[eax+eax*2]
   204bb:	c1 e0 03             	shl    eax,0x3
   204be:	50                   	push   eax
   204bf:	ff 35 66 13 00 00    	push   DWORD PTR ds:0x1366
   204c5:	ff 35 80 95 12 00    	push   DWORD PTR ds:0x129580
   204cb:	e8 90 11 00 00       	call   21660 <memcpy>
   204d0:	58                   	pop    eax
   204d1:	5a                   	pop    edx
   204d2:	6a 20                	push   0x20
   204d4:	68 e0 73 09 00       	push   0x973e0
   204d9:	e8 12 72 ff ff       	call   176f0 <idt_init>
   204de:	59                   	pop    ecx
   204df:	ff 35 c0 97 12 00    	push   DWORD PTR ds:0x1297c0
   204e5:	e8 a4 0c fe ff       	call   118e <init_PIT>
   204ea:	5e                   	pop    esi
   204eb:	5f                   	pop    edi
   204ec:	6a 28                	push   0x28
   204ee:	6a 20                	push   0x20
   204f0:	e8 cb 80 ff ff       	call   185c0 <PIC_remap>
   204f5:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
   204fc:	e8 8f 80 ff ff       	call   18590 <IRQ_clear_mask>
   20501:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
   20508:	e8 83 80 ff ff       	call   18590 <IRQ_clear_mask>
   2050d:	fb                   	sti    
   2050e:	e8 3d 09 00 00       	call   20e50 <initSystemDate>
   20513:	58                   	pop    eax
   20514:	5a                   	pop    edx
   20515:	8d 74 24 14          	lea    esi,[esp+0x14]
   20519:	56                   	push   esi
   2051a:	68 c8 97 12 00       	push   0x1297c8
   2051f:	e8 bc 27 00 00       	call   22ce0 <gmtime_r>
   20524:	c7 04 24 f9 3d 06 00 	mov    DWORD PTR [esp],0x63df9
   2052b:	e8 30 21 00 00       	call   22660 <printk>
   20530:	59                   	pop    ecx
   20531:	5f                   	pop    edi
   20532:	68 96 00 00 00       	push   0x96
   20537:	68 00 74 09 00       	push   0x97400
   2053c:	e8 5f 13 ff ff       	call   118a0 <gets>
   20541:	83 c4 0c             	add    esp,0xc
   20544:	68 00 14 00 00       	push   0x1400
   20549:	68 e0 5f 09 00       	push   0x95fe0
   2054e:	68 00 74 09 00       	push   0x97400
   20553:	e8 48 1d ff ff       	call   122a0 <parseParamsShell>
   20558:	56                   	push   esi
   20559:	68 00 3e 06 00       	push   0x63e00
   2055e:	6a 32                	push   0x32
   20560:	a3 c8 5f 09 00       	mov    ds:0x95fc8,eax
   20565:	8d 74 24 56          	lea    esi,[esp+0x56]
   20569:	56                   	push   esi
   2056a:	e8 f1 11 ff ff       	call   11760 <strftime>
   2056f:	83 c4 1c             	add    esp,0x1c
   20572:	56                   	push   esi
   20573:	68 15 3e 06 00       	push   0x63e15
   20578:	68 29 3e 06 00       	push   0x63e29
   2057d:	e8 de 20 00 00       	call   22660 <printk>
   20582:	a1 78 98 12 00       	mov    eax,ds:0x129878
   20587:	83 c4 10             	add    esp,0x10
   2058a:	85 c0                	test   eax,eax
   2058c:	0f 85 30 03 00 00    	jne    208c2 <kernel_main+0x502>
   20592:	83 ec 0c             	sub    esp,0xc
   20595:	68 d8 39 06 00       	push   0x639d8
   2059a:	e8 c1 20 00 00       	call   22660 <printk>
   2059f:	a1 84 95 12 00       	mov    eax,ds:0x129584
   205a4:	83 c4 10             	add    esp,0x10
   205a7:	3d 50 41 4d 53       	cmp    eax,0x534d4150
   205ac:	0f 84 ca 02 00 00    	je     2087c <kernel_main+0x4bc>
   205b2:	83 ec 08             	sub    esp,0x8
   205b5:	50                   	push   eax
   205b6:	68 80 57 08 00       	push   0x85780
   205bb:	e8 a0 20 00 00       	call   22660 <printk>
   205c0:	83 c4 10             	add    esp,0x10
   205c3:	c1 e3 0a             	shl    ebx,0xa
   205c6:	ff 35 8c 95 12 00    	push   DWORD PTR ds:0x12958c
   205cc:	ff 35 88 95 12 00    	push   DWORD PTR ds:0x129588
   205d2:	53                   	push   ebx
   205d3:	68 bc 57 08 00       	push   0x857bc
   205d8:	e8 83 20 00 00       	call   22660 <printk>
   205dd:	83 c4 10             	add    esp,0x10
   205e0:	83 3d 8c 95 12 00 00 	cmp    DWORD PTR ds:0x12958c,0x0
   205e7:	77 36                	ja     2061f <kernel_main+0x25f>
   205e9:	81 3d 88 95 12 00 ff 	cmp    DWORD PTR ds:0x129588,0xfffffff
   205f0:	ff ff 0f 
   205f3:	77 2a                	ja     2061f <kernel_main+0x25f>
   205f5:	83 ec 08             	sub    esp,0x8
   205f8:	68 00 01 00 00       	push   0x100
   205fd:	68 f8 57 08 00       	push   0x857f8
   20602:	e8 59 20 00 00       	call   22660 <printk>
   20607:	c7 04 24 62 3e 06 00 	mov    DWORD PTR [esp],0x63e62
   2060e:	e8 4d 20 00 00       	call   22660 <printk>
   20613:	83 c4 10             	add    esp,0x10
   20616:	e8 d5 11 ff ff       	call   117f0 <waitForKeyboardKey>
   2061b:	3c 79                	cmp    al,0x79
   2061d:	75 f7                	jne    20616 <kernel_main+0x256>
   2061f:	ba 00 ff ff 00       	mov    edx,0xffff00
   20624:	89 d0                	mov    eax,edx
   20626:	50                   	push   eax
   20627:	5c                   	pop    esp
   20628:	e8 53 f4 ff ff       	call   1fa80 <detect_cpu>
   2062d:	83 ec 08             	sub    esp,0x8
   20630:	68 b2 96 12 00       	push   0x1296b2
   20635:	68 4b 3e 06 00       	push   0x63e4b
   2063a:	e8 21 20 00 00       	call   22660 <printk>
   2063f:	c7 04 24 84 98 12 00 	mov    DWORD PTR [esp],0x129884
   20646:	e8 25 70 ff ff       	call   17670 <identifyCPUFeatures>
   2064b:	e8 70 6b ff ff       	call   171c0 <apicCheckFor>
   20650:	83 c4 10             	add    esp,0x10
   20653:	84 c0                	test   al,al
   20655:	0f 84 0c 02 00 00    	je     20867 <kernel_main+0x4a7>
   2065b:	83 ec 0c             	sub    esp,0xc
   2065e:	6a 00                	push   0x0
   20660:	e8 ab 6b ff ff       	call   17210 <apciGetAPICID>
   20665:	0f b6 c0             	movzx  eax,al
   20668:	a3 a0 98 12 00       	mov    ds:0x1298a0,eax
   2066d:	e8 ae 6b ff ff       	call   17220 <apicGetAPICBase>
   20672:	a3 a4 98 12 00       	mov    ds:0x1298a4,eax
   20677:	e8 e4 6c ff ff       	call   17360 <apicGetHZ>
   2067c:	8b 35 a4 98 12 00    	mov    esi,DWORD PTR ds:0x1298a4
   20682:	8b 1d a0 98 12 00    	mov    ebx,DWORD PTR ds:0x1298a0
   20688:	a3 a8 98 12 00       	mov    ds:0x1298a8,eax
   2068d:	c7 05 ac 98 12 00 00 	mov    DWORD PTR ds:0x1298ac,0x0
   20694:	00 00 00 
   20697:	e8 64 6b ff ff       	call   17200 <acpiGetAPICVersion>
   2069c:	83 c4 10             	add    esp,0x10
   2069f:	ba d8 3d 06 00       	mov    edx,0x63dd8
   206a4:	84 c0                	test   al,al
   206a6:	b8 e1 3d 06 00       	mov    eax,0x63de1
   206ab:	56                   	push   esi
   206ac:	53                   	push   ebx
   206ad:	0f 44 c2             	cmove  eax,edx
   206b0:	50                   	push   eax
   206b1:	68 74 58 08 00       	push   0x85874
   206b6:	e8 a5 1f 00 00       	call   22660 <printk>
   206bb:	e8 10 6c ff ff       	call   172d0 <apicIsEnabled>
   206c0:	83 c4 10             	add    esp,0x10
   206c3:	84 c0                	test   al,al
   206c5:	74 10                	je     206d7 <kernel_main+0x317>
   206c7:	83 ec 0c             	sub    esp,0xc
   206ca:	68 71 3e 06 00       	push   0x63e71
   206cf:	e8 8c 1f 00 00       	call   22660 <printk>
   206d4:	83 c4 10             	add    esp,0x10
   206d7:	83 ec 0c             	sub    esp,0xc
   206da:	68 ad 3d 06 00       	push   0x63dad
   206df:	e8 7c 1f 00 00       	call   22660 <printk>
   206e4:	83 c4 0c             	add    esp,0xc
   206e7:	ff 35 ac 98 12 00    	push   DWORD PTR ds:0x1298ac
   206ed:	ff 35 a8 98 12 00    	push   DWORD PTR ds:0x1298a8
   206f3:	68 ac 58 08 00       	push   0x858ac
   206f8:	e8 63 1f 00 00       	call   22660 <printk>
   206fd:	83 c4 10             	add    esp,0x10
   20700:	e8 fb 6c ff ff       	call   17400 <tscGetTicksPerSecond>
   20705:	83 ec 08             	sub    esp,0x8
   20708:	50                   	push   eax
   20709:	68 8f 3e 06 00       	push   0x63e8f
   2070e:	e8 4d 1f 00 00       	call   22660 <printk>
   20713:	e8 08 6b ff ff       	call   17220 <apicGetAPICBase>
   20718:	c7 04 24 a7 3e 06 00 	mov    DWORD PTR [esp],0x63ea7
   2071f:	a3 a4 98 12 00       	mov    ds:0x1298a4,eax
   20724:	e8 37 1f 00 00       	call   22660 <printk>
   20729:	e8 92 02 00 00       	call   209c0 <initializeKernelPaging>
   2072e:	83 c4 0c             	add    esp,0xc
   20731:	ff 35 70 98 12 00    	push   DWORD PTR ds:0x129870
   20737:	ff 35 a4 98 12 00    	push   DWORD PTR ds:0x1298a4
   2073d:	68 cc 58 08 00       	push   0x858cc
   20742:	e8 19 1f 00 00       	call   22660 <printk>
   20747:	83 c4 0c             	add    esp,0xc
   2074a:	6a 13                	push   0x13
   2074c:	ff 35 a4 98 12 00    	push   DWORD PTR ds:0x1298a4
   20752:	ff 35 70 98 12 00    	push   DWORD PTR ds:0x129870
   20758:	e8 23 16 ff ff       	call   11d80 <kMapPage>
   2075d:	83 c4 0c             	add    esp,0xc
   20760:	6a 01                	push   0x1
   20762:	68 ff 0f 00 00       	push   0xfff
   20767:	6a 00                	push   0x0
   20769:	e8 e2 17 ff ff       	call   11f50 <kSetPhysicalRangeRO>
   2076e:	e8 8d fb ff ff       	call   20300 <testWPBit>
   20773:	5b                   	pop    ebx
   20774:	5e                   	pop    esi
   20775:	ff 35 c0 97 12 00    	push   DWORD PTR ds:0x1297c0
   2077b:	68 fc 58 08 00       	push   0x858fc
   20780:	c6 05 e1 97 12 00 01 	mov    BYTE PTR ds:0x1297e1,0x1
   20787:	e8 d4 1e 00 00       	call   22660 <printk>
   2078c:	c7 04 24 c3 3e 06 00 	mov    DWORD PTR [esp],0x63ec3
   20793:	e8 c8 1e 00 00       	call   22660 <printk>
   20798:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
   2079f:	e8 ec 2c 00 00       	call   23490 <wait>
   207a4:	c7 04 24 d7 3e 06 00 	mov    DWORD PTR [esp],0x63ed7
   207ab:	e8 b0 1e 00 00       	call   22660 <printk>
   207b0:	8b 3d c8 5f 09 00    	mov    edi,DWORD PTR ds:0x95fc8
   207b6:	83 c4 10             	add    esp,0x10
   207b9:	85 ff                	test   edi,edi
   207bb:	0f 88 29 01 00 00    	js     208ea <kernel_main+0x52a>
   207c1:	be e0 5f 09 00       	mov    esi,0x95fe0
   207c6:	31 db                	xor    ebx,ebx
   207c8:	eb 11                	jmp    207db <kernel_main+0x41b>
   207ca:	83 c3 01             	add    ebx,0x1
   207cd:	81 c6 00 02 00 00    	add    esi,0x200
   207d3:	39 df                	cmp    edi,ebx
   207d5:	0f 8c 0f 01 00 00    	jl     208ea <kernel_main+0x52a>
   207db:	83 ec 08             	sub    esp,0x8
   207de:	68 de 3e 06 00       	push   0x63ede
   207e3:	56                   	push   esi
   207e4:	e8 77 1f 00 00       	call   22760 <strcmp>
   207e9:	83 c4 10             	add    esp,0x10
   207ec:	85 c0                	test   eax,eax
   207ee:	75 da                	jne    207ca <kernel_main+0x40a>
   207f0:	83 ec 0c             	sub    esp,0xc
   207f3:	68 68 59 08 00       	push   0x85968
   207f8:	e8 63 1e 00 00       	call   22660 <printk>
   207fd:	8b 3d c8 5f 09 00    	mov    edi,DWORD PTR ds:0x95fc8
   20803:	83 c4 10             	add    esp,0x10
   20806:	85 ff                	test   edi,edi
   20808:	0f 88 4c 01 00 00    	js     2095a <kernel_main+0x59a>
   2080e:	be e0 5f 09 00       	mov    esi,0x95fe0
   20813:	31 db                	xor    ebx,ebx
   20815:	eb 11                	jmp    20828 <kernel_main+0x468>
   20817:	83 c3 01             	add    ebx,0x1
   2081a:	81 c6 00 02 00 00    	add    esi,0x200
   20820:	39 df                	cmp    edi,ebx
   20822:	0f 8c 32 01 00 00    	jl     2095a <kernel_main+0x59a>
   20828:	83 ec 08             	sub    esp,0x8
   2082b:	68 e4 3e 06 00       	push   0x63ee4
   20830:	56                   	push   esi
   20831:	e8 2a 1f 00 00       	call   22760 <strcmp>
   20836:	83 c4 10             	add    esp,0x10
   20839:	85 c0                	test   eax,eax
   2083b:	75 da                	jne    20817 <kernel_main+0x457>
   2083d:	83 ec 0c             	sub    esp,0xc
   20840:	68 f0 59 08 00       	push   0x859f0
   20845:	e8 16 1e 00 00       	call   22660 <printk>
   2084a:	83 c4 10             	add    esp,0x10
   2084d:	e8 de f5 ff ff       	call   1fe30 <doHDSetup>
   20852:	b8 28 00 00 00       	mov    eax,0x28
   20857:	8e d0                	mov    ss,eax
   20859:	c6 05 e0 97 12 00 01 	mov    BYTE PTR ds:0x1297e0,0x1
   20860:	e8 4b 2e ff ff       	call   136b0 <biShell>
   20865:	eb f9                	jmp    20860 <kernel_main+0x4a0>
   20867:	83 ec 0c             	sub    esp,0xc
   2086a:	68 7e 3e 06 00       	push   0x63e7e
   2086f:	e8 ec 1d 00 00       	call   22660 <printk>
   20874:	83 c4 10             	add    esp,0x10
   20877:	e9 84 fe ff ff       	jmp    20700 <kernel_main+0x340>
   2087c:	83 ec 08             	sub    esp,0x8
   2087f:	68 50 41 4d 53       	push   0x534d4150
   20884:	68 58 57 08 00       	push   0x85758
   20889:	e8 d2 1d 00 00       	call   22660 <printk>
   2088e:	5f                   	pop    edi
   2088f:	58                   	pop    eax
   20890:	0f bf 05 90 95 12 00 	movsx  eax,WORD PTR ds:0x129590
   20897:	50                   	push   eax
   20898:	ff 35 80 95 12 00    	push   DWORD PTR ds:0x129580
   2089e:	e8 dd f3 ff ff       	call   1fc80 <sum_e820_usable_memory>
   208a3:	c7 04 24 ad 3d 06 00 	mov    DWORD PTR [esp],0x63dad
   208aa:	a3 88 95 12 00       	mov    ds:0x129588,eax
   208af:	89 15 8c 95 12 00    	mov    DWORD PTR ds:0x12958c,edx
   208b5:	e8 a6 1d 00 00       	call   22660 <printk>
   208ba:	83 c4 10             	add    esp,0x10
   208bd:	e9 01 fd ff ff       	jmp    205c3 <kernel_main+0x203>
   208c2:	83 ec 08             	sub    esp,0x8
   208c5:	50                   	push   eax
   208c6:	68 40 3e 06 00       	push   0x63e40
   208cb:	e8 90 1d 00 00       	call   22660 <printk>
   208d0:	83 c4 10             	add    esp,0x10
   208d3:	e9 ba fc ff ff       	jmp    20592 <kernel_main+0x1d2>
   208d8:	e8 5b 09 fe ff       	call   1238 <getE820Memory_asm>
   208dd:	89 c2                	mov    edx,eax
   208df:	66 a3 90 95 12 00    	mov    ds:0x129590,ax
   208e5:	e9 c8 fb ff ff       	jmp    204b2 <kernel_main+0xf2>
   208ea:	83 ec 0c             	sub    esp,0xc
   208ed:	68 ea 3e 06 00       	push   0x63eea
   208f2:	e8 69 1d 00 00       	call   22660 <printk>
   208f7:	e8 04 81 ff ff       	call   18a00 <mpInit>
   208fc:	5a                   	pop    edx
   208fd:	59                   	pop    ecx
   208fe:	50                   	push   eax
   208ff:	68 fe 3e 06 00       	push   0x63efe
   20904:	e8 57 1d 00 00       	call   22660 <printk>
   20909:	c7 04 24 9c 59 08 00 	mov    DWORD PTR [esp],0x8599c
   20910:	e8 4b 1d 00 00       	call   22660 <printk>
   20915:	e8 a4 0c fe ff       	call   15be <AP_startup>
   2091a:	c7 04 24 f4 01 00 00 	mov    DWORD PTR [esp],0x1f4
   20921:	e8 6a 2b 00 00       	call   23490 <wait>
   20926:	0f b6 05 a1 15 00 00 	movzx  eax,BYTE PTR ds:0x15a1
   2092d:	83 c4 0c             	add    esp,0xc
   20930:	83 c0 01             	add    eax,0x1
   20933:	50                   	push   eax
   20934:	0f b6 05 a3 15 00 00 	movzx  eax,BYTE PTR ds:0x15a3
   2093b:	83 c0 01             	add    eax,0x1
   2093e:	50                   	push   eax
   2093f:	68 bc 59 08 00       	push   0x859bc
   20944:	e8 17 1d 00 00       	call   22660 <printk>
   20949:	8b 3d c8 5f 09 00    	mov    edi,DWORD PTR ds:0x95fc8
   2094f:	83 c4 10             	add    esp,0x10
   20952:	85 ff                	test   edi,edi
   20954:	0f 89 b4 fe ff ff    	jns    2080e <kernel_main+0x44e>
   2095a:	83 ec 0c             	sub    esp,0xc
   2095d:	be b0 03 04 00       	mov    esi,0x403b0
   20962:	68 14 3f 06 00       	push   0x63f14
   20967:	e8 f4 1c 00 00       	call   22660 <printk>
   2096c:	e8 1f 5d ff ff       	call   16690 <pciInitialize>
   20971:	0f b6 05 ef 97 12 00 	movzx  eax,BYTE PTR ds:0x1297ef
   20978:	0f b6 0d ec 97 12 00 	movzx  ecx,BYTE PTR ds:0x1297ec
   2097f:	ba 6e 5c 04 00       	mov    edx,0x45c6e
   20984:	0f b6 1d ed 97 12 00 	movzx  ebx,BYTE PTR ds:0x1297ed
   2098b:	3c 02                	cmp    al,0x2
   2098d:	0f 43 d6             	cmovae edx,esi
   20990:	89 1c 24             	mov    DWORD PTR [esp],ebx
   20993:	51                   	push   ecx
   20994:	52                   	push   edx
   20995:	50                   	push   eax
   20996:	68 1c 59 08 00       	push   0x8591c
   2099b:	e8 c0 1c 00 00       	call   22660 <printk>
   209a0:	83 c4 14             	add    esp,0x14
   209a3:	68 44 59 08 00       	push   0x85944
   209a8:	e8 b3 1c 00 00       	call   22660 <printk>
   209ad:	83 c4 10             	add    esp,0x10
   209b0:	e9 98 fe ff ff       	jmp    2084d <kernel_main+0x48d>
   209b5:	66 90                	xchg   ax,ax
   209b7:	66 90                	xchg   ax,ax
   209b9:	66 90                	xchg   ax,ax
   209bb:	66 90                	xchg   ax,ax
   209bd:	66 90                	xchg   ax,ax
   209bf:	90                   	nop

000209c0 <initializeKernelPaging>:
initializeKernelPaging():
   209c0:	57                   	push   edi
   209c1:	56                   	push   esi
   209c2:	31 ff                	xor    edi,edi
   209c4:	53                   	push   ebx
   209c5:	83 ec 08             	sub    esp,0x8
   209c8:	68 18 5a 08 00       	push   0x85a18
   209cd:	6a 20                	push   0x20
   209cf:	e8 ac 1c 00 00       	call   22680 <printd>
   209d4:	8b 35 e4 97 12 00    	mov    esi,DWORD PTR ds:0x1297e4
   209da:	68 00 c0 4c 00       	push   0x4cc000
   209df:	56                   	push   esi
   209e0:	68 4c 5a 08 00       	push   0x85a4c
   209e5:	6a 20                	push   0x20
   209e7:	e8 94 1c 00 00       	call   22680 <printd>
   209ec:	83 c4 1c             	add    esp,0x1c
   209ef:	68 00 04 00 00       	push   0x400
   209f4:	68 88 5a 08 00       	push   0x85a88
   209f9:	6a 20                	push   0x20
   209fb:	e8 80 1c 00 00       	call   22680 <printd>
   20a00:	83 c4 10             	add    esp,0x10
   20a03:	b9 00 c0 4c 00       	mov    ecx,0x4cc000
   20a08:	90                   	nop
   20a09:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   20a10:	89 c8                	mov    eax,ecx
   20a12:	89 fb                	mov    ebx,edi
   20a14:	31 d2                	xor    edx,edx
   20a16:	83 c8 07             	or     eax,0x7
   20a19:	c1 e3 16             	shl    ebx,0x16
   20a1c:	89 04 be             	mov    DWORD PTR [esi+edi*4],eax
   20a1f:	90                   	nop
   20a20:	89 d0                	mov    eax,edx
   20a22:	c1 e0 0c             	shl    eax,0xc
   20a25:	01 d8                	add    eax,ebx
   20a27:	83 c8 07             	or     eax,0x7
   20a2a:	89 04 91             	mov    DWORD PTR [ecx+edx*4],eax
   20a2d:	83 c2 01             	add    edx,0x1
   20a30:	81 fa 00 04 00 00    	cmp    edx,0x400
   20a36:	75 e8                	jne    20a20 <initializeKernelPaging+0x60>
   20a38:	81 c1 00 10 00 00    	add    ecx,0x1000
   20a3e:	83 c7 01             	add    edi,0x1
   20a41:	81 f9 00 c0 8c 00    	cmp    ecx,0x8cc000
   20a47:	75 c7                	jne    20a10 <initializeKernelPaging+0x50>
   20a49:	68 00 c0 4c 00       	push   0x4cc000
   20a4e:	68 00 ac 4b 00       	push   0x4bac00
   20a53:	68 b8 5a 08 00       	push   0x85ab8
   20a58:	6a 20                	push   0x20
   20a5a:	e8 21 1c 00 00       	call   22680 <printd>
   20a5f:	83 c4 0c             	add    esp,0xc
   20a62:	68 00 01 00 00       	push   0x100
   20a67:	68 f4 5a 08 00       	push   0x85af4
   20a6c:	6a 20                	push   0x20
   20a6e:	e8 0d 1c 00 00       	call   22680 <printd>
   20a73:	83 c4 10             	add    esp,0x10
   20a76:	ba 00 ac 4b 00       	mov    edx,0x4bac00
   20a7b:	b8 00 c0 4c 00       	mov    eax,0x4cc000
   20a80:	89 c1                	mov    ecx,eax
   20a82:	05 00 10 00 00       	add    eax,0x1000
   20a87:	83 c2 04             	add    edx,0x4
   20a8a:	83 c9 07             	or     ecx,0x7
   20a8d:	89 4a fc             	mov    DWORD PTR [edx-0x4],ecx
   20a90:	3d 00 d0 5c 00       	cmp    eax,0x5cd000
   20a95:	75 e9                	jne    20a80 <initializeKernelPaging+0xc0>
   20a97:	b8 00 a0 4b 00       	mov    eax,0x4ba000
   20a9c:	0f 22 d8             	mov    cr3,eax
   20a9f:	0f 20 c0             	mov    eax,cr0
   20aa2:	0d 00 00 00 80       	or     eax,0x80000000
   20aa7:	0f 22 c0             	mov    cr0,eax
   20aaa:	83 ec 08             	sub    esp,0x8
   20aad:	6a 01                	push   0x1
   20aaf:	6a c0                	push   0xffffffc0
   20ab1:	6a 88                	push   0xffffff88
   20ab3:	68 ff ff 0f 00       	push   0xfffff
   20ab8:	68 00 00 00 c0       	push   0xc0000000
   20abd:	6a 01                	push   0x1
   20abf:	e8 fc 6a ff ff       	call   175c0 <gdtEntryApplication>
   20ac4:	83 c4 18             	add    esp,0x18
   20ac7:	6a 01                	push   0x1
   20ac9:	6a c0                	push   0xffffffc0
   20acb:	6a 82                	push   0xffffff82
   20acd:	68 ff ff 0f 00       	push   0xfffff
   20ad2:	68 00 00 00 c0       	push   0xc0000000
   20ad7:	6a 02                	push   0x2
   20ad9:	e8 e2 6a ff ff       	call   175c0 <gdtEntryApplication>
   20ade:	83 c4 14             	add    esp,0x14
   20ae1:	b8 ff 07 00 00       	mov    eax,0x7ff
   20ae6:	c7 05 8a 99 12 00 00 	mov    DWORD PTR ds:0x12998a,0x164800
   20aed:	48 16 00 
   20af0:	68 88 99 12 00       	push   0x129988
   20af5:	66 a3 88 99 12 00    	mov    ds:0x129988,ax
   20afb:	e8 3d 06 fe ff       	call   113d <set_gdt>
   20b00:	5a                   	pop    edx
   20b01:	59                   	pop    ecx
   20b02:	6a 20                	push   0x20
   20b04:	68 e0 73 09 00       	push   0x973e0
   20b09:	e8 e2 6b ff ff       	call   176f0 <idt_init>
   20b0e:	e8 14 08 fe ff       	call   1327 <doPagingJump>
   20b13:	83 c4 10             	add    esp,0x10
   20b16:	f6 05 78 98 12 00 20 	test   BYTE PTR ds:0x129878,0x20
   20b1d:	75 04                	jne    20b23 <initializeKernelPaging+0x163>
   20b1f:	5b                   	pop    ebx
   20b20:	5e                   	pop    esi
   20b21:	5f                   	pop    edi
   20b22:	c3                   	ret    
   20b23:	83 ec 08             	sub    esp,0x8
   20b26:	68 00 00 09 05       	push   0x5090000
   20b2b:	68 14 5b 08 00       	push   0x85b14
   20b30:	e8 2b 1b 00 00       	call   22660 <printk>
   20b35:	83 c4 10             	add    esp,0x10
   20b38:	f6 05 78 98 12 00 20 	test   BYTE PTR ds:0x129878,0x20
   20b3f:	74 de                	je     20b1f <initializeKernelPaging+0x15f>
   20b41:	83 ec 0c             	sub    esp,0xc
   20b44:	68 48 5b 08 00       	push   0x85b48
   20b49:	e8 12 1b 00 00       	call   22660 <printk>
   20b4e:	83 c4 10             	add    esp,0x10
   20b51:	5b                   	pop    ebx
   20b52:	5e                   	pop    esi
   20b53:	5f                   	pop    edi
   20b54:	c3                   	ret    
   20b55:	66 90                	xchg   ax,ax
   20b57:	66 90                	xchg   ax,ax
   20b59:	66 90                	xchg   ax,ax
   20b5b:	66 90                	xchg   ax,ax
   20b5d:	66 90                	xchg   ax,ax
   20b5f:	90                   	nop

00020b60 <reverse>:
reverse():
   20b60:	56                   	push   esi
   20b61:	53                   	push   ebx
   20b62:	83 ec 10             	sub    esp,0x10
   20b65:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   20b69:	53                   	push   ebx
   20b6a:	e8 91 1c 00 00       	call   22800 <strlen>
   20b6f:	83 e8 01             	sub    eax,0x1
   20b72:	83 c4 10             	add    esp,0x10
   20b75:	85 c0                	test   eax,eax
   20b77:	7e 21                	jle    20b9a <reverse+0x3a>
   20b79:	31 d2                	xor    edx,edx
   20b7b:	90                   	nop
   20b7c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   20b80:	0f b6 34 13          	movzx  esi,BYTE PTR [ebx+edx*1]
   20b84:	0f b6 0c 03          	movzx  ecx,BYTE PTR [ebx+eax*1]
   20b88:	88 0c 13             	mov    BYTE PTR [ebx+edx*1],cl
   20b8b:	89 f1                	mov    ecx,esi
   20b8d:	83 c2 01             	add    edx,0x1
   20b90:	88 0c 03             	mov    BYTE PTR [ebx+eax*1],cl
   20b93:	83 e8 01             	sub    eax,0x1
   20b96:	39 c2                	cmp    edx,eax
   20b98:	7c e6                	jl     20b80 <reverse+0x20>
   20b9a:	83 c4 04             	add    esp,0x4
   20b9d:	5b                   	pop    ebx
   20b9e:	5e                   	pop    esi
   20b9f:	c3                   	ret    

00020ba0 <itoa>:
itoa():
   20ba0:	55                   	push   ebp
   20ba1:	57                   	push   edi
   20ba2:	56                   	push   esi
   20ba3:	53                   	push   ebx
   20ba4:	31 f6                	xor    esi,esi
   20ba6:	83 ec 1c             	sub    esp,0x1c
   20ba9:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
   20bad:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   20bb1:	89 c1                	mov    ecx,eax
   20bb3:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   20bb7:	c1 f8 1f             	sar    eax,0x1f
   20bba:	31 c1                	xor    ecx,eax
   20bbc:	29 c1                	sub    ecx,eax
   20bbe:	eb 02                	jmp    20bc2 <itoa+0x22>
   20bc0:	89 de                	mov    esi,ebx
   20bc2:	b8 67 66 66 66       	mov    eax,0x66666667
   20bc7:	8d 5e 01             	lea    ebx,[esi+0x1]
   20bca:	f7 e9                	imul   ecx
   20bcc:	89 c8                	mov    eax,ecx
   20bce:	c1 f8 1f             	sar    eax,0x1f
   20bd1:	89 dd                	mov    ebp,ebx
   20bd3:	c1 fa 02             	sar    edx,0x2
   20bd6:	29 c2                	sub    edx,eax
   20bd8:	8d 04 92             	lea    eax,[edx+edx*4]
   20bdb:	01 c0                	add    eax,eax
   20bdd:	29 c1                	sub    ecx,eax
   20bdf:	83 c1 30             	add    ecx,0x30
   20be2:	85 d2                	test   edx,edx
   20be4:	88 4c 1f ff          	mov    BYTE PTR [edi+ebx*1-0x1],cl
   20be8:	89 d1                	mov    ecx,edx
   20bea:	75 d4                	jne    20bc0 <itoa+0x20>
   20bec:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   20bf0:	85 c0                	test   eax,eax
   20bf2:	79 07                	jns    20bfb <itoa+0x5b>
   20bf4:	8d 5e 02             	lea    ebx,[esi+0x2]
   20bf7:	c6 04 2f 2d          	mov    BYTE PTR [edi+ebp*1],0x2d
   20bfb:	c6 04 1f 00          	mov    BYTE PTR [edi+ebx*1],0x0
   20bff:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
   20c03:	83 c4 1c             	add    esp,0x1c
   20c06:	5b                   	pop    ebx
   20c07:	5e                   	pop    esi
   20c08:	5f                   	pop    edi
   20c09:	5d                   	pop    ebp
   20c0a:	e9 51 ff ff ff       	jmp    20b60 <reverse>
   20c0f:	90                   	nop

00020c10 <itox>:
itox():
   20c10:	53                   	push   ebx
   20c11:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
   20c15:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   20c19:	8d 43 04             	lea    eax,[ebx+0x4]
   20c1c:	c6 43 04 00          	mov    BYTE PTR [ebx+0x4],0x0
   20c20:	83 eb 04             	sub    ebx,0x4
   20c23:	90                   	nop
   20c24:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   20c28:	89 d1                	mov    ecx,edx
   20c2a:	83 e8 01             	sub    eax,0x1
   20c2d:	c1 ea 04             	shr    edx,0x4
   20c30:	83 e1 0f             	and    ecx,0xf
   20c33:	39 c3                	cmp    ebx,eax
   20c35:	0f b6 89 01 40 06 00 	movzx  ecx,BYTE PTR [ecx+0x64001]
   20c3c:	88 08                	mov    BYTE PTR [eax],cl
   20c3e:	75 e8                	jne    20c28 <itox+0x18>
   20c40:	5b                   	pop    ebx
   20c41:	c3                   	ret    
   20c42:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   20c49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020c50 <atoi>:
atoi():
   20c50:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
   20c54:	0f be 11             	movsx  edx,BYTE PTR [ecx]
   20c57:	84 d2                	test   dl,dl
   20c59:	74 19                	je     20c74 <atoi+0x24>
   20c5b:	83 c1 01             	add    ecx,0x1
   20c5e:	31 c0                	xor    eax,eax
   20c60:	8d 04 80             	lea    eax,[eax+eax*4]
   20c63:	83 c1 01             	add    ecx,0x1
   20c66:	8d 44 42 d0          	lea    eax,[edx+eax*2-0x30]
   20c6a:	0f be 51 ff          	movsx  edx,BYTE PTR [ecx-0x1]
   20c6e:	84 d2                	test   dl,dl
   20c70:	75 ee                	jne    20c60 <atoi+0x10>
   20c72:	f3 c3                	repz ret 
   20c74:	31 c0                	xor    eax,eax
   20c76:	c3                   	ret    
   20c77:	89 f6                	mov    esi,esi
   20c79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020c80 <convert>:
convert():
   20c80:	83 ec 10             	sub    esp,0x10
   20c83:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   20c87:	c6 44 24 0a 41       	mov    BYTE PTR [esp+0xa],0x41
   20c8c:	c6 44 24 0b 42       	mov    BYTE PTR [esp+0xb],0x42
   20c91:	c6 44 24 0c 43       	mov    BYTE PTR [esp+0xc],0x43
   20c96:	c6 44 24 0d 44       	mov    BYTE PTR [esp+0xd],0x44
   20c9b:	c6 44 24 0e 45       	mov    BYTE PTR [esp+0xe],0x45
   20ca0:	83 f8 08             	cmp    eax,0x8
   20ca3:	c6 44 24 0f 46       	mov    BYTE PTR [esp+0xf],0x46
   20ca8:	76 0e                	jbe    20cb8 <convert+0x38>
   20caa:	0f be 04 04          	movsx  eax,BYTE PTR [esp+eax*1]
   20cae:	83 c4 10             	add    esp,0x10
   20cb1:	c3                   	ret    
   20cb2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20cb8:	83 c0 30             	add    eax,0x30
   20cbb:	83 c4 10             	add    esp,0x10
   20cbe:	c3                   	ret    
   20cbf:	90                   	nop

00020cc0 <itoha>:
itoha():
   20cc0:	57                   	push   edi
   20cc1:	56                   	push   esi
   20cc2:	53                   	push   ebx
   20cc3:	83 ec 10             	sub    esp,0x10
   20cc6:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
   20cca:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   20cce:	85 c0                	test   eax,eax
   20cd0:	74 5a                	je     20d2c <itoha+0x6c>
   20cd2:	ba 07 00 00 00       	mov    edx,0x7
   20cd7:	89 f6                	mov    esi,esi
   20cd9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   20ce0:	89 c1                	mov    ecx,eax
   20ce2:	83 ea 01             	sub    edx,0x1
   20ce5:	c6 44 24 0a 41       	mov    BYTE PTR [esp+0xa],0x41
   20cea:	83 e1 0f             	and    ecx,0xf
   20ced:	c6 44 24 0b 42       	mov    BYTE PTR [esp+0xb],0x42
   20cf2:	c6 44 24 0c 43       	mov    BYTE PTR [esp+0xc],0x43
   20cf7:	83 f9 08             	cmp    ecx,0x8
   20cfa:	c6 44 24 0d 44       	mov    BYTE PTR [esp+0xd],0x44
   20cff:	c6 44 24 0e 45       	mov    BYTE PTR [esp+0xe],0x45
   20d04:	c6 44 24 0f 46       	mov    BYTE PTR [esp+0xf],0x46
   20d09:	8d 59 30             	lea    ebx,[ecx+0x30]
   20d0c:	7e 04                	jle    20d12 <itoha+0x52>
   20d0e:	0f be 1c 0c          	movsx  ebx,BYTE PTR [esp+ecx*1]
   20d12:	29 c8                	sub    eax,ecx
   20d14:	89 d7                	mov    edi,edx
   20d16:	88 5c 16 01          	mov    BYTE PTR [esi+edx*1+0x1],bl
   20d1a:	c1 e8 04             	shr    eax,0x4
   20d1d:	85 c0                	test   eax,eax
   20d1f:	75 bf                	jne    20ce0 <itoha+0x20>
   20d21:	c6 04 3e 00          	mov    BYTE PTR [esi+edi*1],0x0
   20d25:	83 c4 10             	add    esp,0x10
   20d28:	5b                   	pop    ebx
   20d29:	5e                   	pop    esi
   20d2a:	5f                   	pop    edi
   20d2b:	c3                   	ret    
   20d2c:	bf 07 00 00 00       	mov    edi,0x7
   20d31:	eb ee                	jmp    20d21 <itoha+0x61>
   20d33:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20d39:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020d40 <identify_data_sizes>:
identify_data_sizes():
   20d40:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   20d44:	ba 02 00 00 00       	mov    edx,0x2
   20d49:	b9 04 00 00 00       	mov    ecx,0x4
   20d4e:	66 89 10             	mov    WORD PTR [eax],dx
   20d51:	ba 04 00 00 00       	mov    edx,0x4
   20d56:	66 89 48 02          	mov    WORD PTR [eax+0x2],cx
   20d5a:	66 89 50 04          	mov    WORD PTR [eax+0x4],dx
   20d5e:	b9 08 00 00 00       	mov    ecx,0x8
   20d63:	ba 08 00 00 00       	mov    edx,0x8
   20d68:	66 89 48 06          	mov    WORD PTR [eax+0x6],cx
   20d6c:	66 89 50 08          	mov    WORD PTR [eax+0x8],dx
   20d70:	c3                   	ret    
   20d71:	eb 0d                	jmp    20d80 <memset>
   20d73:	90                   	nop
   20d74:	90                   	nop
   20d75:	90                   	nop
   20d76:	90                   	nop
   20d77:	90                   	nop
   20d78:	90                   	nop
   20d79:	90                   	nop
   20d7a:	90                   	nop
   20d7b:	90                   	nop
   20d7c:	90                   	nop
   20d7d:	90                   	nop
   20d7e:	90                   	nop
   20d7f:	90                   	nop

00020d80 <memset>:
memset():
   20d80:	53                   	push   ebx
   20d81:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   20d85:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   20d89:	f6 c2 03             	test   dl,0x3
   20d8c:	75 22                	jne    20db0 <memset+0x30>
   20d8e:	83 ea 04             	sub    edx,0x4
   20d91:	0f b6 5c 24 0c       	movzx  ebx,BYTE PTR [esp+0xc]
   20d96:	89 c1                	mov    ecx,eax
   20d98:	74 11                	je     20dab <memset+0x2b>
   20d9a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20da0:	83 c1 01             	add    ecx,0x1
   20da3:	83 ea 04             	sub    edx,0x4
   20da6:	88 59 ff             	mov    BYTE PTR [ecx-0x1],bl
   20da9:	75 f5                	jne    20da0 <memset+0x20>
   20dab:	5b                   	pop    ebx
   20dac:	c3                   	ret    
   20dad:	8d 76 00             	lea    esi,[esi+0x0]
   20db0:	f6 c2 01             	test   dl,0x1
   20db3:	75 23                	jne    20dd8 <memset+0x58>
   20db5:	83 ea 02             	sub    edx,0x2
   20db8:	74 f1                	je     20dab <memset+0x2b>
   20dba:	0f b6 5c 24 0c       	movzx  ebx,BYTE PTR [esp+0xc]
   20dbf:	89 c1                	mov    ecx,eax
   20dc1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   20dc8:	83 c1 01             	add    ecx,0x1
   20dcb:	83 ea 02             	sub    edx,0x2
   20dce:	88 59 ff             	mov    BYTE PTR [ecx-0x1],bl
   20dd1:	75 f5                	jne    20dc8 <memset+0x48>
   20dd3:	5b                   	pop    ebx
   20dd4:	c3                   	ret    
   20dd5:	8d 76 00             	lea    esi,[esi+0x0]
   20dd8:	0f b6 5c 24 0c       	movzx  ebx,BYTE PTR [esp+0xc]
   20ddd:	01 c2                	add    edx,eax
   20ddf:	89 c1                	mov    ecx,eax
   20de1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   20de8:	83 c1 01             	add    ecx,0x1
   20deb:	88 59 ff             	mov    BYTE PTR [ecx-0x1],bl
   20dee:	39 ca                	cmp    edx,ecx
   20df0:	75 f6                	jne    20de8 <memset+0x68>
   20df2:	5b                   	pop    ebx
   20df3:	c3                   	ret    
   20df4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20dfa:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00020e00 <bcdToDec>:
bcdToDec():
   20e00:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   20e04:	89 c2                	mov    edx,eax
   20e06:	83 e0 0f             	and    eax,0xf
   20e09:	c0 ea 04             	shr    dl,0x4
   20e0c:	8d 14 92             	lea    edx,[edx+edx*4]
   20e0f:	8d 04 50             	lea    eax,[eax+edx*2]
   20e12:	c3                   	ret    
   20e13:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20e19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020e20 <decToBcd>:
decToBcd():
   20e20:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   20e24:	0f b6 c8             	movzx  ecx,al
   20e27:	8d 14 89             	lea    edx,[ecx+ecx*4]
   20e2a:	8d 14 d1             	lea    edx,[ecx+edx*8]
   20e2d:	8d 14 92             	lea    edx,[edx+edx*4]
   20e30:	66 c1 ea 0b          	shr    dx,0xb
   20e34:	89 d1                	mov    ecx,edx
   20e36:	8d 14 92             	lea    edx,[edx+edx*4]
   20e39:	c1 e1 04             	shl    ecx,0x4
   20e3c:	01 d2                	add    edx,edx
   20e3e:	29 d0                	sub    eax,edx
   20e40:	01 c8                	add    eax,ecx
   20e42:	c3                   	ret    
   20e43:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20e49:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020e50 <initSystemDate>:
initSystemDate():
   20e50:	83 ec 48             	sub    esp,0x48
   20e53:	31 c0                	xor    eax,eax
   20e55:	e6 70                	out    0x70,al
   20e57:	e4 71                	in     al,0x71
   20e59:	89 c2                	mov    edx,eax
   20e5b:	83 e0 0f             	and    eax,0xf
   20e5e:	c0 ea 04             	shr    dl,0x4
   20e61:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20e64:	8d 14 48             	lea    edx,[eax+ecx*2]
   20e67:	b8 02 00 00 00       	mov    eax,0x2
   20e6c:	0f b6 d2             	movzx  edx,dl
   20e6f:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
   20e73:	e6 70                	out    0x70,al
   20e75:	e4 71                	in     al,0x71
   20e77:	89 c2                	mov    edx,eax
   20e79:	83 e0 0f             	and    eax,0xf
   20e7c:	c0 ea 04             	shr    dl,0x4
   20e7f:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20e82:	8d 14 48             	lea    edx,[eax+ecx*2]
   20e85:	b8 04 00 00 00       	mov    eax,0x4
   20e8a:	0f b6 d2             	movzx  edx,dl
   20e8d:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
   20e91:	e6 70                	out    0x70,al
   20e93:	e4 71                	in     al,0x71
   20e95:	89 c2                	mov    edx,eax
   20e97:	83 e0 0f             	and    eax,0xf
   20e9a:	c0 ea 04             	shr    dl,0x4
   20e9d:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20ea0:	8d 14 48             	lea    edx,[eax+ecx*2]
   20ea3:	b8 07 00 00 00       	mov    eax,0x7
   20ea8:	0f b6 d2             	movzx  edx,dl
   20eab:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
   20eaf:	e6 70                	out    0x70,al
   20eb1:	e4 71                	in     al,0x71
   20eb3:	89 c2                	mov    edx,eax
   20eb5:	83 e0 0f             	and    eax,0xf
   20eb8:	c0 ea 04             	shr    dl,0x4
   20ebb:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20ebe:	8d 14 48             	lea    edx,[eax+ecx*2]
   20ec1:	b8 08 00 00 00       	mov    eax,0x8
   20ec6:	0f b6 d2             	movzx  edx,dl
   20ec9:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
   20ecd:	e6 70                	out    0x70,al
   20ecf:	e4 71                	in     al,0x71
   20ed1:	89 c2                	mov    edx,eax
   20ed3:	83 e0 0f             	and    eax,0xf
   20ed6:	c0 ea 04             	shr    dl,0x4
   20ed9:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20edc:	8d 14 48             	lea    edx,[eax+ecx*2]
   20edf:	b8 09 00 00 00       	mov    eax,0x9
   20ee4:	0f b6 d2             	movzx  edx,dl
   20ee7:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
   20eeb:	e6 70                	out    0x70,al
   20eed:	e4 71                	in     al,0x71
   20eef:	89 c2                	mov    edx,eax
   20ef1:	83 e0 0f             	and    eax,0xf
   20ef4:	c7 44 24 30 ff ff ff 	mov    DWORD PTR [esp+0x30],0xffffffff
   20efb:	ff 
   20efc:	c0 ea 04             	shr    dl,0x4
   20eff:	8d 0c 92             	lea    ecx,[edx+edx*4]
   20f02:	8d 14 48             	lea    edx,[eax+ecx*2]
   20f05:	8d 44 24 10          	lea    eax,[esp+0x10]
   20f09:	0f b6 d2             	movzx  edx,dl
   20f0c:	83 c2 64             	add    edx,0x64
   20f0f:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
   20f13:	50                   	push   eax
   20f14:	e8 07 20 00 00       	call   22f20 <mktime>
   20f19:	a3 c8 97 12 00       	mov    ds:0x1297c8,eax
   20f1e:	a3 cc 97 12 00       	mov    ds:0x1297cc,eax
   20f23:	83 c4 4c             	add    esp,0x4c
   20f26:	c3                   	ret    
   20f27:	89 f6                	mov    esi,esi
   20f29:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020f30 <strtoupper>:
strtoupper():
   20f30:	56                   	push   esi
   20f31:	53                   	push   ebx
   20f32:	83 ec 10             	sub    esp,0x10
   20f35:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
   20f39:	56                   	push   esi
   20f3a:	e8 c1 18 00 00       	call   22800 <strlen>
   20f3f:	83 c4 10             	add    esp,0x10
   20f42:	84 c0                	test   al,al
   20f44:	74 29                	je     20f6f <strtoupper+0x3f>
   20f46:	83 e8 01             	sub    eax,0x1
   20f49:	89 f2                	mov    edx,esi
   20f4b:	0f b6 c0             	movzx  eax,al
   20f4e:	8d 5c 06 01          	lea    ebx,[esi+eax*1+0x1]
   20f52:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   20f58:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   20f5b:	8d 48 9f             	lea    ecx,[eax-0x61]
   20f5e:	80 f9 19             	cmp    cl,0x19
   20f61:	77 05                	ja     20f68 <strtoupper+0x38>
   20f63:	83 e8 20             	sub    eax,0x20
   20f66:	88 02                	mov    BYTE PTR [edx],al
   20f68:	83 c2 01             	add    edx,0x1
   20f6b:	39 da                	cmp    edx,ebx
   20f6d:	75 e9                	jne    20f58 <strtoupper+0x28>
   20f6f:	83 c4 04             	add    esp,0x4
   20f72:	89 f0                	mov    eax,esi
   20f74:	5b                   	pop    ebx
   20f75:	5e                   	pop    esi
   20f76:	c3                   	ret    
   20f77:	89 f6                	mov    esi,esi
   20f79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00020f80 <printDumpedRegs>:
printDumpedRegs():
   20f80:	56                   	push   esi
   20f81:	53                   	push   ebx
   20f82:	31 db                	xor    ebx,ebx
   20f84:	83 ec 0c             	sub    esp,0xc
   20f87:	ff 35 30 97 12 00    	push   DWORD PTR ds:0x129730
   20f8d:	ff 35 fc 96 12 00    	push   DWORD PTR ds:0x1296fc
   20f93:	ff 35 f8 96 12 00    	push   DWORD PTR ds:0x1296f8
   20f99:	ff 35 f4 96 12 00    	push   DWORD PTR ds:0x1296f4
   20f9f:	ff 35 f0 96 12 00    	push   DWORD PTR ds:0x1296f0
   20fa5:	68 6c 5b 08 00       	push   0x85b6c
   20faa:	8b 35 2c 97 12 00    	mov    esi,DWORD PTR ds:0x12972c
   20fb0:	e8 ab 16 00 00       	call   22660 <printk>
   20fb5:	83 c4 14             	add    esp,0x14
   20fb8:	ff 35 2c 97 12 00    	push   DWORD PTR ds:0x12972c
   20fbe:	ff 35 04 97 12 00    	push   DWORD PTR ds:0x129704
   20fc4:	ff 35 00 97 12 00    	push   DWORD PTR ds:0x129700
   20fca:	ff 35 08 97 12 00    	push   DWORD PTR ds:0x129708
   20fd0:	68 9c 5b 08 00       	push   0x85b9c
   20fd5:	e8 86 16 00 00       	call   22660 <printk>
   20fda:	83 c4 14             	add    esp,0x14
   20fdd:	ff 35 14 97 12 00    	push   DWORD PTR ds:0x129714
   20fe3:	ff 35 10 97 12 00    	push   DWORD PTR ds:0x129710
   20fe9:	ff 35 40 97 12 00    	push   DWORD PTR ds:0x129740
   20fef:	ff 35 0c 97 12 00    	push   DWORD PTR ds:0x12970c
   20ff5:	68 c4 5b 08 00       	push   0x85bc4
   20ffa:	e8 61 16 00 00       	call   22660 <printk>
   20fff:	83 c4 14             	add    esp,0x14
   21002:	ff 35 24 97 12 00    	push   DWORD PTR ds:0x129724
   21008:	ff 35 20 97 12 00    	push   DWORD PTR ds:0x129720
   2100e:	ff 35 1c 97 12 00    	push   DWORD PTR ds:0x12971c
   21014:	ff 35 18 97 12 00    	push   DWORD PTR ds:0x129718
   2101a:	68 ec 5b 08 00       	push   0x85bec
   2101f:	e8 3c 16 00 00       	call   22660 <printk>
   21024:	83 c4 1c             	add    esp,0x1c
   21027:	ff 35 44 97 12 00    	push   DWORD PTR ds:0x129744
   2102d:	ff 35 8a 99 12 00    	push   DWORD PTR ds:0x12998a
   21033:	68 12 40 06 00       	push   0x64012
   21038:	e8 23 16 00 00       	call   22660 <printk>
   2103d:	ff 35 34 97 12 00    	push   DWORD PTR ds:0x129734
   21043:	ff 35 38 97 12 00    	push   DWORD PTR ds:0x129738
   21049:	ff 35 3c 97 12 00    	push   DWORD PTR ds:0x12973c
   2104f:	68 14 5c 08 00       	push   0x85c14
   21054:	e8 07 16 00 00       	call   22660 <printk>
   21059:	83 c4 14             	add    esp,0x14
   2105c:	68 27 40 06 00       	push   0x64027
   21061:	e8 fa 15 00 00       	call   22660 <printk>
   21066:	c7 04 24 d8 39 06 00 	mov    DWORD PTR [esp],0x639d8
   2106d:	e8 ee 15 00 00       	call   22660 <printk>
   21072:	83 c4 0c             	add    esp,0xc
   21075:	56                   	push   esi
   21076:	ff 35 28 97 12 00    	push   DWORD PTR ds:0x129728
   2107c:	68 39 40 06 00       	push   0x64039
   21081:	e8 da 15 00 00       	call   22660 <printk>
   21086:	83 c4 10             	add    esp,0x10
   21089:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21090:	8b 15 e8 96 12 00    	mov    edx,DWORD PTR ds:0x1296e8
   21096:	8d 04 1e             	lea    eax,[esi+ebx*1]
   21099:	83 ec 04             	sub    esp,0x4
   2109c:	ff 34 1a             	push   DWORD PTR [edx+ebx*1]
   2109f:	50                   	push   eax
   210a0:	83 c3 04             	add    ebx,0x4
   210a3:	68 1e 39 06 00       	push   0x6391e
   210a8:	e8 b3 15 00 00       	call   22660 <printk>
   210ad:	83 c4 10             	add    esp,0x10
   210b0:	83 fb 28             	cmp    ebx,0x28
   210b3:	75 db                	jne    21090 <printDumpedRegs+0x110>
   210b5:	83 c4 04             	add    esp,0x4
   210b8:	5b                   	pop    ebx
   210b9:	5e                   	pop    esi
   210ba:	c3                   	ret    
   210bb:	90                   	nop
   210bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

000210c0 <printDebugRegs>:
printDebugRegs():
   210c0:	57                   	push   edi
   210c1:	56                   	push   esi
   210c2:	53                   	push   ebx
   210c3:	8b 35 84 97 12 00    	mov    esi,DWORD PTR ds:0x129784
   210c9:	8b 1d 94 97 12 00    	mov    ebx,DWORD PTR ds:0x129794
   210cf:	83 ec 08             	sub    esp,0x8
   210d2:	ff 35 88 97 12 00    	push   DWORD PTR ds:0x129788
   210d8:	ff 35 54 97 12 00    	push   DWORD PTR ds:0x129754
   210de:	ff 35 50 97 12 00    	push   DWORD PTR ds:0x129750
   210e4:	ff 35 4c 97 12 00    	push   DWORD PTR ds:0x12974c
   210ea:	ff 35 48 97 12 00    	push   DWORD PTR ds:0x129748
   210f0:	68 6c 5b 08 00       	push   0x85b6c
   210f5:	8d 7b 13             	lea    edi,[ebx+0x13]
   210f8:	e8 63 15 00 00       	call   22660 <printk>
   210fd:	83 c4 14             	add    esp,0x14
   21100:	ff 35 84 97 12 00    	push   DWORD PTR ds:0x129784
   21106:	ff 35 5c 97 12 00    	push   DWORD PTR ds:0x12975c
   2110c:	ff 35 58 97 12 00    	push   DWORD PTR ds:0x129758
   21112:	ff 35 60 97 12 00    	push   DWORD PTR ds:0x129760
   21118:	68 9c 5b 08 00       	push   0x85b9c
   2111d:	e8 3e 15 00 00       	call   22660 <printk>
   21122:	83 c4 20             	add    esp,0x20
   21125:	ff 35 6c 97 12 00    	push   DWORD PTR ds:0x12976c
   2112b:	ff 35 68 97 12 00    	push   DWORD PTR ds:0x129768
   21131:	ff 35 64 97 12 00    	push   DWORD PTR ds:0x129764
   21137:	68 51 40 06 00       	push   0x64051
   2113c:	e8 1f 15 00 00       	call   22660 <printk>
   21141:	58                   	pop    eax
   21142:	ff 35 7c 97 12 00    	push   DWORD PTR ds:0x12977c
   21148:	ff 35 78 97 12 00    	push   DWORD PTR ds:0x129778
   2114e:	ff 35 74 97 12 00    	push   DWORD PTR ds:0x129774
   21154:	ff 35 70 97 12 00    	push   DWORD PTR ds:0x129770
   2115a:	68 ec 5b 08 00       	push   0x85bec
   2115f:	e8 fc 14 00 00       	call   22660 <printk>
   21164:	83 c4 20             	add    esp,0x20
   21167:	ff 35 8c 97 12 00    	push   DWORD PTR ds:0x12978c
   2116d:	ff 35 94 97 12 00    	push   DWORD PTR ds:0x129794
   21173:	ff 35 90 97 12 00    	push   DWORD PTR ds:0x129790
   21179:	68 14 5c 08 00       	push   0x85c14
   2117e:	e8 dd 14 00 00       	call   22660 <printk>
   21183:	c7 04 24 27 40 06 00 	mov    DWORD PTR [esp],0x64027
   2118a:	e8 d1 14 00 00       	call   22660 <printk>
   2118f:	83 c4 10             	add    esp,0x10
   21192:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21198:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   2119b:	83 ec 08             	sub    esp,0x8
   2119e:	83 c3 01             	add    ebx,0x1
   211a1:	50                   	push   eax
   211a2:	68 8b 01 04 00       	push   0x4018b
   211a7:	e8 b4 14 00 00       	call   22660 <printk>
   211ac:	83 c4 10             	add    esp,0x10
   211af:	39 df                	cmp    edi,ebx
   211b1:	75 e5                	jne    21198 <printDebugRegs+0xd8>
   211b3:	83 ec 0c             	sub    esp,0xc
   211b6:	31 db                	xor    ebx,ebx
   211b8:	68 d8 39 06 00       	push   0x639d8
   211bd:	e8 9e 14 00 00       	call   22660 <printk>
   211c2:	83 c4 0c             	add    esp,0xc
   211c5:	56                   	push   esi
   211c6:	ff 35 80 97 12 00    	push   DWORD PTR ds:0x129780
   211cc:	68 39 40 06 00       	push   0x64039
   211d1:	e8 8a 14 00 00       	call   22660 <printk>
   211d6:	83 c4 10             	add    esp,0x10
   211d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   211e0:	8b 15 ec 96 12 00    	mov    edx,DWORD PTR ds:0x1296ec
   211e6:	8d 04 1e             	lea    eax,[esi+ebx*1]
   211e9:	83 ec 04             	sub    esp,0x4
   211ec:	ff 34 1a             	push   DWORD PTR [edx+ebx*1]
   211ef:	50                   	push   eax
   211f0:	83 c3 04             	add    ebx,0x4
   211f3:	68 1e 39 06 00       	push   0x6391e
   211f8:	e8 63 14 00 00       	call   22660 <printk>
   211fd:	83 c4 10             	add    esp,0x10
   21200:	83 fb 28             	cmp    ebx,0x28
   21203:	75 db                	jne    211e0 <printDebugRegs+0x120>
   21205:	5b                   	pop    ebx
   21206:	5e                   	pop    esi
   21207:	5f                   	pop    edi
   21208:	c3                   	ret    
   21209:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00021210 <reboot>:
reboot():
   21210:	83 ec 0c             	sub    esp,0xc
   21213:	80 7c 24 10 00       	cmp    BYTE PTR [esp+0x10],0x0
   21218:	75 21                	jne    2123b <reboot+0x2b>
   2121a:	fa                   	cli    
   2121b:	e4 64                	in     al,0x64
   2121d:	a8 01                	test   al,0x1
   2121f:	89 c2                	mov    edx,eax
   21221:	74 02                	je     21225 <reboot+0x15>
   21223:	e4 60                	in     al,0x60
   21225:	83 e2 02             	and    edx,0x2
   21228:	75 f1                	jne    2121b <reboot+0xb>
   2122a:	b8 fe ff ff ff       	mov    eax,0xfffffffe
   2122f:	e6 64                	out    0x64,al
   21231:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21238:	f4                   	hlt    
   21239:	eb fd                	jmp    21238 <reboot+0x28>
   2123b:	83 ec 0c             	sub    esp,0xc
   2123e:	68 6d 40 06 00       	push   0x6406d
   21243:	e8 f8 5b ff ff       	call   16e40 <puts>
   21248:	fb                   	sti    
   21249:	c7 04 24 b8 0b 00 00 	mov    DWORD PTR [esp],0xbb8
   21250:	e8 3b 22 00 00       	call   23490 <wait>
   21255:	83 c4 10             	add    esp,0x10
   21258:	eb c0                	jmp    2121a <reboot+0xa>
   2125a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00021260 <dumpKernelAddresses>:
dumpKernelAddresses():
   21260:	83 ec 18             	sub    esp,0x18
   21263:	68 7c 40 06 00       	push   0x6407c
   21268:	e8 f3 13 00 00       	call   22660 <printk>
   2126d:	58                   	pop    eax
   2126e:	5a                   	pop    edx
   2126f:	68 00 00 16 00       	push   0x160000
   21274:	68 3c 5c 08 00       	push   0x85c3c
   21279:	e8 e2 13 00 00       	call   22660 <printk>
   2127e:	59                   	pop    ecx
   2127f:	58                   	pop    eax
   21280:	68 00 00 16 00       	push   0x160000
   21285:	68 60 5c 08 00       	push   0x85c60
   2128a:	e8 d1 13 00 00       	call   22660 <printk>
   2128f:	58                   	pop    eax
   21290:	5a                   	pop    edx
   21291:	68 b0 04 16 00       	push   0x1604b0
   21296:	68 88 5c 08 00       	push   0x85c88
   2129b:	e8 c0 13 00 00       	call   22660 <printk>
   212a0:	59                   	pop    ecx
   212a1:	58                   	pop    eax
   212a2:	68 b0 24 16 00       	push   0x1624b0
   212a7:	68 ac 5c 08 00       	push   0x85cac
   212ac:	e8 af 13 00 00       	call   22660 <printk>
   212b1:	58                   	pop    eax
   212b2:	5a                   	pop    edx
   212b3:	68 00 30 16 00       	push   0x163000
   212b8:	68 93 40 06 00       	push   0x64093
   212bd:	e8 9e 13 00 00       	call   22660 <printk>
   212c2:	59                   	pop    ecx
   212c3:	58                   	pop    eax
   212c4:	68 00 48 16 00       	push   0x164800
   212c9:	68 d0 5c 08 00       	push   0x85cd0
   212ce:	e8 8d 13 00 00       	call   22660 <printk>
   212d3:	58                   	pop    eax
   212d4:	5a                   	pop    edx
   212d5:	68 00 60 16 00       	push   0x166000
   212da:	68 ae 40 06 00       	push   0x640ae
   212df:	e8 7c 13 00 00       	call   22660 <printk>
   212e4:	59                   	pop    ecx
   212e5:	58                   	pop    eax
   212e6:	68 00 70 2f 00       	push   0x2f7000
   212eb:	68 ca 40 06 00       	push   0x640ca
   212f0:	e8 6b 13 00 00       	call   22660 <printk>
   212f5:	58                   	pop    eax
   212f6:	5a                   	pop    edx
   212f7:	68 00 70 49 00       	push   0x497000
   212fc:	68 f0 5c 08 00       	push   0x85cf0
   21301:	e8 5a 13 00 00       	call   22660 <printk>
   21306:	59                   	pop    ecx
   21307:	58                   	pop    eax
   21308:	68 00 80 49 00       	push   0x498000
   2130d:	68 10 5d 08 00       	push   0x85d10
   21312:	e8 49 13 00 00       	call   22660 <printk>
   21317:	58                   	pop    eax
   21318:	5a                   	pop    edx
   21319:	68 00 80 4a 00       	push   0x4a8000
   2131e:	68 34 5d 08 00       	push   0x85d34
   21323:	e8 38 13 00 00       	call   22660 <printk>
   21328:	59                   	pop    ecx
   21329:	58                   	pop    eax
   2132a:	68 00 80 4b 00       	push   0x4b8000
   2132f:	68 58 5d 08 00       	push   0x85d58
   21334:	e8 27 13 00 00       	call   22660 <printk>
   21339:	58                   	pop    eax
   2133a:	5a                   	pop    edx
   2133b:	68 00 90 4b 00       	push   0x4b9000
   21340:	68 7c 5d 08 00       	push   0x85d7c
   21345:	e8 16 13 00 00       	call   22660 <printk>
   2134a:	59                   	pop    ecx
   2134b:	58                   	pop    eax
   2134c:	68 00 a0 4b 00       	push   0x4ba000
   21351:	68 a4 5d 08 00       	push   0x85da4
   21356:	e8 05 13 00 00       	call   22660 <printk>
   2135b:	58                   	pop    eax
   2135c:	5a                   	pop    edx
   2135d:	68 00 c0 4c 00       	push   0x4cc000
   21362:	68 c8 5d 08 00       	push   0x85dc8
   21367:	e8 f4 12 00 00       	call   22660 <printk>
   2136c:	59                   	pop    ecx
   2136d:	58                   	pop    eax
   2136e:	68 00 d0 ac 00       	push   0xacd000
   21373:	68 f0 5d 08 00       	push   0x85df0
   21378:	e8 e3 12 00 00       	call   22660 <printk>
   2137d:	58                   	pop    eax
   2137e:	5a                   	pop    edx
   2137f:	68 00 f0 ac 00       	push   0xacf000
   21384:	68 1c 5e 08 00       	push   0x85e1c
   21389:	e8 d2 12 00 00       	call   22660 <printk>
   2138e:	59                   	pop    ecx
   2138f:	58                   	pop    eax
   21390:	68 00 10 ad 00       	push   0xad1000
   21395:	68 48 5e 08 00       	push   0x85e48
   2139a:	e8 c1 12 00 00       	call   22660 <printk>
   2139f:	58                   	pop    eax
   213a0:	5a                   	pop    edx
   213a1:	68 00 20 ad 00       	push   0xad2000
   213a6:	68 78 5e 08 00       	push   0x85e78
   213ab:	e8 b0 12 00 00       	call   22660 <printk>
   213b0:	59                   	pop    ecx
   213b1:	58                   	pop    eax
   213b2:	68 04 20 ad 00       	push   0xad2004
   213b7:	68 a8 5e 08 00       	push   0x85ea8
   213bc:	e8 9f 12 00 00       	call   22660 <printk>
   213c1:	58                   	pop    eax
   213c2:	5a                   	pop    edx
   213c3:	68 00 30 ad 00       	push   0xad3000
   213c8:	68 dc 5e 08 00       	push   0x85edc
   213cd:	e8 8e 12 00 00       	call   22660 <printk>
   213d2:	59                   	pop    ecx
   213d3:	58                   	pop    eax
   213d4:	68 00 30 b1 00       	push   0xb13000
   213d9:	68 00 5f 08 00       	push   0x85f00
   213de:	e8 7d 12 00 00       	call   22660 <printk>
   213e3:	58                   	pop    eax
   213e4:	5a                   	pop    edx
   213e5:	68 00 30 c5 00       	push   0xc53000
   213ea:	68 28 5f 08 00       	push   0x85f28
   213ef:	e8 6c 12 00 00       	call   22660 <printk>
   213f4:	59                   	pop    ecx
   213f5:	58                   	pop    eax
   213f6:	68 00 30 d9 00       	push   0xd93000
   213fb:	68 4c 5f 08 00       	push   0x85f4c
   21400:	e8 5b 12 00 00       	call   22660 <printk>
   21405:	58                   	pop    eax
   21406:	5a                   	pop    edx
   21407:	68 20 7e d9 00       	push   0xd97e20
   2140c:	68 e5 40 06 00       	push   0x640e5
   21411:	e8 4a 12 00 00       	call   22660 <printk>
   21416:	59                   	pop    ecx
   21417:	58                   	pop    eax
   21418:	68 40 cc d9 00       	push   0xd9cc40
   2141d:	68 70 5f 08 00       	push   0x85f70
   21422:	e8 39 12 00 00       	call   22660 <printk>
   21427:	58                   	pop    eax
   21428:	5a                   	pop    edx
   21429:	68 40 d4 d9 00       	push   0xd9d440
   2142e:	68 90 5f 08 00       	push   0x85f90
   21433:	e8 28 12 00 00       	call   22660 <printk>
   21438:	59                   	pop    ecx
   21439:	58                   	pop    eax
   2143a:	68 40 dc d9 00       	push   0xd9dc40
   2143f:	68 00 41 06 00       	push   0x64100
   21444:	e8 17 12 00 00       	call   22660 <printk>
   21449:	58                   	pop    eax
   2144a:	5a                   	pop    edx
   2144b:	68 e0 62 db 00       	push   0xdb62e0
   21450:	68 1d 41 06 00       	push   0x6411d
   21455:	e8 06 12 00 00       	call   22660 <printk>
   2145a:	59                   	pop    ecx
   2145b:	58                   	pop    eax
   2145c:	68 e0 62 eb 00       	push   0xeb62e0
   21461:	68 b0 5f 08 00       	push   0x85fb0
   21466:	e8 f5 11 00 00       	call   22660 <printk>
   2146b:	83 c4 1c             	add    esp,0x1c
   2146e:	c3                   	ret    
   2146f:	90                   	nop

00021470 <pauseDisplay>:
pauseDisplay():
   21470:	56                   	push   esi
   21471:	53                   	push   ebx
   21472:	83 ec 04             	sub    esp,0x4
   21475:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   21479:	84 db                	test   bl,bl
   2147b:	74 4b                	je     214c8 <pauseDisplay+0x58>
   2147d:	83 ec 0c             	sub    esp,0xc
   21480:	68 d8 5f 08 00       	push   0x85fd8
   21485:	e8 d6 11 00 00       	call   22660 <printk>
   2148a:	83 c4 10             	add    esp,0x10
   2148d:	e8 5e 03 ff ff       	call   117f0 <waitForKeyboardKey>
   21492:	83 ec 0c             	sub    esp,0xc
   21495:	89 c6                	mov    esi,eax
   21497:	6a 00                	push   0x0
   21499:	e8 b2 58 ff ff       	call   16d50 <cursorMoveToX>
   2149e:	c7 04 24 08 60 08 00 	mov    DWORD PTR [esp],0x86008
   214a5:	e8 b6 11 00 00       	call   22660 <printk>
   214aa:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
   214b1:	e8 9a 58 ff ff       	call   16d50 <cursorMoveToX>
   214b6:	89 f0                	mov    eax,esi
   214b8:	3c 71                	cmp    al,0x71
   214ba:	0f 94 c0             	sete   al
   214bd:	83 c4 14             	add    esp,0x14
   214c0:	21 d8                	and    eax,ebx
   214c2:	5b                   	pop    ebx
   214c3:	5e                   	pop    esi
   214c4:	c3                   	ret    
   214c5:	8d 76 00             	lea    esi,[esi+0x0]
   214c8:	83 ec 0c             	sub    esp,0xc
   214cb:	68 38 41 06 00       	push   0x64138
   214d0:	e8 8b 11 00 00       	call   22660 <printk>
   214d5:	83 c4 10             	add    esp,0x10
   214d8:	eb b3                	jmp    2148d <pauseDisplay+0x1d>
   214da:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

000214e0 <mallocTemp>:
mallocTemp():
   214e0:	a1 e0 40 02 00       	mov    eax,ds:0x240e0
   214e5:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   214e9:	01 c2                	add    edx,eax
   214eb:	89 15 e0 40 02 00    	mov    DWORD PTR ds:0x240e0,edx
   214f1:	c3                   	ret    
   214f2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   214f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00021500 <dumpGDTTable>:
dumpGDTTable():
   21500:	56                   	push   esi
   21501:	53                   	push   ebx
   21502:	83 ec 10             	sub    esp,0x10
   21505:	8b 1d 84 99 12 00    	mov    ebx,DWORD PTR ds:0x129984
   2150b:	68 55 41 06 00       	push   0x64155
   21510:	e8 4b 11 00 00       	call   22660 <printk>
   21515:	c7 04 24 34 60 08 00 	mov    DWORD PTR [esp],0x86034
   2151c:	e8 3f 11 00 00       	call   22660 <printk>
   21521:	0f b7 0d 88 99 12 00 	movzx  ecx,WORD PTR ds:0x129988
   21528:	83 c4 10             	add    esp,0x10
   2152b:	89 c8                	mov    eax,ecx
   2152d:	66 c1 e8 03          	shr    ax,0x3
   21531:	66 85 c0             	test   ax,ax
   21534:	74 7a                	je     215b0 <dumpGDTTable+0xb0>
   21536:	31 f6                	xor    esi,esi
   21538:	eb 1d                	jmp    21557 <dumpGDTTable+0x57>
   2153a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21540:	84 d2                	test   dl,dl
   21542:	78 1b                	js     2155f <dumpGDTTable+0x5f>
   21544:	89 c8                	mov    eax,ecx
   21546:	83 c6 01             	add    esi,0x1
   21549:	83 c3 08             	add    ebx,0x8
   2154c:	66 c1 e8 03          	shr    ax,0x3
   21550:	0f b7 c0             	movzx  eax,ax
   21553:	39 f0                	cmp    eax,esi
   21555:	7e 59                	jle    215b0 <dumpGDTTable+0xb0>
   21557:	85 f6                	test   esi,esi
   21559:	0f b6 53 05          	movzx  edx,BYTE PTR [ebx+0x5]
   2155d:	75 e1                	jne    21540 <dumpGDTTable+0x40>
   2155f:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
   21563:	83 ec 08             	sub    esp,0x8
   21566:	89 c1                	mov    ecx,eax
   21568:	83 e0 0f             	and    eax,0xf
   2156b:	81 e1 f0 00 00 00    	and    ecx,0xf0
   21571:	c1 e0 10             	shl    eax,0x10
   21574:	c1 f9 04             	sar    ecx,0x4
   21577:	51                   	push   ecx
   21578:	52                   	push   edx
   21579:	0f b7 13             	movzx  edx,WORD PTR [ebx]
   2157c:	09 d0                	or     eax,edx
   2157e:	50                   	push   eax
   2157f:	0f be 43 07          	movsx  eax,BYTE PTR [ebx+0x7]
   21583:	c1 e0 18             	shl    eax,0x18
   21586:	89 c2                	mov    edx,eax
   21588:	0f be 43 04          	movsx  eax,BYTE PTR [ebx+0x4]
   2158c:	c1 e0 10             	shl    eax,0x10
   2158f:	09 d0                	or     eax,edx
   21591:	0f b7 53 02          	movzx  edx,WORD PTR [ebx+0x2]
   21595:	09 d0                	or     eax,edx
   21597:	50                   	push   eax
   21598:	56                   	push   esi
   21599:	68 58 60 08 00       	push   0x86058
   2159e:	e8 bd 10 00 00       	call   22660 <printk>
   215a3:	83 c4 20             	add    esp,0x20
   215a6:	0f b7 0d 88 99 12 00 	movzx  ecx,WORD PTR ds:0x129988
   215ad:	eb 95                	jmp    21544 <dumpGDTTable+0x44>
   215af:	90                   	nop
   215b0:	83 c4 04             	add    esp,0x4
   215b3:	5b                   	pop    ebx
   215b4:	5e                   	pop    esi
   215b5:	c3                   	ret    
   215b6:	8d 76 00             	lea    esi,[esi+0x0]
   215b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000215c0 <displayTSS>:
displayTSS():
   215c0:	53                   	push   ebx
   215c1:	83 ec 10             	sub    esp,0x10
   215c4:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
   215c8:	53                   	push   ebx
   215c9:	68 68 41 06 00       	push   0x64168
   215ce:	e8 8d 10 00 00       	call   22660 <printk>
   215d3:	58                   	pop    eax
   215d4:	5a                   	pop    edx
   215d5:	ff 73 24             	push   DWORD PTR [ebx+0x24]
   215d8:	ff 73 30             	push   DWORD PTR [ebx+0x30]
   215db:	ff 73 2c             	push   DWORD PTR [ebx+0x2c]
   215de:	ff 73 34             	push   DWORD PTR [ebx+0x34]
   215e1:	ff 73 28             	push   DWORD PTR [ebx+0x28]
   215e4:	68 80 60 08 00       	push   0x86080
   215e9:	e8 72 10 00 00       	call   22660 <printk>
   215ee:	83 c4 18             	add    esp,0x18
   215f1:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
   215f4:	ff 73 38             	push   DWORD PTR [ebx+0x38]
   215f7:	ff 73 44             	push   DWORD PTR [ebx+0x44]
   215fa:	ff 73 40             	push   DWORD PTR [ebx+0x40]
   215fd:	ff 73 3c             	push   DWORD PTR [ebx+0x3c]
   21600:	68 b0 60 08 00       	push   0x860b0
   21605:	e8 56 10 00 00       	call   22660 <printk>
   2160a:	83 c4 18             	add    esp,0x18
   2160d:	ff 73 60             	push   DWORD PTR [ebx+0x60]
   21610:	ff 73 5c             	push   DWORD PTR [ebx+0x5c]
   21613:	ff 73 58             	push   DWORD PTR [ebx+0x58]
   21616:	ff 73 48             	push   DWORD PTR [ebx+0x48]
   21619:	ff 73 54             	push   DWORD PTR [ebx+0x54]
   2161c:	68 e0 60 08 00       	push   0x860e0
   21621:	e8 3a 10 00 00       	call   22660 <printk>
   21626:	0f b7 43 66          	movzx  eax,WORD PTR [ebx+0x66]
   2162a:	83 c4 18             	add    esp,0x18
   2162d:	50                   	push   eax
   2162e:	ff 33                	push   DWORD PTR [ebx]
   21630:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   21633:	ff 73 08             	push   DWORD PTR [ebx+0x8]
   21636:	ff 73 50             	push   DWORD PTR [ebx+0x50]
   21639:	68 10 61 08 00       	push   0x86110
   2163e:	e8 1d 10 00 00       	call   22660 <printk>
   21643:	83 c4 1c             	add    esp,0x1c
   21646:	ff 73 20             	push   DWORD PTR [ebx+0x20]
   21649:	ff 73 4c             	push   DWORD PTR [ebx+0x4c]
   2164c:	68 7e 41 06 00       	push   0x6417e
   21651:	e8 0a 10 00 00       	call   22660 <printk>
   21656:	83 c4 18             	add    esp,0x18
   21659:	5b                   	pop    ebx
   2165a:	c3                   	ret    
   2165b:	66 90                	xchg   ax,ax
   2165d:	66 90                	xchg   ax,ax
   2165f:	90                   	nop

00021660 <memcpy>:
memcpy():
   21660:	57                   	push   edi
   21661:	56                   	push   esi
   21662:	53                   	push   ebx
   21663:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   21667:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   2166b:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   2166f:	89 d1                	mov    ecx,edx
   21671:	83 e1 03             	and    ecx,0x3
   21674:	75 3a                	jne    216b0 <memcpy+0x50>
   21676:	c1 ea 02             	shr    edx,0x2
   21679:	39 c3                	cmp    ebx,eax
   2167b:	0f 83 87 00 00 00    	jae    21708 <memcpy+0xa8>
   21681:	8d 3c 95 00 00 00 00 	lea    edi,[edx*4+0x0]
   21688:	01 fb                	add    ebx,edi
   2168a:	01 c7                	add    edi,eax
   2168c:	85 d2                	test   edx,edx
   2168e:	74 17                	je     216a7 <memcpy+0x47>
   21690:	f7 da                	neg    edx
   21692:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21698:	8b 74 8b fc          	mov    esi,DWORD PTR [ebx+ecx*4-0x4]
   2169c:	89 74 8f fc          	mov    DWORD PTR [edi+ecx*4-0x4],esi
   216a0:	83 e9 01             	sub    ecx,0x1
   216a3:	39 ca                	cmp    edx,ecx
   216a5:	75 f1                	jne    21698 <memcpy+0x38>
   216a7:	5b                   	pop    ebx
   216a8:	5e                   	pop    esi
   216a9:	5f                   	pop    edi
   216aa:	c3                   	ret    
   216ab:	90                   	nop
   216ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   216b0:	89 d1                	mov    ecx,edx
   216b2:	83 e1 01             	and    ecx,0x1
   216b5:	75 31                	jne    216e8 <memcpy+0x88>
   216b7:	d1 ea                	shr    edx,1
   216b9:	39 c3                	cmp    ebx,eax
   216bb:	73 6b                	jae    21728 <memcpy+0xc8>
   216bd:	8d 3c 95 00 00 00 00 	lea    edi,[edx*4+0x0]
   216c4:	01 fb                	add    ebx,edi
   216c6:	01 c7                	add    edi,eax
   216c8:	85 d2                	test   edx,edx
   216ca:	74 db                	je     216a7 <memcpy+0x47>
   216cc:	f7 da                	neg    edx
   216ce:	66 90                	xchg   ax,ax
   216d0:	8b 74 8b fc          	mov    esi,DWORD PTR [ebx+ecx*4-0x4]
   216d4:	89 74 8f fc          	mov    DWORD PTR [edi+ecx*4-0x4],esi
   216d8:	83 e9 01             	sub    ecx,0x1
   216db:	39 ca                	cmp    edx,ecx
   216dd:	75 f1                	jne    216d0 <memcpy+0x70>
   216df:	5b                   	pop    ebx
   216e0:	5e                   	pop    esi
   216e1:	5f                   	pop    edi
   216e2:	c3                   	ret    
   216e3:	90                   	nop
   216e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   216e8:	39 c3                	cmp    ebx,eax
   216ea:	73 64                	jae    21750 <memcpy+0xf0>
   216ec:	83 ea 01             	sub    edx,0x1
   216ef:	90                   	nop
   216f0:	0f b6 0c 13          	movzx  ecx,BYTE PTR [ebx+edx*1]
   216f4:	88 0c 10             	mov    BYTE PTR [eax+edx*1],cl
   216f7:	83 ea 01             	sub    edx,0x1
   216fa:	83 fa ff             	cmp    edx,0xffffffff
   216fd:	75 f1                	jne    216f0 <memcpy+0x90>
   216ff:	5b                   	pop    ebx
   21700:	5e                   	pop    esi
   21701:	5f                   	pop    edi
   21702:	c3                   	ret    
   21703:	90                   	nop
   21704:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   21708:	31 c9                	xor    ecx,ecx
   2170a:	85 d2                	test   edx,edx
   2170c:	74 99                	je     216a7 <memcpy+0x47>
   2170e:	66 90                	xchg   ax,ax
   21710:	8b 34 8b             	mov    esi,DWORD PTR [ebx+ecx*4]
   21713:	89 34 88             	mov    DWORD PTR [eax+ecx*4],esi
   21716:	83 c1 01             	add    ecx,0x1
   21719:	39 ca                	cmp    edx,ecx
   2171b:	75 f3                	jne    21710 <memcpy+0xb0>
   2171d:	5b                   	pop    ebx
   2171e:	5e                   	pop    esi
   2171f:	5f                   	pop    edi
   21720:	c3                   	ret    
   21721:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21728:	31 c9                	xor    ecx,ecx
   2172a:	85 d2                	test   edx,edx
   2172c:	0f 84 75 ff ff ff    	je     216a7 <memcpy+0x47>
   21732:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21738:	8b 34 8b             	mov    esi,DWORD PTR [ebx+ecx*4]
   2173b:	89 34 88             	mov    DWORD PTR [eax+ecx*4],esi
   2173e:	83 c1 01             	add    ecx,0x1
   21741:	39 ca                	cmp    edx,ecx
   21743:	75 f3                	jne    21738 <memcpy+0xd8>
   21745:	5b                   	pop    ebx
   21746:	5e                   	pop    esi
   21747:	5f                   	pop    edi
   21748:	c3                   	ret    
   21749:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21750:	31 f6                	xor    esi,esi
   21752:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21758:	0f b6 0c 33          	movzx  ecx,BYTE PTR [ebx+esi*1]
   2175c:	88 0c 30             	mov    BYTE PTR [eax+esi*1],cl
   2175f:	83 c6 01             	add    esi,0x1
   21762:	39 f2                	cmp    edx,esi
   21764:	75 f2                	jne    21758 <memcpy+0xf8>
   21766:	5b                   	pop    ebx
   21767:	5e                   	pop    esi
   21768:	5f                   	pop    edi
   21769:	c3                   	ret    
   2176a:	66 90                	xchg   ax,ax
   2176c:	66 90                	xchg   ax,ax
   2176e:	66 90                	xchg   ax,ax

00021770 <loadSections>:
loadSections():
   21770:	55                   	push   ebp
   21771:	57                   	push   edi
   21772:	56                   	push   esi
   21773:	53                   	push   ebx
   21774:	83 ec 20             	sub    esp,0x20
   21777:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   2177b:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
   2177f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
   21783:	89 c6                	mov    esi,eax
   21785:	0f b6 44 24 3c       	movzx  eax,BYTE PTR [esp+0x3c]
   2178a:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
   2178e:	6a 00                	push   0x0
   21790:	6a 00                	push   0x0
   21792:	56                   	push   esi
   21793:	e8 38 9b ff ff       	call   1b2d0 <fl_fseek>
   21798:	56                   	push   esi
   21799:	6a 01                	push   0x1
   2179b:	6a 34                	push   0x34
   2179d:	57                   	push   edi
   2179e:	e8 9d 98 ff ff       	call   1b040 <fl_fread>
   217a3:	83 c4 20             	add    esp,0x20
   217a6:	80 3f 7f             	cmp    BYTE PTR [edi],0x7f
   217a9:	74 15                	je     217c0 <loadSections+0x50>
   217ab:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
   217af:	3c 4c                	cmp    al,0x4c
   217b1:	74 0d                	je     217c0 <loadSections+0x50>
   217b3:	3c 45                	cmp    al,0x45
   217b5:	74 09                	je     217c0 <loadSections+0x50>
   217b7:	0f b6 57 02          	movzx  edx,BYTE PTR [edi+0x2]
   217bb:	80 fa 46             	cmp    dl,0x46
   217be:	75 68                	jne    21828 <loadSections+0xb8>
   217c0:	0f b7 47 10          	movzx  eax,WORD PTR [edi+0x10]
   217c4:	8d 50 fe             	lea    edx,[eax-0x2]
   217c7:	66 83 fa 01          	cmp    dx,0x1
   217cb:	77 33                	ja     21800 <loadSections+0x90>
   217cd:	66 83 7f 12 03       	cmp    WORD PTR [edi+0x12],0x3
   217d2:	0f 84 80 00 00 00    	je     21858 <loadSections+0xe8>
   217d8:	83 ec 04             	sub    esp,0x4
   217db:	50                   	push   eax
   217dc:	68 98 61 08 00       	push   0x86198
   217e1:	68 00 02 00 00       	push   0x200
   217e6:	e8 95 0e 00 00       	call   22680 <printd>
   217eb:	83 c4 10             	add    esp,0x10
   217ee:	c6 87 d8 18 00 00 00 	mov    BYTE PTR [edi+0x18d8],0x0
   217f5:	83 c4 1c             	add    esp,0x1c
   217f8:	5b                   	pop    ebx
   217f9:	5e                   	pop    esi
   217fa:	5f                   	pop    edi
   217fb:	5d                   	pop    ebp
   217fc:	c3                   	ret    
   217fd:	8d 76 00             	lea    esi,[esi+0x0]
   21800:	83 ec 04             	sub    esp,0x4
   21803:	50                   	push   eax
   21804:	68 74 61 08 00       	push   0x86174
   21809:	68 00 02 00 00       	push   0x200
   2180e:	e8 6d 0e 00 00       	call   22680 <printd>
   21813:	83 c4 10             	add    esp,0x10
   21816:	c6 87 d8 18 00 00 00 	mov    BYTE PTR [edi+0x18d8],0x0
   2181d:	83 c4 1c             	add    esp,0x1c
   21820:	5b                   	pop    ebx
   21821:	5e                   	pop    esi
   21822:	5f                   	pop    edi
   21823:	5d                   	pop    ebp
   21824:	c3                   	ret    
   21825:	8d 76 00             	lea    esi,[esi+0x0]
   21828:	0f b6 4f 03          	movzx  ecx,BYTE PTR [edi+0x3]
   2182c:	83 ec 0c             	sub    esp,0xc
   2182f:	51                   	push   ecx
   21830:	52                   	push   edx
   21831:	50                   	push   eax
   21832:	68 44 61 08 00       	push   0x86144
   21837:	68 00 02 00 00       	push   0x200
   2183c:	e8 3f 0e 00 00       	call   22680 <printd>
   21841:	83 c4 20             	add    esp,0x20
   21844:	c6 87 d8 18 00 00 00 	mov    BYTE PTR [edi+0x18d8],0x0
   2184b:	83 c4 1c             	add    esp,0x1c
   2184e:	5b                   	pop    ebx
   2184f:	5e                   	pop    esi
   21850:	5f                   	pop    edi
   21851:	5d                   	pop    ebp
   21852:	c3                   	ret    
   21853:	90                   	nop
   21854:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   21858:	0f b7 47 30          	movzx  eax,WORD PTR [edi+0x30]
   2185c:	83 ec 04             	sub    esp,0x4
   2185f:	50                   	push   eax
   21860:	68 c4 61 08 00       	push   0x861c4
   21865:	68 00 02 00 00       	push   0x200
   2186a:	e8 11 0e 00 00       	call   22680 <printd>
   2186f:	6a 28                	push   0x28
   21871:	0f b7 47 2e          	movzx  eax,WORD PTR [edi+0x2e]
   21875:	50                   	push   eax
   21876:	68 93 41 06 00       	push   0x64193
   2187b:	68 00 02 00 00       	push   0x200
   21880:	e8 fb 0d 00 00       	call   22680 <printd>
   21885:	83 c4 1c             	add    esp,0x1c
   21888:	6a 00                	push   0x0
   2188a:	ff 77 20             	push   DWORD PTR [edi+0x20]
   2188d:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
   21891:	56                   	push   esi
   21892:	e8 39 9a ff ff       	call   1b2d0 <fl_fseek>
   21897:	83 c4 0c             	add    esp,0xc
   2189a:	ff 77 20             	push   DWORD PTR [edi+0x20]
   2189d:	68 af 41 06 00       	push   0x641af
   218a2:	68 00 02 00 00       	push   0x200
   218a7:	e8 d4 0d 00 00       	call   22680 <printd>
   218ac:	56                   	push   esi
   218ad:	0f b7 47 30          	movzx  eax,WORD PTR [edi+0x30]
   218b1:	50                   	push   eax
   218b2:	8d 47 34             	lea    eax,[edi+0x34]
   218b5:	6a 28                	push   0x28
   218b7:	50                   	push   eax
   218b8:	e8 83 97 ff ff       	call   1b040 <fl_fread>
   218bd:	83 c4 1c             	add    esp,0x1c
   218c0:	ff 77 1c             	push   DWORD PTR [edi+0x1c]
   218c3:	68 be 41 06 00       	push   0x641be
   218c8:	68 00 02 00 00       	push   0x200
   218cd:	e8 ae 0d 00 00       	call   22680 <printd>
   218d2:	83 c4 0c             	add    esp,0xc
   218d5:	ff 77 1c             	push   DWORD PTR [edi+0x1c]
   218d8:	68 d4 41 06 00       	push   0x641d4
   218dd:	68 00 02 00 00       	push   0x200
   218e2:	e8 99 0d 00 00       	call   22680 <printd>
   218e7:	83 c4 0c             	add    esp,0xc
   218ea:	6a 00                	push   0x0
   218ec:	ff 77 1c             	push   DWORD PTR [edi+0x1c]
   218ef:	56                   	push   esi
   218f0:	e8 db 99 ff ff       	call   1b2d0 <fl_fseek>
   218f5:	56                   	push   esi
   218f6:	0f b7 47 2c          	movzx  eax,WORD PTR [edi+0x2c]
   218fa:	50                   	push   eax
   218fb:	8d 87 04 08 00 00    	lea    eax,[edi+0x804]
   21901:	6a 20                	push   0x20
   21903:	50                   	push   eax
   21904:	e8 37 97 ff ff       	call   1b040 <fl_fread>
   21909:	83 c4 20             	add    esp,0x20
   2190c:	66 83 7f 2c 00       	cmp    WORD PTR [edi+0x2c],0x0
   21911:	0f 84 44 01 00 00    	je     21a5b <loadSections+0x2eb>
   21917:	8d 9f 18 08 00 00    	lea    ebx,[edi+0x818]
   2191d:	31 ed                	xor    ebp,ebp
   2191f:	eb 30                	jmp    21951 <loadSections+0x1e1>
   21921:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21928:	8b 03                	mov    eax,DWORD PTR [ebx]
   2192a:	85 c0                	test   eax,eax
   2192c:	0f 85 4e 01 00 00    	jne    21a80 <loadSections+0x310>
   21932:	f6 05 79 98 12 00 02 	test   BYTE PTR ds:0x129879,0x2
   21939:	0f 85 81 01 00 00    	jne    21ac0 <loadSections+0x350>
   2193f:	0f b7 47 2c          	movzx  eax,WORD PTR [edi+0x2c]
   21943:	83 c5 01             	add    ebp,0x1
   21946:	83 c3 20             	add    ebx,0x20
   21949:	39 e8                	cmp    eax,ebp
   2194b:	0f 8e 0a 01 00 00    	jle    21a5b <loadSections+0x2eb>
   21951:	80 7c 24 0b 00       	cmp    BYTE PTR [esp+0xb],0x0
   21956:	8b 73 f4             	mov    esi,DWORD PTR [ebx-0xc]
   21959:	89 f0                	mov    eax,esi
   2195b:	74 0b                	je     21968 <loadSections+0x1f8>
   2195d:	03 35 e4 75 09 00    	add    esi,DWORD PTR ds:0x975e4
   21963:	89 73 f4             	mov    DWORD PTR [ebx-0xc],esi
   21966:	89 f0                	mov    eax,esi
   21968:	39 05 00 00 12 00    	cmp    DWORD PTR ds:0x120000,eax
   2196e:	0f 84 94 01 00 00    	je     21b08 <loadSections+0x398>
   21974:	8b 43 f0             	mov    eax,DWORD PTR [ebx-0x10]
   21977:	3b 47 1c             	cmp    eax,DWORD PTR [edi+0x1c]
   2197a:	0f 84 20 01 00 00    	je     21aa0 <loadSections+0x330>
   21980:	85 f6                	test   esi,esi
   21982:	74 1b                	je     2199f <loadSections+0x22f>
   21984:	8b 97 d4 18 00 00    	mov    edx,DWORD PTR [edi+0x18d4]
   2198a:	85 d2                	test   edx,edx
   2198c:	75 11                	jne    2199f <loadSections+0x22f>
   2198e:	0f b7 47 10          	movzx  eax,WORD PTR [edi+0x10]
   21992:	83 e0 fd             	and    eax,0xfffffffd
   21995:	66 83 f8 01          	cmp    ax,0x1
   21999:	0f 85 41 01 00 00    	jne    21ae0 <loadSections+0x370>
   2199f:	8b 43 fc             	mov    eax,DWORD PTR [ebx-0x4]
   219a2:	85 c0                	test   eax,eax
   219a4:	74 82                	je     21928 <loadSections+0x1b8>
   219a6:	83 ec 04             	sub    esp,0x4
   219a9:	ff 73 f0             	push   DWORD PTR [ebx-0x10]
   219ac:	68 be 41 06 00       	push   0x641be
   219b1:	68 00 02 00 00       	push   0x200
   219b6:	e8 c5 0c 00 00       	call   22680 <printd>
   219bb:	83 c4 0c             	add    esp,0xc
   219be:	6a 00                	push   0x0
   219c0:	ff 73 f0             	push   DWORD PTR [ebx-0x10]
   219c3:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   219c7:	e8 04 99 ff ff       	call   1b2d0 <fl_fseek>
   219cc:	56                   	push   esi
   219cd:	ff 33                	push   DWORD PTR [ebx]
   219cf:	68 ff 41 06 00       	push   0x641ff
   219d4:	68 00 02 00 00       	push   0x200
   219d9:	e8 a2 0c 00 00       	call   22680 <printd>
   219de:	83 c4 20             	add    esp,0x20
   219e1:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
   219e5:	ff 33                	push   DWORD PTR [ebx]
   219e7:	6a 01                	push   0x1
   219e9:	56                   	push   esi
   219ea:	e8 51 96 ff ff       	call   1b040 <fl_fread>
   219ef:	89 34 24             	mov    DWORD PTR [esp],esi
   219f2:	ff 33                	push   DWORD PTR [ebx]
   219f4:	55                   	push   ebp
   219f5:	68 ac 62 08 00       	push   0x862ac
   219fa:	68 00 02 00 00       	push   0x200
   219ff:	e8 7c 0c 00 00       	call   22680 <printd>
   21a04:	8b 43 fc             	mov    eax,DWORD PTR [ebx-0x4]
   21a07:	8b 13                	mov    edx,DWORD PTR [ebx]
   21a09:	83 c4 20             	add    esp,0x20
   21a0c:	39 d0                	cmp    eax,edx
   21a0e:	0f 83 2b ff ff ff    	jae    2193f <loadSections+0x1cf>
   21a14:	8d 0c 06             	lea    ecx,[esi+eax*1]
   21a17:	83 ec 0c             	sub    esp,0xc
   21a1a:	29 c2                	sub    edx,eax
   21a1c:	83 c3 20             	add    ebx,0x20
   21a1f:	51                   	push   ecx
   21a20:	52                   	push   edx
   21a21:	55                   	push   ebp
   21a22:	68 d8 62 08 00       	push   0x862d8
   21a27:	83 c5 01             	add    ebp,0x1
   21a2a:	68 00 02 00 00       	push   0x200
   21a2f:	e8 4c 0c 00 00       	call   22680 <printd>
   21a34:	8b 4b dc             	mov    ecx,DWORD PTR [ebx-0x24]
   21a37:	8b 43 e0             	mov    eax,DWORD PTR [ebx-0x20]
   21a3a:	83 c4 1c             	add    esp,0x1c
   21a3d:	29 c8                	sub    eax,ecx
   21a3f:	50                   	push   eax
   21a40:	8d 44 0e 01          	lea    eax,[esi+ecx*1+0x1]
   21a44:	6a 00                	push   0x0
   21a46:	50                   	push   eax
   21a47:	e8 34 f3 ff ff       	call   20d80 <memset>
   21a4c:	0f b7 47 2c          	movzx  eax,WORD PTR [edi+0x2c]
   21a50:	83 c4 10             	add    esp,0x10
   21a53:	39 e8                	cmp    eax,ebp
   21a55:	0f 8f f6 fe ff ff    	jg     21951 <loadSections+0x1e1>
   21a5b:	c7 44 24 34 e3 41 06 	mov    DWORD PTR [esp+0x34],0x641e3
   21a62:	00 
   21a63:	c7 44 24 30 00 02 00 	mov    DWORD PTR [esp+0x30],0x200
   21a6a:	00 
   21a6b:	83 c4 1c             	add    esp,0x1c
   21a6e:	5b                   	pop    ebx
   21a6f:	5e                   	pop    esi
   21a70:	5f                   	pop    edi
   21a71:	5d                   	pop    ebp
   21a72:	e9 09 0c 00 00       	jmp    22680 <printd>
   21a77:	89 f6                	mov    esi,esi
   21a79:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   21a80:	83 ec 0c             	sub    esp,0xc
   21a83:	56                   	push   esi
   21a84:	50                   	push   eax
   21a85:	55                   	push   ebp
   21a86:	68 1c 63 08 00       	push   0x8631c
   21a8b:	68 00 02 00 00       	push   0x200
   21a90:	e8 eb 0b 00 00       	call   22680 <printd>
   21a95:	83 c4 20             	add    esp,0x20
   21a98:	e9 a2 fe ff ff       	jmp    2193f <loadSections+0x1cf>
   21a9d:	8d 76 00             	lea    esi,[esi+0x0]
   21aa0:	50                   	push   eax
   21aa1:	55                   	push   ebp
   21aa2:	68 38 62 08 00       	push   0x86238
   21aa7:	68 00 02 00 00       	push   0x200
   21aac:	e8 cf 0b 00 00       	call   22680 <printd>
   21ab1:	83 c4 10             	add    esp,0x10
   21ab4:	e9 86 fe ff ff       	jmp    2193f <loadSections+0x1cf>
   21ab9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21ac0:	83 ec 0c             	sub    esp,0xc
   21ac3:	6a 00                	push   0x0
   21ac5:	6a 00                	push   0x0
   21ac7:	55                   	push   ebp
   21ac8:	68 54 63 08 00       	push   0x86354
   21acd:	68 00 02 00 00       	push   0x200
   21ad2:	e8 a9 0b 00 00       	call   22680 <printd>
   21ad7:	83 c4 20             	add    esp,0x20
   21ada:	e9 60 fe ff ff       	jmp    2193f <loadSections+0x1cf>
   21adf:	90                   	nop
   21ae0:	83 ec 04             	sub    esp,0x4
   21ae3:	89 b7 d4 18 00 00    	mov    DWORD PTR [edi+0x18d4],esi
   21ae9:	56                   	push   esi
   21aea:	68 84 62 08 00       	push   0x86284
   21aef:	68 00 02 00 00       	push   0x200
   21af4:	e8 87 0b 00 00       	call   22680 <printd>
   21af9:	83 c4 10             	add    esp,0x10
   21afc:	e9 9e fe ff ff       	jmp    2199f <loadSections+0x22f>
   21b01:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21b08:	56                   	push   esi
   21b09:	55                   	push   ebp
   21b0a:	68 e8 61 08 00       	push   0x861e8
   21b0f:	68 00 02 00 00       	push   0x200
   21b14:	e8 67 0b 00 00       	call   22680 <printd>
   21b19:	83 c4 10             	add    esp,0x10
   21b1c:	e9 1e fe ff ff       	jmp    2193f <loadSections+0x1cf>
   21b21:	eb 0d                	jmp    21b30 <loadElf>
   21b23:	90                   	nop
   21b24:	90                   	nop
   21b25:	90                   	nop
   21b26:	90                   	nop
   21b27:	90                   	nop
   21b28:	90                   	nop
   21b29:	90                   	nop
   21b2a:	90                   	nop
   21b2b:	90                   	nop
   21b2c:	90                   	nop
   21b2d:	90                   	nop
   21b2e:	90                   	nop
   21b2f:	90                   	nop

00021b30 <loadElf>:
loadElf():
   21b30:	55                   	push   ebp
   21b31:	57                   	push   edi
   21b32:	56                   	push   esi
   21b33:	53                   	push   ebx
   21b34:	83 ec 10             	sub    esp,0x10
   21b37:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
   21b3b:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
   21b3f:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   21b43:	68 dc 18 00 00       	push   0x18dc
   21b48:	6a 00                	push   0x0
   21b4a:	57                   	push   edi
   21b4b:	89 dd                	mov    ebp,ebx
   21b4d:	0f b6 db             	movzx  ebx,bl
   21b50:	e8 2b f2 ff ff       	call   20d80 <memset>
   21b55:	8d 87 54 0e 00 00    	lea    eax,[edi+0xe54]
   21b5b:	83 c4 0c             	add    esp,0xc
   21b5e:	68 80 0a 00 00       	push   0xa80
   21b63:	6a 00                	push   0x0
   21b65:	50                   	push   eax
   21b66:	e8 15 f2 ff ff       	call   20d80 <memset>
   21b6b:	83 c4 0c             	add    esp,0xc
   21b6e:	c6 87 d8 18 00 00 01 	mov    BYTE PTR [edi+0x18d8],0x1
   21b75:	53                   	push   ebx
   21b76:	57                   	push   edi
   21b77:	56                   	push   esi
   21b78:	e8 f3 fb ff ff       	call   21770 <loadSections>
   21b7d:	83 c4 10             	add    esp,0x10
   21b80:	f6 05 79 98 12 00 02 	test   BYTE PTR ds:0x129879,0x2
   21b87:	0f 85 13 01 00 00    	jne    21ca0 <loadElf+0x170>
   21b8d:	8b 87 50 0e 00 00    	mov    eax,DWORD PTR [edi+0xe50]
   21b93:	85 c0                	test   eax,eax
   21b95:	75 09                	jne    21ba0 <loadElf+0x70>
   21b97:	83 c4 0c             	add    esp,0xc
   21b9a:	5b                   	pop    ebx
   21b9b:	5e                   	pop    esi
   21b9c:	5f                   	pop    edi
   21b9d:	5d                   	pop    ebp
   21b9e:	c3                   	ret    
   21b9f:	90                   	nop
   21ba0:	ff b7 4c 0e 00 00    	push   DWORD PTR [edi+0xe4c]
   21ba6:	50                   	push   eax
   21ba7:	31 db                	xor    ebx,ebx
   21ba9:	68 0c 64 08 00       	push   0x8640c
   21bae:	68 00 02 00 00       	push   0x200
   21bb3:	e8 c8 0a 00 00       	call   22680 <printd>
   21bb8:	8b 8f 4c 0e 00 00    	mov    ecx,DWORD PTR [edi+0xe4c]
   21bbe:	83 c4 10             	add    esp,0x10
   21bc1:	8b b7 50 0e 00 00    	mov    esi,DWORD PTR [edi+0xe50]
   21bc7:	85 c9                	test   ecx,ecx
   21bc9:	7f 19                	jg     21be4 <loadElf+0xb4>
   21bcb:	eb 5f                	jmp    21c2c <loadElf+0xfc>
   21bcd:	8d 76 00             	lea    esi,[esi+0x0]
   21bd0:	83 f8 06             	cmp    eax,0x6
   21bd3:	0f 84 87 00 00 00    	je     21c60 <loadElf+0x130>
   21bd9:	83 c3 01             	add    ebx,0x1
   21bdc:	39 9f 4c 0e 00 00    	cmp    DWORD PTR [edi+0xe4c],ebx
   21be2:	7e 48                	jle    21c2c <loadElf+0xfc>
   21be4:	8b 04 de             	mov    eax,DWORD PTR [esi+ebx*8]
   21be7:	83 f8 05             	cmp    eax,0x5
   21bea:	75 e4                	jne    21bd0 <loadElf+0xa0>
   21bec:	8b 44 de 04          	mov    eax,DWORD PTR [esi+ebx*8+0x4]
   21bf0:	89 e9                	mov    ecx,ebp
   21bf2:	84 c9                	test   cl,cl
   21bf4:	89 87 b8 18 00 00    	mov    DWORD PTR [edi+0x18b8],eax
   21bfa:	74 0f                	je     21c0b <loadElf+0xdb>
   21bfc:	8b 15 e4 75 09 00    	mov    edx,DWORD PTR ds:0x975e4
   21c02:	8d 04 90             	lea    eax,[eax+edx*4]
   21c05:	89 87 b8 18 00 00    	mov    DWORD PTR [edi+0x18b8],eax
   21c0b:	83 ec 04             	sub    esp,0x4
   21c0e:	83 c3 01             	add    ebx,0x1
   21c11:	50                   	push   eax
   21c12:	68 48 64 08 00       	push   0x86448
   21c17:	68 00 02 00 00       	push   0x200
   21c1c:	e8 5f 0a 00 00       	call   22680 <printd>
   21c21:	83 c4 10             	add    esp,0x10
   21c24:	39 9f 4c 0e 00 00    	cmp    DWORD PTR [edi+0xe4c],ebx
   21c2a:	7f b8                	jg     21be4 <loadElf+0xb4>
   21c2c:	8b 97 b8 18 00 00    	mov    edx,DWORD PTR [edi+0x18b8]
   21c32:	85 d2                	test   edx,edx
   21c34:	0f 84 08 01 00 00    	je     21d42 <loadElf+0x212>
   21c3a:	8b 87 c0 18 00 00    	mov    eax,DWORD PTR [edi+0x18c0]
   21c40:	85 c0                	test   eax,eax
   21c42:	0f 84 db 00 00 00    	je     21d23 <loadElf+0x1f3>
   21c48:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
   21c4c:	83 c4 0c             	add    esp,0xc
   21c4f:	5b                   	pop    ebx
   21c50:	5e                   	pop    esi
   21c51:	5f                   	pop    edi
   21c52:	5d                   	pop    ebp
   21c53:	e9 08 01 00 00       	jmp    21d60 <processELFDynamicSection>
   21c58:	90                   	nop
   21c59:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21c60:	8b 44 de 04          	mov    eax,DWORD PTR [esi+ebx*8+0x4]
   21c64:	89 e9                	mov    ecx,ebp
   21c66:	84 c9                	test   cl,cl
   21c68:	89 87 c0 18 00 00    	mov    DWORD PTR [edi+0x18c0],eax
   21c6e:	74 0c                	je     21c7c <loadElf+0x14c>
   21c70:	03 05 e4 75 09 00    	add    eax,DWORD PTR ds:0x975e4
   21c76:	89 87 c0 18 00 00    	mov    DWORD PTR [edi+0x18c0],eax
   21c7c:	83 ec 04             	sub    esp,0x4
   21c7f:	50                   	push   eax
   21c80:	68 74 64 08 00       	push   0x86474
   21c85:	68 00 02 00 00       	push   0x200
   21c8a:	e8 f1 09 00 00       	call   22680 <printd>
   21c8f:	83 c4 10             	add    esp,0x10
   21c92:	e9 42 ff ff ff       	jmp    21bd9 <loadElf+0xa9>
   21c97:	89 f6                	mov    esi,esi
   21c99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   21ca0:	83 ec 08             	sub    esp,0x8
   21ca3:	68 88 63 08 00       	push   0x86388
   21ca8:	68 00 02 00 00       	push   0x200
   21cad:	e8 ce 09 00 00       	call   22680 <printd>
   21cb2:	83 c4 10             	add    esp,0x10
   21cb5:	66 83 7f 2e 00       	cmp    WORD PTR [edi+0x2e],0x0
   21cba:	74 4d                	je     21d09 <loadElf+0x1d9>
   21cbc:	8d 5f 34             	lea    ebx,[edi+0x34]
   21cbf:	31 f6                	xor    esi,esi
   21cc1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21cc8:	8b 03                	mov    eax,DWORD PTR [ebx]
   21cca:	80 b8 00 00 90 01 00 	cmp    BYTE PTR [eax+0x1900000],0x0
   21cd1:	8d 90 00 00 90 01    	lea    edx,[eax+0x1900000]
   21cd7:	74 22                	je     21cfb <loadElf+0x1cb>
   21cd9:	83 ec 04             	sub    esp,0x4
   21cdc:	ff 73 04             	push   DWORD PTR [ebx+0x4]
   21cdf:	ff 73 14             	push   DWORD PTR [ebx+0x14]
   21ce2:	ff 73 10             	push   DWORD PTR [ebx+0x10]
   21ce5:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
   21ce8:	52                   	push   edx
   21ce9:	68 e8 63 08 00       	push   0x863e8
   21cee:	68 00 02 00 00       	push   0x200
   21cf3:	e8 88 09 00 00       	call   22680 <printd>
   21cf8:	83 c4 20             	add    esp,0x20
   21cfb:	0f b7 47 2e          	movzx  eax,WORD PTR [edi+0x2e]
   21cff:	83 c6 01             	add    esi,0x1
   21d02:	83 c3 28             	add    ebx,0x28
   21d05:	39 f0                	cmp    eax,esi
   21d07:	7f bf                	jg     21cc8 <loadElf+0x198>
   21d09:	83 ec 08             	sub    esp,0x8
   21d0c:	68 b4 63 08 00       	push   0x863b4
   21d11:	68 00 02 00 00       	push   0x200
   21d16:	e8 65 09 00 00       	call   22680 <printd>
   21d1b:	83 c4 10             	add    esp,0x10
   21d1e:	e9 6a fe ff ff       	jmp    21b8d <loadElf+0x5d>
   21d23:	83 ec 0c             	sub    esp,0xc
   21d26:	68 f8 64 08 00       	push   0x864f8
   21d2b:	e8 30 09 00 00       	call   22660 <printk>
   21d30:	83 c4 10             	add    esp,0x10
   21d33:	c6 87 d8 18 00 00 00 	mov    BYTE PTR [edi+0x18d8],0x0
   21d3a:	83 c4 0c             	add    esp,0xc
   21d3d:	5b                   	pop    ebx
   21d3e:	5e                   	pop    esi
   21d3f:	5f                   	pop    edi
   21d40:	5d                   	pop    ebp
   21d41:	c3                   	ret    
   21d42:	83 ec 0c             	sub    esp,0xc
   21d45:	68 a0 64 08 00       	push   0x864a0
   21d4a:	e8 11 09 00 00       	call   22660 <printk>
   21d4f:	c6 87 d8 18 00 00 00 	mov    BYTE PTR [edi+0x18d8],0x0
   21d56:	83 c4 10             	add    esp,0x10
   21d59:	e9 39 fe ff ff       	jmp    21b97 <loadElf+0x67>
   21d5e:	66 90                	xchg   ax,ax

00021d60 <processELFDynamicSection>:
processELFDynamicSection():
   21d60:	55                   	push   ebp
   21d61:	57                   	push   edi
   21d62:	56                   	push   esi
   21d63:	53                   	push   ebx
   21d64:	81 ec 8c 00 00 00    	sub    esp,0x8c
   21d6a:	8b ac 24 a0 00 00 00 	mov    ebp,DWORD PTR [esp+0xa0]
   21d71:	8b 8d 4c 0e 00 00    	mov    ecx,DWORD PTR [ebp+0xe4c]
   21d77:	c7 85 a0 18 00 00 00 	mov    DWORD PTR [ebp+0x18a0],0x0
   21d7e:	00 00 00 
   21d81:	8b 85 50 0e 00 00    	mov    eax,DWORD PTR [ebp+0xe50]
   21d87:	85 c9                	test   ecx,ecx
   21d89:	7e 33                	jle    21dbe <processELFDynamicSection+0x5e>
   21d8b:	8d 58 04             	lea    ebx,[eax+0x4]
   21d8e:	31 f6                	xor    esi,esi
   21d90:	83 7b fc 1a          	cmp    DWORD PTR [ebx-0x4],0x1a
   21d94:	77 1a                	ja     21db0 <processELFDynamicSection+0x50>
   21d96:	8b 43 fc             	mov    eax,DWORD PTR [ebx-0x4]
   21d99:	ff 24 85 94 ff 03 00 	jmp    DWORD PTR [eax*4+0x3ff94]
   21da0:	a1 e4 75 09 00       	mov    eax,ds:0x975e4
   21da5:	03 03                	add    eax,DWORD PTR [ebx]
   21da7:	89 85 cc 18 00 00    	mov    DWORD PTR [ebp+0x18cc],eax
   21dad:	8d 76 00             	lea    esi,[esi+0x0]
   21db0:	83 c6 01             	add    esi,0x1
   21db3:	83 c3 08             	add    ebx,0x8
   21db6:	39 b5 4c 0e 00 00    	cmp    DWORD PTR [ebp+0xe4c],esi
   21dbc:	7f d2                	jg     21d90 <processELFDynamicSection+0x30>
   21dbe:	81 c4 8c 00 00 00    	add    esp,0x8c
   21dc4:	5b                   	pop    ebx
   21dc5:	5e                   	pop    esi
   21dc6:	5f                   	pop    edi
   21dc7:	5d                   	pop    ebp
   21dc8:	c3                   	ret    
   21dc9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21dd0:	a1 e4 75 09 00       	mov    eax,ds:0x975e4
   21dd5:	03 03                	add    eax,DWORD PTR [ebx]
   21dd7:	89 85 c8 18 00 00    	mov    DWORD PTR [ebp+0x18c8],eax
   21ddd:	eb d1                	jmp    21db0 <processELFDynamicSection+0x50>
   21ddf:	90                   	nop
   21de0:	8b 03                	mov    eax,DWORD PTR [ebx]
   21de2:	89 85 8c 18 00 00    	mov    DWORD PTR [ebp+0x188c],eax
   21de8:	eb c6                	jmp    21db0 <processELFDynamicSection+0x50>
   21dea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21df0:	8b 03                	mov    eax,DWORD PTR [ebx]
   21df2:	89 85 88 18 00 00    	mov    DWORD PTR [ebp+0x1888],eax
   21df8:	eb b6                	jmp    21db0 <processELFDynamicSection+0x50>
   21dfa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21e00:	8b 03                	mov    eax,DWORD PTR [ebx]
   21e02:	89 85 84 18 00 00    	mov    DWORD PTR [ebp+0x1884],eax
   21e08:	eb a6                	jmp    21db0 <processELFDynamicSection+0x50>
   21e0a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21e10:	8b 03                	mov    eax,DWORD PTR [ebx]
   21e12:	89 85 c4 18 00 00    	mov    DWORD PTR [ebp+0x18c4],eax
   21e18:	eb 96                	jmp    21db0 <processELFDynamicSection+0x50>
   21e1a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21e20:	8b 03                	mov    eax,DWORD PTR [ebx]
   21e22:	89 85 90 18 00 00    	mov    DWORD PTR [ebp+0x1890],eax
   21e28:	eb 86                	jmp    21db0 <processELFDynamicSection+0x50>
   21e2a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   21e30:	8b 85 a0 18 00 00    	mov    eax,DWORD PTR [ebp+0x18a0]
   21e36:	50                   	push   eax
   21e37:	c1 e0 08             	shl    eax,0x8
   21e3a:	8d 84 05 54 0e 00 00 	lea    eax,[ebp+eax*1+0xe54]
   21e41:	50                   	push   eax
   21e42:	55                   	push   ebp
   21e43:	68 50 65 08 00       	push   0x86550
   21e48:	e8 13 08 00 00       	call   22660 <printk>
   21e4d:	8b 13                	mov    edx,DWORD PTR [ebx]
   21e4f:	8b 85 b8 18 00 00    	mov    eax,DWORD PTR [ebp+0x18b8]
   21e55:	8d 14 90             	lea    edx,[eax+edx*4]
   21e58:	8b 85 a0 18 00 00    	mov    eax,DWORD PTR [ebp+0x18a0]
   21e5e:	8d 48 01             	lea    ecx,[eax+0x1]
   21e61:	c1 e0 08             	shl    eax,0x8
   21e64:	8d 84 05 54 0e 00 00 	lea    eax,[ebp+eax*1+0xe54]
   21e6b:	89 8d a0 18 00 00    	mov    DWORD PTR [ebp+0x18a0],ecx
   21e71:	59                   	pop    ecx
   21e72:	5f                   	pop    edi
   21e73:	52                   	push   edx
   21e74:	50                   	push   eax
   21e75:	8d 7c 24 30          	lea    edi,[esp+0x30]
   21e79:	e8 22 09 00 00       	call   227a0 <strcpy>
   21e7e:	31 c0                	xor    eax,eax
   21e80:	b9 18 00 00 00       	mov    ecx,0x18
   21e85:	c7 44 24 2c 2f 00 00 	mov    DWORD PTR [esp+0x2c],0x2f
   21e8c:	00 
   21e8d:	f3 ab                	rep stos DWORD PTR es:[edi],eax
   21e8f:	58                   	pop    eax
   21e90:	8b 85 a0 18 00 00    	mov    eax,DWORD PTR [ebp+0x18a0]
   21e96:	5a                   	pop    edx
   21e97:	c1 e0 08             	shl    eax,0x8
   21e9a:	8d 84 05 54 0d 00 00 	lea    eax,[ebp+eax*1+0xd54]
   21ea1:	50                   	push   eax
   21ea2:	8d 44 24 28          	lea    eax,[esp+0x28]
   21ea6:	50                   	push   eax
   21ea7:	e8 34 08 00 00       	call   226e0 <strcat>
   21eac:	8b 13                	mov    edx,DWORD PTR [ebx]
   21eae:	8b 85 b8 18 00 00    	mov    eax,DWORD PTR [ebp+0x18b8]
   21eb4:	8d 04 90             	lea    eax,[eax+edx*4]
   21eb7:	50                   	push   eax
   21eb8:	8d 44 24 30          	lea    eax,[esp+0x30]
   21ebc:	50                   	push   eax
   21ebd:	68 88 65 08 00       	push   0x86588
   21ec2:	68 00 02 00 00       	push   0x200
   21ec7:	e8 b4 07 00 00       	call   22680 <printd>
   21ecc:	83 c4 20             	add    esp,0x20
   21ecf:	f6 05 79 98 12 00 02 	test   BYTE PTR ds:0x129879,0x2
   21ed6:	0f 85 f4 00 00 00    	jne    21fd0 <processELFDynamicSection+0x270>
   21edc:	83 ec 08             	sub    esp,0x8
   21edf:	68 7d a0 05 00       	push   0x5a07d
   21ee4:	8d 44 24 28          	lea    eax,[esp+0x28]
   21ee8:	50                   	push   eax
   21ee9:	e8 32 8c ff ff       	call   1ab20 <fl_fopen>
   21eee:	83 c4 10             	add    esp,0x10
   21ef1:	85 c0                	test   eax,eax
   21ef3:	0f 84 fb 00 00 00    	je     21ff4 <processELFDynamicSection+0x294>
   21ef9:	8b 8d 54 18 00 00    	mov    ecx,DWORD PTR [ebp+0x1854]
   21eff:	8b 3d 3c 99 12 00    	mov    edi,DWORD PTR ds:0x12993c
   21f05:	83 ec 04             	sub    esp,0x4
   21f08:	8d 51 01             	lea    edx,[ecx+0x1]
   21f0b:	89 95 54 18 00 00    	mov    DWORD PTR [ebp+0x1854],edx
   21f11:	8b 15 40 99 12 00    	mov    edx,DWORD PTR ds:0x129940
   21f17:	89 94 8d 58 18 00 00 	mov    DWORD PTR [ebp+ecx*4+0x1858],edx
   21f1e:	8d 4a 01             	lea    ecx,[edx+0x1]
   21f21:	6a 01                	push   0x1
   21f23:	69 d2 dc 18 00 00    	imul   edx,edx,0x18dc
   21f29:	89 0d 40 99 12 00    	mov    DWORD PTR ds:0x129940,ecx
   21f2f:	01 d7                	add    edi,edx
   21f31:	57                   	push   edi
   21f32:	50                   	push   eax
   21f33:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
   21f37:	e8 f4 fb ff ff       	call   21b30 <loadElf>
   21f3c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
   21f40:	89 04 24             	mov    DWORD PTR [esp],eax
   21f43:	e8 28 90 ff ff       	call   1af70 <fl_fclose>
   21f48:	83 c4 10             	add    esp,0x10
   21f4b:	80 bf d8 18 00 00 00 	cmp    BYTE PTR [edi+0x18d8],0x0
   21f52:	0f 85 58 fe ff ff    	jne    21db0 <processELFDynamicSection+0x50>
   21f58:	83 ec 08             	sub    esp,0x8
   21f5b:	68 30 66 08 00       	push   0x86630
   21f60:	68 00 02 00 00       	push   0x200
   21f65:	e8 16 07 00 00       	call   22680 <printd>
   21f6a:	c6 85 d8 18 00 00 00 	mov    BYTE PTR [ebp+0x18d8],0x0
   21f71:	83 c4 10             	add    esp,0x10
   21f74:	e9 45 fe ff ff       	jmp    21dbe <processELFDynamicSection+0x5e>
   21f79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   21f80:	8b 03                	mov    eax,DWORD PTR [ebx]
   21f82:	89 85 9c 18 00 00    	mov    DWORD PTR [ebp+0x189c],eax
   21f88:	e9 23 fe ff ff       	jmp    21db0 <processELFDynamicSection+0x50>
   21f8d:	8d 76 00             	lea    esi,[esi+0x0]
   21f90:	8b 03                	mov    eax,DWORD PTR [ebx]
   21f92:	89 85 b0 18 00 00    	mov    DWORD PTR [ebp+0x18b0],eax
   21f98:	e9 13 fe ff ff       	jmp    21db0 <processELFDynamicSection+0x50>
   21f9d:	8d 76 00             	lea    esi,[esi+0x0]
   21fa0:	8b 03                	mov    eax,DWORD PTR [ebx]
   21fa2:	89 85 98 18 00 00    	mov    DWORD PTR [ebp+0x1898],eax
   21fa8:	e9 03 fe ff ff       	jmp    21db0 <processELFDynamicSection+0x50>
   21fad:	8d 76 00             	lea    esi,[esi+0x0]
   21fb0:	8b 03                	mov    eax,DWORD PTR [ebx]
   21fb2:	89 85 b4 18 00 00    	mov    DWORD PTR [ebp+0x18b4],eax
   21fb8:	e9 f3 fd ff ff       	jmp    21db0 <processELFDynamicSection+0x50>
   21fbd:	8d 76 00             	lea    esi,[esi+0x0]
   21fc0:	8b 03                	mov    eax,DWORD PTR [ebx]
   21fc2:	89 85 94 18 00 00    	mov    DWORD PTR [ebp+0x1894],eax
   21fc8:	e9 e3 fd ff ff       	jmp    21db0 <processELFDynamicSection+0x50>
   21fcd:	8d 76 00             	lea    esi,[esi+0x0]
   21fd0:	83 ec 04             	sub    esp,0x4
   21fd3:	8d 44 24 20          	lea    eax,[esp+0x20]
   21fd7:	50                   	push   eax
   21fd8:	68 bc 65 08 00       	push   0x865bc
   21fdd:	68 00 02 00 00       	push   0x200
   21fe2:	e8 99 06 00 00       	call   22680 <printd>
   21fe7:	e8 04 f8 fe ff       	call   117f0 <waitForKeyboardKey>
   21fec:	83 c4 10             	add    esp,0x10
   21fef:	e9 e8 fe ff ff       	jmp    21edc <processELFDynamicSection+0x17c>
   21ff4:	83 ec 08             	sub    esp,0x8
   21ff7:	8d 44 24 24          	lea    eax,[esp+0x24]
   21ffb:	50                   	push   eax
   21ffc:	68 08 66 08 00       	push   0x86608
   22001:	e8 5a 06 00 00       	call   22660 <printk>
   22006:	c6 85 d8 18 00 00 00 	mov    BYTE PTR [ebp+0x18d8],0x0
   2200d:	83 c4 10             	add    esp,0x10
   22010:	e9 a9 fd ff ff       	jmp    21dbe <processELFDynamicSection+0x5e>
   22015:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22019:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022020 <exec>:
exec():
   22020:	56                   	push   esi
   22021:	53                   	push   ebx
   22022:	83 ec 0c             	sub    esp,0xc
   22025:	68 7d a0 05 00       	push   0x5a07d
   2202a:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   2202e:	e8 ed 8a ff ff       	call   1ab20 <fl_fopen>
   22033:	83 c4 10             	add    esp,0x10
   22036:	85 c0                	test   eax,eax
   22038:	0f 84 c9 00 00 00    	je     22107 <exec+0xe7>
   2203e:	8b 35 40 99 12 00    	mov    esi,DWORD PTR ds:0x129940
   22044:	89 c3                	mov    ebx,eax
   22046:	83 ec 04             	sub    esp,0x4
   22049:	6a 00                	push   0x0
   2204b:	8d 46 01             	lea    eax,[esi+0x1]
   2204e:	69 f6 dc 18 00 00    	imul   esi,esi,0x18dc
   22054:	03 35 3c 99 12 00    	add    esi,DWORD PTR ds:0x12993c
   2205a:	a3 40 99 12 00       	mov    ds:0x129940,eax
   2205f:	56                   	push   esi
   22060:	53                   	push   ebx
   22061:	e8 ca fa ff ff       	call   21b30 <loadElf>
   22066:	83 c4 0c             	add    esp,0xc
   22069:	80 be d8 18 00 00 00 	cmp    BYTE PTR [esi+0x18d8],0x0
   22070:	ba 23 42 06 00       	mov    edx,0x64223
   22075:	b8 1b 42 06 00       	mov    eax,0x6421b
   2207a:	0f 44 c2             	cmove  eax,edx
   2207d:	50                   	push   eax
   2207e:	68 9c 66 08 00       	push   0x8669c
   22083:	68 00 02 00 00       	push   0x200
   22088:	e8 f3 05 00 00       	call   22680 <printd>
   2208d:	89 1c 24             	mov    DWORD PTR [esp],ebx
   22090:	e8 db 8e ff ff       	call   1af70 <fl_fclose>
   22095:	83 c4 10             	add    esp,0x10
   22098:	80 be d8 18 00 00 00 	cmp    BYTE PTR [esi+0x18d8],0x0
   2209f:	74 5f                	je     22100 <exec+0xe0>
   220a1:	83 ec 0c             	sub    esp,0xc
   220a4:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   220a8:	ff 76 18             	push   DWORD PTR [esi+0x18]
   220ab:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   220af:	68 cc 66 08 00       	push   0x866cc
   220b4:	68 00 02 00 00       	push   0x200
   220b9:	e8 c2 05 00 00       	call   22680 <printd>
   220be:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
   220c2:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
   220c6:	53                   	push   ebx
   220c7:	51                   	push   ecx
   220c8:	8b 56 18             	mov    edx,DWORD PTR [esi+0x18]
   220cb:	89 d2                	mov    edx,edx
   220cd:	ff d2                	call   edx
   220cf:	83 c4 18             	add    esp,0x18
   220d2:	89 c6                	mov    esi,eax
   220d4:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   220d8:	8d 44 24 1c          	lea    eax,[esp+0x1c]
   220dc:	50                   	push   eax
   220dd:	56                   	push   esi
   220de:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
   220e2:	68 08 67 08 00       	push   0x86708
   220e7:	68 00 02 00 00       	push   0x200
   220ec:	e8 8f 05 00 00       	call   22680 <printd>
   220f1:	83 c4 20             	add    esp,0x20
   220f4:	89 f0                	mov    eax,esi
   220f6:	83 c4 04             	add    esp,0x4
   220f9:	5b                   	pop    ebx
   220fa:	5e                   	pop    esi
   220fb:	c3                   	ret    
   220fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22100:	b8 ff ff ff ff       	mov    eax,0xffffffff
   22105:	eb ef                	jmp    220f6 <exec+0xd6>
   22107:	83 ec 04             	sub    esp,0x4
   2210a:	6a 00                	push   0x0
   2210c:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   22110:	68 6c 66 08 00       	push   0x8666c
   22115:	e8 46 05 00 00       	call   22660 <printk>
   2211a:	83 c4 10             	add    esp,0x10
   2211d:	b8 ff ff ff ff       	mov    eax,0xffffffff
   22122:	eb d2                	jmp    220f6 <exec+0xd6>
   22124:	66 90                	xchg   ax,ax
   22126:	66 90                	xchg   ax,ax
   22128:	66 90                	xchg   ax,ax
   2212a:	66 90                	xchg   ax,ax
   2212c:	66 90                	xchg   ax,ax
   2212e:	66 90                	xchg   ax,ax

00022130 <panic>:
panic():
   22130:	53                   	push   ebx
   22131:	83 ec 08             	sub    esp,0x8
   22134:	8d 5c 24 14          	lea    ebx,[esp+0x14]
   22138:	83 ec 08             	sub    esp,0x8
   2213b:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
   2213f:	68 54 67 08 00       	push   0x86754
   22144:	e8 17 05 00 00       	call   22660 <printk>
   22149:	c7 04 24 2b 42 06 00 	mov    DWORD PTR [esp],0x6422b
   22150:	e8 0b 05 00 00       	call   22660 <printk>
   22155:	58                   	pop    eax
   22156:	5a                   	pop    edx
   22157:	53                   	push   ebx
   22158:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   2215c:	e8 ef 04 00 00       	call   22650 <printk_valist>
   22161:	83 c4 10             	add    esp,0x10
   22164:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22168:	fa                   	cli    
   22169:	f4                   	hlt    
   2216a:	eb fc                	jmp    22168 <panic+0x38>
   2216c:	66 90                	xchg   ax,ax
   2216e:	66 90                	xchg   ax,ax

00022170 <prints>:
prints():
   22170:	55                   	push   ebp
   22171:	57                   	push   edi
   22172:	89 cf                	mov    edi,ecx
   22174:	56                   	push   esi
   22175:	53                   	push   ebx
   22176:	89 c3                	mov    ebx,eax
   22178:	83 ec 1c             	sub    esp,0x1c
   2217b:	85 c9                	test   ecx,ecx
   2217d:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
   22181:	0f 8e 31 01 00 00    	jle    222b8 <prints+0x148>
   22187:	31 c0                	xor    eax,eax
   22189:	80 3a 00             	cmp    BYTE PTR [edx],0x0
   2218c:	0f 84 9e 00 00 00    	je     22230 <prints+0xc0>
   22192:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22198:	83 c0 01             	add    eax,0x1
   2219b:	80 3c 02 00          	cmp    BYTE PTR [edx+eax*1],0x0
   2219f:	75 f7                	jne    22198 <prints+0x28>
   221a1:	31 f6                	xor    esi,esi
   221a3:	39 c7                	cmp    edi,eax
   221a5:	0f 8f 85 00 00 00    	jg     22230 <prints+0xc0>
   221ab:	89 e8                	mov    eax,ebp
   221ad:	83 e0 02             	and    eax,0x2
   221b0:	83 f8 01             	cmp    eax,0x1
   221b3:	19 c9                	sbb    ecx,ecx
   221b5:	83 e1 f0             	and    ecx,0xfffffff0
   221b8:	83 c1 30             	add    ecx,0x30
   221bb:	83 e5 01             	and    ebp,0x1
   221be:	0f 85 7c 00 00 00    	jne    22240 <prints+0xd0>
   221c4:	85 f6                	test   esi,esi
   221c6:	89 f7                	mov    edi,esi
   221c8:	0f 8e 0b 01 00 00    	jle    222d9 <prints+0x169>
   221ce:	66 90                	xchg   ax,ax
   221d0:	85 db                	test   ebx,ebx
   221d2:	0f 84 b8 00 00 00    	je     22290 <prints+0x120>
   221d8:	8b 03                	mov    eax,DWORD PTR [ebx]
   221da:	88 08                	mov    BYTE PTR [eax],cl
   221dc:	83 03 01             	add    DWORD PTR [ebx],0x1
   221df:	83 ef 01             	sub    edi,0x1
   221e2:	75 ec                	jne    221d0 <prints+0x60>
   221e4:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   221e7:	84 c0                	test   al,al
   221e9:	74 37                	je     22222 <prints+0xb2>
   221eb:	29 f2                	sub    edx,esi
   221ed:	89 d5                	mov    ebp,edx
   221ef:	90                   	nop
   221f0:	85 db                	test   ebx,ebx
   221f2:	74 7c                	je     22270 <prints+0x100>
   221f4:	8b 13                	mov    edx,DWORD PTR [ebx]
   221f6:	88 02                	mov    BYTE PTR [edx],al
   221f8:	83 03 01             	add    DWORD PTR [ebx],0x1
   221fb:	83 c6 01             	add    esi,0x1
   221fe:	0f b6 44 35 00       	movzx  eax,BYTE PTR [ebp+esi*1+0x0]
   22203:	84 c0                	test   al,al
   22205:	75 e9                	jne    221f0 <prints+0x80>
   22207:	85 ff                	test   edi,edi
   22209:	7e 17                	jle    22222 <prints+0xb2>
   2220b:	89 fd                	mov    ebp,edi
   2220d:	8d 76 00             	lea    esi,[esi+0x0]
   22210:	85 db                	test   ebx,ebx
   22212:	74 3c                	je     22250 <prints+0xe0>
   22214:	8b 03                	mov    eax,DWORD PTR [ebx]
   22216:	88 08                	mov    BYTE PTR [eax],cl
   22218:	83 03 01             	add    DWORD PTR [ebx],0x1
   2221b:	83 ed 01             	sub    ebp,0x1
   2221e:	75 f0                	jne    22210 <prints+0xa0>
   22220:	01 fe                	add    esi,edi
   22222:	83 c4 1c             	add    esp,0x1c
   22225:	89 f0                	mov    eax,esi
   22227:	5b                   	pop    ebx
   22228:	5e                   	pop    esi
   22229:	5f                   	pop    edi
   2222a:	5d                   	pop    ebp
   2222b:	c3                   	ret    
   2222c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22230:	29 c7                	sub    edi,eax
   22232:	89 fe                	mov    esi,edi
   22234:	e9 72 ff ff ff       	jmp    221ab <prints+0x3b>
   22239:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22240:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   22243:	89 f7                	mov    edi,esi
   22245:	31 f6                	xor    esi,esi
   22247:	84 c0                	test   al,al
   22249:	75 a0                	jne    221eb <prints+0x7b>
   2224b:	eb ba                	jmp    22207 <prints+0x97>
   2224d:	8d 76 00             	lea    esi,[esi+0x0]
   22250:	83 ec 0c             	sub    esp,0xc
   22253:	51                   	push   ecx
   22254:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
   22258:	e8 83 48 ff ff       	call   16ae0 <terminal_putchar>
   2225d:	83 c4 10             	add    esp,0x10
   22260:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   22264:	eb b5                	jmp    2221b <prints+0xab>
   22266:	8d 76 00             	lea    esi,[esi+0x0]
   22269:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   22270:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
   22274:	83 ec 0c             	sub    esp,0xc
   22277:	50                   	push   eax
   22278:	e8 63 48 ff ff       	call   16ae0 <terminal_putchar>
   2227d:	83 c4 10             	add    esp,0x10
   22280:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   22284:	e9 72 ff ff ff       	jmp    221fb <prints+0x8b>
   22289:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22290:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
   22294:	83 ec 0c             	sub    esp,0xc
   22297:	51                   	push   ecx
   22298:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
   2229c:	e8 3f 48 ff ff       	call   16ae0 <terminal_putchar>
   222a1:	83 c4 10             	add    esp,0x10
   222a4:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   222a8:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   222ac:	e9 2e ff ff ff       	jmp    221df <prints+0x6f>
   222b1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   222b8:	83 e5 01             	and    ebp,0x1
   222bb:	74 17                	je     222d4 <prints+0x164>
   222bd:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   222c0:	31 f6                	xor    esi,esi
   222c2:	b9 20 00 00 00       	mov    ecx,0x20
   222c7:	84 c0                	test   al,al
   222c9:	0f 85 1c ff ff ff    	jne    221eb <prints+0x7b>
   222cf:	e9 4e ff ff ff       	jmp    22222 <prints+0xb2>
   222d4:	b9 20 00 00 00       	mov    ecx,0x20
   222d9:	31 f6                	xor    esi,esi
   222db:	e9 04 ff ff ff       	jmp    221e4 <prints+0x74>

000222e0 <printi>:
printi():
   222e0:	55                   	push   ebp
   222e1:	57                   	push   edi
   222e2:	89 c7                	mov    edi,eax
   222e4:	56                   	push   esi
   222e5:	53                   	push   ebx
   222e6:	83 ec 2c             	sub    esp,0x2c
   222e9:	85 d2                	test   edx,edx
   222eb:	0f 84 df 00 00 00    	je     223d0 <printi+0xf0>
   222f1:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
   222f5:	85 db                	test   ebx,ebx
   222f7:	0f 95 c3             	setne  bl
   222fa:	83 f9 0a             	cmp    ecx,0xa
   222fd:	0f 94 c0             	sete   al
   22300:	84 c3                	test   bl,al
   22302:	74 09                	je     2230d <printi+0x2d>
   22304:	89 d0                	mov    eax,edx
   22306:	c1 e8 1f             	shr    eax,0x1f
   22309:	84 c0                	test   al,al
   2230b:	75 73                	jne    22380 <printi+0xa0>
   2230d:	89 d3                	mov    ebx,edx
   2230f:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
   22314:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
   2231b:	00 
   2231c:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
   22320:	8d 74 24 1f          	lea    esi,[esp+0x1f]
   22324:	8d 68 c6             	lea    ebp,[eax-0x3a]
   22327:	89 f6                	mov    esi,esi
   22329:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   22330:	89 d8                	mov    eax,ebx
   22332:	31 d2                	xor    edx,edx
   22334:	f7 f1                	div    ecx
   22336:	8d 04 2a             	lea    eax,[edx+ebp*1]
   22339:	83 fa 0a             	cmp    edx,0xa
   2233c:	0f 4d d0             	cmovge edx,eax
   2233f:	83 ee 01             	sub    esi,0x1
   22342:	89 d8                	mov    eax,ebx
   22344:	83 c2 30             	add    edx,0x30
   22347:	88 16                	mov    BYTE PTR [esi],dl
   22349:	31 d2                	xor    edx,edx
   2234b:	f7 f1                	div    ecx
   2234d:	85 c0                	test   eax,eax
   2234f:	89 c3                	mov    ebx,eax
   22351:	75 dd                	jne    22330 <printi+0x50>
   22353:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   22357:	85 d2                	test   edx,edx
   22359:	75 35                	jne    22390 <printi+0xb0>
   2235b:	83 ec 0c             	sub    esp,0xc
   2235e:	89 f2                	mov    edx,esi
   22360:	89 f8                	mov    eax,edi
   22362:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
   22366:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
   2236a:	e8 01 fe ff ff       	call   22170 <prints>
   2236f:	83 c4 10             	add    esp,0x10
   22372:	01 d8                	add    eax,ebx
   22374:	83 c4 2c             	add    esp,0x2c
   22377:	5b                   	pop    ebx
   22378:	5e                   	pop    esi
   22379:	5f                   	pop    edi
   2237a:	5d                   	pop    ebp
   2237b:	c3                   	ret    
   2237c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22380:	89 d3                	mov    ebx,edx
   22382:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
   22387:	8d 74 24 1f          	lea    esi,[esp+0x1f]
   2238b:	f7 db                	neg    ebx
   2238d:	75 6a                	jne    223f9 <printi+0x119>
   2238f:	90                   	nop
   22390:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
   22394:	85 c0                	test   eax,eax
   22396:	74 28                	je     223c0 <printi+0xe0>
   22398:	f6 44 24 48 02       	test   BYTE PTR [esp+0x48],0x2
   2239d:	74 21                	je     223c0 <printi+0xe0>
   2239f:	85 ff                	test   edi,edi
   223a1:	74 63                	je     22406 <printi+0x126>
   223a3:	8b 07                	mov    eax,DWORD PTR [edi]
   223a5:	c6 00 2d             	mov    BYTE PTR [eax],0x2d
   223a8:	83 07 01             	add    DWORD PTR [edi],0x1
   223ab:	83 6c 24 44 01       	sub    DWORD PTR [esp+0x44],0x1
   223b0:	bb 01 00 00 00       	mov    ebx,0x1
   223b5:	eb a4                	jmp    2235b <printi+0x7b>
   223b7:	89 f6                	mov    esi,esi
   223b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   223c0:	c6 46 ff 2d          	mov    BYTE PTR [esi-0x1],0x2d
   223c4:	31 db                	xor    ebx,ebx
   223c6:	83 ee 01             	sub    esi,0x1
   223c9:	eb 90                	jmp    2235b <printi+0x7b>
   223cb:	90                   	nop
   223cc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   223d0:	c6 44 24 14 30       	mov    BYTE PTR [esp+0x14],0x30
   223d5:	c6 44 24 15 00       	mov    BYTE PTR [esp+0x15],0x0
   223da:	83 ec 0c             	sub    esp,0xc
   223dd:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
   223e1:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
   223e5:	8d 54 24 24          	lea    edx,[esp+0x24]
   223e9:	e8 82 fd ff ff       	call   22170 <prints>
   223ee:	83 c4 10             	add    esp,0x10
   223f1:	83 c4 2c             	add    esp,0x2c
   223f4:	5b                   	pop    ebx
   223f5:	5e                   	pop    esi
   223f6:	5f                   	pop    edi
   223f7:	5d                   	pop    ebp
   223f8:	c3                   	ret    
   223f9:	c7 44 24 0c 01 00 00 	mov    DWORD PTR [esp+0xc],0x1
   22400:	00 
   22401:	e9 16 ff ff ff       	jmp    2231c <printi+0x3c>
   22406:	83 ec 0c             	sub    esp,0xc
   22409:	6a 2d                	push   0x2d
   2240b:	e8 d0 46 ff ff       	call   16ae0 <terminal_putchar>
   22410:	83 c4 10             	add    esp,0x10
   22413:	eb 96                	jmp    223ab <printi+0xcb>
   22415:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22419:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022420 <print>:
print():
   22420:	55                   	push   ebp
   22421:	57                   	push   edi
   22422:	56                   	push   esi
   22423:	53                   	push   ebx
   22424:	89 c6                	mov    esi,eax
   22426:	83 ec 2c             	sub    esp,0x2c
   22429:	0f b6 02             	movzx  eax,BYTE PTR [edx]
   2242c:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
   22430:	84 c0                	test   al,al
   22432:	0f 84 08 02 00 00    	je     22640 <print+0x220>
   22438:	89 d5                	mov    ebp,edx
   2243a:	31 ff                	xor    edi,edi
   2243c:	eb 29                	jmp    22467 <print+0x47>
   2243e:	66 90                	xchg   ax,ax
   22440:	85 f6                	test   esi,esi
   22442:	0f b6 45 00          	movzx  eax,BYTE PTR [ebp+0x0]
   22446:	89 eb                	mov    ebx,ebp
   22448:	0f 84 1a 01 00 00    	je     22568 <print+0x148>
   2244e:	8b 16                	mov    edx,DWORD PTR [esi]
   22450:	88 02                	mov    BYTE PTR [edx],al
   22452:	83 06 01             	add    DWORD PTR [esi],0x1
   22455:	83 c7 01             	add    edi,0x1
   22458:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   2245c:	8d 6b 01             	lea    ebp,[ebx+0x1]
   2245f:	84 c0                	test   al,al
   22461:	0f 84 d9 00 00 00    	je     22540 <print+0x120>
   22467:	3c 25                	cmp    al,0x25
   22469:	75 d5                	jne    22440 <print+0x20>
   2246b:	0f be 55 01          	movsx  edx,BYTE PTR [ebp+0x1]
   2246f:	8d 5d 01             	lea    ebx,[ebp+0x1]
   22472:	84 d2                	test   dl,dl
   22474:	0f 84 c6 00 00 00    	je     22540 <print+0x120>
   2247a:	80 fa 25             	cmp    dl,0x25
   2247d:	0f 84 d5 00 00 00    	je     22558 <print+0x138>
   22483:	31 c0                	xor    eax,eax
   22485:	80 fa 2d             	cmp    dl,0x2d
   22488:	75 0f                	jne    22499 <print+0x79>
   2248a:	e9 f1 00 00 00       	jmp    22580 <print+0x160>
   2248f:	90                   	nop
   22490:	83 c3 01             	add    ebx,0x1
   22493:	0f be 13             	movsx  edx,BYTE PTR [ebx]
   22496:	83 c8 02             	or     eax,0x2
   22499:	80 fa 30             	cmp    dl,0x30
   2249c:	74 f2                	je     22490 <print+0x70>
   2249e:	8d 4a d0             	lea    ecx,[edx-0x30]
   224a1:	80 f9 09             	cmp    cl,0x9
   224a4:	b9 00 00 00 00       	mov    ecx,0x0
   224a9:	77 1b                	ja     224c6 <print+0xa6>
   224ab:	89 c5                	mov    ebp,eax
   224ad:	8d 76 00             	lea    esi,[esi+0x0]
   224b0:	8d 04 89             	lea    eax,[ecx+ecx*4]
   224b3:	83 c3 01             	add    ebx,0x1
   224b6:	8d 4c 42 d0          	lea    ecx,[edx+eax*2-0x30]
   224ba:	0f be 13             	movsx  edx,BYTE PTR [ebx]
   224bd:	8d 42 d0             	lea    eax,[edx-0x30]
   224c0:	3c 09                	cmp    al,0x9
   224c2:	76 ec                	jbe    224b0 <print+0x90>
   224c4:	89 e8                	mov    eax,ebp
   224c6:	80 fa 73             	cmp    dl,0x73
   224c9:	0f 84 c9 00 00 00    	je     22598 <print+0x178>
   224cf:	80 fa 64             	cmp    dl,0x64
   224d2:	0f 84 ec 00 00 00    	je     225c4 <print+0x1a4>
   224d8:	80 fa 78             	cmp    dl,0x78
   224db:	0f 84 0c 01 00 00    	je     225ed <print+0x1cd>
   224e1:	80 fa 58             	cmp    dl,0x58
   224e4:	0f 84 2e 01 00 00    	je     22618 <print+0x1f8>
   224ea:	80 fa 75             	cmp    dl,0x75
   224ed:	0f 84 39 01 00 00    	je     2262c <print+0x20c>
   224f3:	80 fa 63             	cmp    dl,0x63
   224f6:	0f 85 5c ff ff ff    	jne    22458 <print+0x38>
   224fc:	8b 6c 24 0c          	mov    ebp,DWORD PTR [esp+0xc]
   22500:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
   22505:	83 ec 0c             	sub    esp,0xc
   22508:	89 ea                	mov    edx,ebp
   2250a:	83 c5 04             	add    ebp,0x4
   2250d:	8b 12                	mov    edx,DWORD PTR [edx]
   2250f:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
   22513:	8d 6b 01             	lea    ebp,[ebx+0x1]
   22516:	88 54 24 2a          	mov    BYTE PTR [esp+0x2a],dl
   2251a:	50                   	push   eax
   2251b:	89 f0                	mov    eax,esi
   2251d:	8d 54 24 2e          	lea    edx,[esp+0x2e]
   22521:	e8 4a fc ff ff       	call   22170 <prints>
   22526:	01 c7                	add    edi,eax
   22528:	0f b6 43 01          	movzx  eax,BYTE PTR [ebx+0x1]
   2252c:	83 c4 10             	add    esp,0x10
   2252f:	84 c0                	test   al,al
   22531:	0f 85 30 ff ff ff    	jne    22467 <print+0x47>
   22537:	89 f6                	mov    esi,esi
   22539:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   22540:	85 f6                	test   esi,esi
   22542:	74 05                	je     22549 <print+0x129>
   22544:	8b 06                	mov    eax,DWORD PTR [esi]
   22546:	c6 00 00             	mov    BYTE PTR [eax],0x0
   22549:	83 c4 2c             	add    esp,0x2c
   2254c:	89 f8                	mov    eax,edi
   2254e:	5b                   	pop    ebx
   2254f:	5e                   	pop    esi
   22550:	5f                   	pop    edi
   22551:	5d                   	pop    ebp
   22552:	c3                   	ret    
   22553:	90                   	nop
   22554:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22558:	85 f6                	test   esi,esi
   2255a:	b8 25 00 00 00       	mov    eax,0x25
   2255f:	0f 85 e9 fe ff ff    	jne    2244e <print+0x2e>
   22565:	8d 76 00             	lea    esi,[esi+0x0]
   22568:	83 ec 0c             	sub    esp,0xc
   2256b:	50                   	push   eax
   2256c:	e8 6f 45 ff ff       	call   16ae0 <terminal_putchar>
   22571:	83 c4 10             	add    esp,0x10
   22574:	e9 dc fe ff ff       	jmp    22455 <print+0x35>
   22579:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22580:	8d 5d 02             	lea    ebx,[ebp+0x2]
   22583:	0f be 55 02          	movsx  edx,BYTE PTR [ebp+0x2]
   22587:	b8 01 00 00 00       	mov    eax,0x1
   2258c:	e9 08 ff ff ff       	jmp    22499 <print+0x79>
   22591:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22598:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   2259c:	8d 6a 04             	lea    ebp,[edx+0x4]
   2259f:	8b 12                	mov    edx,DWORD PTR [edx]
   225a1:	89 6c 24 0c          	mov    DWORD PTR [esp+0xc],ebp
   225a5:	bd 31 42 06 00       	mov    ebp,0x64231
   225aa:	85 d2                	test   edx,edx
   225ac:	0f 44 d5             	cmove  edx,ebp
   225af:	83 ec 0c             	sub    esp,0xc
   225b2:	50                   	push   eax
   225b3:	89 f0                	mov    eax,esi
   225b5:	e8 b6 fb ff ff       	call   22170 <prints>
   225ba:	83 c4 10             	add    esp,0x10
   225bd:	01 c7                	add    edi,eax
   225bf:	e9 94 fe ff ff       	jmp    22458 <print+0x38>
   225c4:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   225c8:	6a 61                	push   0x61
   225ca:	50                   	push   eax
   225cb:	51                   	push   ecx
   225cc:	b9 0a 00 00 00       	mov    ecx,0xa
   225d1:	6a 01                	push   0x1
   225d3:	8d 6a 04             	lea    ebp,[edx+0x4]
   225d6:	8b 12                	mov    edx,DWORD PTR [edx]
   225d8:	89 f0                	mov    eax,esi
   225da:	e8 01 fd ff ff       	call   222e0 <printi>
   225df:	83 c4 10             	add    esp,0x10
   225e2:	01 c7                	add    edi,eax
   225e4:	89 6c 24 0c          	mov    DWORD PTR [esp+0xc],ebp
   225e8:	e9 6b fe ff ff       	jmp    22458 <print+0x38>
   225ed:	8b 6c 24 0c          	mov    ebp,DWORD PTR [esp+0xc]
   225f1:	89 ea                	mov    edx,ebp
   225f3:	83 c5 04             	add    ebp,0x4
   225f6:	89 6c 24 0c          	mov    DWORD PTR [esp+0xc],ebp
   225fa:	6a 61                	push   0x61
   225fc:	50                   	push   eax
   225fd:	51                   	push   ecx
   225fe:	89 f0                	mov    eax,esi
   22600:	6a 00                	push   0x0
   22602:	8b 12                	mov    edx,DWORD PTR [edx]
   22604:	b9 10 00 00 00       	mov    ecx,0x10
   22609:	e8 d2 fc ff ff       	call   222e0 <printi>
   2260e:	83 c4 10             	add    esp,0x10
   22611:	01 c7                	add    edi,eax
   22613:	e9 40 fe ff ff       	jmp    22458 <print+0x38>
   22618:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   2261c:	6a 41                	push   0x41
   2261e:	50                   	push   eax
   2261f:	51                   	push   ecx
   22620:	b9 10 00 00 00       	mov    ecx,0x10
   22625:	6a 00                	push   0x0
   22627:	8d 6a 04             	lea    ebp,[edx+0x4]
   2262a:	eb aa                	jmp    225d6 <print+0x1b6>
   2262c:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   22630:	6a 61                	push   0x61
   22632:	50                   	push   eax
   22633:	51                   	push   ecx
   22634:	b9 0a 00 00 00       	mov    ecx,0xa
   22639:	6a 00                	push   0x0
   2263b:	8d 6a 04             	lea    ebp,[edx+0x4]
   2263e:	eb 96                	jmp    225d6 <print+0x1b6>
   22640:	31 ff                	xor    edi,edi
   22642:	e9 f9 fe ff ff       	jmp    22540 <print+0x120>
   22647:	89 f6                	mov    esi,esi
   22649:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022650 <printk_valist>:
printk_valist():
   22650:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   22654:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   22658:	31 c0                	xor    eax,eax
   2265a:	e9 c1 fd ff ff       	jmp    22420 <print>
   2265f:	90                   	nop

00022660 <printk>:
printk():
   22660:	83 ec 0c             	sub    esp,0xc
   22663:	31 c0                	xor    eax,eax
   22665:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   22669:	8d 4c 24 14          	lea    ecx,[esp+0x14]
   2266d:	e8 ae fd ff ff       	call   22420 <print>
   22672:	83 c4 0c             	add    esp,0xc
   22675:	c3                   	ret    
   22676:	8d 76 00             	lea    esi,[esi+0x0]
   22679:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022680 <printd>:
printd():
   22680:	83 ec 0c             	sub    esp,0xc
   22683:	8b 0d 78 98 12 00    	mov    ecx,DWORD PTR ds:0x129878
   22689:	31 c0                	xor    eax,eax
   2268b:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
   2268f:	21 d1                	and    ecx,edx
   22691:	39 ca                	cmp    edx,ecx
   22693:	74 0b                	je     226a0 <printd+0x20>
   22695:	83 c4 0c             	add    esp,0xc
   22698:	c3                   	ret    
   22699:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   226a0:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
   226a4:	8d 4c 24 18          	lea    ecx,[esp+0x18]
   226a8:	e8 73 fd ff ff       	call   22420 <print>
   226ad:	83 c4 0c             	add    esp,0xc
   226b0:	c3                   	ret    
   226b1:	eb 0d                	jmp    226c0 <sprintf>
   226b3:	90                   	nop
   226b4:	90                   	nop
   226b5:	90                   	nop
   226b6:	90                   	nop
   226b7:	90                   	nop
   226b8:	90                   	nop
   226b9:	90                   	nop
   226ba:	90                   	nop
   226bb:	90                   	nop
   226bc:	90                   	nop
   226bd:	90                   	nop
   226be:	90                   	nop
   226bf:	90                   	nop

000226c0 <sprintf>:
sprintf():
   226c0:	83 ec 0c             	sub    esp,0xc
   226c3:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
   226c7:	8d 4c 24 18          	lea    ecx,[esp+0x18]
   226cb:	8d 44 24 10          	lea    eax,[esp+0x10]
   226cf:	e8 4c fd ff ff       	call   22420 <print>
   226d4:	83 c4 0c             	add    esp,0xc
   226d7:	c3                   	ret    
   226d8:	66 90                	xchg   ax,ax
   226da:	66 90                	xchg   ax,ax
   226dc:	66 90                	xchg   ax,ax
   226de:	66 90                	xchg   ax,ax

000226e0 <strcat>:
strcat():
   226e0:	53                   	push   ebx
   226e1:	83 ec 14             	sub    esp,0x14
   226e4:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   226e8:	53                   	push   ebx
   226e9:	e8 12 01 00 00       	call   22800 <strlen>
   226ee:	5a                   	pop    edx
   226ef:	59                   	pop    ecx
   226f0:	01 d8                	add    eax,ebx
   226f2:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
   226f6:	50                   	push   eax
   226f7:	e8 a4 00 00 00       	call   227a0 <strcpy>
   226fc:	83 c4 18             	add    esp,0x18
   226ff:	89 d8                	mov    eax,ebx
   22701:	5b                   	pop    ebx
   22702:	c3                   	ret    
   22703:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22709:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022710 <concatenate>:
concatenate():
   22710:	56                   	push   esi
   22711:	53                   	push   ebx
   22712:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   22716:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
   2271a:	80 39 00             	cmp    BYTE PTR [ecx],0x0
   2271d:	74 38                	je     22757 <concatenate+0x47>
   2271f:	8d 51 01             	lea    edx,[ecx+0x1]
   22722:	31 c0                	xor    eax,eax
   22724:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22728:	89 d6                	mov    esi,edx
   2272a:	83 c2 01             	add    edx,0x1
   2272d:	83 c0 01             	add    eax,0x1
   22730:	80 7a ff 00          	cmp    BYTE PTR [edx-0x1],0x0
   22734:	75 f2                	jne    22728 <concatenate+0x18>
   22736:	0f b6 13             	movzx  edx,BYTE PTR [ebx]
   22739:	84 d2                	test   dl,dl
   2273b:	74 14                	je     22751 <concatenate+0x41>
   2273d:	29 c3                	sub    ebx,eax
   2273f:	90                   	nop
   22740:	88 14 01             	mov    BYTE PTR [ecx+eax*1],dl
   22743:	83 c0 01             	add    eax,0x1
   22746:	0f b6 14 03          	movzx  edx,BYTE PTR [ebx+eax*1]
   2274a:	84 d2                	test   dl,dl
   2274c:	75 f2                	jne    22740 <concatenate+0x30>
   2274e:	8d 34 01             	lea    esi,[ecx+eax*1]
   22751:	c6 06 00             	mov    BYTE PTR [esi],0x0
   22754:	5b                   	pop    ebx
   22755:	5e                   	pop    esi
   22756:	c3                   	ret    
   22757:	89 ce                	mov    esi,ecx
   22759:	31 c0                	xor    eax,eax
   2275b:	eb d9                	jmp    22736 <concatenate+0x26>
   2275d:	66 90                	xchg   ax,ax
   2275f:	90                   	nop

00022760 <strcmp>:
strcmp():
   22760:	53                   	push   ebx
   22761:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   22765:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
   22769:	eb 09                	jmp    22774 <strcmp+0x14>
   2276b:	90                   	nop
   2276c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22770:	38 d8                	cmp    al,bl
   22772:	75 1c                	jne    22790 <strcmp+0x30>
   22774:	83 c1 01             	add    ecx,0x1
   22777:	0f b6 41 ff          	movzx  eax,BYTE PTR [ecx-0x1]
   2277b:	83 c2 01             	add    edx,0x1
   2277e:	0f b6 5a ff          	movzx  ebx,BYTE PTR [edx-0x1]
   22782:	84 c0                	test   al,al
   22784:	75 ea                	jne    22770 <strcmp+0x10>
   22786:	0f b6 c3             	movzx  eax,bl
   22789:	f7 d8                	neg    eax
   2278b:	5b                   	pop    ebx
   2278c:	c3                   	ret    
   2278d:	8d 76 00             	lea    esi,[esi+0x0]
   22790:	29 d8                	sub    eax,ebx
   22792:	5b                   	pop    ebx
   22793:	c3                   	ret    
   22794:	66 90                	xchg   ax,ax
   22796:	66 90                	xchg   ax,ax
   22798:	66 90                	xchg   ax,ax
   2279a:	66 90                	xchg   ax,ax
   2279c:	66 90                	xchg   ax,ax
   2279e:	66 90                	xchg   ax,ax

000227a0 <strcpy>:
strcpy():
   227a0:	53                   	push   ebx
   227a1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   227a5:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
   227a9:	89 c2                	mov    edx,eax
   227ab:	90                   	nop
   227ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   227b0:	83 c1 01             	add    ecx,0x1
   227b3:	0f b6 59 ff          	movzx  ebx,BYTE PTR [ecx-0x1]
   227b7:	83 c2 01             	add    edx,0x1
   227ba:	84 db                	test   bl,bl
   227bc:	88 5a ff             	mov    BYTE PTR [edx-0x1],bl
   227bf:	75 ef                	jne    227b0 <strcpy+0x10>
   227c1:	5b                   	pop    ebx
   227c2:	c3                   	ret    
   227c3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   227c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000227d0 <strcpyc>:
strcpyc():
   227d0:	56                   	push   esi
   227d1:	53                   	push   ebx
   227d2:	31 d2                	xor    edx,edx
   227d4:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
   227d8:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   227dc:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
   227e0:	83 c3 01             	add    ebx,0x1
   227e3:	eb 0a                	jmp    227ef <strcpyc+0x1f>
   227e5:	8d 76 00             	lea    esi,[esi+0x0]
   227e8:	83 c2 01             	add    edx,0x1
   227eb:	39 d3                	cmp    ebx,edx
   227ed:	74 0b                	je     227fa <strcpyc+0x2a>
   227ef:	0f b6 0c 16          	movzx  ecx,BYTE PTR [esi+edx*1]
   227f3:	84 c9                	test   cl,cl
   227f5:	88 0c 10             	mov    BYTE PTR [eax+edx*1],cl
   227f8:	75 ee                	jne    227e8 <strcpyc+0x18>
   227fa:	5b                   	pop    ebx
   227fb:	5e                   	pop    esi
   227fc:	c3                   	ret    
   227fd:	66 90                	xchg   ax,ax
   227ff:	90                   	nop

00022800 <strlen>:
strlen():
   22800:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
   22804:	31 c0                	xor    eax,eax
   22806:	80 3a 00             	cmp    BYTE PTR [edx],0x0
   22809:	74 10                	je     2281b <strlen+0x1b>
   2280b:	90                   	nop
   2280c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22810:	83 c0 01             	add    eax,0x1
   22813:	80 3c 02 00          	cmp    BYTE PTR [edx+eax*1],0x0
   22817:	75 f7                	jne    22810 <strlen+0x10>
   22819:	f3 c3                	repz ret 
   2281b:	f3 c3                	repz ret 
   2281d:	66 90                	xchg   ax,ax
   2281f:	90                   	nop

00022820 <strtoul>:
strtoul():
   22820:	55                   	push   ebp
   22821:	57                   	push   edi
   22822:	56                   	push   esi
   22823:	53                   	push   ebx
   22824:	83 ec 0c             	sub    esp,0xc
   22827:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
   2282b:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
   2282f:	eb 09                	jmp    2283a <strtoul+0x1a>
   22831:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22838:	89 d8                	mov    eax,ebx
   2283a:	8d 58 01             	lea    ebx,[eax+0x1]
   2283d:	0f be 4b ff          	movsx  ecx,BYTE PTR [ebx-0x1]
   22841:	83 f9 20             	cmp    ecx,0x20
   22844:	74 f2                	je     22838 <strtoul+0x18>
   22846:	83 f9 2d             	cmp    ecx,0x2d
   22849:	0f 84 19 01 00 00    	je     22968 <strtoul+0x148>
   2284f:	83 f9 2b             	cmp    ecx,0x2b
   22852:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   22859:	00 
   2285a:	0f 84 20 01 00 00    	je     22980 <strtoul+0x160>
   22860:	f7 c7 ef ff ff ff    	test   edi,0xffffffef
   22866:	75 28                	jne    22890 <strtoul+0x70>
   22868:	83 f9 30             	cmp    ecx,0x30
   2286b:	0f 84 1b 01 00 00    	je     2298c <strtoul+0x16c>
   22871:	85 ff                	test   edi,edi
   22873:	75 1b                	jne    22890 <strtoul+0x70>
   22875:	c7 04 24 05 00 00 00 	mov    DWORD PTR [esp],0x5
   2287c:	bd 99 99 99 19       	mov    ebp,0x19999999
   22881:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
   22888:	00 
   22889:	bf 0a 00 00 00       	mov    edi,0xa
   2288e:	eb 12                	jmp    228a2 <strtoul+0x82>
   22890:	b8 ff ff ff ff       	mov    eax,0xffffffff
   22895:	31 d2                	xor    edx,edx
   22897:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
   2289b:	f7 f7                	div    edi
   2289d:	89 14 24             	mov    DWORD PTR [esp],edx
   228a0:	89 c5                	mov    ebp,eax
   228a2:	31 f6                	xor    esi,esi
   228a4:	31 c0                	xor    eax,eax
   228a6:	eb 21                	jmp    228c9 <strtoul+0xa9>
   228a8:	90                   	nop
   228a9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   228b0:	39 e8                	cmp    eax,ebp
   228b2:	77 49                	ja     228fd <strtoul+0xdd>
   228b4:	39 e8                	cmp    eax,ebp
   228b6:	75 50                	jne    22908 <strtoul+0xe8>
   228b8:	3b 14 24             	cmp    edx,DWORD PTR [esp]
   228bb:	be ff ff ff ff       	mov    esi,0xffffffff
   228c0:	7e 46                	jle    22908 <strtoul+0xe8>
   228c2:	83 c3 01             	add    ebx,0x1
   228c5:	0f be 4b ff          	movsx  ecx,BYTE PTR [ebx-0x1]
   228c9:	8d 51 d0             	lea    edx,[ecx-0x30]
   228cc:	83 fa 09             	cmp    edx,0x9
   228cf:	76 1f                	jbe    228f0 <strtoul+0xd0>
   228d1:	89 ca                	mov    edx,ecx
   228d3:	83 ca 20             	or     edx,0x20
   228d6:	83 ea 61             	sub    edx,0x61
   228d9:	83 fa 19             	cmp    edx,0x19
   228dc:	77 42                	ja     22920 <strtoul+0x100>
   228de:	8d 51 bf             	lea    edx,[ecx-0x41]
   228e1:	83 fa 1a             	cmp    edx,0x1a
   228e4:	19 d2                	sbb    edx,edx
   228e6:	83 e2 e0             	and    edx,0xffffffe0
   228e9:	83 c2 57             	add    edx,0x57
   228ec:	29 d1                	sub    ecx,edx
   228ee:	89 ca                	mov    edx,ecx
   228f0:	39 d7                	cmp    edi,edx
   228f2:	7e 2c                	jle    22920 <strtoul+0x100>
   228f4:	c1 ee 1f             	shr    esi,0x1f
   228f7:	89 f1                	mov    ecx,esi
   228f9:	84 c9                	test   cl,cl
   228fb:	74 b3                	je     228b0 <strtoul+0x90>
   228fd:	be ff ff ff ff       	mov    esi,0xffffffff
   22902:	eb be                	jmp    228c2 <strtoul+0xa2>
   22904:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22908:	0f af 44 24 04       	imul   eax,DWORD PTR [esp+0x4]
   2290d:	be 01 00 00 00       	mov    esi,0x1
   22912:	01 d0                	add    eax,edx
   22914:	eb ac                	jmp    228c2 <strtoul+0xa2>
   22916:	8d 76 00             	lea    esi,[esi+0x0]
   22919:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
   22920:	85 f6                	test   esi,esi
   22922:	78 2c                	js     22950 <strtoul+0x130>
   22924:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
   22928:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
   2292c:	89 c2                	mov    edx,eax
   2292e:	f7 da                	neg    edx
   22930:	85 c9                	test   ecx,ecx
   22932:	0f 45 c2             	cmovne eax,edx
   22935:	85 ff                	test   edi,edi
   22937:	74 0e                	je     22947 <strtoul+0x127>
   22939:	85 f6                	test   esi,esi
   2293b:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
   2293f:	75 1c                	jne    2295d <strtoul+0x13d>
   22941:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
   22945:	89 17                	mov    DWORD PTR [edi],edx
   22947:	83 c4 0c             	add    esp,0xc
   2294a:	5b                   	pop    ebx
   2294b:	5e                   	pop    esi
   2294c:	5f                   	pop    edi
   2294d:	5d                   	pop    ebp
   2294e:	c3                   	ret    
   2294f:	90                   	nop
   22950:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
   22954:	b8 ff ff ff ff       	mov    eax,0xffffffff
   22959:	85 d2                	test   edx,edx
   2295b:	74 ea                	je     22947 <strtoul+0x127>
   2295d:	8d 53 ff             	lea    edx,[ebx-0x1]
   22960:	eb df                	jmp    22941 <strtoul+0x121>
   22962:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22968:	8d 58 02             	lea    ebx,[eax+0x2]
   2296b:	0f be 48 01          	movsx  ecx,BYTE PTR [eax+0x1]
   2296f:	c7 44 24 08 01 00 00 	mov    DWORD PTR [esp+0x8],0x1
   22976:	00 
   22977:	e9 e4 fe ff ff       	jmp    22860 <strtoul+0x40>
   2297c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22980:	8d 58 02             	lea    ebx,[eax+0x2]
   22983:	0f be 48 01          	movsx  ecx,BYTE PTR [eax+0x1]
   22987:	e9 d4 fe ff ff       	jmp    22860 <strtoul+0x40>
   2298c:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
   2298f:	83 e0 df             	and    eax,0xffffffdf
   22992:	3c 58                	cmp    al,0x58
   22994:	75 25                	jne    229bb <strtoul+0x19b>
   22996:	0f be 4b 01          	movsx  ecx,BYTE PTR [ebx+0x1]
   2299a:	c7 04 24 0f 00 00 00 	mov    DWORD PTR [esp],0xf
   229a1:	83 c3 02             	add    ebx,0x2
   229a4:	bd ff ff ff 0f       	mov    ebp,0xfffffff
   229a9:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
   229b0:	00 
   229b1:	bf 10 00 00 00       	mov    edi,0x10
   229b6:	e9 e7 fe ff ff       	jmp    228a2 <strtoul+0x82>
   229bb:	85 ff                	test   edi,edi
   229bd:	0f 85 cd fe ff ff    	jne    22890 <strtoul+0x70>
   229c3:	c7 04 24 07 00 00 00 	mov    DWORD PTR [esp],0x7
   229ca:	bd ff ff ff 1f       	mov    ebp,0x1fffffff
   229cf:	c7 44 24 04 08 00 00 	mov    DWORD PTR [esp+0x4],0x8
   229d6:	00 
   229d7:	bf 08 00 00 00       	mov    edi,0x8
   229dc:	e9 c1 fe ff ff       	jmp    228a2 <strtoul+0x82>
   229e1:	66 90                	xchg   ax,ax
   229e3:	66 90                	xchg   ax,ax
   229e5:	66 90                	xchg   ax,ax
   229e7:	66 90                	xchg   ax,ax
   229e9:	66 90                	xchg   ax,ax
   229eb:	66 90                	xchg   ax,ax
   229ed:	66 90                	xchg   ax,ax
   229ef:	90                   	nop

000229f0 <strleft>:
strleft():
   229f0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   229f4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   229f8:	c6 04 10 00          	mov    BYTE PTR [eax+edx*1],0x0
   229fc:	c3                   	ret    
   229fd:	66 90                	xchg   ax,ax
   229ff:	90                   	nop

00022a00 <strtol>:
strtol():
   22a00:	55                   	push   ebp
   22a01:	57                   	push   edi
   22a02:	56                   	push   esi
   22a03:	53                   	push   ebx
   22a04:	83 ec 0c             	sub    esp,0xc
   22a07:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
   22a0b:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
   22a0f:	eb 09                	jmp    22a1a <strtol+0x1a>
   22a11:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22a18:	89 c8                	mov    eax,ecx
   22a1a:	8d 48 01             	lea    ecx,[eax+0x1]
   22a1d:	0f be 59 ff          	movsx  ebx,BYTE PTR [ecx-0x1]
   22a21:	83 fb 20             	cmp    ebx,0x20
   22a24:	74 f2                	je     22a18 <strtol+0x18>
   22a26:	83 fb 2d             	cmp    ebx,0x2d
   22a29:	0f 84 19 01 00 00    	je     22b48 <strtol+0x148>
   22a2f:	83 fb 2b             	cmp    ebx,0x2b
   22a32:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
   22a39:	00 
   22a3a:	0f 84 20 01 00 00    	je     22b60 <strtol+0x160>
   22a40:	f7 c7 ef ff ff ff    	test   edi,0xffffffef
   22a46:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
   22a4a:	75 1e                	jne    22a6a <strtol+0x6a>
   22a4c:	83 fb 30             	cmp    ebx,0x30
   22a4f:	0f 84 17 01 00 00    	je     22b6c <strtol+0x16c>
   22a55:	85 ff                	test   edi,edi
   22a57:	0f 85 48 01 00 00    	jne    22ba5 <strtol+0x1a5>
   22a5d:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
   22a64:	00 
   22a65:	bf 0a 00 00 00       	mov    edi,0xa
   22a6a:	83 7c 24 08 01       	cmp    DWORD PTR [esp+0x8],0x1
   22a6f:	19 c0                	sbb    eax,eax
   22a71:	31 d2                	xor    edx,edx
   22a73:	31 f6                	xor    esi,esi
   22a75:	05 00 00 00 80       	add    eax,0x80000000
   22a7a:	31 ed                	xor    ebp,ebp
   22a7c:	f7 74 24 04          	div    DWORD PTR [esp+0x4]
   22a80:	89 14 24             	mov    DWORD PTR [esp],edx
   22a83:	eb 1c                	jmp    22aa1 <strtol+0xa1>
   22a85:	8d 76 00             	lea    esi,[esi+0x0]
   22a88:	39 c5                	cmp    ebp,eax
   22a8a:	77 49                	ja     22ad5 <strtol+0xd5>
   22a8c:	39 c5                	cmp    ebp,eax
   22a8e:	75 50                	jne    22ae0 <strtol+0xe0>
   22a90:	3b 14 24             	cmp    edx,DWORD PTR [esp]
   22a93:	be ff ff ff ff       	mov    esi,0xffffffff
   22a98:	7e 46                	jle    22ae0 <strtol+0xe0>
   22a9a:	83 c1 01             	add    ecx,0x1
   22a9d:	0f be 59 ff          	movsx  ebx,BYTE PTR [ecx-0x1]
   22aa1:	8d 53 d0             	lea    edx,[ebx-0x30]
   22aa4:	83 fa 09             	cmp    edx,0x9
   22aa7:	76 1f                	jbe    22ac8 <strtol+0xc8>
   22aa9:	89 da                	mov    edx,ebx
   22aab:	83 ca 20             	or     edx,0x20
   22aae:	83 ea 61             	sub    edx,0x61
   22ab1:	83 fa 19             	cmp    edx,0x19
   22ab4:	77 3a                	ja     22af0 <strtol+0xf0>
   22ab6:	8d 53 bf             	lea    edx,[ebx-0x41]
   22ab9:	83 fa 1a             	cmp    edx,0x1a
   22abc:	19 d2                	sbb    edx,edx
   22abe:	83 e2 e0             	and    edx,0xffffffe0
   22ac1:	83 c2 57             	add    edx,0x57
   22ac4:	29 d3                	sub    ebx,edx
   22ac6:	89 da                	mov    edx,ebx
   22ac8:	39 d7                	cmp    edi,edx
   22aca:	7e 24                	jle    22af0 <strtol+0xf0>
   22acc:	c1 ee 1f             	shr    esi,0x1f
   22acf:	89 f3                	mov    ebx,esi
   22ad1:	84 db                	test   bl,bl
   22ad3:	74 b3                	je     22a88 <strtol+0x88>
   22ad5:	be ff ff ff ff       	mov    esi,0xffffffff
   22ada:	eb be                	jmp    22a9a <strtol+0x9a>
   22adc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22ae0:	0f af 6c 24 04       	imul   ebp,DWORD PTR [esp+0x4]
   22ae5:	be 01 00 00 00       	mov    esi,0x1
   22aea:	01 d5                	add    ebp,edx
   22aec:	eb ac                	jmp    22a9a <strtol+0x9a>
   22aee:	66 90                	xchg   ax,ax
   22af0:	83 fe ff             	cmp    esi,0xffffffff
   22af3:	74 33                	je     22b28 <strtol+0x128>
   22af5:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   22af9:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
   22afd:	89 e8                	mov    eax,ebp
   22aff:	f7 d8                	neg    eax
   22b01:	85 d2                	test   edx,edx
   22b03:	0f 45 e8             	cmovne ebp,eax
   22b06:	85 db                	test   ebx,ebx
   22b08:	89 e8                	mov    eax,ebp
   22b0a:	74 0e                	je     22b1a <strtol+0x11a>
   22b0c:	85 f6                	test   esi,esi
   22b0e:	75 2c                	jne    22b3c <strtol+0x13c>
   22b10:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
   22b14:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
   22b18:	89 0f                	mov    DWORD PTR [edi],ecx
   22b1a:	83 c4 0c             	add    esp,0xc
   22b1d:	5b                   	pop    ebx
   22b1e:	5e                   	pop    esi
   22b1f:	5f                   	pop    edi
   22b20:	5d                   	pop    ebp
   22b21:	c3                   	ret    
   22b22:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22b28:	83 7c 24 08 01       	cmp    DWORD PTR [esp+0x8],0x1
   22b2d:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
   22b31:	19 c0                	sbb    eax,eax
   22b33:	05 00 00 00 80       	add    eax,0x80000000
   22b38:	85 f6                	test   esi,esi
   22b3a:	74 de                	je     22b1a <strtol+0x11a>
   22b3c:	83 e9 01             	sub    ecx,0x1
   22b3f:	eb d3                	jmp    22b14 <strtol+0x114>
   22b41:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22b48:	8d 48 02             	lea    ecx,[eax+0x2]
   22b4b:	0f be 58 01          	movsx  ebx,BYTE PTR [eax+0x1]
   22b4f:	c7 44 24 08 01 00 00 	mov    DWORD PTR [esp+0x8],0x1
   22b56:	00 
   22b57:	e9 e4 fe ff ff       	jmp    22a40 <strtol+0x40>
   22b5c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22b60:	8d 48 02             	lea    ecx,[eax+0x2]
   22b63:	0f be 58 01          	movsx  ebx,BYTE PTR [eax+0x1]
   22b67:	e9 d4 fe ff ff       	jmp    22a40 <strtol+0x40>
   22b6c:	0f b6 01             	movzx  eax,BYTE PTR [ecx]
   22b6f:	83 e0 df             	and    eax,0xffffffdf
   22b72:	3c 58                	cmp    al,0x58
   22b74:	75 19                	jne    22b8f <strtol+0x18f>
   22b76:	0f be 59 01          	movsx  ebx,BYTE PTR [ecx+0x1]
   22b7a:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
   22b81:	00 
   22b82:	83 c1 02             	add    ecx,0x2
   22b85:	bf 10 00 00 00       	mov    edi,0x10
   22b8a:	e9 db fe ff ff       	jmp    22a6a <strtol+0x6a>
   22b8f:	85 ff                	test   edi,edi
   22b91:	75 12                	jne    22ba5 <strtol+0x1a5>
   22b93:	c7 44 24 04 08 00 00 	mov    DWORD PTR [esp+0x4],0x8
   22b9a:	00 
   22b9b:	bf 08 00 00 00       	mov    edi,0x8
   22ba0:	e9 c5 fe ff ff       	jmp    22a6a <strtol+0x6a>
   22ba5:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
   22ba9:	e9 bc fe ff ff       	jmp    22a6a <strtol+0x6a>
   22bae:	66 90                	xchg   ax,ax

00022bb0 <strtrim>:
strtrim():
   22bb0:	56                   	push   esi
   22bb1:	53                   	push   ebx
   22bb2:	83 ec 10             	sub    esp,0x10
   22bb5:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
   22bb9:	ff 33                	push   DWORD PTR [ebx]
   22bbb:	e8 40 fc ff ff       	call   22800 <strlen>
   22bc0:	8b 33                	mov    esi,DWORD PTR [ebx]
   22bc2:	83 c4 10             	add    esp,0x10
   22bc5:	80 3e 20             	cmp    BYTE PTR [esi],0x20
   22bc8:	75 61                	jne    22c2b <strtrim+0x7b>
   22bca:	31 c9                	xor    ecx,ecx
   22bcc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22bd0:	83 c1 01             	add    ecx,0x1
   22bd3:	0f b6 d1             	movzx  edx,cl
   22bd6:	01 f2                	add    edx,esi
   22bd8:	80 3a 20             	cmp    BYTE PTR [edx],0x20
   22bdb:	74 f3                	je     22bd0 <strtrim+0x20>
   22bdd:	38 c8                	cmp    al,cl
   22bdf:	89 13                	mov    DWORD PTR [ebx],edx
   22be1:	77 0d                	ja     22bf0 <strtrim+0x40>
   22be3:	83 c4 04             	add    esp,0x4
   22be6:	89 d0                	mov    eax,edx
   22be8:	5b                   	pop    ebx
   22be9:	5e                   	pop    esi
   22bea:	c3                   	ret    
   22beb:	90                   	nop
   22bec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22bf0:	83 ec 0c             	sub    esp,0xc
   22bf3:	52                   	push   edx
   22bf4:	e8 07 fc ff ff       	call   22800 <strlen>
   22bf9:	8b 0b                	mov    ecx,DWORD PTR [ebx]
   22bfb:	83 e8 01             	sub    eax,0x1
   22bfe:	83 c4 10             	add    esp,0x10
   22c01:	0f b6 d0             	movzx  edx,al
   22c04:	80 3c 11 20          	cmp    BYTE PTR [ecx+edx*1],0x20
   22c08:	75 12                	jne    22c1c <strtrim+0x6c>
   22c0a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22c10:	83 e8 01             	sub    eax,0x1
   22c13:	0f b6 d0             	movzx  edx,al
   22c16:	80 3c 11 20          	cmp    BYTE PTR [ecx+edx*1],0x20
   22c1a:	74 f4                	je     22c10 <strtrim+0x60>
   22c1c:	c6 44 11 01 00       	mov    BYTE PTR [ecx+edx*1+0x1],0x0
   22c21:	8b 13                	mov    edx,DWORD PTR [ebx]
   22c23:	83 c4 04             	add    esp,0x4
   22c26:	5b                   	pop    ebx
   22c27:	5e                   	pop    esi
   22c28:	89 d0                	mov    eax,edx
   22c2a:	c3                   	ret    
   22c2b:	89 f2                	mov    edx,esi
   22c2d:	31 c9                	xor    ecx,ecx
   22c2f:	eb ac                	jmp    22bdd <strtrim+0x2d>
   22c31:	eb 0d                	jmp    22c40 <strtrim2>
   22c33:	90                   	nop
   22c34:	90                   	nop
   22c35:	90                   	nop
   22c36:	90                   	nop
   22c37:	90                   	nop
   22c38:	90                   	nop
   22c39:	90                   	nop
   22c3a:	90                   	nop
   22c3b:	90                   	nop
   22c3c:	90                   	nop
   22c3d:	90                   	nop
   22c3e:	90                   	nop
   22c3f:	90                   	nop

00022c40 <strtrim2>:
strtrim2():
   22c40:	56                   	push   esi
   22c41:	53                   	push   ebx
   22c42:	83 ec 10             	sub    esp,0x10
   22c45:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
   22c49:	56                   	push   esi
   22c4a:	e8 b1 fb ff ff       	call   22800 <strlen>
   22c4f:	83 c4 10             	add    esp,0x10
   22c52:	80 3e 20             	cmp    BYTE PTR [esi],0x20
   22c55:	75 62                	jne    22cb9 <strtrim2+0x79>
   22c57:	31 d2                	xor    edx,edx
   22c59:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22c60:	83 c2 01             	add    edx,0x1
   22c63:	0f b6 da             	movzx  ebx,dl
   22c66:	01 f3                	add    ebx,esi
   22c68:	80 3b 20             	cmp    BYTE PTR [ebx],0x20
   22c6b:	74 f3                	je     22c60 <strtrim2+0x20>
   22c6d:	38 d0                	cmp    al,dl
   22c6f:	77 0f                	ja     22c80 <strtrim2+0x40>
   22c71:	83 c4 04             	add    esp,0x4
   22c74:	89 d8                	mov    eax,ebx
   22c76:	5b                   	pop    ebx
   22c77:	5e                   	pop    esi
   22c78:	c3                   	ret    
   22c79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22c80:	83 ec 0c             	sub    esp,0xc
   22c83:	53                   	push   ebx
   22c84:	e8 77 fb ff ff       	call   22800 <strlen>
   22c89:	83 e8 01             	sub    eax,0x1
   22c8c:	83 c4 10             	add    esp,0x10
   22c8f:	0f b6 d0             	movzx  edx,al
   22c92:	80 3c 13 20          	cmp    BYTE PTR [ebx+edx*1],0x20
   22c96:	75 14                	jne    22cac <strtrim2+0x6c>
   22c98:	90                   	nop
   22c99:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22ca0:	83 e8 01             	sub    eax,0x1
   22ca3:	0f b6 d0             	movzx  edx,al
   22ca6:	80 3c 13 20          	cmp    BYTE PTR [ebx+edx*1],0x20
   22caa:	74 f4                	je     22ca0 <strtrim2+0x60>
   22cac:	c6 44 13 01 00       	mov    BYTE PTR [ebx+edx*1+0x1],0x0
   22cb1:	83 c4 04             	add    esp,0x4
   22cb4:	89 d8                	mov    eax,ebx
   22cb6:	5b                   	pop    ebx
   22cb7:	5e                   	pop    esi
   22cb8:	c3                   	ret    
   22cb9:	89 f3                	mov    ebx,esi
   22cbb:	31 d2                	xor    edx,edx
   22cbd:	eb ae                	jmp    22c6d <strtrim2+0x2d>
   22cbf:	90                   	nop

00022cc0 <time>:
time():
   22cc0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   22cc4:	8b 15 cc 97 12 00    	mov    edx,DWORD PTR ds:0x1297cc
   22cca:	89 10                	mov    DWORD PTR [eax],edx
   22ccc:	a1 cc 97 12 00       	mov    eax,ds:0x1297cc
   22cd1:	c3                   	ret    
   22cd2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22cd9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022ce0 <gmtime_r>:
gmtime_r():
   22ce0:	55                   	push   ebp
   22ce1:	57                   	push   edi
   22ce2:	ba 07 45 2e c2       	mov    edx,0xc22e4507
   22ce7:	56                   	push   esi
   22ce8:	53                   	push   ebx
   22ce9:	bd 89 88 88 88       	mov    ebp,0x88888889
   22cee:	83 ec 08             	sub    esp,0x8
   22cf1:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
   22cf5:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
   22cf9:	8b 18                	mov    ebx,DWORD PTR [eax]
   22cfb:	89 d8                	mov    eax,ebx
   22cfd:	f7 e2                	mul    edx
   22cff:	89 d1                	mov    ecx,edx
   22d01:	c1 e9 10             	shr    ecx,0x10
   22d04:	69 c9 80 51 01 00    	imul   ecx,ecx,0x15180
   22d0a:	29 cb                	sub    ebx,ecx
   22d0c:	89 d9                	mov    ecx,ebx
   22d0e:	89 d3                	mov    ebx,edx
   22d10:	89 c8                	mov    eax,ecx
   22d12:	c1 eb 10             	shr    ebx,0x10
   22d15:	f7 e5                	mul    ebp
   22d17:	89 c8                	mov    eax,ecx
   22d19:	c1 ea 05             	shr    edx,0x5
   22d1c:	6b d2 3c             	imul   edx,edx,0x3c
   22d1f:	29 d0                	sub    eax,edx
   22d21:	ba c5 b3 a2 91       	mov    edx,0x91a2b3c5
   22d26:	89 06                	mov    DWORD PTR [esi],eax
   22d28:	89 c8                	mov    eax,ecx
   22d2a:	f7 e2                	mul    edx
   22d2c:	89 d7                	mov    edi,edx
   22d2e:	c1 ef 0b             	shr    edi,0xb
   22d31:	69 c7 10 0e 00 00    	imul   eax,edi,0xe10
   22d37:	89 7e 08             	mov    DWORD PTR [esi+0x8],edi
   22d3a:	29 c1                	sub    ecx,eax
   22d3c:	89 c8                	mov    eax,ecx
   22d3e:	8d 4b 04             	lea    ecx,[ebx+0x4]
   22d41:	f7 e5                	mul    ebp
   22d43:	89 c8                	mov    eax,ecx
   22d45:	c1 ea 05             	shr    edx,0x5
   22d48:	89 56 04             	mov    DWORD PTR [esi+0x4],edx
   22d4b:	ba 25 49 92 24       	mov    edx,0x24924925
   22d50:	f7 e2                	mul    edx
   22d52:	89 c8                	mov    eax,ecx
   22d54:	29 d0                	sub    eax,edx
   22d56:	d1 e8                	shr    eax,1
   22d58:	01 c2                	add    edx,eax
   22d5a:	c1 ea 02             	shr    edx,0x2
   22d5d:	8d 04 d5 00 00 00 00 	lea    eax,[edx*8+0x0]
   22d64:	29 d0                	sub    eax,edx
   22d66:	29 c1                	sub    ecx,eax
   22d68:	89 4e 18             	mov    DWORD PTR [esi+0x18],ecx
   22d6b:	b9 b2 07 00 00       	mov    ecx,0x7b2
   22d70:	eb 63                	jmp    22dd5 <gmtime_r+0xf5>
   22d72:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22d78:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   22d7d:	89 cf                	mov    edi,ecx
   22d7f:	f7 e9                	imul   ecx
   22d81:	c1 ff 1f             	sar    edi,0x1f
   22d84:	89 d0                	mov    eax,edx
   22d86:	c1 f8 05             	sar    eax,0x5
   22d89:	29 f8                	sub    eax,edi
   22d8b:	6b c0 64             	imul   eax,eax,0x64
   22d8e:	39 c1                	cmp    ecx,eax
   22d90:	75 5e                	jne    22df0 <gmtime_r+0x110>
   22d92:	c1 fa 07             	sar    edx,0x7
   22d95:	29 fa                	sub    edx,edi
   22d97:	69 d2 90 01 00 00    	imul   edx,edx,0x190
   22d9d:	39 d1                	cmp    ecx,edx
   22d9f:	75 5f                	jne    22e00 <gmtime_r+0x120>
   22da1:	81 fb 6d 01 00 00    	cmp    ebx,0x16d
   22da7:	76 67                	jbe    22e10 <gmtime_r+0x130>
   22da9:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   22dae:	f7 e9                	imul   ecx
   22db0:	89 c8                	mov    eax,ecx
   22db2:	c1 f8 1f             	sar    eax,0x1f
   22db5:	c1 fa 07             	sar    edx,0x7
   22db8:	29 c2                	sub    edx,eax
   22dba:	89 c8                	mov    eax,ecx
   22dbc:	69 d2 90 01 00 00    	imul   edx,edx,0x190
   22dc2:	29 d0                	sub    eax,edx
   22dc4:	83 f8 01             	cmp    eax,0x1
   22dc7:	19 c0                	sbb    eax,eax
   22dc9:	f7 d0                	not    eax
   22dcb:	05 6e 01 00 00       	add    eax,0x16e
   22dd0:	29 c3                	sub    ebx,eax
   22dd2:	83 c1 01             	add    ecx,0x1
   22dd5:	89 cd                	mov    ebp,ecx
   22dd7:	83 e5 03             	and    ebp,0x3
   22dda:	74 9c                	je     22d78 <gmtime_r+0x98>
   22ddc:	81 fb 6c 01 00 00    	cmp    ebx,0x16c
   22de2:	76 2c                	jbe    22e10 <gmtime_r+0x130>
   22de4:	b8 6d 01 00 00       	mov    eax,0x16d
   22de9:	eb e5                	jmp    22dd0 <gmtime_r+0xf0>
   22deb:	90                   	nop
   22dec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22df0:	81 fb 6d 01 00 00    	cmp    ebx,0x16d
   22df6:	76 18                	jbe    22e10 <gmtime_r+0x130>
   22df8:	b8 6e 01 00 00       	mov    eax,0x16e
   22dfd:	eb d1                	jmp    22dd0 <gmtime_r+0xf0>
   22dff:	90                   	nop
   22e00:	81 fb 6c 01 00 00    	cmp    ebx,0x16c
   22e06:	77 a1                	ja     22da9 <gmtime_r+0xc9>
   22e08:	90                   	nop
   22e09:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22e10:	8d 81 94 f8 ff ff    	lea    eax,[ecx-0x76c]
   22e16:	ba 1f 85 eb 51       	mov    edx,0x51eb851f
   22e1b:	89 6c 24 04          	mov    DWORD PTR [esp+0x4],ebp
   22e1f:	89 cd                	mov    ebp,ecx
   22e21:	89 5e 1c             	mov    DWORD PTR [esi+0x1c],ebx
   22e24:	c7 46 10 00 00 00 00 	mov    DWORD PTR [esi+0x10],0x0
   22e2b:	89 46 14             	mov    DWORD PTR [esi+0x14],eax
   22e2e:	89 c8                	mov    eax,ecx
   22e30:	f7 ea                	imul   edx
   22e32:	89 c8                	mov    eax,ecx
   22e34:	c1 f8 1f             	sar    eax,0x1f
   22e37:	89 d7                	mov    edi,edx
   22e39:	c1 fa 07             	sar    edx,0x7
   22e3c:	c1 ff 05             	sar    edi,0x5
   22e3f:	29 c2                	sub    edx,eax
   22e41:	29 c7                	sub    edi,eax
   22e43:	6b ff 64             	imul   edi,edi,0x64
   22e46:	69 c2 90 01 00 00    	imul   eax,edx,0x190
   22e4c:	31 d2                	xor    edx,edx
   22e4e:	29 fd                	sub    ebp,edi
   22e50:	29 c1                	sub    ecx,eax
   22e52:	89 ef                	mov    edi,ebp
   22e54:	b8 00 00 04 00       	mov    eax,0x40000
   22e59:	89 0c 24             	mov    DWORD PTR [esp],ecx
   22e5c:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
   22e60:	eb 29                	jmp    22e8b <gmtime_r+0x1ab>
   22e62:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   22e68:	85 ff                	test   edi,edi
   22e6a:	75 44                	jne    22eb0 <gmtime_r+0x1d0>
   22e6c:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
   22e6f:	85 c9                	test   ecx,ecx
   22e71:	74 3d                	je     22eb0 <gmtime_r+0x1d0>
   22e73:	3b 18                	cmp    ebx,DWORD PTR [eax]
   22e75:	72 1e                	jb     22e95 <gmtime_r+0x1b5>
   22e77:	8b 08                	mov    ecx,DWORD PTR [eax]
   22e79:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   22e80:	83 c2 01             	add    edx,0x1
   22e83:	29 cb                	sub    ebx,ecx
   22e85:	83 c0 04             	add    eax,0x4
   22e88:	89 56 10             	mov    DWORD PTR [esi+0x10],edx
   22e8b:	85 ed                	test   ebp,ebp
   22e8d:	74 d9                	je     22e68 <gmtime_r+0x188>
   22e8f:	8b 08                	mov    ecx,DWORD PTR [eax]
   22e91:	39 cb                	cmp    ebx,ecx
   22e93:	73 eb                	jae    22e80 <gmtime_r+0x1a0>
   22e95:	83 c3 01             	add    ebx,0x1
   22e98:	c7 46 20 00 00 00 00 	mov    DWORD PTR [esi+0x20],0x0
   22e9f:	89 f0                	mov    eax,esi
   22ea1:	89 5e 0c             	mov    DWORD PTR [esi+0xc],ebx
   22ea4:	83 c4 08             	add    esp,0x8
   22ea7:	5b                   	pop    ebx
   22ea8:	5e                   	pop    esi
   22ea9:	5f                   	pop    edi
   22eaa:	5d                   	pop    ebp
   22eab:	c3                   	ret    
   22eac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22eb0:	3b 58 30             	cmp    ebx,DWORD PTR [eax+0x30]
   22eb3:	72 e0                	jb     22e95 <gmtime_r+0x1b5>
   22eb5:	8b 48 30             	mov    ecx,DWORD PTR [eax+0x30]
   22eb8:	eb c6                	jmp    22e80 <gmtime_r+0x1a0>
   22eba:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00022ec0 <localtime>:
localtime():
   22ec0:	83 ec 30             	sub    esp,0x30
   22ec3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22ec7:	8b 00                	mov    eax,DWORD PTR [eax]
   22ec9:	2b 05 d0 97 12 00    	sub    eax,DWORD PTR ds:0x1297d0
   22ecf:	89 04 24             	mov    DWORD PTR [esp],eax
   22ed2:	8d 44 24 04          	lea    eax,[esp+0x4]
   22ed6:	50                   	push   eax
   22ed7:	8d 44 24 04          	lea    eax,[esp+0x4]
   22edb:	50                   	push   eax
   22edc:	e8 ff fd ff ff       	call   22ce0 <gmtime_r>
   22ee1:	83 c4 38             	add    esp,0x38
   22ee4:	c3                   	ret    
   22ee5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22ee9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022ef0 <localtime_r>:
localtime_r():
   22ef0:	83 ec 10             	sub    esp,0x10
   22ef3:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
   22ef7:	8b 00                	mov    eax,DWORD PTR [eax]
   22ef9:	2b 05 d0 97 12 00    	sub    eax,DWORD PTR ds:0x1297d0
   22eff:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   22f03:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
   22f07:	8d 44 24 10          	lea    eax,[esp+0x10]
   22f0b:	50                   	push   eax
   22f0c:	e8 cf fd ff ff       	call   22ce0 <gmtime_r>
   22f11:	83 c4 18             	add    esp,0x18
   22f14:	c3                   	ret    
   22f15:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   22f19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00022f20 <mktime>:
mktime():
   22f20:	55                   	push   ebp
   22f21:	57                   	push   edi
   22f22:	ba 89 88 88 88       	mov    edx,0x88888889
   22f27:	56                   	push   esi
   22f28:	53                   	push   ebx
   22f29:	83 ec 20             	sub    esp,0x20
   22f2c:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22f30:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   22f34:	8b 18                	mov    ebx,DWORD PTR [eax]
   22f36:	8b 4f 04             	mov    ecx,DWORD PTR [edi+0x4]
   22f39:	89 d8                	mov    eax,ebx
   22f3b:	f7 ea                	imul   edx
   22f3d:	8d 04 1a             	lea    eax,[edx+ebx*1]
   22f40:	89 da                	mov    edx,ebx
   22f42:	c1 fa 1f             	sar    edx,0x1f
   22f45:	c1 f8 05             	sar    eax,0x5
   22f48:	29 d0                	sub    eax,edx
   22f4a:	01 c1                	add    ecx,eax
   22f4c:	6b c0 3c             	imul   eax,eax,0x3c
   22f4f:	89 4f 04             	mov    DWORD PTR [edi+0x4],ecx
   22f52:	29 c3                	sub    ebx,eax
   22f54:	0f 88 b6 04 00 00    	js     23410 <mktime+0x4f0>
   22f5a:	89 1f                	mov    DWORD PTR [edi],ebx
   22f5c:	89 c8                	mov    eax,ecx
   22f5e:	ba 89 88 88 88       	mov    edx,0x88888889
   22f63:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   22f67:	f7 ea                	imul   edx
   22f69:	8b 5f 08             	mov    ebx,DWORD PTR [edi+0x8]
   22f6c:	8d 04 0a             	lea    eax,[edx+ecx*1]
   22f6f:	89 ca                	mov    edx,ecx
   22f71:	c1 fa 1f             	sar    edx,0x1f
   22f74:	c1 f8 05             	sar    eax,0x5
   22f77:	29 d0                	sub    eax,edx
   22f79:	01 c3                	add    ebx,eax
   22f7b:	6b c0 3c             	imul   eax,eax,0x3c
   22f7e:	89 5f 08             	mov    DWORD PTR [edi+0x8],ebx
   22f81:	29 c1                	sub    ecx,eax
   22f83:	0f 88 6f 04 00 00    	js     233f8 <mktime+0x4d8>
   22f89:	89 4f 04             	mov    DWORD PTR [edi+0x4],ecx
   22f8c:	89 d8                	mov    eax,ebx
   22f8e:	ba ab aa aa 2a       	mov    edx,0x2aaaaaab
   22f93:	f7 ea                	imul   edx
   22f95:	89 d8                	mov    eax,ebx
   22f97:	c1 f8 1f             	sar    eax,0x1f
   22f9a:	c1 fa 02             	sar    edx,0x2
   22f9d:	89 d6                	mov    esi,edx
   22f9f:	29 c6                	sub    esi,eax
   22fa1:	8d 04 76             	lea    eax,[esi+esi*2]
   22fa4:	c1 e0 03             	shl    eax,0x3
   22fa7:	29 c3                	sub    ebx,eax
   22fa9:	0f 88 31 04 00 00    	js     233e0 <mktime+0x4c0>
   22faf:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22fb3:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
   22fb6:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22fba:	ba ab aa aa 2a       	mov    edx,0x2aaaaaab
   22fbf:	8b 48 10             	mov    ecx,DWORD PTR [eax+0x10]
   22fc2:	89 c8                	mov    eax,ecx
   22fc4:	f7 ea                	imul   edx
   22fc6:	89 c8                	mov    eax,ecx
   22fc8:	c1 f8 1f             	sar    eax,0x1f
   22fcb:	d1 fa                	sar    edx,1
   22fcd:	29 c2                	sub    edx,eax
   22fcf:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22fd3:	8b 58 14             	mov    ebx,DWORD PTR [eax+0x14]
   22fd6:	01 d3                	add    ebx,edx
   22fd8:	89 58 14             	mov    DWORD PTR [eax+0x14],ebx
   22fdb:	8d 04 52             	lea    eax,[edx+edx*2]
   22fde:	c1 e0 02             	shl    eax,0x2
   22fe1:	29 c1                	sub    ecx,eax
   22fe3:	0f 88 df 03 00 00    	js     233c8 <mktime+0x4a8>
   22fe9:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22fed:	89 48 10             	mov    DWORD PTR [eax+0x10],ecx
   22ff0:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   22ff4:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
   22ff7:	8d 6c 06 ff          	lea    ebp,[esi+eax*1-0x1]
   22ffb:	85 ed                	test   ebp,ebp
   22ffd:	78 60                	js     2305f <mktime+0x13f>
   22fff:	e9 8b 00 00 00       	jmp    2308f <mktime+0x16f>
   23004:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23008:	31 c0                	xor    eax,eax
   2300a:	f6 c3 03             	test   bl,0x3
   2300d:	75 3b                	jne    2304a <mktime+0x12a>
   2300f:	8d b3 6c 07 00 00    	lea    esi,[ebx+0x76c]
   23015:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   2301a:	f7 ee                	imul   esi
   2301c:	89 f0                	mov    eax,esi
   2301e:	c1 f8 1f             	sar    eax,0x1f
   23021:	89 04 24             	mov    DWORD PTR [esp],eax
   23024:	89 d7                	mov    edi,edx
   23026:	c1 ff 05             	sar    edi,0x5
   23029:	29 c7                	sub    edi,eax
   2302b:	b8 01 00 00 00       	mov    eax,0x1
   23030:	6b ff 64             	imul   edi,edi,0x64
   23033:	39 fe                	cmp    esi,edi
   23035:	75 13                	jne    2304a <mktime+0x12a>
   23037:	c1 fa 07             	sar    edx,0x7
   2303a:	2b 14 24             	sub    edx,DWORD PTR [esp]
   2303d:	31 c0                	xor    eax,eax
   2303f:	69 d2 90 01 00 00    	imul   edx,edx,0x190
   23045:	39 d6                	cmp    esi,edx
   23047:	0f 94 c0             	sete   al
   2304a:	8d 14 00             	lea    edx,[eax+eax*1]
   2304d:	01 d0                	add    eax,edx
   2304f:	8d 04 81             	lea    eax,[ecx+eax*4]
   23052:	03 2c 85 00 00 04 00 	add    ebp,DWORD PTR [eax*4+0x40000]
   23059:	0f 89 31 03 00 00    	jns    23390 <mktime+0x470>
   2305f:	83 e9 01             	sub    ecx,0x1
   23062:	83 f9 ff             	cmp    ecx,0xffffffff
   23065:	75 a1                	jne    23008 <mktime+0xe8>
   23067:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   2306b:	83 eb 01             	sub    ebx,0x1
   2306e:	b9 0b 00 00 00       	mov    ecx,0xb
   23073:	89 58 14             	mov    DWORD PTR [eax+0x14],ebx
   23076:	eb 90                	jmp    23008 <mktime+0xe8>
   23078:	90                   	nop
   23079:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   23080:	83 c3 01             	add    ebx,0x1
   23083:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
   2308a:	31 c9                	xor    ecx,ecx
   2308c:	89 58 14             	mov    DWORD PTR [eax+0x14],ebx
   2308f:	f6 c3 03             	test   bl,0x3
   23092:	0f 85 86 00 00 00    	jne    2311e <mktime+0x1fe>
   23098:	8d b3 6c 07 00 00    	lea    esi,[ebx+0x76c]
   2309e:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   230a3:	f7 ee                	imul   esi
   230a5:	89 f7                	mov    edi,esi
   230a7:	c1 ff 1f             	sar    edi,0x1f
   230aa:	89 d0                	mov    eax,edx
   230ac:	c1 f8 05             	sar    eax,0x5
   230af:	29 f8                	sub    eax,edi
   230b1:	6b c0 64             	imul   eax,eax,0x64
   230b4:	39 c6                	cmp    esi,eax
   230b6:	0f 85 8c 02 00 00    	jne    23348 <mktime+0x428>
   230bc:	c1 fa 07             	sar    edx,0x7
   230bf:	29 fa                	sub    edx,edi
   230c1:	69 d2 90 01 00 00    	imul   edx,edx,0x190
   230c7:	39 d6                	cmp    esi,edx
   230c9:	0f 85 99 02 00 00    	jne    23368 <mktime+0x448>
   230cf:	3b 2c 8d 30 00 04 00 	cmp    ebp,DWORD PTR [ecx*4+0x40030]
   230d6:	7c 51                	jl     23129 <mktime+0x209>
   230d8:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
   230dd:	f7 ee                	imul   esi
   230df:	89 f0                	mov    eax,esi
   230e1:	c1 f8 1f             	sar    eax,0x1f
   230e4:	c1 fa 07             	sar    edx,0x7
   230e7:	29 c2                	sub    edx,eax
   230e9:	69 d2 90 01 00 00    	imul   edx,edx,0x190
   230ef:	39 d6                	cmp    esi,edx
   230f1:	0f 85 89 02 00 00    	jne    23380 <mktime+0x460>
   230f7:	8b 04 8d 30 00 04 00 	mov    eax,DWORD PTR [ecx*4+0x40030]
   230fe:	66 90                	xchg   ax,ax
   23100:	83 c1 01             	add    ecx,0x1
   23103:	29 c5                	sub    ebp,eax
   23105:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   23109:	83 f9 0c             	cmp    ecx,0xc
   2310c:	0f 84 6e ff ff ff    	je     23080 <mktime+0x160>
   23112:	f6 c3 03             	test   bl,0x3
   23115:	89 48 10             	mov    DWORD PTR [eax+0x10],ecx
   23118:	0f 84 7a ff ff ff    	je     23098 <mktime+0x178>
   2311e:	8b 04 8d 00 00 04 00 	mov    eax,DWORD PTR [ecx*4+0x40000]
   23125:	39 c5                	cmp    ebp,eax
   23127:	7d d7                	jge    23100 <mktime+0x1e0>
   23129:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
   2312d:	8d 45 01             	lea    eax,[ebp+0x1]
   23130:	83 fb 45             	cmp    ebx,0x45
   23133:	89 47 0c             	mov    DWORD PTR [edi+0xc],eax
   23136:	0f 8e 0a 03 00 00    	jle    23446 <mktime+0x526>
   2313c:	8d 83 6c 07 00 00    	lea    eax,[ebx+0x76c]
   23142:	8d 73 ba             	lea    esi,[ebx-0x46]
   23145:	ba ff ff ff 7f       	mov    edx,0x7fffffff
   2314a:	89 c7                	mov    edi,eax
   2314c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   23150:	31 c0                	xor    eax,eax
   23152:	81 fb c2 c6 59 00    	cmp    ebx,0x59c6c2
   23158:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
   2315c:	0f 9f c0             	setg   al
   2315f:	69 de 6d 01 00 00    	imul   ebx,esi,0x16d
   23165:	c1 fe 02             	sar    esi,0x2
   23168:	89 04 24             	mov    DWORD PTR [esp],eax
   2316b:	89 f0                	mov    eax,esi
   2316d:	8b 34 24             	mov    esi,DWORD PTR [esp]
   23170:	29 da                	sub    edx,ebx
   23172:	83 ce 02             	or     esi,0x2
   23175:	39 d0                	cmp    eax,edx
   23177:	0f 4c 34 24          	cmovl  esi,DWORD PTR [esp]
   2317b:	31 d2                	xor    edx,edx
   2317d:	83 e7 03             	and    edi,0x3
   23180:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
   23184:	89 34 24             	mov    DWORD PTR [esp],esi
   23187:	0f 85 2b 02 00 00    	jne    233b8 <mktime+0x498>
   2318d:	01 d0                	add    eax,edx
   2318f:	be 1f 85 eb 51       	mov    esi,0x51eb851f
   23194:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
   23198:	01 d8                	add    eax,ebx
   2319a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   2319e:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   231a2:	89 fb                	mov    ebx,edi
   231a4:	c1 fb 1f             	sar    ebx,0x1f
   231a7:	f7 ee                	imul   esi
   231a9:	89 5c 24 14          	mov    DWORD PTR [esp+0x14],ebx
   231ad:	89 d0                	mov    eax,edx
   231af:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
   231b3:	89 fa                	mov    edx,edi
   231b5:	c1 f8 05             	sar    eax,0x5
   231b8:	29 d8                	sub    eax,ebx
   231ba:	6b c0 64             	imul   eax,eax,0x64
   231bd:	29 c2                	sub    edx,eax
   231bf:	89 d0                	mov    eax,edx
   231c1:	0f 95 44 24 04       	setne  BYTE PTR [esp+0x4]
   231c6:	0f b6 54 24 04       	movzx  edx,BYTE PTR [esp+0x4]
   231cb:	31 db                	xor    ebx,ebx
   231cd:	83 f8 45             	cmp    eax,0x45
   231d0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   231d4:	0f 9e c3             	setle  bl
   231d7:	21 d3                	and    ebx,edx
   231d9:	f7 ee                	imul   esi
   231db:	89 d6                	mov    esi,edx
   231dd:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
   231e1:	c1 fe 05             	sar    esi,0x5
   231e4:	89 f0                	mov    eax,esi
   231e6:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
   231ea:	c1 fe 1f             	sar    esi,0x1f
   231ed:	29 f0                	sub    eax,esi
   231ef:	01 c3                	add    ebx,eax
   231f1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
   231f5:	29 d8                	sub    eax,ebx
   231f7:	89 c3                	mov    ebx,eax
   231f9:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   231fd:	c1 f8 07             	sar    eax,0x7
   23200:	89 c2                	mov    edx,eax
   23202:	2b 54 24 14          	sub    edx,DWORD PTR [esp+0x14]
   23206:	69 c2 90 01 00 00    	imul   eax,edx,0x190
   2320c:	29 c7                	sub    edi,eax
   2320e:	81 ff 71 01 00 00    	cmp    edi,0x171
   23214:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
   23218:	0f 9e 44 24 0c       	setle  BYTE PTR [esp+0xc]
   2321d:	0f b6 54 24 0c       	movzx  edx,BYTE PTR [esp+0xc]
   23222:	31 c0                	xor    eax,eax
   23224:	85 ff                	test   edi,edi
   23226:	0f 95 c0             	setne  al
   23229:	21 d0                	and    eax,edx
   2322b:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
   2322f:	c1 fa 07             	sar    edx,0x7
   23232:	29 f2                	sub    edx,esi
   23234:	01 c2                	add    edx,eax
   23236:	85 c9                	test   ecx,ecx
   23238:	8d 04 1a             	lea    eax,[edx+ebx*1]
   2323b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
   2323f:	0f 84 fa 01 00 00    	je     2343f <mktime+0x51f>
   23245:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
   23249:	31 db                	xor    ebx,ebx
   2324b:	31 f6                	xor    esi,esi
   2324d:	8d 76 00             	lea    esi,[esi+0x0]
   23250:	31 c0                	xor    eax,eax
   23252:	85 ff                	test   edi,edi
   23254:	75 10                	jne    23266 <mktime+0x346>
   23256:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
   2325a:	85 c0                	test   eax,eax
   2325c:	0f 94 c0             	sete   al
   2325f:	0a 44 24 04          	or     al,BYTE PTR [esp+0x4]
   23263:	0f b6 c0             	movzx  eax,al
   23266:	8d 14 00             	lea    edx,[eax+eax*1]
   23269:	01 d0                	add    eax,edx
   2326b:	8d 04 83             	lea    eax,[ebx+eax*4]
   2326e:	83 c3 01             	add    ebx,0x1
   23271:	03 34 85 00 00 04 00 	add    esi,DWORD PTR [eax*4+0x40000]
   23278:	39 cb                	cmp    ebx,ecx
   2327a:	75 d4                	jne    23250 <mktime+0x330>
   2327c:	8b 3c 24             	mov    edi,DWORD PTR [esp]
   2327f:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
   23283:	01 ee                	add    esi,ebp
   23285:	ba 93 24 49 92       	mov    edx,0x92492493
   2328a:	89 f8                	mov    eax,edi
   2328c:	83 c8 04             	or     eax,0x4
   2328f:	01 f3                	add    ebx,esi
   23291:	0f 49 c7             	cmovns eax,edi
   23294:	8d 4b 04             	lea    ecx,[ebx+0x4]
   23297:	bf ff ff ff 7f       	mov    edi,0x7fffffff
   2329c:	89 c5                	mov    ebp,eax
   2329e:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   232a2:	89 70 1c             	mov    DWORD PTR [eax+0x1c],esi
   232a5:	89 c8                	mov    eax,ecx
   232a7:	89 fe                	mov    esi,edi
   232a9:	f7 ea                	imul   edx
   232ab:	89 c8                	mov    eax,ecx
   232ad:	c1 f8 1f             	sar    eax,0x1f
   232b0:	01 ca                	add    edx,ecx
   232b2:	c1 fa 02             	sar    edx,0x2
   232b5:	29 c2                	sub    edx,eax
   232b7:	8d 04 d5 00 00 00 00 	lea    eax,[edx*8+0x0]
   232be:	29 d0                	sub    eax,edx
   232c0:	ba 07 45 2e c2       	mov    edx,0xc22e4507
   232c5:	29 c1                	sub    ecx,eax
   232c7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   232cb:	89 48 18             	mov    DWORD PTR [eax+0x18],ecx
   232ce:	6b 48 08 3c          	imul   ecx,DWORD PTR [eax+0x8],0x3c
   232d2:	03 48 04             	add    ecx,DWORD PTR [eax+0x4]
   232d5:	6b c9 3c             	imul   ecx,ecx,0x3c
   232d8:	03 08                	add    ecx,DWORD PTR [eax]
   232da:	29 ce                	sub    esi,ecx
   232dc:	89 f0                	mov    eax,esi
   232de:	f7 ea                	imul   edx
   232e0:	89 e8                	mov    eax,ebp
   232e2:	83 c8 08             	or     eax,0x8
   232e5:	01 f2                	add    edx,esi
   232e7:	c1 fe 1f             	sar    esi,0x1f
   232ea:	c1 fa 10             	sar    edx,0x10
   232ed:	29 f2                	sub    edx,esi
   232ef:	39 d3                	cmp    ebx,edx
   232f1:	0f 4e c5             	cmovle eax,ebp
   232f4:	89 04 24             	mov    DWORD PTR [esp],eax
   232f7:	a1 d0 97 12 00       	mov    eax,ds:0x1297d0
   232fc:	69 db 80 51 01 00    	imul   ebx,ebx,0x15180
   23302:	01 cb                	add    ebx,ecx
   23304:	83 f8 00             	cmp    eax,0x0
   23307:	0f 8e 1b 01 00 00    	jle    23428 <mktime+0x508>
   2330d:	29 c7                	sub    edi,eax
   2330f:	39 fb                	cmp    ebx,edi
   23311:	7e 04                	jle    23317 <mktime+0x3f7>
   23313:	83 0c 24 10          	or     DWORD PTR [esp],0x10
   23317:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
   2331b:	01 d8                	add    eax,ebx
   2331d:	ba 00 00 00 00       	mov    edx,0x0
   23322:	8b 4e 20             	mov    ecx,DWORD PTR [esi+0x20]
   23325:	85 c9                	test   ecx,ecx
   23327:	0f 45 15 68 99 12 00 	cmovne edx,DWORD PTR ds:0x129968
   2332e:	39 c2                	cmp    edx,eax
   23330:	7e 6e                	jle    233a0 <mktime+0x480>
   23332:	83 0c 24 20          	or     DWORD PTR [esp],0x20
   23336:	8b 04 24             	mov    eax,DWORD PTR [esp]
   23339:	83 c4 20             	add    esp,0x20
   2333c:	5b                   	pop    ebx
   2333d:	5e                   	pop    esi
   2333e:	83 e8 02             	sub    eax,0x2
   23341:	5f                   	pop    edi
   23342:	5d                   	pop    ebp
   23343:	c3                   	ret    
   23344:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23348:	8d 41 0c             	lea    eax,[ecx+0xc]
   2334b:	3b 2c 85 00 00 04 00 	cmp    ebp,DWORD PTR [eax*4+0x40000]
   23352:	0f 8c d1 fd ff ff    	jl     23129 <mktime+0x209>
   23358:	8b 04 85 00 00 04 00 	mov    eax,DWORD PTR [eax*4+0x40000]
   2335f:	e9 9c fd ff ff       	jmp    23100 <mktime+0x1e0>
   23364:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23368:	3b 2c 8d 00 00 04 00 	cmp    ebp,DWORD PTR [ecx*4+0x40000]
   2336f:	0f 8d 63 fd ff ff    	jge    230d8 <mktime+0x1b8>
   23375:	e9 af fd ff ff       	jmp    23129 <mktime+0x209>
   2337a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   23380:	8b 04 8d 00 00 04 00 	mov    eax,DWORD PTR [ecx*4+0x40000]
   23387:	e9 74 fd ff ff       	jmp    23100 <mktime+0x1e0>
   2338c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23390:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   23394:	89 48 10             	mov    DWORD PTR [eax+0x10],ecx
   23397:	e9 f3 fc ff ff       	jmp    2308f <mktime+0x16f>
   2339c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   233a0:	29 d0                	sub    eax,edx
   233a2:	8b 14 24             	mov    edx,DWORD PTR [esp]
   233a5:	85 d2                	test   edx,edx
   233a7:	75 8d                	jne    23336 <mktime+0x416>
   233a9:	83 c4 20             	add    esp,0x20
   233ac:	5b                   	pop    ebx
   233ad:	5e                   	pop    esi
   233ae:	5f                   	pop    edi
   233af:	5d                   	pop    ebp
   233b0:	c3                   	ret    
   233b1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   233b8:	31 d2                	xor    edx,edx
   233ba:	83 ff 01             	cmp    edi,0x1
   233bd:	0f 9e c2             	setle  dl
   233c0:	e9 c8 fd ff ff       	jmp    2318d <mktime+0x26d>
   233c5:	8d 76 00             	lea    esi,[esi+0x0]
   233c8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   233cc:	83 c1 0c             	add    ecx,0xc
   233cf:	83 eb 01             	sub    ebx,0x1
   233d2:	89 48 10             	mov    DWORD PTR [eax+0x10],ecx
   233d5:	89 58 14             	mov    DWORD PTR [eax+0x14],ebx
   233d8:	e9 13 fc ff ff       	jmp    22ff0 <mktime+0xd0>
   233dd:	8d 76 00             	lea    esi,[esi+0x0]
   233e0:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   233e4:	83 c3 18             	add    ebx,0x18
   233e7:	83 ee 01             	sub    esi,0x1
   233ea:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
   233ed:	e9 c4 fb ff ff       	jmp    22fb6 <mktime+0x96>
   233f2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   233f8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   233fc:	83 c1 3c             	add    ecx,0x3c
   233ff:	83 eb 01             	sub    ebx,0x1
   23402:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
   23405:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
   23408:	e9 7f fb ff ff       	jmp    22f8c <mktime+0x6c>
   2340d:	8d 76 00             	lea    esi,[esi+0x0]
   23410:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
   23414:	83 c3 3c             	add    ebx,0x3c
   23417:	83 e9 01             	sub    ecx,0x1
   2341a:	89 18                	mov    DWORD PTR [eax],ebx
   2341c:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
   2341f:	e9 38 fb ff ff       	jmp    22f5c <mktime+0x3c>
   23424:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23428:	0f 84 e9 fe ff ff    	je     23317 <mktime+0x3f7>
   2342e:	89 c2                	mov    edx,eax
   23430:	f7 da                	neg    edx
   23432:	39 d3                	cmp    ebx,edx
   23434:	0f 8d dd fe ff ff    	jge    23317 <mktime+0x3f7>
   2343a:	e9 d4 fe ff ff       	jmp    23313 <mktime+0x3f3>
   2343f:	31 f6                	xor    esi,esi
   23441:	e9 36 fe ff ff       	jmp    2327c <mktime+0x35c>
   23446:	b8 19 fc ff ff       	mov    eax,0xfffffc19
   2344b:	e9 59 ff ff ff       	jmp    233a9 <mktime+0x489>

00023450 <_strdate>:
_strdate():
   23450:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   23454:	c3                   	ret    
   23455:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23459:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00023460 <_strtime>:
_strtime():
   23460:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   23464:	c3                   	ret    
   23465:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23469:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00023470 <waitTicks>:
waitTicks():
   23470:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   23474:	85 c0                	test   eax,eax
   23476:	74 11                	je     23489 <waitTicks+0x19>
   23478:	90                   	nop
   23479:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
   23480:	fb                   	sti    
   23481:	f4                   	hlt    
   23482:	83 e8 01             	sub    eax,0x1
   23485:	85 c0                	test   eax,eax
   23487:	7f f7                	jg     23480 <waitTicks+0x10>
   23489:	f3 c3                	repz ret 
   2348b:	90                   	nop
   2348c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00023490 <wait>:
wait():
   23490:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   23494:	99                   	cdq    
   23495:	f7 3d c4 97 12 00    	idiv   DWORD PTR ds:0x1297c4
   2349b:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
   2349f:	e9 cc ff ff ff       	jmp    23470 <waitTicks>
   234a4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   234aa:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

000234b0 <wait3>:
wait3():
   234b0:	56                   	push   esi
   234b1:	53                   	push   ebx
   234b2:	b8 e8 03 00 00       	mov    eax,0x3e8
   234b7:	31 d2                	xor    edx,edx
   234b9:	83 ec 24             	sub    esp,0x24
   234bc:	8b 0d a4 97 12 00    	mov    ecx,DWORD PTR ds:0x1297a4
   234c2:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   234c9:	00 
   234ca:	8b 31                	mov    esi,DWORD PTR [ecx]
   234cc:	8b 1d c0 97 12 00    	mov    ebx,DWORD PTR ds:0x1297c0
   234d2:	f7 f3                	div    ebx
   234d4:	89 04 24             	mov    DWORD PTR [esp],eax
   234d7:	db 04 24             	fild   DWORD PTR [esp]
   234da:	89 34 24             	mov    DWORD PTR [esp],esi
   234dd:	dc 7c 24 30          	fdivr  QWORD PTR [esp+0x30]
   234e1:	df 2c 24             	fild   QWORD PTR [esp]
   234e4:	de c1                	faddp  st(1),st
   234e6:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
   234ea:	dd 44 24 08          	fld    QWORD PTR [esp+0x8]
   234ee:	dd 5c 24 18          	fstp   QWORD PTR [esp+0x18]
   234f2:	eb 06                	jmp    234fa <wait3+0x4a>
   234f4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   234f8:	fb                   	sti    
   234f9:	f4                   	hlt    
   234fa:	8b 01                	mov    eax,DWORD PTR [ecx]
   234fc:	dd 44 24 18          	fld    QWORD PTR [esp+0x18]
   23500:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
   23507:	00 
   23508:	89 04 24             	mov    DWORD PTR [esp],eax
   2350b:	df 2c 24             	fild   QWORD PTR [esp]
   2350e:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
   23512:	dd 44 24 08          	fld    QWORD PTR [esp+0x8]
   23516:	d9 c9                	fxch   st(1)
   23518:	df e9                	fucomip st,st(1)
   2351a:	dd d8                	fstp   st(0)
   2351c:	77 da                	ja     234f8 <wait3+0x48>
   2351e:	83 c4 24             	add    esp,0x24
   23521:	5b                   	pop    ebx
   23522:	5e                   	pop    esi
   23523:	c3                   	ret    
   23524:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
   2352a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00023530 <wait2>:
wait2():
   23530:	57                   	push   edi
   23531:	56                   	push   esi
   23532:	31 d2                	xor    edx,edx
   23534:	53                   	push   ebx
   23535:	8b 1d a4 97 12 00    	mov    ebx,DWORD PTR ds:0x1297a4
   2353b:	b8 e8 03 00 00       	mov    eax,0x3e8
   23540:	8b 0b                	mov    ecx,DWORD PTR [ebx]
   23542:	8b 3d c0 97 12 00    	mov    edi,DWORD PTR ds:0x1297c0
   23548:	f7 f7                	div    edi
   2354a:	31 d2                	xor    edx,edx
   2354c:	31 ff                	xor    edi,edi
   2354e:	89 c6                	mov    esi,eax
   23550:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   23554:	f7 f6                	div    esi
   23556:	31 d2                	xor    edx,edx
   23558:	89 c6                	mov    esi,eax
   2355a:	89 c8                	mov    eax,ecx
   2355c:	8b 0b                	mov    ecx,DWORD PTR [ebx]
   2355e:	01 f0                	add    eax,esi
   23560:	11 fa                	adc    edx,edi
   23562:	83 fa 00             	cmp    edx,0x0
   23565:	77 09                	ja     23570 <wait2+0x40>
   23567:	39 c8                	cmp    eax,ecx
   23569:	72 10                	jb     2357b <wait2+0x4b>
   2356b:	90                   	nop
   2356c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
   23570:	83 fa 00             	cmp    edx,0x0
   23573:	8b 0b                	mov    ecx,DWORD PTR [ebx]
   23575:	77 09                	ja     23580 <wait2+0x50>
   23577:	39 c8                	cmp    eax,ecx
   23579:	77 05                	ja     23580 <wait2+0x50>
   2357b:	5b                   	pop    ebx
   2357c:	5e                   	pop    esi
   2357d:	5f                   	pop    edi
   2357e:	c3                   	ret    
   2357f:	90                   	nop
   23580:	f4                   	hlt    
   23581:	eb ed                	jmp    23570 <wait2+0x40>
   23583:	66 90                	xchg   ax,ax
   23585:	66 90                	xchg   ax,ax
   23587:	66 90                	xchg   ax,ax
   23589:	66 90                	xchg   ax,ax
   2358b:	66 90                	xchg   ax,ax
   2358d:	66 90                	xchg   ax,ax
   2358f:	90                   	nop

00023590 <__udivdi3>:
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1287
#endif

#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
   23590:	55                   	push   ebp
   23591:	57                   	push   edi
   23592:	56                   	push   esi
   23593:	53                   	push   ebx
   23594:	83 ec 1c             	sub    esp,0x1c
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1014
#endif
UDWtype
__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)
{
  const DWunion nn = {.ll = n};
  const DWunion dd = {.ll = d};
   23597:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1287
#endif

#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
   2359b:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
   2359f:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
   235a3:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1026
  d1 = dd.s.high;
  n0 = nn.s.low;
  n1 = nn.s.high;

#if !UDIV_NEEDS_NORMALIZATION
  if (d1 == 0)
   235a7:	85 f6                	test   esi,esi
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1013
static inline __attribute__ ((__always_inline__))
#endif
UDWtype
__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)
{
  const DWunion nn = {.ll = n};
   235a9:	89 5c 24 08          	mov    DWORD PTR [esp+0x8],ebx
   235ad:	89 ca                	mov    edx,ecx
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1014
  const DWunion dd = {.ll = d};
   235af:	89 f8                	mov    eax,edi
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1026
  d1 = dd.s.high;
  n0 = nn.s.low;
  n1 = nn.s.high;

#if !UDIV_NEEDS_NORMALIZATION
  if (d1 == 0)
   235b1:	75 3d                	jne    235f0 <__udivdi3+0x60>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1028
    {
      if (d0 > n1)
   235b3:	39 cf                	cmp    edi,ecx
   235b5:	0f 87 c5 00 00 00    	ja     23680 <__udivdi3+0xf0>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1041
	}
      else
	{
	  /* qq = NN / 0d */

	  if (d0 == 0)
   235bb:	85 ff                	test   edi,edi
   235bd:	89 fd                	mov    ebp,edi
   235bf:	75 0b                	jne    235cc <__udivdi3+0x3c>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1042
	    d0 = 1 / d0;	/* Divide intentionally by zero.  */
   235c1:	b8 01 00 00 00       	mov    eax,0x1
   235c6:	31 d2                	xor    edx,edx
   235c8:	f7 f7                	div    edi
   235ca:	89 c5                	mov    ebp,eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1044

	  udiv_qrnnd (q1, n1, 0, n1, d0);
   235cc:	89 c8                	mov    eax,ecx
   235ce:	31 d2                	xor    edx,edx
   235d0:	f7 f5                	div    ebp
   235d2:	89 c1                	mov    ecx,eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1045
	  udiv_qrnnd (q0, n0, n1, n0, d0);
   235d4:	89 d8                	mov    eax,ebx
   235d6:	89 cf                	mov    edi,ecx
   235d8:	f7 f5                	div    ebp
   235da:	89 c3                	mov    ebx,eax
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1289
#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
  return __udivmoddi4 (n, d, (UDWtype *) 0);
}
   235dc:	89 d8                	mov    eax,ebx
   235de:	89 fa                	mov    edx,edi
   235e0:	83 c4 1c             	add    esp,0x1c
   235e3:	5b                   	pop    ebx
   235e4:	5e                   	pop    esi
   235e5:	5f                   	pop    edi
   235e6:	5d                   	pop    ebp
   235e7:	c3                   	ret    
   235e8:	90                   	nop
   235e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1136
    }
#endif /* UDIV_NEEDS_NORMALIZATION */

  else
    {
      if (d1 > n1)
   235f0:	39 ce                	cmp    esi,ecx
   235f2:	77 74                	ja     23668 <__udivdi3+0xd8>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1155
	}
      else
	{
	  /* 0q = NN / dd */

	  count_leading_zeros (bm, d1);
   235f4:	0f bd fe             	bsr    edi,esi
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1156
	  if (bm == 0)
   235f7:	83 f7 1f             	xor    edi,0x1f
   235fa:	0f 84 98 00 00 00    	je     23698 <__udivdi3+0x108>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1188
	  else
	    {
	      UWtype m1, m0;
	      /* Normalize.  */

	      b = W_TYPE_SIZE - bm;
   23600:	bb 20 00 00 00       	mov    ebx,0x20
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1190

	      d1 = (d1 << bm) | (d0 >> b);
   23605:	89 f9                	mov    ecx,edi
   23607:	89 c5                	mov    ebp,eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1188
	  else
	    {
	      UWtype m1, m0;
	      /* Normalize.  */

	      b = W_TYPE_SIZE - bm;
   23609:	29 fb                	sub    ebx,edi
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1190

	      d1 = (d1 << bm) | (d0 >> b);
   2360b:	d3 e6                	shl    esi,cl
   2360d:	89 d9                	mov    ecx,ebx
   2360f:	d3 ed                	shr    ebp,cl
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1191
	      d0 = d0 << bm;
   23611:	89 f9                	mov    ecx,edi
   23613:	d3 e0                	shl    eax,cl
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1190
	      UWtype m1, m0;
	      /* Normalize.  */

	      b = W_TYPE_SIZE - bm;

	      d1 = (d1 << bm) | (d0 >> b);
   23615:	09 ee                	or     esi,ebp
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1192
	      d0 = d0 << bm;
	      n2 = n1 >> b;
   23617:	89 d9                	mov    ecx,ebx
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1191
	      /* Normalize.  */

	      b = W_TYPE_SIZE - bm;

	      d1 = (d1 << bm) | (d0 >> b);
	      d0 = d0 << bm;
   23619:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1192
	      n2 = n1 >> b;
   2361d:	89 d5                	mov    ebp,edx
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1193
	      n1 = (n1 << bm) | (n0 >> b);
   2361f:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1192

	      b = W_TYPE_SIZE - bm;

	      d1 = (d1 << bm) | (d0 >> b);
	      d0 = d0 << bm;
	      n2 = n1 >> b;
   23623:	d3 ed                	shr    ebp,cl
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1193
	      n1 = (n1 << bm) | (n0 >> b);
   23625:	89 f9                	mov    ecx,edi
   23627:	d3 e2                	shl    edx,cl
   23629:	89 d9                	mov    ecx,ebx
   2362b:	d3 e8                	shr    eax,cl
   2362d:	09 c2                	or     edx,eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1196
	      n0 = n0 << bm;

	      udiv_qrnnd (q0, n1, n2, n1, d1);
   2362f:	89 d0                	mov    eax,edx
   23631:	89 ea                	mov    edx,ebp
   23633:	f7 f6                	div    esi
   23635:	89 d5                	mov    ebp,edx
   23637:	89 c3                	mov    ebx,eax
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1197
	      umul_ppmm (m1, m0, q0, d0);
   23639:	f7 64 24 0c          	mul    DWORD PTR [esp+0xc]
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1199

	      if (m1 > n1 || (m1 == n1 && m0 > n0))
   2363d:	39 d5                	cmp    ebp,edx
   2363f:	72 10                	jb     23651 <__udivdi3+0xc1>
   23641:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
   23645:	89 f9                	mov    ecx,edi
   23647:	d3 e6                	shl    esi,cl
   23649:	39 c6                	cmp    esi,eax
   2364b:	73 07                	jae    23654 <__udivdi3+0xc4>
   2364d:	39 d5                	cmp    ebp,edx
   2364f:	75 03                	jne    23654 <__udivdi3+0xc4>
   23651:	83 eb 01             	sub    ebx,0x1
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1202
		{
		  q0--;
		  sub_ddmmss (m1, m0, m1, m0, d1, d0);
   23654:	31 ff                	xor    edi,edi
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1289
#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
  return __udivmoddi4 (n, d, (UDWtype *) 0);
}
   23656:	89 d8                	mov    eax,ebx
   23658:	89 fa                	mov    edx,edi
   2365a:	83 c4 1c             	add    esp,0x1c
   2365d:	5b                   	pop    ebx
   2365e:	5e                   	pop    esi
   2365f:	5f                   	pop    edi
   23660:	5d                   	pop    ebp
   23661:	c3                   	ret    
   23662:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1136
    }
#endif /* UDIV_NEEDS_NORMALIZATION */

  else
    {
      if (d1 > n1)
   23668:	31 ff                	xor    edi,edi
   2366a:	31 db                	xor    ebx,ebx
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1289
#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
  return __udivmoddi4 (n, d, (UDWtype *) 0);
}
   2366c:	89 d8                	mov    eax,ebx
   2366e:	89 fa                	mov    edx,edi
   23670:	83 c4 1c             	add    esp,0x1c
   23673:	5b                   	pop    ebx
   23674:	5e                   	pop    esi
   23675:	5f                   	pop    edi
   23676:	5d                   	pop    ebp
   23677:	c3                   	ret    
   23678:	90                   	nop
   23679:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1032
    {
      if (d0 > n1)
	{
	  /* 0q = nn / 0D */

	  udiv_qrnnd (q0, n0, n1, n0, d0);
   23680:	89 d8                	mov    eax,ebx
   23682:	f7 f7                	div    edi
   23684:	31 ff                	xor    edi,edi
   23686:	89 c3                	mov    ebx,eax
__udivdi3():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1289
#ifdef L_udivdi3
UDWtype
__udivdi3 (UDWtype n, UDWtype d)
{
  return __udivmoddi4 (n, d, (UDWtype *) 0);
}
   23688:	89 d8                	mov    eax,ebx
   2368a:	89 fa                	mov    edx,edi
   2368c:	83 c4 1c             	add    esp,0x1c
   2368f:	5b                   	pop    ebx
   23690:	5e                   	pop    esi
   23691:	5f                   	pop    edi
   23692:	5d                   	pop    ebp
   23693:	c3                   	ret    
   23694:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
__udivmoddi4():
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1166

		 This special case is necessary, not an optimization.  */

	      /* The condition on the next line takes advantage of that
		 n1 >= d1 (true due to program flow).  */
	      if (n1 > d1 || n0 >= d0)
   23698:	39 ce                	cmp    esi,ecx
   2369a:	72 0c                	jb     236a8 <__udivdi3+0x118>
   2369c:	31 db                	xor    ebx,ebx
   2369e:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
   236a2:	0f 87 34 ff ff ff    	ja     235dc <__udivdi3+0x4c>
/home/yogi/src/gcc-curr-build/i686-pc-linux-gnu/libgcc/../../../gcc-5.3.0/libgcc/libgcc2.c:1169
		{
		  q0 = 1;
		  sub_ddmmss (n1, n0, n1, n0, d1, d0);
   236a8:	bb 01 00 00 00       	mov    ebx,0x1
   236ad:	e9 2a ff ff ff       	jmp    235dc <__udivdi3+0x4c>

Disassembly of section .text.startup:

000236c0 <fl_init>:
fl_init():
   236c0:	53                   	push   ebx
   236c1:	c7 05 44 00 12 00 00 	mov    DWORD PTR ds:0x120044,0x0
   236c8:	00 00 00 
   236cb:	bb 14 0c 12 00       	mov    ebx,0x120c14
   236d0:	c7 05 40 00 12 00 00 	mov    DWORD PTR ds:0x120040,0x0
   236d7:	00 00 00 
   236da:	c7 05 4c 00 12 00 00 	mov    DWORD PTR ds:0x12004c,0x0
   236e1:	00 00 00 
   236e4:	c7 05 48 00 12 00 00 	mov    DWORD PTR ds:0x120048,0x0
   236eb:	00 00 00 
   236ee:	66 90                	xchg   ax,ax
   236f0:	89 da                	mov    edx,ebx
   236f2:	b8 40 00 12 00       	mov    eax,0x120040
   236f7:	81 c3 3c 07 00 00    	add    ebx,0x73c
   236fd:	e8 de 70 ff ff       	call   1a7e0 <fat_list_insert_last>
   23702:	81 fb c4 9c 12 00    	cmp    ebx,0x129cc4
   23708:	75 e6                	jne    236f0 <fl_init+0x30>
   2370a:	c7 05 cc 04 12 00 01 	mov    DWORD PTR ds:0x1204cc,0x1
   23711:	00 00 00 
   23714:	5b                   	pop    ebx
   23715:	c3                   	ret    

Disassembly of section .text.exit:

00023720 <fl_shutdown>:
fl_shutdown():
   23720:	83 ec 0c             	sub    esp,0xc
   23723:	a1 cc 04 12 00       	mov    eax,ds:0x1204cc
   23728:	85 c0                	test   eax,eax
   2372a:	74 29                	je     23755 <fl_shutdown+0x35>
   2372c:	a1 9c 00 12 00       	mov    eax,ds:0x12009c
   23731:	85 c0                	test   eax,eax
   23733:	74 02                	je     23737 <fl_shutdown+0x17>
   23735:	ff d0                	call   eax
   23737:	83 ec 0c             	sub    esp,0xc
   2373a:	68 60 00 12 00       	push   0x120060
   2373f:	e8 fc 9d ff ff       	call   1d540 <fatfs_fat_purge>
   23744:	a1 a0 00 12 00       	mov    eax,ds:0x1200a0
   23749:	83 c4 10             	add    esp,0x10
   2374c:	85 c0                	test   eax,eax
   2374e:	74 0c                	je     2375c <fl_shutdown+0x3c>
   23750:	83 c4 0c             	add    esp,0xc
   23753:	ff e0                	jmp    eax
   23755:	e8 66 ff ff ff       	call   236c0 <fl_init>
   2375a:	eb d0                	jmp    2372c <fl_shutdown+0xc>
   2375c:	83 c4 0c             	add    esp,0xc
   2375f:	c3                   	ret    
